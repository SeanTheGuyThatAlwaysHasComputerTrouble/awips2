C MODULE WTSRCD
C-----------------------------------------------------------------------
C
      SUBROUTINE WTSRCD (ISTRT,IUNIT,IWKBUF,ISTAT)
C
C  THIS ROUTINE WRITES A TIME SERIES.
C
C  ARGUMENT LIST:
C
C       NAME     TYPE   I/O   DIM   DESCRIPTION
C       ------   ----   ---   ---   -----------
C       ISTRT      I     I     1    FIRST LOGICAL RECORD TO WRITE
C       IUNIT      I     I     1    LOGICAL UNIT TO WRITE TO
C       IWKBUF     I     I     ?    ARRAY TO WRITE
C       ISTAT      I     O     1    STATUS INDICATOR:
C                                      0=NORMAL RETURN
C                                       5=DAIO ERROR
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'prdcommon/pdatas'
C
      CHARACTER*4 TSTYPE
      CHARACTER*8 TSID
C
      DIMENSION IWKBUF(*)
      DIMENSION ITBUF(32)
      DIMENSION RTBUF(1)
      EQUIVALENCE (RTBUF(1),ITBUF(1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_prdrw/RCS/wtsrcd.f,v $
     . $',                                                             '
     .$Id: wtsrcd.f,v 1.2 2000/03/13 20:46:05 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (IPRTR.GT.0) WRITE (IOGDB,5) ISTRT,IUNIT
5     FORMAT (' ENTER WTSRCD - ISTRT=',I6,3X,'IUNIT=',I3)
C
      ISTAT=0
C
C  COMPACT HEADER
      IPOS=IWKBUF(6)
      IWKBUF(6)=IWKBUF(1)+1
      CALL PCMPBT (IWKBUF,ITBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 170
C
C  CHECK SIZE OF EXTRA BUFFER
      IXSIZ=IWKBUF(1)-LENHED
      IROOM=2*LRECLT-LENHDC
      NWDS=IWKBUF(4)
      IEND=NWDS+IWKBUF(1)
      ITPOS=LENHDC+1
      IREC=ISTRT+2
      IF (IXSIZ.EQ.0) GO TO 80
      IF (IXSIZ.LE.IROOM) GO TO 70
C
C  MOVE EXTRA BUFFER INTO ARRAY
      CALL UMEMOV (IWKBUF(LENHED+1),ITBUF(ITPOS),IROOM)
      IXSIZ=IXSIZ-IROOM
C
C  WRITE TO FILE
      IF (IPRDB.GT.1) WRITE (IOGDB,10) ISTRT,IUNIT
10    FORMAT (' WRITE1: ISTRT,IUNIT=',2I8)
      CALL WVLRCD (IUNIT,ISTRT,2,ITBUF,LRECLT,ISTAT)
      IF (ISTAT.NE.0) GO TO 150
      NUMREC=IXSIZ/LRECLT
      IXPOS=LENHED+IROOM+1
      IF (NUMREC.EQ.0) GO TO 30
C
C  WRITE ALL BUT LAST RECORD OF XBUF
      IF (IPRDB.GT.1) WRITE (IOGDB,20) IREC,NUMREC,IUNIT
20    FORMAT (' WRITE2: IREC,NUMREC,IUNIT=',3I8)
      CALL WVLRCD (IUNIT,IREC,NUMREC,IWKBUF(IXPOS),LRECLT,ISTAT)
      IF (ISTAT.NE.0) GO TO 150
      IREC=IREC+NUMREC
      IXPOS=IXPOS+NUMREC*LRECLT
      IXSIZ=IXSIZ-NUMREC*LRECLT
C
C  WRITE LAST RECORD OF XBUF PLUS ANY DATA TO FILL RECORD
30    NUM=LRECLT-IXSIZ
      IF (IXSIZ.EQ.0) GO TO 40
      CALL UMEMOV (IWKBUF(IXPOS),ITBUF,IXSIZ)
40    NWDS=NWDS-NUM
      IF (IPOS+NUM-1.LE.IEND) GO TO 50
      NUM2=IEND-IPOS+1
      CALL UMEMOV (IWKBUF(IPOS),ITBUF(IXSIZ+1),NUM2)
      IPOS=IWKBUF(6)
      NUM=NUM-NUM2
      IXSIZ=IXSIZ+NUM2
50    CALL UMEMOV (IWKBUF(IPOS),ITBUF(IXSIZ+1),NUM)
      IPOS=IPOS+NUM
      IF (IPRDB.GT.1) WRITE (IOGDB,60) IREC,IUNIT
60    FORMAT (' WRITE3: IREC,IUNIT=',2I8)
      CALL UWRITT (IUNIT,IREC,ITBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 150
      IREC=IREC+1
      GO TO 120
C
C  HAVE XBUF LE IROOM
70    CALL UMEMOV (IWKBUF(LENHED+1),ITBUF(ITPOS),IXSIZ)
      IF (IXSIZ.EQ.IROOM) GO TO 100
      IROOM=IROOM-IXSIZ
      ITPOS=ITPOS+IXSIZ
C
C  MOVE DATA INTO SECOND RECORD
80    NWDS=NWDS-IROOM
      IF (IPOS+IROOM-1.LE.IEND) GO TO 90
      NUM=IEND-IPOS+1
      CALL UMEMOV (IWKBUF(IPOS),ITBUF(ITPOS),NUM)
      IPOS=IWKBUF(6)
      ITPOS=ITPOS+NUM
      IROOM=IROOM-NUM
90    CALL UMEMOV (IWKBUF(IPOS),ITBUF(ITPOS),IROOM)
      IPOS=IPOS+IROOM
C
C  WRITE FIRST 2 RECORDS
100   IF (IPRDB.GT.1) WRITE (IOGDB,110) ISTRT,IUNIT
110   FORMAT (' WRITE4: ISTRT,IUNIT=',2I8)
      NREC=2
      CALL WVLRCD (IUNIT,ISTRT,NREC,ITBUF,LRECLT,ISTAT)
      IF (ISTAT.NE.0) GO TO 150
C
C  WRITE REST OF DATA
120   IF (NWDS.LE.0) GO TO 170
      ITPOS=1
      NUM=LRECLT
      IF (NUM+IPOS-1.LE.IEND) GO TO 130
         NUM2=IEND-IPOS+1
         CALL UMEMOV (IWKBUF(IPOS),ITBUF,NUM2)
         ITPOS=ITPOS+NUM2
         IPOS=IWKBUF(6)
         NUM=NUM-NUM2
130   CALL UMEMOV (IWKBUF(IPOS),ITBUF(ITPOS),NUM)
      IF (IPRDB.GT.1) WRITE (IOGDB,*) 'IREC=',' IUNIT=',IUNIT
      CALL UWRITT (IUNIT,IREC,ITBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 150
      IPOS=IPOS+NUM
      IREC=IREC+1
      NWDS=NWDS-LRECLT
      GO TO 120
C
C  SYSTEM ERROR
150   WRITE (LP,160)
160   FORMAT ('0*** ERROR - IN WTSRCD - SYSTEM ERROR.')
C
170   IF (IPRDB.GT.0) THEN
         CALL UMEMOV (IWKBUF(8),TSID,2)
         CALL UMEMOV (IWKBUF(10),TSTYPE,1)
         WRITE (IOGDB,*) 'TSID=',TSID,' TSTYPE=',TSTYPE
         WRITE (IOGDB,190) (IWKBUF(I),I=1,LENHED)
c
c     DR17865
cfan
c     Integer arrays can't be printed out by F format in fortran 90
cfan
cf190 FORMAT (' HEADER=',7I8,1X,4A4,2F7.2,4I8 / 5A4)
190   FORMAT (' HEADER=',7I8,1X,4A4,2I8,4I8 / 5A4)    !cfan10/2006
C
         ENDIF
C
      IF (IPRTR.GT.0) WRITE (IOGDB,210) ISTAT
210   FORMAT (' EXIT WTSRCD - ISTAT=',I2)
C
      RETURN
C
      END
