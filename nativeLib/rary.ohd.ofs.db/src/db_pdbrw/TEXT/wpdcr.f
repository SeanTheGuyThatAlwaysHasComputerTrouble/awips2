C MODULE WPDCR
C-----------------------------------------------------------------------
C
      SUBROUTINE WPDCR (ISTAID,NUMSTA,
     *   NDLYTP,IDLYTP,IPPGEN,IPPPTR,IPCHAR,MDRBOX,IPCPCR,IPPMMT,TEMPCF,
     *   NRRSTP,IRRSTP,NVLPOB,NUMOBS,MNODAY,
     *   IPNTRS,ISTAT)
C
C  THIS ROUTINE CREATES A STATION IN THE PREPROCESSOR DATA BASE.
C
C  IT CHECKS FOR VALID TYPES AND MAKES SURE THERE IS ROOM FOR EACH.
C  VALID TYPES ARE ENTERED AS LONG AS ONE IS VALID AND THERE IS
C  ROOM FOR AT LEAST ONE OF THEM.
C
C  ARGUMENT LIST:
C
C       NAME      TYPE  I/O   DIM   DESCRIPTION
C       ------    ----  ---   ---   -----------
C       ISTAID     A8    I     2    STATION CHARACTER ID
C       NUMSTA     I     I     1    STATION INTEGER ID
C       NDLYTP     I     I     1    NUMBER OF DAILY TYPES
C       IDLYTP     A4    I  NDLYTP  DAILY DATA TYPES
C       IPPGEN     I     I     1    POINTER TO PPPDB GENL PARMS
C       IPPPTR     I     I     3    POINTERS TO PPDB PCPN, TEMP AND PE
C                                     PARMS
C       IPCHAR     I     I     1    POINTER TO PCPN CHAR ON PPPDB
C       MDRBOX     I     I     1    MDRBOX NUMBER (UNDEF IF NOT PP24)
C       IPCPCR     I     I     1    PCPN CORRECTION FACTOR
C       IPPMMT     I     I     1    POINTER TO PPPDB MEAN MONTHLY TEMPS
C       TEMPCF     R     I     2    TEMP CORRECTION FACTORS
C       NRRSTP     I     I     1    NUMBER OF RRS TYPES
C       IRRSTP     A4    I  NRRSTP  RRS TYPES
C       NVLPOB     I     I  NRRSTP  NUMBER OF VALUES PER OBS
C       NUMOBS     I     I  NRRSTP  TYPICAL NUMBER OF OBS
C       MNODAY     I     I  NRRSTP  MIN DAYS OF DATA TO BE RETAINED
C       IPNTRS     I     O  NDLYTP+NRRSTP  POINTERS TO DATA OR RECORD
C       ISTAT      I     O     1    STATUS CODE
C                                     0=OK
C                                    >0=ERROR
C
      PARAMETER (LSIBUF=128)
      INTEGER*4 LPP24/4HPP24/
      INTEGER*2 ISIBUF(LSIBUF)
      INTEGER*2 IPTREC(32)
C
      DIMENSION ISTAID(2),IDLYTP(1),IPPPTR(3),TEMPCF(2)
      DIMENSION IRRSTP(1),NVLPOB(1),NUMOBS(1),MNODAY(1),IPNTRS(1)
      DIMENSION IPPDLT(2,3),ITADLT(2,3)
      DIMENSION IRRSHD(48)
C
      INCLUDE 'uiox'
      INCLUDE 'udebug'
      INCLUDE 'pdbcommon/pddtdr'
      INCLUDE 'pdbcommon/pdsifc'
      INCLUDE 'pdbcommon/pdrrsc'
      INCLUDE 'pdbcommon/pdunts'
      INCLUDE 'pdbcommon/pdbdta'
      INCLUDE 'pdbcommon/pdi2max'
      
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_pdbrw/RCS/wpdcr.f,v $
     . $',                                                             '
     .$Id: wpdcr.f,v 1.5 2002/05/15 18:24:30 dws Exp $
     . $' /
C    ===================================================================
C
      DATA IPPDLT/4HPP01,1,4HPP03,3,4HPP06,6/
      DATA ITADLT/4HTA01,1,4HTA03,3,4HTA06,6/
C
C
      IF (IPDTR.GT.0) WRITE (IOGDB,400)
C
      ISTAT=0
      ISTAT3=0
      ISTAT4=0
      ISTAT6=0
C 
      IFREEI=0
      ITM24=0
      IFPP24=0     
      LRCDD2=LRCPDD*2
      NHEADW=LHDRRS+NRSTAT
C
C  CHECK IF STATION EXISTS
      CALL PDFNDR (ISTAID,LSIBUF,IFIND,ISTREC,ISIBUF,IFREE,IERR)
      IF (IERR.NE.0) GO TO 370
      IF (IFIND.EQ.0) GO TO 10
C
C  STATION ALREADY EXISTS
      ISTAT=1
      GO TO 380
C
10    IF (NUMSTA.EQ.0) GO TO 20
C
C  CHECK INTEGER ID
      CALL PDFNDI (NUMSTA,LSIBUF,IFIND,ISTREC,ISIBUF,IFREEI,IERR)
      IF (IERR.NE.0) GO TO 370
      IF (IFIND.EQ.0) GO TO 20
C
C  STATION NUMBER ALREADY EXISTS
      ISTAT=2
      GO TO 380
C
C  CHECK FOR ENOUGH ROOM FOR STATION INFORMATION FILE RECORDS
20    CALL RPDCKS (NDLYTP,IDLYTP,NRRSTP,IRRSTP,IERR)
      IF (IERR.EQ.0) GO TO 30
         WRITE (LP,410) ISTAID
         ISTAT=14
         GO TO 380
C
C  SET VALUES IN STATION INFORMATION RECORD
30    CALL UMEMST (0,ISIBUF,LSIBUF/2)
      CALL UMEMOV (ISTAID,ISIBUF(2),2)
      ISIBUF(6)=NUMSTA
      ISIBUF(7)=IPPGEN
C
      IVALTY=0
C
      NXTISI=11
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PROCESS DAILY DATA TYPES
C
      IF (NDLYTP.EQ.0) GO TO 280
C
C  CHECK DAILY TYPE CODES
C
      DO 110 I=1,NDLYTP
C     FIND TYPE IN DIRECTORY
C     IF IS WRITE ONLY TYPE AND NUMBER OF WORDS IS 1, IT IS NOT VALID
         J=IPDCDW(IDLYTP(I))
         IF (J.EQ.0) THEN
            ISTAT3=3
            IPNTRS(I)=-2
            GO TO 110
            ENDIF
         IF (IDDTDR(4,J).LT.0.AND.IDDTDR(6,J).EQ.1) THEN
            ISTAT3=3
            IPNTRS(I)=-2
            GO TO 110
            ENDIF
C     CHECK IF VALID TYPE
         IXD=IPDCKD(IDLYTP(I))
         IF (IXD.EQ.0) THEN
            ISTAT3=3
            IPNTRS(I)=-2
            GO TO 110
            ENDIF
C     MAKE SURE DATA TYPE CAN HAVE STATIONS
         IF (IDDTDR(16,IXD).EQ.0) THEN
            ISTAT3=3
            IPNTRS(I)=-2
            GO TO 110
            ENDIF
C     WORDS 22-24 OF DATA TYPE DIRECTORY CONTAIN:            
C       WORD 22 - NOT 0 IF CAN REUSE DATA SPACE FOR VR TYPE
C       WORD 23 - UNUSED SLOT
C       WORD 24 - INPUT TYPE ARRAY SUBSCRIPT
         IDDTDR(24,IXD)=I
         IF (IPDDB.GT.0) WRITE (IOGDB,420) (IDDTDR(K,IXD),K=1,24)
         IF (IDDTDR(17,IXD)*IDDTDR(5,IXD).EQ.IDDTDR(18,IXD)) GO TO 60
C     CHECK POINTER RECORDS LOOKING FOR AN UNUSED SLOT
         CALL PDCKUU (IXD,J,IDDTDR(23,IXD),IERR)
         IF (IERR.NE.0) GO TO 370
         IF (IDDTDR(23,IXD).NE.0 ) GO TO 90
C     NO UNUSED SLOTS - CHECK FOR ROOM FOR NEW ONE
60       IF (IDDTDR(17,IXD).LT.IDDTDR(16,IXD)) GO TO 80
C        NOT ENOUGH ROOM
70          IPNTRS(I)=0
            IDDTDR(24,IXD)=0
            ISTAT4=4
            GO TO 110
C     CHECK IF MAXIMUM SLOTS EXCEEDED
80       IF ((IDDTDR(18,IXD)+1).GT.(IDDTDR(16,IXD)*IDDTDR(5,IXD)))
     *      GO TO 70
C     SET NEW SLOT FOR POINTERS
         IDDTDR(23,IXD)=IDDTDR(18,IXD)+1
C     IF VR TYPE, CHECK THAT THERE IS ROOM FOR DATA
90       IF (IDDTDR(6,IXD).GT.0.OR.IDDTDR(22,IXD).NE.0) GO TO 100
            NDATA=IDDTDR(6,J)
            MAXDAT=IDDTDR(21,IXD)*LRCDD2
            IF (IPDDB.GT.0) WRITE (IOGDB,430) NDATA,MAXDAT,IDDTDR(2,J),
     *         IDDTDR(3,J),IDDTDR(19,IXD)
            IF (NDATA+IDDTDR(19,IXD).GT.MAXDAT) GO TO 70
100      IF (IDDTDR(22,IXD).EQ.0) IDDTDR(22,IXD)=IDDTDR(19,IXD)+1
         IF (IPDDB.GT.0) WRITE (IOGDB,420) (IDDTDR(K,IXD),K=1,24)
C     INCREMENT VALID TYPE AND SET POINTER IN INPUT TYPE ARRAY
         IVALTY=IVALTY+1
         IPNTRS(I)=IDDTDR(23,IXD)
         IF (IDLYTP(I).EQ.LPP24) IFPP24=1
110      CONTINUE
C
      IF (IPDDB.GT.0) WRITE (IOGDB,440) IVALTY
C
C  CHECK PCPN TYPE
      IPPVR=IPDCKD('PPVR')
      IF (IDDTDR(24,IPPVR).EQ.0) GO TO 120
      IPP24=IPDCKD('PP24')
      IF (IDDTDR(24,IPP24).NE.0) GO TO 120
C
C  HAVE A PPVR BUT NO PP24
      ISTAT6=6
      I=IDDTDR(24,IPPVR)
      IPNTRS(I)=0
      IVALTY=IVALTY-1
      IDDTDR(24,IPPVR)=0
C
C  CHECK TEMP
120   ITAVR=IPDCKD('TAVR')
      IF (IDDTDR(24,ITAVR).EQ.0) GO TO 130
      ITM24=IPDCKD('TM24')
      IF (IDDTDR(24,ITM24).NE.0) GO TO 130
C
C  HAVE A TAVR BUT NO TM24
      ISTAT6=6
      I=IDDTDR(24,ITAVR)
      IPNTRS(I)=0
      IVALTY=IVALTY-1
      IDDTDR(24,ITAVR)=0
C
C  CHECK FUTURE TEMP
130   ITF24=IPDCKD('TF24')
      IF (IDDTDR(24,ITF24).EQ.0) GO TO 140
      IF (ITM24.EQ.0) ITM24=IPDCKD('TM24')
      IF (IDDTDR(24,ITM24).NE.0) GO TO 140
C
C  HAVE TF24 BUT NO TM24
      ISTAT6=6
      I=IDDTDR(24,ITF24)
      IPNTRS(I)=0
      IVALTY=IVALTY-1
      IDDTDR(24,ITF24)=0
C
140   IF (IVALTY.EQ.0) GO TO 280
C
C  PROCESS EACH DAILY DATA TYPE
      DO 270 I=1,NMDTYP
         IF (IDDTDR(24,I).EQ.0) GO TO 270
C     READ POINTER RECORD
         ISLOT=IDDTDR(23,I)
         IDTAPT=((ISLOT-1)/IDDTDR(5,I))*IDDTDR(6,I)+1
         IREC=IUNRCD(ISLOT,LRCDD2)+IDDTDR(14,I)-1
         IFILE=IDDTDR(4,I)
         CALL UREADT (KPDDDF(IFILE),IREC,IPTREC,IERR)
         IF (IERR.NE.0) GO TO 370
C     JSLOT IS THE POINTER WITHIN 1 RECORD (1-LRCDD2)
         JSLOT=ISLOT-(IREC-IDDTDR(14,I))*LRCDD2
         IF (IPDDB.GT.0) WRITE (IOGDB,450) ISLOT,IREC,IFILE,JSLOT
C     PCPN 24 HOUR POINTERS
         CALL UCMPAR (IDDTDR(2,I),'PP24',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            IVALUE=IPPPTR(1)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IPCHAR
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IDDTDR(23,IPPVR)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            IF (IPTREC(JSLOT).EQ.0) THEN
               IVALUE=-IPPGEN
               CALL PDCKI2 (IVALUE,IERR)
               IF (IERR.NE.0) GO TO 375
               IPTREC(JSLOT)=IVALUE
               ENDIF
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IPCPCR
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=MDRBOX
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            ISIBUF(8)=IDTAPT
            GO TO 250
            ENDIF
C     TEMP 24 POINTERS
         CALL UCMPAR (IDDTDR(2,I),'TM24',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            DP1=0.5
            IVALUE=IPPPTR(2)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IPPMMT
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IDDTDR(23,ITAVR)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=TEMPCF(1)*10.0+SIGN(DP1,TEMPCF(1))
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=TEMPCF(2)*10.0+SIGN(DP1,TEMPCF(2))
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            ISIBUF(9)=IDTAPT
            GO TO 250
            ENDIF
C     PE POINTERS
         CALL UCMPAR (IDDTDR(2,I),'EA24',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            IVALUE=IPPPTR(3)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PDUPSI ('EA24',IDTAPT,LSIBUF,ISIBUF,NXTISI,IERR)
            IF (IERR.GT.0) GO TO 365
            GO TO 250
            ENDIF
C     LESS THAN 24 PCPN
         CALL UCMPAR (IDDTDR(2,I),'PPVR',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            IVALUE=IPPGEN
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IDDTDR(23,IPP24)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
C        GET TIME INTERVAL FOR PPVR
            KK=IDDTDR(24,I)
            DO 180 K=1,3
               IF (IDLYTP(KK).EQ.IPPDLT(1,K)) GO TO 190
180            CONTINUE
               ISTAT3=3
               GO TO 270
190         IVALUE=IPPDLT(2,K)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            IDELTA=IPPDLT(2,K)
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IDDTDR(22,I)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            IDTAPT=IPTREC(JSLOT)
            CALL PDUPSI (IDLYTP(KK),IDTAPT,LSIBUF,ISIBUF,NXTISI,IERR)
            IF (IERR.GT.0) GO TO 365
            GO TO 250
            ENDIF
C     LESS THAN 24 HOUR TEMP
         CALL UCMPAR (IDDTDR(2,I),'TAVR',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            IVALUE=IDDTDR(23,ITM24)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
C        GET TIME INTERVAL FOR TAVR
            KK=IDDTDR(24,I)
            DO 210 K=1,3
               IF (IDLYTP(KK).EQ.ITADLT(1,K)) GO TO 220
210            CONTINUE
               ISTAT3=3
               GO TO 270
220         IVALUE=ITADLT(2,K)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            IDELTA=ITADLT(2,K)
            CALL PGTNXP (I,JSLOT,IPTREC,IREC,IERR)
            IF (IERR.NE.0) GO TO 370
            IVALUE=IDDTDR(22,I)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            IDTAPT=IPTREC(JSLOT)
            CALL PDUPSI (IDLYTP(KK),IDTAPT,LSIBUF,ISIBUF,NXTISI,IERR)
            IF (IERR.GT.0) GO TO 365
            GO TO 250
            ENDIF
C     FORECAST TEMP
         CALL UCMPAR (IDDTDR(2,I),'TF24',1,IMATCH)
         IF (IMATCH.EQ.0) THEN
            IF (ITM24.EQ.0) ITM24=IPDCKD('TM24')
            IVALUE=IDDTDR(23,ITM24)
            CALL PDCKI2 (IVALUE,IERR)
            IF (IERR.NE.0) GO TO 375
            IPTREC(JSLOT)=IVALUE
            CALL PDUPSI ('TF24',IDTAPT,LSIBUF,ISIBUF,NXTISI,IERR)
            IF (IERR.GT.0) GO TO 365
            GO TO 250
            ENDIF
C     DATA TYPE NOT FOUND
         ISTAT3=3
         IF (IPDDB.GT.0) WRITE (IOGDB,460) (IDDTDR(L,I),L=1,24)
         GO TO 270
C     WRITE POINTER RECORD
250      CALL UWRITT (KPDDDF(IFILE),IREC,IPTREC,IERR)
         IF (IERR.NE.0) GO TO 370
         IDDTDR(17,I)=IDDTDR(17,I)+1
         IF (IPDDB.GT.0) WRITE (IOGDB,*) 'IN WPDCR - I=',I,
     *      ' IDDTDR(17,I)=',IDDTDR(17,I)
         IF (IDDTDR(6,I).GT.0) GO TO 260
            NDATA=24/IDELTA
            IF (IDDTDR(19,I)+NDATA.LT.IDDTDR(22,I)+NDATA)
     *         IDDTDR(19,I)=IDDTDR(19,I)+NDATA
            IF (IDDTDR(18,I).LT.ISLOT)
     *         IDDTDR(18,I)=IDDTDR(18,I)+IDDTDR(5,I)
            GO TO 270
C     REGULAR DATA NOT VARIABLE TIME INTERVAL
C     IF REUSING PARM AND DATA RECORD, DO NOT UPDATE LAST USED
260      IF (ISLOT.LE.IDDTDR(18,I)) GO TO 270
         IDDTDR(18,I)=IDDTDR(18,I)+IDDTDR(5,I)
         IDDTDR(19,I)=IDDTDR(19,I)+IDDTDR(6,I)
270      CONTINUE
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PROCESS RRS TYPES
C
280   IRX=NDLYTP+1
C
      IF (NRRSTP.EQ.0) GO TO 340
C
      DO 330 I=1,NRRSTP
C     CHECK FOR VALID TYPE
         IXD=IPDCKR(IRRSTP(I))
         IF (IXD.NE.0) GO TO 290
            IPNTRS(IRX)=-2
            ISTAT3=3
            GO TO 320
C     CALCLUATE NUMBER OF RECORDS NEEDED
290      NMBS=NUMOBS(I)
         IF (NMBS.EQ.1) NMBS=2
         NWORDS=NVLPOB(I)*NMBS+NHEADW
         NREC=IUNRCD(NWORDS,LRCPDR)
C     CHECK IF ENOUGH RECORDS AVAILABLE
         IF (LXRRSR+NREC.LE.MXRRSF) GO TO 300
            ISTAT4=4
            IPNTRS(IRX)=0
            GO TO 320
300      CALL UMEMST (0,IRRSHD,48)
C     SEE IF NUMBER OF WORDS AND NUM OBS SHOULD BE INCREASED BECAUSE
C     THERE ARE MORE WORDS IN RECORD
         NAVAIL=NREC*LRCPDR-NHEADW
         NOB=NAVAIL/NVLPOB(I)
         IF (NOB.LE.NMBS) GO TO 310
            NWORDS=NVLPOB(I)*NOB+NHEADW
C     SET VALUES IN HEADER
310      IRRSHD(1)=NWORDS
         CALL UMEMOV (ISTAID,IRRSHD(2),2)
         IRRSHD(4)=NUMSTA
         IRRSHD(5)=IRRSTP(I)
         IRRSHD(6)=MNODAY(I)
         IRRSHD(7)=NOB
         IRRSHD(14)=NVLPOB(I)
         IRRSHD(17)=NRSTAT
         IREC=LXRRSR+1
CMGM  4/2002 IF IREC IS GREATER THEN I2MAX THEN CONVERT IREC TO A 
C     NEGATIVE NUMBER TO STORE IN THE ISIBUF ARRAY (AN I2 ARRAY). 
C     IF IREC IS GREATER THEN 2*I2MAX THEN YOU HAVE USED ALL POSITIVE 
C     AND NEGATIVE NUMBERS IN THE ISIBUF ARRAY AND CAN NOT ADD ANY 
C     MORE RRS RECORDS. 
         IREC2=IREC
	 IF(IREC2.GT.2*I2MAX)GO TO 377
         IF(IREC2.GT.I2MAX)IREC2=IREC2-2*I2MAX
         NRECH=IUNRCD(NHEADW,LRCPDR)
C     WRITE RRS RECORD 
C     WVLRCD WRITES THE RECORD TO THE FILE (NO LIMIT ON IREC)
C     PDUPSI WRITES THE RECORD TO AN I2 ARRAY (IREC LIMITED TO I2)
         CALL WVLRCD (KPDRRS,IREC,NRECH,IRRSHD,LRCPDR,IERR)
         IF (IERR.NE.0) GO TO 370
         LXRRSR=LXRRSR+NREC
         CALL PDUPSI (IRRSTP(I),IREC2,LSIBUF,ISIBUF,NXTISI,IERR)
         IF (IERR.GT.0) GO TO 365
         IPNTRS(IRX)=-1
         IVALTY=IVALTY+1
C     SET SIZE OF LARGEST RRS RECORD IF THIS IS BIGGEST
         N=NREC*LRCPDR
         IF (N.GT.MAXRSZ) MAXRSZ=N
320      IRX=IRX+1
330      CONTINUE
C
C  CHECK AND COMBINE STATUS CODES
340   IF (IVALTY.GT.0) GO TO 350
C
C  NO VALID TYPES
      IF (ISTAT3.NE.0) ISTAT=3
      IF (ISTAT6.NE.0) ISTAT=7
      IF (ISTAT4.NE.0) ISTAT=5
      GO TO 380
C
C  SOME VALID TYPES
350   IF (ISTAT.NE.0) GO TO 380
      IF (ISTAT3.NE.0) ISTAT=3
      IF (ISTAT4.NE.0.AND.ISTAT.EQ.0) ISTAT=4
      IF (ISTAT6.NE.0.AND.ISTAT.EQ.0) ISTAT=6
      IF (IERR.EQ.0) GO TO 360
      IF (ISTAT3.NE.0.AND.ISTAT4.NE.0.AND.ISTAT6.EQ.0) ISTAT=9
      IF (ISTAT3.NE.0.AND.ISTAT4.EQ.0.AND.ISTAT6.NE.0) ISTAT=10
      IF (ISTAT3.EQ.0.AND.ISTAT4.NE.0.AND.ISTAT6.NE.0) ISTAT=11
      IF (ISTAT3.NE.0.AND.ISTAT4.NE.0.AND.ISTAT6.NE.0) ISTAT=12
C
C  WRITE STATION INFORMATION RECORD
360   NADD=0
      IF (IFPP24.EQ.1) NADD=NDSTAT
      ISIBUF(1)=NXTISI-1+NADD
      CALL PDPUTR (ISIBUF,IFREE,IFREEI,ISTAT1)
      NPDSTA=NPDSTA+1
      IF (ISTAT1.EQ.1) ISTAT=13
      IF (ISTAT1.EQ.2) ISTAT=14
      GO TO 380
C
C  SIF ARRAY TOO SMALL
365   ISTAT=8
      GO TO 380
C
C  READ OR WRITE ERROR
370   ISTAT=13
      GO TO 380
C
C  INTEGER*4 VALUE CAN NOT BE STORED AS INTEGER*2
375   ISTAT=15
      GO TO 380
C
C  RRS RECORD NUMBER GREATER THEN 2*I2MAX (EXCEEDED ALL AVAILABLE 
C  POSITIVE AND NEGATIVE RECORD NUMBERS)
377   ISTAT=20
      GO TO 380      
      

C
380   DO 390 I=1,NMDTYP
         IDDTDR(22,I)=0
         IDDTDR(23,I)=0
         IDDTDR(24,I)=0
390      CONTINUE
C
      IF (IPDTR.GT.0) WRITE (IOGDB,470) ISTAID,NUMSTA,ISTAT
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
400   FORMAT (' *** ENTER WPDCR')
410   FORMAT ('0*** ERROR - IN WPDCR - SPACE NOT AVAILABLE FOR ',
     *   'STATION INFORMATION FILE RECORDS FOR STATION ',2A4,'.')
420   FORMAT (' ENTERING TYPE IN STATION',I4,1X,2A2,1X,21I4)
430   FORMAT (' NDATA=',I8,' MAXDAT=',I8,' TYPE=',2A2,
     *    ' DTAPTR=',I8)
440   FORMAT (' IVALTY=',I2)
450   FORMAT (' ISLOT=',I6,3X,'IREC=',I6,3X,'IFILE=',I6,3X,
     *   'JSLOT=',I6)
460   FORMAT ('0*** ERROR - IN WPDCR - UNRECOGNIZED TYPE IN ',
     *   'DIRECTORY : ',I4,1X,2A2,1X,21I4)
470   FORMAT (' *** EXIT WPDCR - ',
     *   'ISTAID=',2A4,3X,'NUMSTA=',I5,3X,'ISTAT=',I2)
C
      END
