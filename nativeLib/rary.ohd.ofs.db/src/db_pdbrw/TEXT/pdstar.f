C MODULE PDSTAR
C-----------------------------------------------------------------------
C
C
      SUBROUTINE PDSTAR (IFRFLG,ITIME,IVAL,IPOSS,MIN,IFUT,IRRBUF,
     *   IFRBUF,ISTAT)
C
C  THIS ROUTINE IS THE MAIN ROUTINE FOR KEEPING RRS DATA
C  STATISTICS.  IT UPDATES ALL THE STATISTICS FOR THE WRITE
C  ROUTINE FOR RRS DATA TYPES OF THE PPDB. IT WORKS FOR ADDING
C  A VALUE, DELETING A VALUE, AND REPLACING A VALUE.
C
C  ARGUMENT LIST:
C
C       NAME      TYPE  I/O   DIM   DESCRIPTION
C       ------    ----  ---   ---   -----------
C       IFRFLG     I     I     1    FLAG FOR FREE POOL - RRS
C                                   O=RRS >0=FREEPOOL RECORD #
C       ITIME      I     I     1    TIME OF NEW VALUE
C       IVAL       I     I     1    NEW DATA VALUE
C                                   (SET TO OLD VALUE FOR DELETE)
C       IPOSS      I     I     1    POSITION OF VALUE TO REPLACE
C                                      0=ADD
C                                     <0=DELETE
C       MIN        I     I     1    MINUTES OF DATA
C       IFUT       I     I     1    FUTURE WRITE FLAG
C       IRRBUF     I    I/O    ?    RRS RECORD
C       IFRBUF     I    I/O    ?    FREE POOL RECORD
C       ISTAT      I     O     1    STATUS INDICATOR:
C                                     0=NORMAL RETURN
C                                     1=DATA NOT WRITTEN
C                                     OTHER=SYSTEM ERROR
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'pdbcommon/pdbdta'
C
      INTEGER IRRBUF(1),IFRBUF(1),TIME(6)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_pdbrw/RCS/pdstar.f,v $
     . $',                                                             '
     .$Id: pdstar.f,v 1.2 2002/02/11 19:53:57 dws Exp $
     . $' /
C    ===================================================================
C
      DATA VMISS/-999.0/
C
C
      IF (IPDTR.GT.1) WRITE (IOGDB,*) 'ENTER PDSTAR'
C
      ISTAT=0
      CALL USWITC (VMISS,IMISS)
C
C  CHECK IF HAS ANY DATA VALUES
      IF (IRRBUF(LHDRRS+1).NE.0) GO TO 20
C
C  INITIALIZE STATS
      IRRBUF(LHDRRS+1)=IABS(ITIME)
      IRRBUF(LHDRRS+2)=0
      IRRBUF(LHDRRS+3)=0
      IRRBUF(LHDRRS+4)=IMISS
      IRRBUF(LHDRRS+5)=0
      IRRBUF(LHDRRS+6)=IMISS
      IRRBUF(LHDRRS+7)=0
      IRRBUF(LHDRRS+8)=IMISS
      IRRBUF(LHDRRS+9)=0
      IRRBUF(LHDRRS+10)=IMISS
      IRRBUF(LHDRRS+11)=0
      IRRBUF(LHDRRS+12)=0
C
20    IF (IPDDB.GT.1) WRITE (IOGDB,30) IFRFLG,ITIME,IVAL,IPOSS,MIN,IFUT,
     1   (IRRBUF(M),M=1,17),(IFRBUF(M),M=1,2),LHDRRS
30    FORMAT (' IN PDSTAR - IFRFLG=',I7,', ITIME=',I11,', IVAL=',I11,
     1 ', IPOSS=',I11,', MIN=',I5,', IFUT=',I11/' IRRBUF(1-17)=',
     2 I5,1X,2A4,I7,1X,A4,I3,2I4,5I8,I3,2I11,I3 /
     3 ' IFRBUF(1-2)=',2I11,', LHDRRS=',I11)
C
      INUM=1
      IF (IPOSS.LT.0) INUM=-1
      IPOS=IABS(IPOSS)
      IF (IFUT.EQ.0) IRRBUF(LHDRRS+3)=IRRBUF(LHDRRS+3)+INUM
      IF (IPOSS.LT.0) GO TO 100
      IF (IPOS.EQ.0) GO TO 300
      NVPOB=IRRBUF(14)
      ISAME=0
C
C  CHECK IF DATA IS IN FREE POOL RECORD
      IF (IFRFLG.GT.0) GO TO 60
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  DATA IS IN PRIMARY RECORD
C
      IF (NVPOB.EQ.2) GO TO 40
C
C  PERIOD AVERAGE DATA - MINUTES VARIABLE IS UNDEFINED
      IF (IVAL.EQ.IRRBUF(IPOS+1)) ISAME=1
      GO TO 50
C
C  INSTANTANEOUS DATA - CHECK MINUTES AS WELL AS VALUE
40    IOLMIN=MOD(IRRBUF(IPOS),100)
      IF (IVAL.EQ.IRRBUF(IPOS+1).AND.MIN.EQ.IOLMIN) ISAME=1
C
C  REPLACE VALUE IN PRIMARY SPACE
50    IOVAL=IRRBUF(IPOS+1)
      CALL PDRPVL (NVPOB,IRRBUF(IPOS),IRRBUF(IPOS+1),ITIME,
     *   MIN,IVAL,ISTAT)
      IF (ISTAT.GT.0) GO TO 90
      GO TO 100
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  DATA IS IN FREEPOOL RECORD
C
60    IF (NVPOB.EQ.2) GO TO 70
C
C  PERIOD AVERAGE DATA - MINUTES VARIABLE IS UNDEFINED
      IF (IVAL.EQ.IFRBUF(IPOS+1)) ISAME=1
      GO TO 80
C
C  INSTANTANEOUS DATA - CHECK MINUTES AS WELL AS VALUE
70    IOLMIN=MOD(IFRBUF(IPOS),100)
      IF (IVAL.EQ.IFRBUF(IPOS+1).AND.MIN.EQ.IOLMIN) ISAME=1
C
C  REPLACE VALUE IN FREE POOL
80    IOVAL=IFRBUF(IPOS+1)
      CALL PDRPVL (NVPOB,IFRBUF(IPOS),IFRBUF(IPOS+1),ITIME,
     *   MIN,IVAL,ISTAT)
      IF (ISTAT.GT.0) GO TO 90
      CALL PDWRFR (IFRFLG,IFRBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      GO TO 100
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  VALUES MATCH EXACTLY - DO NOT COUNT IN STATISTICS
C
90    IF (ISAME.EQ.1) IRRBUF(LHDRRS+3)=IRRBUF(LHDRRS+3)-1
      GO TO 305
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF FUTURE DATA
100   IF (IFUT.EQ.1) GO TO 310
C
      IF (IPOSS.LT.0) IOVAL=IVAL
C
C  SEE IF VALUE BEING REPLACED IS ONE OF STATS
      II=LHDRRS+4
      DO 120 I=1,4
         IF (IRRBUF(II).NE.IOVAL.OR.IRRBUF(II+1).NE.ITIME) GO TO 110
            IF (IPOSS.LT.0) IVAL=IMISS
            GO TO (130,170,230,260),I
110      II=II+2
120      CONTINUE
      IF (IPOSS.LT.0) IVAL=IMISS
      GO TO 300
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  LARGEST VALUE IS BEING CHANGED
C
130   IF (IPDGRT(IVAL,IRRBUF(LHDRRS+6)).EQ.-1) GO TO 140
      IF (IVAL.EQ.IMISS) GO TO 140
      IRRBUF(LHDRRS+4)=IVAL
      IRRBUF(LHDRRS+5)=ITIME
      GO TO 310
C
C  MOVE SECOND LARGEST TO LARGEST AND GET NEW SECOND LARGEST
140   IRRBUF(LHDRRS+4)=IRRBUF(LHDRRS+6)
      IRRBUF(LHDRRS+5)=IRRBUF(LHDRRS+7)
      CALL PDGNSV (1,IRRBUF,IFRBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      IF (IVAL.EQ.IMISS) GO TO 150
      IF (IRRBUF(LHDRRS+9).EQ.0) GO TO 310
      IF (IRRBUF(LHDRRS+11).NE.0) GO TO 300
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+8)).EQ.1) GO TO 310
      IRRBUF(LHDRRS+8)=IVAL
      IRRBUF(LHDRRS+9)=ITIME
      GO TO 310
C
150   IF (IRRBUF(LHDRRS+11).NE.0) GO TO 160
      IRRBUF(LHDRRS+8)=IMISS
      IRRBUF(LHDRRS+9)=0
      GO TO 310
C
160   IF (IRRBUF(LHDRRS+6).NE.IRRBUF(LHDRRS+10).OR.
     1   IRRBUF(LHDRRS+7).NE.IRRBUF(LHDRRS+11)) GO TO 310
      IRRBUF(LHDRRS+10)=IMISS
      IRRBUF(LHDRRS+11)=0
      GO TO 310
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SECOND LARGEST VALUE IS BEING CHANGED
C
170   IF (IPDGRT(IVAL,IRRBUF(LHDRRS+6)).EQ.-1) GO TO 200
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+4)).EQ.1) GO TO 190
C
C  NEW VALUE IS STILL SECOND LARGEST
180   ISVAL=IRRBUF(LHDRRS+6)
      ISTIM=IRRBUF(LHDRRS+7)
      IRRBUF(LHDRRS+6)=IVAL
      IRRBUF(LHDRRS+7)=ITIME
      IF (IPOS.NE.0.OR.ISTIM.EQ.0) GO TO 310
      IVAL=ISVAL
      ITIME=ISTIM
      IF (IRRBUF(LHDRRS+9).EQ.0) GO TO 280
      IF (IRRBUF(LHDRRS+11).EQ.0) GO TO 270
      GO TO 310
C
C  NEW VALUE IS NOW LARGEST
190   ISVAL=IRRBUF(LHDRRS+6)
      ISTIM=IRRBUF(LHDRRS+7)
      IRRBUF(LHDRRS+6)=IRRBUF(LHDRRS+4)
      IRRBUF(LHDRRS+7)=IRRBUF(LHDRRS+5)
      IRRBUF(LHDRRS+4)=IVAL
      IRRBUF(LHDRRS+5)=ITIME
      IF (IPOS.NE.0.OR.ISTIM.EQ.0) GO TO 310
      IVAL=ISVAL
      ITIME=ISTIM
      IF (IRRBUF(LHDRRS+9).EQ.0) GO TO 280
      IF (IRRBUF(LHDRRS+11).EQ.0) GO TO 270
      GO TO 310
C
C  GET NEW SECOND LARGEST VALUE
200   CALL PDGNSV (1,IRRBUF,IFRBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      IF (IVAL.EQ.IMISS) GO TO 210
      IF (IRRBUF(LHDRRS+9).EQ.0) GO TO 310
      IF (IRRBUF(LHDRRS+11).NE.0) GO TO 300
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+8)).NE.-1) GO TO 310
      IRRBUF(LHDRRS+8)=IVAL
      IRRBUF(LHDRRS+9)=ITIME
      GO TO 310
C
210   IF (IRRBUF(LHDRRS+11).NE.0) GO TO 220
      IRRBUF(LHDRRS+8)=IMISS
      IRRBUF(LHDRRS+9)=0
      GO TO 310
C
220   IF (IRRBUF(LHDRRS+6).NE.IRRBUF(LHDRRS+10).OR.
     1   IRRBUF(LHDRRS+7).NE.IRRBUF(LHDRRS+11)) GO TO 310
      IRRBUF(LHDRRS+10)=IMISS
      IRRBUF(LHDRRS+11)=0
      GO TO 310
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SMALLEST VALUE IS BEING REPLACED
C
230   IF (IRRBUF(LHDRRS+11).NE.0) GO TO 240
      IRRBUF(LHDRRS+8)=IMISS
      IRRBUF(LHDRRS+9)=0
      IPOS=0
      GO TO 300
C
240   IF (IPDGRT(IVAL,IRRBUF(LHDRRS+10)).EQ.1) GO TO 250
      IF (IVAL.EQ.IMISS) GO TO 250
      IRRBUF(LHDRRS+8)=IVAL
      IRRBUF(LHDRRS+9)=ITIME
      GO TO 310
C
C  MOVE SECOND SMALLEST TO SMALLEST AND GET NEW SMALLEST
250   IRRBUF(LHDRRS+8)=IRRBUF(LHDRRS+10)
      IRRBUF(LHDRRS+9)=IRRBUF(LHDRRS+11)
      CALL PDGNSV (2,IRRBUF,IFRBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      IF (IVAL.NE.IMISS) GO TO 300
      IF (IRRBUF(LHDRRS+6).NE.IRRBUF(LHDRRS+10).OR.
     1   IRRBUF(LHDRRS+7).NE.IRRBUF(LHDRRS+11)) GO TO 310
      IRRBUF(LHDRRS+10)=IMISS
      IRRBUF(LHDRRS+11)=0
      GO TO 310
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SECOND SMALLEST VALUE IS BEING REPLACED
C
260   IF (IVAL.EQ.IMISS) GO TO 290
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+10)).EQ.1) GO TO 290
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+8)).EQ.-1) GO TO 280
C
C  NEW VALUE IS STILL SECOND SMALLEST
270   IRRBUF(LHDRRS+10)=IVAL
      IRRBUF(LHDRRS+11)=ITIME
      GO TO 310
C
C  NEW VALUE IS SMALLEST VALUE
280   IRRBUF(LHDRRS+10)=IRRBUF(LHDRRS+8)
      IRRBUF(LHDRRS+11)=IRRBUF(LHDRRS+9)
      IRRBUF(LHDRRS+8)=IVAL
      IRRBUF(LHDRRS+9)=ITIME
      GO TO 310
C
C  GET NEW SECOND SMALLEST
290   CALL PDGNSV (2,IRRBUF,IFRBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      IF (IVAL.NE.IMISS) GO TO 300
      IF (IRRBUF(LHDRRS+6).NE.IRRBUF(LHDRRS+10).OR.
     1   IRRBUF(LHDRRS+7).NE.IRRBUF(LHDRRS+11)) GO TO 310
      IRRBUF(LHDRRS+10)=IMISS
      IRRBUF(LHDRRS+11)=0
      GO TO 310
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  DATA NOT WRITTEN
305   ISTAT=1
C
C  CHECK IF NEW VALUE IS A STAT
300   IF (IFUT.EQ.1) GO TO 310
      IF (IVAL.EQ.IMISS) GO TO 310
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+4)).EQ.1) GO TO 190
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+6)).EQ.1) GO TO 180
      IF (IRRBUF(LHDRRS+9).EQ.0) GO TO 280
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+8)).EQ.-1) GO TO 280
      IF (IRRBUF(LHDRRS+11).EQ.0) GO TO 270
      IF (IPDGRT(IVAL,IRRBUF(LHDRRS+10)).EQ.-1) GO TO 270
C
310   IF (IFUT.EQ.0) IRRBUF(LHDRRS+2)=IRRBUF(16)
C
      IF (IPDTR.GT.1) WRITE (IOGDB,*) 'EXIT PDSTAR - ISTAT=',ISTAT
C
      RETURN
C
      END
