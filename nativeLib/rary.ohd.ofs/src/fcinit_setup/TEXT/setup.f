C MODULE SETUP
C-----------------------------------------------------------------------
C
      SUBROUTINE SETUP (P,MP,C,MC,T,MT,TS,MTS,D,MD,NWORK,MINDT,LWMAX,
     *   IENDIN)
C
C  ROUTINE TO SET UP THE OPERATIONS TABLE FOR A SEGMENT.
C  IT FILLS THE P AND T ARRAYS, FILLS THE C ARRAY WITH INITIAL 
C  CARRYOVER VALUES, AND DETERMINES THE AMOUNT OF WORK SPACE NEEDED
C  FOR THE SEQMENT.
C
C  ROUTINE INITIALLY WRITTEN BY - ERIC ANDERSON - HRL JUNE 1979
C
      DIMENSION P(MP),C(MC),TS(MTS),D(MD)
      INTEGER T(MT)
      CHARACTER*8 RTNNAM
      CHARACTER*8 OPID,OPNEW,OPOLD
      CHARACTER*80 CARDIN
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fprog'
      INCLUDE 'common/where'
      INCLUDE 'common/fcassm'
      INCLUDE 'common/fconit'
      COMMON /FLARYS/ LTS,NXP,NXC,NXT,LD
      common /clrops/ numclr
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_setup/RCS/setup.f,v $
     . $',                                                             '
     .$Id: setup.f,v 1.8 2002/02/11 12:45:12 michaelo Exp $
     . $' /
C    ===================================================================
C
C
      RTNNAM='SETUP'
C
      IF (ITRACE.GE.1) WRITE (IODBUG,*) 'ENTER ',RTNNAM
C
      IBUG=IFBUG('SETU')
C
C  SET MAXIMUM NUMBER OF OPERATIONS
      MAXOPS=100
C
      NOPS=0
      NUMCLR=0
C
      IOPNUM=0
      CALL UMEMOV (RTNNAM,OPNAME,2)
C
C  SET VALUE IN COMMON BLOCK FCONIT
      IVALUE=1
C
      LWORKMX=0
      INASSIM=0
      NXP=1
      NXC=1
      NXT=1
      NXW=1
      MINDT=1
      ISKIPN=0
      ISKIP=0
      IOPT=1
      ITOP=0
      NCID=8
      IPACK=1
      IDCODE=5
      IPRERR=1
C
      WRITE (IPR,20)
20    FORMAT ('1DEFINITION OF THE OPERATIONS TABLE:')
C
C  READ CARD WITH OPERATION INFORMATION
30    READ (IN,'(A)',END=290) CARDIN
      IF (IBUG.EQ.1) WRITE (IODBUG,*) 'CARDIN=',CARDIN
C
C  CHECK FOR COMMENT
      IF (CARDIN(1:1).EQ.'$') GO TO 30
      IF (CARDIN(1:1).EQ.'#') GO TO 30
      
C  GET VALUES 
      READ (CARDIN,40,IOSTAT=IOSTAT) OPID,OPNEW,OPOLD
40    FORMAT (A,4X,A,2X,A)
      IF (IOSTAT.NE.0) THEN
         WRITE (IPR,45) CARDIN
45    FORMAT ('0**ERROR** READ ERROR ENCOUNTERED GETTING VALUES FROM ',
     *    'THE FOLLOWING CARD:' /
     * ' ',A)
         CALL ERROR
47       READ (IN,'(A)') CARDIN
         IF (CARDIN(1:4).EQ.'STOP') GO TO 290
         GO TO 47
         ENDIF
C
C  CHECK VALID OPERATION AND GET OPERATION NUMBER
      CALL FOPCDE (OPID,NUMOP)
      IF (NUMOP.EQ.0) THEN
         IF (ISKIPN.EQ.0) THEN
            WRITE (IPR,50) OPID,CARDIN
50    FORMAT ('0**ERROR** ',A,' FOUND ON THE FOLLOWING CARD ',
     *    'IS AN INVALID OPERATION IDENTIFIER:'/
     * ' ',A)
            CALL ERROR
            ISKIPN=1
            ENDIF
         GO TO 30
         ENDIF
C
      ISKIPN=0
C
C  CHECK FOR STOP OPERATION
      IF (NUMOP.EQ.-1) GO TO 300
C
      IERR=0
      NOPS=NOPS+1
C
C  CHECK IF NUMBER OF OPERATIONS IN SEGMENT EXCEEDS MAXIMUM
      IF (NOPS+NUMCLR.GT.MAXOPS) THEN
         WRITE (IPR,70) ISEG,MAXOPS
70    FORMAT ('0**ERROR** NUMBER OF OPERATIONS IN THIS SEGMENT ',
     * 2A4,' EXCEEDS THE MAXIMUM NUMBER OF OPERATIONS ALLOWED (',I3,
     * ').')
         CALL ERROR
         GO TO 90
         ENDIF
C
C  CHECK IF CLEAR-TS OPERATION
      IF (NUMOP.EQ.4) GO TO 150
C
C  CHECK IF ENOUGH SPACE IN THE P ARRAY
      IF (NXP+6.LE.MP) GO TO 100
         WRITE (IPR,80) NXP+6,MP
80    FORMAT ('0**ERROR** SPACE NEEDED IN THE P ARRAY (',I6,
     * ') EXCEEDS SPACE AVAILABLE (',I6,').')
         CALL ERROR
90    NXP=NXP-1
      NXC=NXC-1
      NXT=NXT-1
      LD=NWORK+LWMAX-1
      GO TO 330
C
C  CHECK FOR VALID OPERATION NAME
100   CALL FCIDCK (OPNEW,NCID,IPACK,IDCODE,IPRERR,IUIDCK)
      IF (IUIDCK.NE.0) THEN
         WRITE (IPR,110) OPNEW,OPID
110   FORMAT ('0**ERROR** OPERATION NAME (',A,
     * ') FOR OPERATION TYPE ',A,' IS INVALID.')
         CALL ERROR
         ENDIF
C
C  CHECK IF THE OPERATION IDENTIFIER AND NAME ARE UNIQUE
C  MUST PUT ENTRY INTO THE NEXT OPEN POSITION OF THE P ARRAY
      P(NXP)=-1.01
      LOCP=0
      CALL FSERCH (NUMOP,OPNEW,LOCP,P,MP)
      IF (LOCP.GT.0) THEN
         WRITE (IPR,130) OPID,OPNEW
130   FORMAT ('0**ERROR** OPERATION HAS THE SAME IDENTIFIER (',A,
     * ') AND NAME (',A,') AS A PREVIOUS OPERATION.')
         CALL ERROR
         ISKIP=1
         GO TO 30
         ENDIF
C
C  PUT INFORMATION INTO THE FIRST PART OF THE P ARRAY
      CALL UMEMOV (OPNEW,P(NXP+2),2)
      CALL UMEMOV (OPOLD,P(NXP+4),2)
      IUSEP=0
      IUSEC=0
      ISKIP=0
      LEFTP=MP-(NXP+6)
      LEFTC=MC-(NXC+4)
      NXP2=NXP+7
      NXC2=NXC+5
      IPASS=0
150   LEFT=MT-NXT+1
      IUSET=0
C
      IOPNUM=NUMOP
      CALL UMEMOV (OPNEW,OPNAME,2)
C
C  CALL ROUTINE WHICH CALLS INPUT AND OPERATIONS TABLE ENTRY ROUTINES
160   IF (NUMOP.GT.19) GO TO 170
         CALL SETUP1 (P,MP,C,MC,T,MT,TS,MTS,D,MD,NWORK,LWORK,IDT,IPASS,
     *    NXP2,LEFTP,IUSEP,NXC2,LEFTC,IUSEC,NXT,LEFT,IUSET,ISKIP,NEXTP,
     *    NXP,NEXTC,NXC,NUMOP,IERR)
         GO TO 190
170   IF (NUMOP.GT.40) GO TO 180
         CALL SETUP2 (P,MP,C,MC,T,MT,TS,MTS,D,MD,NWORK,LWORK,IDT,IPASS,
     *    NXP2,LEFTP,IUSEP,NXC2,LEFTC,IUSEC,NXT,LEFT,IUSET,ISKIP,NUMOP,
     *    IERR)
         GO TO 190
180   CALL SETUP3 (P,MP,C,MC,T,MT,TS,MTS,D,MD,NWORK,LWORK,IDT,IPASS,
     * NXP2,LEFTP,IUSEP,NXC2,LEFTC,IUSEC,NXT,LEFT,IUSET,ISKIP,NUMOP,
     * IERR)
C
C  CHECK THAT THE ASSIMILATORS WORK SPACE DOES NOT OVERWRITE ANY
C  OF THE WORKSPACE USED BY OPERATIONS WITHIN THE ASSIMILATOR LOOP
190   IF (INASSIM.EQ.1) THEN
         IF (LWORK.GT.LWORKMX) LWORKMX=LWORK
         ENDIF
C
      IF (IERR.EQ.1) GO TO 270
      IF (ISKIP.EQ.1) GO TO 260
      IF (IPASS.EQ.1) GO TO 230
C
      INDERR=0
      IF (IUSEP.GT.LEFTP) THEN
         WRITE (IPR,200) IUSEP,LEFTP
200   FORMAT ('0**ERROR** SPACE NEEDED IN THE P ARRAY (',I6,
     * ') EXCEEDS SPACE AVAILABLE (',I6,').')
         CALL ERROR
         INDERR=1
         ENDIF
      IF (IUSEC.GT.LEFTC) THEN
         WRITE (IPR,205) IUSEC,LEFTC
205   FORMAT ('0**ERROR** SPACE NEEDED IN THE C ARRAY (',I4,
     * ') EXCEEDS SPACE AVAILABLE (',I4,').')
         CALL ERROR
         INDERR=1
         ENDIF
      IF (INDERR.EQ.1) GO TO 370
C
C  STORE REMAINING VALUES IN THE FIRST PART OF P ARRAY AND STORE VALUES 
C  IN THE FIRST PART OF C ARRAY IF THE OPERATION HAS CARRYOVER
      P(NXP)=NUMOP+0.01
      NEXTP=NXP+7+IUSEP
      P(NXP+1)=NEXTP+0.01
      IF (IUSEC.GT.0) GO TO 210
         P(NXP+6)=0.01
         NEXTC=NXC
         GO TO 220
210   C(NXC)=NUMOP+0.01
      NEXTC=NXC+5+IUSEC
      C(NXC+1)=NEXTC+0.01
      CALL UMEMOV (OPNEW,C(NXC+2),2)
      C(NXC+4)=NXP2+0.01
      P(NXP+6)=NXC2+0.01
C
220   IPASS=1
      GO TO 160
C
C  CHECK T ARRAY SPACE
230   IF (IUSET.GT.LEFT) THEN
         WRITE (IPR,240) IUSET,LEFT
240   FORMAT ('0**ERROR** SPACE NEEDED IN THE T ARRAY (',I4,
     * ') EXCEEDS SPACE AVAILABLE (',I4,').')
         CALL ERROR
         GO TO 370
         ENDIF
C
C  CHECK IF AMOUNT OF WORKING SPACE NEEDS TO BE INCREASED
      IF (LWORK.GT.LWMAX) LWMAX=LWORK
C
C  FIND LOWEST COMMON DENOMINATOR OF THE TIME INTERVAL
      IF (IDT.EQ.0) GO TO 250
      CALL FCLCD (MINDT,IDT)
C
C  INCREMENT NEXT OPEN POSITION IN THE P, C AND T ARRAYS
250   NXP=NEXTP
      NXC=NEXTC
      NXT=NXT+IUSET
260   IOPNUM=0
      CALL UMEMOV (RTNNAM,OPNAME,2)
      GO TO 30
C
C  OPERATION NOT AVAILABLE
270   IOPNUM=0
      CALL UMEMOV (RTNNAM,OPNAME,2)
      WRITE (IPR,280) OPID
280   FORMAT ('0**ERROR** OPERATION ',A,' IS NOT AVAILABLE.')
      CALL ERROR
      ISKIP=1
      GO TO 30
C
C  END OF THE OPERATIONS FOR THIS SEGMENT
290   IENDIN=1
C
C  CALL INPUT ROUTINE FOR THE STOP OPERATION
300   CALL STOPIN (P,MP,C,MC,T,MT,NXP,NXC,NXT,LD,NWORK,LWMAX)
C
C  PRINT THE OPERATIONS TABLE
      CALL PROPTB (P,MP,C,MC,T,MT,TS,MTS,MD,MINDT,IOPT,ITOP)
C
C  CHECK LENGTH OF THE D ARRAY
      IF (LD.GT.MD) THEN
         IOPNUM=0
         CALL UMEMOV (RTNNAM,OPNAME,2)
         WRITE (IPR,310) LD,MD
310   FORMAT ('0**ERROR** SPACE NEEDED FOR DATA AND WORK STORAGE ',
     * 'IN THE D ARRAY (',I6,') EXCEEDS MAXIMUM (',I6,').')
         CALL ERROR
         ENDIF
C
C  CHECK ALL TIME SERIES ARE WRITTEN TO
      CALL FCWTCK (TS,MTS)
C
330   IF (IFBUG('SEGI').EQ.1.OR.IFBUG('PCT ').EQ.1) THEN
C     PRINT CONTENTS OF P,C, AND T ARRAYS.
         CALL FDMPA ('P   ',P,MP)
         CALL FDMPA ('C   ',C,MC)
         CALL FDMPT ('T   ',T,MT)
         ENDIF
C
      WRITE (IPR,360) NOPS+NUMCLR,NUMCLR
360   FORMAT (1X,78('*') /
     * ' NUMBER OF OPERATIONS:',I4,' INCLUDING ',I2,
     *   ' AUTOMATIC INSERTS OF CERTAIN OPERATIONS' /
     * 1X,78('*') )
C
370   RETURN
C
      END
