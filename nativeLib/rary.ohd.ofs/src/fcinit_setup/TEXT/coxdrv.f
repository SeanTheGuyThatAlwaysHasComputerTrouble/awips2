C MODLUE COXDRV
C-----------------------------------------------------------------------
C
      SUBROUTINE COXDRV(P,NP,C,NC,OLDP,NOLDP,OLDC,NOLDC,D,MD)
C
C  THIS IS THE DRIVER SUBROUTINE FOR CARRYOVER TRANSFER. THIS
C  ROUTINE DETERMINES IF CARRYOVER TRANSFER IS TO BE PERFORMED
C  FOR EACH OPERATION THAT HAS CARRYOVER.
C
C  ROUTINE ORIGINALLY WRITTEN BY - ERIC ANDERSON - HRL - 12/1980
C
      CHARACTER*4 TFDMPA
      CHARACTER*8 RTNNAM,OLDOPN
      DIMENSION P(NP),C(NC),OLDP(NOLDP),OLDC(NOLDC),D(MD)
      DIMENSION COIN(2),OLDN(2),OPID(2)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/where'
      INCLUDE 'common/fprog'
      INCLUDE 'common/flarys'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_setup/RCS/coxdrv.f,v $
     . $',                                                             '
     .$Id: coxdrv.f,v 1.2 2002/02/11 13:54:12 michaelo Exp $
     . $' /
C    ===================================================================
C
      DATA COIN/4hINPU,4hT CO/
      DATA BLANK/4h    /
C
C
      RTNNAM='COXDRV'
C
      IF (ITRACE.GE.1) WRITE (IODBUG,*) 'ENTER ',RTNNAM
C
      IBUG=IFBUG('COX ')
      JBUG=IFBUG('PCT ')
C
      IOPNUM=0
      CALL FSTWHR (RTNNAM,IOPNUM,OLDOPN,IOLDOP)
C
      IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,901)
  901 FORMAT (' OLD AND NEW P AND C ARRAYS:')
         KP=LP
         KC=LC
         LP=NOLDP
         LC=NOLDC
         TFDMPA='P'
         CALL FDMPA (TFDMPA,OLDP,NOLDP)
         TFDMPA='C'
         CALL FDMPA (TFDMPA,OLDC,NOLDC)
         LP=NP
         LC=NC
         TFDMPA='P'
         CALL FDMPA (TFDMPA,P,NP)
         TFDMPA='C'
         CALL FDMPA(TFDMPA,C,NC)
         LP=KP
         LC=KC
         ENDIF
C
C  SET INTIAL VALUES
      LPO=1
C
C  GET OPERATION NUMBER AND LOCATION OF NEXT OPERATION
  101 NUMOP=P(LPO)
      IF (NUMOP.EQ.-1) GO TO 190
      NEXTP=P(LPO+1)
C
C  CHECK IF OPERATION HAS CARRYOVER. IF NOT, GO TO NEXT OPERATION.
      LCO=P(LPO+6)
      IF (LCO.EQ.0) GO TO 180
C
C  OPERATION HAS CARRYOVER - CHECK FOR CARRYOVER TRANSFER
      IF (MAINUM.NE.4)GO TO 103
      IF (NUMOP.EQ.17)GO TO 180
      IF (NUMOP.EQ.40)GO TO 180
      GO TO 104
C
C  GET OLD NAME
  103 OLDN(1)=P(LPO+4)
      OLDN(2)=P(LPO+5)
C
C  IF OLD NAME='INPUT CO' NO CARRYOVER TRANSFER
      IF ((OLDN(1).EQ.COIN(1)).AND.(OLDN(2).EQ.COIN(2))) GO TO 180
C
C  IF OLD NAME IS BLANK,OLD NAME EQUALS NEW NAME
      IF ((OLDN(1).NE.BLANK).OR.(OLDN(2).NE.BLANK)) GO TO 105
C
  104 OLDN(1)=P(LPO+2)
      OLDN(2)=P(LPO+3)
C
C  CHECK IF OLD NAME EXISTS IN OLDP ARRAY
  105 LOP=0
      CALL FOPCDX (OPID,NUMOP)
      CALL FSERCH (NUMOP,OLDN,LOP,OLDP,NOLDP)
      IF (LOP.GT.0) GO TO 110
C
C  OLD NAME DOES NOT EXIST IN OLDP ARRAY, USE DEFAULT CARRYOVER
      WRITE (IPR,902) OPID,P(LPO+2),P(LPO+3),OLDN
  902 FORMAT ('0**WARNING** FOR OPERATION=',2A4,' NAME=',2A4,
     *     ' THE OPERATION (NAME=',2A4,') TO BE USED FOR CARRYOVER ',
     *     'TRANSFER DOES NOT' /
     * 13X,'EXIST IN THE PREVIOUS DEFINITION OF THE SEGMENT. ',
     *     'NO CARRYOVER TRANSFER WILL BE DONE FOR THIS OPERATION.')
      CALL WARN
      GO TO 180
C
C  CHECK IF OLD OPERATION HAD CARRYOVER
  110 LOCO=OLDP(LOP-1)
      IF (LOCO.GT.0) GO TO 120
         WRITE (IPR,903) OPID,P(LPO+2),P(LPO+3),OLDN
  903 FORMAT ('0**WARNING** FOR OPERATION=',2A4,'NAME=',2A4,
     *     ' THE OPERATION (NAME=',2A4,' TO BE USED FOR CARRYOVER ',
     *     'TRANSFER DOES NOT' /
     * 13X,'HAVE CARRYOVER.',
     *     'NO CARRYOVER TRANSFER IS PERFORMED FOR THIS OPERATION.')
         CALL WARN
         GO TO 180
C
C  DO CARRYOVER TRANSFER
  120 IERR=0
      IOPNUM=NUMOP
      OPNAME(1)=P(LPO+2)
      OPNAME(2)=P(LPO+3)
      IF (NUMOP.LE.19) THEN
         CALL COXDR1 (OLDP(LOP),OLDC(LOCO),P(LPO+7),C(LCO),D,MD,NUMOP,
     *      IERR)
         GO TO 129
         ENDIF
      IF (NUMOP.LE.40) THEN
         CALL COXDR2 (OLDP(LOP),OLDC(LOCO),P(LPO+7),C(LCO),D,MD,NUMOP,
     *      IERR)
         GO TO 129
         ENDIF
      CALL COXDR3 (OLDP(LOP),OLDC(LOCO),P(LPO+7),C(LCO),D,MD,NUMOP,
     *   IERR)
  129 IOPNUM=0
      CALL FSTWHR (RTNNAM,IOPNUM,OLDOPN,IOLDOP)
      IF (IERR.NE.0) THEN
         WRITE (IPR,904) OPID
  904 FORMAT ('0**WARNING** A CARRYOVER TRANSFER ROUTINE IS NOT ',
     *   'EXIST FOR OPERATION ',2A4,',')
         CALL WARN
         ENDIF
C
C  INCREMENT TO NEXT OPERATION
  180 LPO=NEXTP
      IF (NEXTP.LE.NP) GO TO 101
C
  190 IF (IBUG.EQ.1.OR.JBUG.EQ.1) THEN
         WRITE (IODBUG,*) 'CONTENTS OF MODIFIED C ARRAY:'
         KC=LC
         LC=NC
         TFDMPA='C'
         CALL FDMPA (TFDMPA,C,NC)
         LC=KC
         ENDIF
C
      CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
C
      END
