C MODULE SFSRCE
C-----------------------------------------------------------------------
C
C  ROUTINE TO DEFINE STATION DATA SOURCE INFORMATION.
C
      SUBROUTINE SFSRCE (ISRCE,INULL,NFLD,NUMFLD,ITYPE,
     *   LCHAR,CHAR,LENGTH,LLPAR,LRPAR,
     *   STAID,TDISP,NOPFLD,NXTFLD,IOFLD2,IOFLD3,IOFLD4,
     *   SRCCD,NSRCCD,SRCID,NSRCID,
     *   TSRCCD,NUMSRC,NUMADD,
     *   GOESN,NGOESN,CDASN,NCDASN,
     *   NUMERR,NUMWRN,IWRITE,ISTAT)
C
C
      CHARACTER*4 CHAR(LCHAR),TDISP,TSRCCD,CCODE
      CHARACTER*4 SAID
      CHARACTER*8 GOESID,SMID
      CHARACTER*8 TYPMSG
C
      INCLUDE 'scommon/dimstan'      
      CHARACTER*4 TSRCID(MSRCID)
C
      SAVE INDNSP
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/sudtrx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_define/RCS/sfsrce.f,v $
     . $',                                                             '
     .$Id: sfsrce.f,v 1.3 2000/12/18 22:54:00 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'ENTER SFSRCE'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('STAN')
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*)
     *      ' NOPFLD=',NOPFLD,
     *      ' NXTFLD=',NXTFLD,
     *      ' IOFLD2=',IOFLD2,
     *      ' IOFLD3=',IOFLD3,
     *      ' IOFLD4=',IOFLD4,
     *      ' ISRCE=',ISRCE,
     *      ' NSRCCD=',NSRCCD,
     *      ' NUMSRC=',NUMSRC,
     *      ' NUMERR=',NUMERR,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C  
      IF (ISRCE.EQ.1) GO TO 30
C
C  CHECK IF TO WRITE TO CONTROL FILES
      IF (IWRITE.EQ.0) GO TO 30      
C
C  CHECK IF SOURCE CODES ALREADY DEFINED
      IF (NSRCCD.EQ.0) GO TO 30
C
C  CHECK IF ERRORS HAVE BEEN ENCOUNTERED
      IF (NUMERR.GT.0) GO TO 30
C
      WRITE (LP,860) STAID,NSRCCD
      CALL SULINE (LP,2)
      WRITE (LP,870)
      CALL SULINE (LP,1)
C
C  DELETE FROM CONTROL FILE
      INDFLD=-2
      TYPMSG='NOTE'
      SAID=' '
      SMID=' '
      DO 20 I=1,NSRCCD
         CALL SUBSTR (SRCCD(I),1,LEN(TSRCCD),TSRCCD,1)
         IF (TSRCCD.EQ.'GHB5'.OR.
     *       TSRCCD.EQ.'GPLT'.OR.
     *       TSRCCD.EQ.'CDAS') THEN
            GOESID=' '
            CALL SUBSTR (SRCID(1,I),1,LEN(GOESID),GOESID,1)
            CALL SLGOES (INDFLD,STAID,TSRCCD,GOESID,TYPMSG,IERR)
            GO TO 20
            ENDIF
         IF (TSRCCD.EQ.'SA') CALL SUBSTR (SRCID(1,I),1,LEN(SAID),SAID,1)
         IF (TSRCCD.EQ.'SM') CALL SUBSTR (SRCID(1,I),1,LEN(SMID),SMID,1)
20       CONTINUE
      IF (SAID.NE.' '.OR.SMID.NE.' ') THEN
         CALL SLSASM (INDFLD,STAID,TYPMSG,IERR)
         ENDIF
      NSRCCD=0
C
30    ISRCE=1
      INDERR=0
      GO TO (40,50,370,600),NOPFLD
40       WRITE (LP,880) NOPFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 830
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION SOURCE CODE IDENTIFIERS
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
50    IF (NXTFLD.NE.0.OR.IOFLD2.EQ.0) GO TO 60
         WRITE (LP,920)
         CALL SUWRNS (LP,2,NUMWRN)
         NSRCCD=0
C
60    IOFLD2=1
      INDERR=0
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
      NGOTO=NXTFLD+1
      GO TO (70,140,210),NGOTO
C
C  CHECK FOR NULL FIELD
70    IF (INULL.EQ.0) GO TO 80
         WRITE (LP,910) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
C
C  CHECK FOR CHARACTER DATA
80    IF (ITYPE.EQ.2) GO TO 90
         WRITE (LP,900) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
C
90    NXTFLD=1
C
C  CHECK IF OPTION CURRENTLY ALLOWED
      INDNSP=0
      ISUPT=ISUPRT('SRCE')
      IF (ISUPT.EQ.0) THEN
         WRITE (LP,960)
         CALL SUWRNS (LP,2,NUMWRN)
         INDNSP=1
         ENDIF
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR(1).EQ.'('.OR.LLPAR.EQ.LENGTH) GO TO 830
      IF (LLPAR.GT.0.AND.LRPAR.GT.0) THEN
         WRITE (LP,930) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
      IF (CHAR(1).EQ.')') THEN
         NOPFLD=0
         NXTFLD=0
         IF (NUMSRC.GT.0) GO TO 830
            WRITE (LP,940) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            GO TO 830
         ENDIF
      IF (LLPAR.EQ.0) GO TO 830
C
C  SET SOURCE CODE
140   IF (CHAR(1).EQ.'('.AND.LENGTH.EQ.1) GO TO 830
      IF (CHAR(1).EQ.')'.AND.LENGTH.EQ.1) GO TO 150
      GO TO 160
150   NOPFLD=0
      NXTFLD=0
      GO TO 830
160   IF (LRPAR.NE.1) GO TO 170
         IF (NUMSRC.GT.0) GO TO 830
            WRITE (LP,940) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 830
170   IBEG=LLPAR+1
      IEND=LENGTH
      IF (LRPAR.GT.0) IEND=LRPAR-1
C
C  CHECK IF VALID CODE
      NCHAR=IEND-IBEG+1
      IF (NCHAR.GT.LEN(TSRCCD)) THEN
         WRITE (LP,950) NFLD,NCHAR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
         ENDIF
      CALL SUBSTR (CHAR,LLPAR+1,NCHAR,TSRCCD,1)
      CALL ULEFTC (TSRCCD,LEN(TSRCCD),NCHAR)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'TSRCCD=',TSRCCD
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (TSRCCD.EQ.'SA'.OR.
     *    TSRCCD.EQ.'SM'.OR.
     *    TSRCCD.EQ.'GPLT'.OR.
     *    TSRCCD.EQ.'GHB5'.OR.
     *    TSRCCD.EQ.'CDAS'.OR.
     *    TSRCCD.EQ.'FMM') GO TO 190
         WRITE (LP,980) TSRCCD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
C
C  CHECK IF OPTION CURRENTLY ALLOWED
190   ISUPT=ISUPRT(TSRCCD)
      IF (ISUPT.EQ.0) THEN
         WRITE (LP,970) TSRCCD
         CALL SUWRNS (LP,2,NUMWRN)
         INDNSP=1
         ENDIF
C
200   NXTFLD=2
      GO TO 830
C
C  SET ADDITIONAL INFORMATION
210   IF (LRPAR.EQ.0) GO TO 220
         IF (LRPAR.EQ.LENGTH) GO TO 220
            WRITE (LP,1070) NFLD
            CALL SUERRS (LP,2,NUMERR)
            INDERR=1
            GO TO 830
220   IF (ITYPE.EQ.0.OR.ITYPE.EQ.2) GO TO 240
         IF (LRPAR.NE.1) THEN
            IF (LRPAR.GT.1) GO TO 240
            WRITE (LP,890) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            GO TO 360
            ENDIF
         IF (NUMSRC.NE.NUMADD) THEN
            WRITE (LP,1080) NUMSRC,NUMADD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 830
            ENDIF
240   IF (LLPAR.EQ.0) IBEG=1
      IF (LLPAR.GT.0) IBEG=LLPAR+1
      IF (LRPAR.EQ.0) IEND=LENGTH
      IF (LRPAR.GT.0) IEND=LRPAR-1
      NCHK=MSRCID*4
      IF (IEND.GT.NCHK) THEN
         WRITE (LP,1060) IEND,NCHK,TSRCCD
         CALL SUERRS (LP,2,NUMERR)
         INDERR=1
         ENDIF
C
C  CHECK LENGTH OF SA IDENTIFIER
      IF (TSRCCD.EQ.'SA') THEN
         IF (IEND.EQ.3.OR.IEND.EQ.4) GO TO 270
            WRITE (LP,1030) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            INDERR=1
         ENDIF
C
C  CHECK LENGTH OF SM IDENTIFIER
      IF (TSRCCD.EQ.'SM') THEN
         IF (IEND.EQ.5) GO TO 270
            WRITE (LP,1040) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            INDERR=1
         ENDIF
C
C  CHECK LENGTH OF GPLT IDENTIFIER
270   IF (TSRCCD.EQ.'GPLT') THEN
         IF (IEND.EQ.8) GO TO 280
            WRITE (LP,1050) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            INDERR=1
         ENDIF
C
280   CALL UREPET (' ',TSRCID,LEN(TSRCID)*MSRCID)
      CALL SUBSTR (CHAR,IBEG,IEND,TSRCID,1)
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*)
     *      ' TSRCID(1)=',TSRCID(1),
     *      ' TSRCID(2)=',TSRCID(2),
     *      ' NUMSRC=',NUMSRC,
     *      ' MSRCID=',MSRCID,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (NUMSRC.GT.0) THEN
C     CHECK IF CODE ALREADY SPECIFIED
         DO 300 IREF=1,NUMSRC
            IF (TSRCCD.NE.SRCCD(IREF)) GO TO 300
               IF (TSRCCD.NE.'GHB5'.AND.TSRCCD.NE.'GPLT') GO TO 320
                  DO 290 J=1,MSRCID
                     IF (SRCID(J,IREF).NE.TSRCID(J)) GO TO 300
290                  CONTINUE
                     WRITE (LP,1000) TSRCCD,STAID,(TSRCID(I),I=1,MSRCID)
                     CALL SUERRS (LP,2,NUMERR)
                     GO TO 360
300         CONTINUE
         ENDIF
C
C  NEW CODE
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*)
     *      ' INDNSP=',INDNSP,
     *      ' INDERR=',INDERR,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (INDNSP.EQ.1.OR.INDERR.EQ.1) GO TO 360
      NUMSRC=NUMSRC+1
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*)
     *      ' NUMSRC=',NUMSRC,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF
      GO TO 340
C
320   IF (TDISP.EQ.'NEW') THEN
         WRITE (LP,1010) TSRCCD,TSRCCD,(SRCID(I,IREF),I=1,2)
         CALL SUWRNS (LP,2,NUMWRN)
         GO TO 360
         ENDIF
C
C  OLD CODE         
      IF (INDNSP.EQ.1.OR.INDERR.EQ.1) GO TO 360
      NUMSRC=IREF
C
340   IF (NUMSRC.GT.MSRCCD) THEN
         WRITE (LP,1020) MSRCCD,NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         NUMSRC=NUMSRC-1
         GO TO 360
         ENDIF
C
      CALL SUBSTR (TSRCCD,1,LEN(TSRCCD),SRCCD(NUMSRC),1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1090) SRCCD(NUMSRC)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      CALL SUBSTR (TSRCID,1,8,SRCID(1,NUMSRC),1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1100) (SRCID(I,NUMSRC),I=1,2)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
360   NXTFLD=1
      IF (LRPAR.EQ.0) GO TO 830
         NOPFLD=0
         NXTFLD=0
         GO TO 830
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  GOES DATA TYPES NOT TO BE TRANSFERRED
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
370   IF (NXTFLD.NE.0.OR.IOFLD3.EQ.0) GO TO 380
         WRITE (LP,1110) GOES
         CALL SUWRNS (LP,2,NUMWRN)
         NGOESN=0
C
380   IOFLD3=1
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
      NGOTO=NXTFLD+1
      GO TO (390,430),NGOTO
C
C  CHECK FOR NULL FIELD
390   IF (INULL.EQ.0) GO TO 400
         WRITE (LP,910) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 590
C
C  CHECK FOR CHARACTER DATA
400   IF (ITYPE.EQ.2) GO TO 410
         WRITE (LP,900) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 590
C
410   NXTFLD=1
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR(1).EQ.'('.OR.LLPAR.EQ.LENGTH) GO TO 830
      IF (CHAR(1).NE.')') GO TO 420
         NOPFLD=0
         NXTFLD=0
         IF (NGOESN.GT.0) GO TO 830
            WRITE (LP,940) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            GO TO 830
C
420   IF (LLPAR.EQ.0) GO TO 830
C
C  SET GOES DATA TYPE NOT TO BE TRANFERRED
430   IF (CHAR(1).EQ.'('.AND.LENGTH.EQ.1) GO TO 830
      IF (CHAR(1).EQ.')'.AND.LENGTH.EQ.1) GO TO 440
         GO TO 450
440   NOPFLD=0
      NXTFLD=0
      GO TO 830
450   IF (LRPAR.NE.1) GO TO 460
         IF (NUMGSN.GT.0) GO TO 830
            WRITE (LP,1120) 'GOES',NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 830
460   IBEG=LLPAR+1
      IEND=LENGTH
      IF (LRPAR.GT.0) IEND=LRPAR-1
C
C  CHECK IF VALID CODE
      NCHAR=IEND-IBEG+1
      IF (NCHAR.GT.LEN(TSRCCD)) THEN
         WRITE (LP,1130) 'GOES',NFLD,NCHAR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
         ENDIF
      CALL SUBSTR (CHAR,LLPAR+1,NCHAR,TSRCCD,1)
      CALL ULEFTC (TSRCCD,LEN(TSRCCD),NCHAR)
C
      IF (IURFIL.GT.0) GO TO 500
C
C  READ RRS DATA TYPE INFORMATION AND LOAD COMMON BLOCK SUDTRX
      CALL UDTRRS (MURTYP,NURTYP,RRSCD,ICLASS,NPROBS,UMISS,UNTIN,
     *   UNTOUT,DISTRB,LFIELD,NUMDEC,CHKMIN,CHKMAX,IERR)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1150) NURTYP
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (IERR.EQ.0) GO TO 480
         WRITE (LP,1140) IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 590
480   IURFIL=1
      IF (NURTYP.EQ.0) GO TO 500
      IF (LDEBUG.LT.2) GO TO 500
         WRITE (IOSDBG,1160)
         CALL SULINE (IOSDBG,2)
         DO 490 I=1,NURTYP
            WRITE (IOSDBG,1170) RRSCD(I),ICLASS(I),NPROBS(I),UMISS(I),
     *          UNTIN(I),UNTOUT(I),LFIELD(I),NUMDEC(I),CHKMIN(I),
     *          CHKMAX(I)
           CALL SULINE (IOSDBG,1)
490        CONTINUE
C
500   INDR=0
      DO 510 I=1,NURTYP
         CALL UMEMOV (RRSCD(I),CCODE,1)
         IF (TSRCCD.EQ.CCODE) INDR=1
510      CONTINUE
      IF (TSRCCD.EQ.'PCPN'.OR.
     *    TSRCCD.EQ.'TEMP'.OR.
     *    TSRCCD.EQ.'PE'.OR.
     *    TSRCCD.EQ.'RRS'.OR.
     *    INDR.EQ.1) GO TO 520
         WRITE (LP,1180) TSRCCD,GOES
         CALL SUERRS (LP,3,NUMERR)
         GO TO 590
C
520   IF (NGOESN.EQ.0) GO TO 550
      IF (NUMGSN.EQ.0) NUMGSN=NGOESN
C
C  CHECK IF CODE ALREADY DEFINED
      DO 540 IREF=1,NGOESN
         CALL UMEMOV (GOESN(IREF),CCODE,1)
         IF (TSRCCD.EQ.CCODE) GO TO 560
540      CONTINUE
C
C  NEW CODE
550   NGOESN=NGOESN+1
      GO TO 570
C
C  CODE ALREADY DEFINED
560   NGOESN=IREF
C
C  CHECK IF MAXIMUM NUMBER OF CODES EXCEEDED
570   IF (NGOESN.GT.MGOESN) THEN
         WRITE (LP,1190) 'GOES',MGOESN,NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 590
         ENDIF
C
      CALL SUBSTR (TSRCCD,1,LEN(TSRCCD),GOESN(NGOESN),1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1200) 'GOES',NGOESN,GOESN(NGOESN)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
590   NXTFLD=1
      IF (LRPAR.EQ.0) GO TO 830
         NOPFLD=0
         NXTFLD=0
         GO TO 830
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CDAS DATA TYPES NOT TO BE TRANSFERRED
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
600   IF (NXTFLD.NE.0.OR.IOFLD4.EQ.0) GO TO 610
         WRITE (LP,1110) CDAS
         CALL SUWRNS (LP,2,NUMWRN)
         NCDASN=0
C
610   IOFLD4=1
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
      NGOTO=NXTFLD+1
      GO TO (620,660),NGOTO
C
C  CHECK FOR NULL FIELD
620   IF (INULL.EQ.0) GO TO 630
         WRITE (LP,910) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 820
C
C  CHECK FOR CHARACTER DATA
630   IF (ITYPE.EQ.2) GO TO 640
         WRITE (LP,900) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 820
C
640   NXTFLD=1
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR(1).EQ.'('.OR.LLPAR.EQ.LENGTH) GO TO 830
      IF (CHAR(1).NE.')') GO TO 650
         NOPFLD=0
         NXTFLD=0
         IF (NCDASN.GT.0) GO TO 830
            WRITE (LP,940) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            GO TO 830
C
650   IF (LLPAR.EQ.0) GO TO 830
C
C  SET CDAS DATA TYPE NOT TO BE TRANFERRED
660   IF (CHAR(1).EQ.'('.AND.LENGTH.EQ.1) GO TO 830
      IF (CHAR(1).EQ.')'.AND.LENGTH.EQ.1) GO TO 670
      GO TO 680
670   NOPFLD=0
      NXTFLD=0
      GO TO 830
680   IF (LRPAR.NE.1) GO TO 690
         IF (NUMCDN.GT.0) GO TO 830
            WRITE (LP,1120) 'GOES',NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 830
690   IBEG=LLPAR+1
      IEND=LENGTH
      IF (LRPAR.GT.0) IEND=LRPAR-1
C
C  CHECK IF VALID CODE
      NCHAR=IEND-IBEG+1
      IF (NCHAR.GT.LEN(TSRCCD)) THEN
         WRITE (LP,1130) 'CDAS',NFLD,NCHAR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 200
         ENDIF
      CALL SUBSTR (CHAR,LLPAR+1,NCHAR,TSRCCD,1)
      CALL ULEFTC (TSRCCD,LEN(TSRCCD),NCHAR)
C
      IF (IURFIL.GT.0) GO TO 730
C
C  READ RRS DATA TYPE INFORMATION AND LOAD COMMON BLOCK SUDTRX
      CALL UDTRRS (MURTYP,NURTYP,RRSCD,ICLASS,NPROBS,UMISS,UNTIN,
     *   UNTOUT,DISTRB,LFIELD,NUMDEC,CHKMIN,CHKMAX,IERR)
      IF (LDEBUG.GT.0) THEN
          WRITE (IOSDBG,1150) NURTYP
          CALL SULINE (IOSDBG,1)
          ENDIF
      IF (IERR.NE.0) THEN
         WRITE (LP,1140) IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 820
         ENDIF
      IURFIL=1
      IF (NURTYP.EQ.0) GO TO 730
      IF (LDEBUG.LT.2) GO TO 730
         WRITE (IOSDBG,1160)
         CALL SULINE (IOSDBG,2)
         DO 720 I=1,NURTYP
            WRITE (IOSDBG,1170) RRSCD(I),ICLASS(I),NPROBS(I),UMISS(I),
     *          UNTIN(I),UNTOUT(I),LFIELD(I),NUMDEC(I),CHKMIN(I),
     *          CHKMAX(I)
           CALL SULINE (IOSDBG,1)
720        CONTINUE
C
730   INDR=0
      DO 740 I=1,NURTYP      
         CALL UMEMOV (RRSCD(I),CCODE,1)
         IF (TSRCCD.EQ.CCODE) INDR=1
740      CONTINUE
      IF (TSRCCD.EQ.'PCPN'.OR.
     *    TSRCCD.EQ.'TEMP'.OR.
     *    TSRCCD.EQ.'PE'.OR.
     *    TSRCCD.EQ.'RRS'.OR.
     *    INDR.EQ.1) GO TO 750
         WRITE (LP,1180) TSRCCD,CDAS
         CALL SUERRS (LP,3,NUMERR)
         GO TO 820
C
750   IF (NCDASN.EQ.0) GO TO 780
         IF (NUMCDN.GT.0) GO TO 760
            NUMCDN=NCDASN
C
C  CHECK IF CODE ALREADY DEFINED
760   DO 770 IREF=1,NCDASN
         CALL UMEMOV (CDASN(IREF),CCODE,1)         
         IF (TSRCCD.EQ.CCODE) GO TO 790
770      CONTINUE
C
C  NEW CODE
780   NCDASN=NCDASN+1
      GO TO 800
C
C  CODE ALREADY DEFINED
790   NCDASN=IREF
C
C  CHECK IF MAXIMUM NUMBER OF CODES EXCEEDED
800   IF (NCDASN.GT.MCDASN) THEN
         WRITE (LP,1190) 'CDAS',MCDASN,NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 820
         ENDIF
C
      CALL SUBSTR (TSRCCD,1,LEN(TSRCCD),CDASN(NCDASN),1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1200) 'CDAS',NCDASN,CDASN(NCDASN)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
820   NXTFLD=1
      IF (LRPAR.EQ.0) GO TO 830
         NOPFLD=0
         NXTFLD=0
         GO TO 830
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
830   IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'EXIT SFSRCE'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
860   FORMAT ('0*** NOTE - STAN PARAMETERS INDICATE STATION ',A,
     *   ' HAS ',I2,' SOURCE CODES DEFINED.')
870   FORMAT (T13,'ANY ENTRIES IN THE DATA ENTRY CONTROL FILES WILL ',
     *   'BE DELETED.')
880   FORMAT ('0*** ERROR - IN SFSRCE - INVALID VALUE OF NOPFLD (',I2,
     *   ').')
890   FORMAT ('0*** ERROR - NON-REAL DATA EXPECTED IN INPUT ',
     *   'FIELD ',I2,' (CARD FIELD ',I2,').')
900   FORMAT ('0*** ERROR - NON-CHARACTER DATA EXPECTED IN INPUT ',
     *   'FIELD ',I2,' (CARD FIELD ',I2,').')
910   FORMAT ('0*** ERROR - NO VALUE FOUND FOR OPTIONAL INPUT FIELD ',
     *   I2,' (CARD FIELD ',I2,').')
920   FORMAT ('0*** WARNING - SOURCE CODES HAVE ALREADY BEEN ',
     *   'DEFINED.')
930   FORMAT ('0*** ERROR - SOURCE CODE OR IDENTIFIER NOT ',
     *   'FOUND IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
940   FORMAT ('0*** ERROR - NO SOURCE CODES OR IDENTIFIERS ',
     *   'FOUND IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
950   FORMAT ('0*** ERROR - SOURCE CODE IN FIELD ',I2,' IS ',I2,
     *   ' CHARCATERS LONG. MAXIMUM LENGTH IS 4 CHARACTERS.')
960   FORMAT ('0*** WARNING - SPECIFICATION OF SOURCE CODES NOT ',
     *   'CURRENTLY ALLOWED. CODE WILL BE IGNORED.')
970   FORMAT ('0*** WARNING - ',A4,' CANNOT BE SPECIFIED AS A SOURCE ',
     *   'CODE AT THIS TIME. CODE WILL BE IGNORED.')
980   FORMAT ('0*** ERROR - ',A4,' IS AN INVALID SOURCE CODE. VALID ',
     *   'SOURCE CODES ARE ''SA'', ''SM'', ''GPLT'', ''GHB5''',
     *   ' AND ''CDAS''.')
1000  FORMAT ('0*** ERROR - THE ',A4,' IDENTIFIER USED ',
     *   'FOR STATION ',A,' (',2A4,') HAS ALREADY BEEN SPECIFIED.')
1010  FORMAT ('0*** WARNING - ',A4,' HAS ALREADY BEEN SPECIFIED AS ',
     *   'A SOURCE CODE (',A4,' ID=',2A4,'). THE LAST SPECIFIED WILL ',
     *   'WILL BE USED.')
1020  FORMAT ('0*** ERROR - MAXIMUM NUMBER OF SOURCE CODES ',
     *   '(',I2,') EXCEEDED IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1030  FORMAT ('0*** ERROR - LENGTH OF SA IDENTIFIER MUST BE 3 OR 4 ',
     *   'CHARACTERS IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1040  FORMAT ('0*** ERROR - LENGTH OF SM IDENTIFIER MUST BE 5 ',
     *   'CHARACTERS IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1050  FORMAT ('0*** ERROR - LENGTH OF GPLT IDENTIFIER MUST BE 8 ',
     *   'CHARACTERS IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1060  FORMAT ('0*** ERROR - LENGTH OF IDENTIFIER (',I2,') CANNOT ',
     *   'EXCEED ',I2,' CHARACTERS FOR SOURCE CODE ', A4,'.')
1070  FORMAT ('0*** ERROR - RIGHT PARENTHESES FOUND IN FIELD ',I2,
     *   ' BUT IS NOT LAST CHARACTER IN FIELD.')
1080  FORMAT ('0*** ERROR - NUMBER OF SOURCE CODE ',
     *   'IDENTIFIERS (',I2,') DOES NOT EQUAL THE NUMBER OF ',
     *   'ADDITIONAL INFORMATION FIELDS (',I2,').')
1090  FORMAT (' SOURCE CODE IDENTIFIER SET TO : ',2A4)
1100  FORMAT (' SOURCE ADDL INFORMATION SET TO : ',5A4)
1110  FORMAT ('0*** WARNING - ',A4,' DATA TYPES NOT TO BE ',
     *   'TRANSFERRED HAVE ALREADY BEEN DEFINED.')
1120  FORMAT ('0*** ERROR - NO ',A4,' DATA TYPES NOT TO BE TRANFERRED ',
     *   'FOUND IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1130  FORMAT ('0*** ERROR - ',A4,' CODE IN FIELD ',I2,' IS ',I2,
     *   ' CHARCATERS LONG. MAXIMUM LENGTH IS 4 CHARACTERS.')
1140  FORMAT ('0*** ERROR - RRS DATA TYPE FILE NOT SUCCESSFULLY ',
     *   'READ. STATUS CODE RETURNED FROM UDTRRS = ',I2)
1150  FORMAT (' UDTRRS CALLED  :  NURTYP=',I2)
1160  FORMAT ('0RRSCD ICLASS NPROBS UMISS UNTIN UNTOUT LFIELD NUMDEC ',
     *   'CHKMIN CHKMAX')
1170  FORMAT (1H ,A4,2X,I4,1X,3X,I4,3(2X,A4),2(3X,I4),3X,F6.0,1X,F9.0)
1180  FORMAT ('0*** ERROR - ',A4,' IS AN INVALID ',A4,' DATA TYPE NOT ',
     *   'TO BE TRANSFERRED. VALID CODES ARE ''PCPN'', ''TEMP'', ''PE'',
     *   ''RRS'',' / T16,'OR ANY VALID RRS DATA TYPE.')
1190  FORMAT ('0*** ERROR - MAXIMUM NUMBER OF ',A4,' CODES NOT TO BE ',
     *   'TRANSFRRED ',
     *   '(',I2,') EXCEEDED IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1200  FORMAT (' NO',A4,'TR CODE  ',I2,'  SET TO : ',A4)
C
      END
      
