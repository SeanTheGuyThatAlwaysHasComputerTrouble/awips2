C MODULE SFFMAP
C-----------------------------------------------------------------------
C
C  ROUTINE TO DEFINE FUTURE MAP AREA PARAMETERS.
C
      SUBROUTINE SFFMAP (LARRAY,ARRAY,DISP,PRPARM,NFLD,IRUNCK,ISTAT)
C
      CHARACTER*4 DISP,TDISP,PRPARM
      REAL XFMAP/4HFMAP/
      REAL BLNK/4H    /
      CHARACTER*8 TYPERR,STRING
      CHARACTER*8 BLNK8/' '/
C
      DIMENSION ARRAY(LARRAY)
      PARAMETER (LCHAR=10,LCHK=5)
      DIMENSION CHAR(LCHAR),CHK(LCHK)
      DIMENSION FMAPID(2),DESC(5),FLTLN(2)
      DIMENSION IHEAD(22),XBUF(1)
      PARAMETER (LWKBUF=500)
      DIMENSION IWKBUF(LWKBUF)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'ufreex'
      INCLUDE 'scommon/sugnlx'
      INCLUDE 'scommon/sworkx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_define/RCS/sffmap.f,v $
     . $',                                                             '
     .$Id: sffmap.f,v 1.3 1998/07/06 12:31:17 page Exp $
     . $' /
C    ===================================================================
C
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,470)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('FMAP')
C      
      ISTAT=0
C
C  INITIALIZE VARIABLES
      NUMERR=0
      MINFLD=5
      NFMAP=0
      MAXX=1
      NVALX=0
      NPDT=1
      ISTRT=-1
      IDT=6
      CALL UREPET ('?',FMAPID,8)
      IZERO=0
C
C  PRINT CARD
      CALL SUPCRD
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF SUGNLX COMMON BLOCK FILLED
C
      IF (IUGFIL.EQ.0) THEN
C     READ USER GENERAL PARAMETERS
         CALL SUGTUG (LARRAY,ARRAY,IERR)
         IF (IERR.EQ.0) THEN
            IUGFIL=1
            ELSE
               WRITE (LP,480) 'FMAP','USER GENERAL'
               CALL SUERRS (LP,2,NUMERR)
            ENDIF
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ COMPUTATIONAL ORDER GENERAL PARAMETERS
      INCLUDE 'scommon/callsugtor'
      IF (IERR.GT.0) THEN
         WRITE (LP,480) 'FMAP','COMPUTATIONAL ORDER GENERAL'
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF SUFFICIENT CPU TIME AVAILABLE
10    ICKRGN=0
      ICKCPU=1
      MINCPU=5
      IPRERR=1
      IPUNIT=LP
      TYPERR='ERROR'
C
      INCLUDE 'clugtres'
C
      IF (IERR.GT.0) THEN
         CALL SUFATL
         CALL SUEND
         ENDIF
C
      NUMERR=0
      NUMWRN=0
      NUMFLD=0
      ITSWRT=0
      TDISP=DISP
      IFLD=0
      LOCPAR=0
      ICNTER=0
C
20    IFLD=IFLD+1
      IF (IFLD.EQ.1.AND.NFMAP.GT.0) GO TO 90
      NULL=1
C
C  GET INPUT FIELD
30    CALL UFIELD (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,
     *   LCHAR,CHAR,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR)
      IF (IFLD.GE.4.AND.NFLD.NE.1) LOCPAR=LRPAR
      IF (IERR.NE.1) NULL=0
      IF (LDEBUG.GT.0)
     *   CALL UPRFLD (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,
     *   LCHAR,CHAR,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR)
C
C  CHECK FOR END OF FILE.
      IF (IERR.NE.3) GO TO 40
         NFLD=-1
         GO TO 360
C
C  CHECK FOR PARENTHESES
40    IF (LLPAR.GT.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LLPAR-1,IERR)
      IF (LLPAR.EQ.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LENGTH,IERR)
C
C  CHECK FOR DEBUG
      CALL SUIDCK ('CMDS',CHK,NFLD,0,ICMD,IERR)
      IF (ICMD.NE.1) GO TO 50
         CALL SBDBUG (NFLD,ISTRT,IERR)
         LDEBUG=ISBUG('FMAP')
         GO TO 30
C
C  CHECK FOR COMMAND(@)
50    IF (LATSGN.EQ.1) GO TO 360
C
      IF (NFLD.NE.1) GO TO 60
      IF (LATSGN.NE.0) GO TO 60
      IF (CHAR(1).EQ.XFMAP.AND.NUMFLD.EQ.0) GO TO 60
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 60
      CALL SUPCRD
C
C  CHECK FOR NULL FIELD.
60    IF (NULL.EQ.0) GO TO 80
      IF (DISP.EQ.'OLD'.AND.TDISP.NE.'NEW') GO TO 70
         WRITE (LP,630) IFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
C
70    IF (IFLD.LT.4) GO TO 20
C
80    IF (NUMFLD.EQ.0) GO TO 90
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 360
C
90    NUMFLD=NUMFLD+1
      IF (IFLD.LT.MINFLD) ICNTER=ICNTER+1
      GO TO (100,120,220,280,280),IFLD
         IF (IFLD.GT.5.AND.LENGTH.EQ.1.AND.LRPAR.EQ.1) GO TO 20
         WRITE (LP,490) IFLD
         CALL SUERRS (LP,2,NUMERR)
         NUMFLD=NUMFLD-1
         GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  FIRST FIELD - PARAMETER TYPE
C
100   IF (ITYPE.NE.2) THEN
         WRITE (LP,500) IFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
         ENDIF
C
      IF (CHAR(1).NE.XFMAP) THEN
         WRITE (LP,500) IFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C  CHECK IF UNITS CODE SPECIFIED
      IF (LLPAR.GT.0) THEN
         IEND=LRPAR-1
         IF (LRPAR.EQ.0) IEND=LENGTH
         LSTRING=LEN(STRING)/4
         CALL UFPACK (LSTRING,STRING,ISTRT,LLPAR+1,IEND,IERR)
         IF (STRING.EQ.'ENGL'.OR.STRING.EQ.'METR') THEN
            WRITE (LP,505) 'UNITS CODE',
     *         NFLD,STRING(1:LENSTR(STRING)),' WILL BE IGNORED.'
            CALL SUWRNS (LP,2,NUMWRN)
            ELSE
               WRITE (LP,505) 'UNRECOGNIZED CHARACTERS',
     *            NFLD,STRING(1:LENSTR(STRING)),'.'
               CALL SUWRNS (LP,2,NUMWRN)
            ENDIF
         ENDIF
C         
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SECOND FIELD - IDENTIFIER
C
C  CHECK LENGTH OF IDENTIFIER
120   MAXCHR=8
      IF (LENGTH.LE.MAXCHR) GO TO 130
         WRITE (LP,670) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
130   CALL SUBSTR (CHAR,1,MAXCHR,FMAPID,1)
      NFMAP=NFMAP+1
C
C  CHECK FOR BLANK IDENTIFIER
      IF (FMAPID(1).NE.BLNK.OR.FMAPID(2).NE.BLNK) GO TO 140
         WRITE (LP,680)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 150
140   CALL SUIDCK ('ID  ',FMAPID,NFLD,0,IREF,IERR)
      IF (IERR.NE.2) GO TO 150
         WRITE (LP,690) FMAPID
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK IF TIME SERIES HEADER ALREADY EXISTS
150   CALL SUDOPN (1,'PRD ',IERR)
      IF (IERR.NE.0) GO TO 20
      CALL RPRDFH (FMAPID,'MAP ',MAXX,IHEAD,NUMX,XBUF,IERR)
      IF (IERR.NE.5) GO TO 160
         WRITE (LP,510)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
160   IF (IERR.NE.2) GO TO 170
         WRITE (LP,520) NUMX
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
C
170   IF (DISP.NE.'NEW') GO TO 200
C
C  DISPOSITION IS NEW - CHECK FOR TIME SERIES
      IF (IERR.NE.0) GO TO 190
C
C  DISP=NEW AND TIME SERIES FOUND
      WRITE (LP,530) FMAPID
      CALL SUERRS (LP,2,NUMERR)
      ITSWRT=2
      TDISP='OLD'
C
C  CHECK FOR TIME INTERVAL
180   IF (IHEAD(2).EQ.6) GO TO 20
         WRITE (LP,640) IHEAD(2)
         CALL SUERRS (LP,2,NUMERR)
         ITSWRT=0
         GO TO 20
C
C  DISP=NEW AND TIME SERIES NOT FOUND
190   ITSWRT=1
      GO TO 20
C
C  DISPOSITION IS OLD - CHECK FOR TIME SERIES
200   IF (IERR.NE.0) GO TO 210
C
C  DISP=OLD AND TIME SERIES FOUND
      ITSWRT=2
C
C  CHECK FOR TIME INTERVAL
      GO TO 180
C
C  DISP=OLD AND TIME SERIES NOT FOUND
210   ITSWRT=1
      WRITE (LP,550) FMAPID
      TDISP='NEW'
      CALL SUWRNS (LP,2,NUMWRN)
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  THIRD FIELD - DESCRIPTION
C
C  CHECK LENGTH OF DESCRIPTION
220   MAXCHR=20
      IF (LENGTH.LE.MAXCHR) GO TO 230
         WRITE (LP,560) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
230   CALL SUBSTR (CHAR,1,MAXCHR,DESC,1)
      IF (NULL.EQ.0) GO TO 240
      IF (DISP.EQ.'NEW'.OR.TDISP.EQ.'NEW') GO TO 260
C
C  CHECK FOR BLANK DESCRIPTION
240   DO 250 I=1,5
         IF (DESC(I).NE.BLNK) GO TO 270
250      CONTINUE
260   WRITE (LP,570)
      CALL SUERRS (LP,2,NUMERR)
270   GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  FOURTH AND FIFTH FIELDS - LAT/LON OF CENTROID
C
280   IF (NULL.EQ.0) GO TO 300
         IF (DISP.NE.'NEW'.AND.TDISP.NE.'NEW') GO TO 290
            WRITE (LP,630) IFLD
            CALL SUERRS (LP,2,NUMERR)
290      IFLD=IFLD+1
         GO TO 20
C
C  CHECK FOR PARENTHESES
300   IF (LLPAR.EQ.1.AND.LENGTH.EQ.1) GO TO 30
      IF (LRPAR.EQ.1.AND.LENGTH.EQ.1) GO TO 20
      IF (IFLD.EQ.4) GO TO 310
      IF (IFLD.EQ.5) GO TO 310
         WRITE (LP,580) IFLD
         CALL SUWRNS (LP,2,NUMWRN)
C
310   IBEG=1
      IF(LLPAR.GT.0)IBEG=LLPAR+1
      IEND=LENGTH
      IF (LRPAR.GT.0) IEND=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IBEG,IEND,IZERO,IERR)
      IF (IERR.EQ.0) GO TO 320
         WRITE (LP,590) IFLD
         CALL SUERRS (LP,2,NUMERR)
C
320   IF (IFLD.NE.4) GO TO 340
C
C  LATITUDE OF CENTROID
      IF (VALUE.GE.ULLMTS(2).AND.VALUE.LE.ULLMTS(1)) GO TO 330
         WRITE (LP,660) VALUE,ULLMTS(2),ULLMTS(1)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
330   FLTLN(1)=VALUE
      GO TO 20
C
C  LONGITUDE OF CENTROID
340   IF (VALUE.GE.ULLMTS(3).AND.VALUE.LE.ULLMTS(4)) GO TO 350
         WRITE (LP,650) VALUE,ULLMTS(3),ULLMTS(4)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
350   FLTLN(2)=VALUE
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK NUMBER OF FIELDS PROCESSED
360   IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,600) NUMFLD,MINFLD
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (NUMFLD.GE.MINFLD) GO TO 370
         WRITE (LP,610)
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK FOR MISSING RIGHT PARENTHESIS
370   IF (LOCPAR.GT.0) GO TO 380
         ICNTER=ICNTER-1
         WRITE (LP,580) ICNTER
         CALL SUWRNS (LP,2,NUMWRN)
C
C  CHECK IF ERRORS ENCOUNTERED
380   IF (NUMERR.EQ.0) GO TO 400
C
390   WRITE (LP,620) FMAPID,NUMERR
      CALL SULINE (LP,2)
      GO TO 440
C
C  CHECK IF WORK ARRAY BIG ENOUGH TO WRITE TO PROCESSED DATA BASE
400   NUMX=0
      CALL SUPRDW ('MAP ',LWKBUF,IDT,NPDT,NUMX,1,LENGTH,NUMERR,IERR)
      IF (IERR.EQ.0) GO TO 410
         WRITE (LP,540)
         CALL SULINE (LP,2)
         GO TO 370
C
C  CHECK IF RUN CHECK OPTION SPECIFIED
410   IF (IRUNCK.EQ.1) GO TO 440
C
C  CHECK IF TIME SERIES ALREADY EXISTS
      IF (ITSWRT.NE.1) GO TO 420
C
C  CREATE TIME SERIES
      CALL SUDOPN (1,'PRD ',IERR)
      IF (IERR.NE.0) GO TO 390
      CALL WPRDFH (FMAPID,'MAP ',IDT,'MM  ',NVALX,FLTLN,DESC,
     *   NUMX,XBUF,LWKBUF,IWKBUF,IREC,IERR)
      CALL SUDWRT (1,'PRD ',IERR)
      IF (IERR.NE.0) THEN
         CALL SWPRST ('WPRDFH  ',FMAPID,'FMAP',IDT,'MM  ',BLNK8,LWKBUF,
     *      NVALX,IERR)
         IF (IERR.NE.8) THEN
            NUMERR=NUMERR+1
            GO TO 390
            ENDIF
         ENDIF
      GO TO 430
C
420   IF (ITSWRT.NE.2) GO TO 440
C
C  CHANGE TIME SERIES
      CALL SUDOPN (1,'PRD ',IERR)
      IF (IERR.NE.0) GO TO 390
      CALL WPRDCF (FMAPID,'MAP ','MM  ',FLTLN,DESC,NUMX,XBUF,
     *   LWKBUF,IWKBUF,IREC,IERR)
      CALL SUDWRT (1,'PRD ',IERR)
      IF (IERR.NE.0) THEN
         CALL SWPRST ('WPRDCF  ',FMAPID,'MAP ',IDT,'MM  ',BLNK8,LWKBUF,
     *      NVALX,IERR)
         IF (IERR.NE.8) THEN
            NUMERR=NUMERR+1
            GO TO 390
            ENDIF
         ENDIF
C
430   IF (TDISP.EQ.'NEW') THEN
         WRITE (LP,700) FMAPID
         CALL SULINE (LP,2)
         ENDIF
      IF (TDISP.EQ.'OLD') THEN
         WRITE (LP,710) FMAPID
         CALL SULINE (LP,2)
         ENDIF
C
C  UPDATE FUTURE MAP COUNTER
      IF (TDISP.EQ.'NEW') NAFMAP=NAFMAP+1
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,720) TDISP,NAFMAP
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (PRPARM.EQ.'NO') GO TO 440
C
C  PRINT FMAP AREA PARAMETERS
      CALL SPFMAP (FMAPID,1,IERR)
C
C  CHECK IF END OF INPUT ENCOUNTERED
440   IF (NFLD.EQ.-1) GO TO 450
C
C  CHECK IF ANY OTHER FMAP AREAS TO BE PROCESSED
      IF (CHAR(1).EQ.XFMAP) THEN
         CALL SUPCRD
         GO TO 10
         ENDIF
C
450   IF (IRUNCK.EQ.0) THEN
C     UPDATE GENERAL COMPUTATIONAL ORDER PARAMETERS
         INCLUDE 'scommon/callsuwtor'
         ENDIF
C
      WRITE (LP,730) NFMAP,XFMAP
      CALL SULINE (LP,2)
C
C  CHECK IF ERRORS OCCURRED
      IF (NUMERR.GT.0) ISTAT=1
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,740) ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
470   FORMAT (' *** ENTER SFFMAP')
480   FORMAT ('0*** ERROR - ',A,' AREA CANNOT BE DEFINED BECAUSE ',
     *   A,' PARAMETERS NOT SUCCESSFULLY READ.')
490   FORMAT ('0*** ERROR - PROCESSING FIELD ',I2,'.')
500   FORMAT ('0*** ERROR - INVALID CHARACTER IN FIELD ',I3,'.')
505   FORMAT ('0*** WARNING - ',A,' ',
     *   'FOUND IN PARENTHESES IN FIELD ',I2,' (',A,')',A)
510   FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING PROCESSED DATA ',
     *   'BASE.')
520   FORMAT ('0*** ERROR - XBUF DIMENSION (',I4,') IS TOO SMALL.')
530   FORMAT ('0*** ERROR - DISPOSITION OF NEW WAS SPECIFIED BUT FMAP ',
     *   'AREA ',2A4,' ALREADY EXISTS.')
540   FORMAT ('0*** NOTE - NO FMAP TIME SERIES HEADER CAN BE CREATED ',
     *   'OR CHANGED DUE TO THE ABOVE ERROR.')
550   FORMAT ('0*** WARNING - FUTURE MAP TIME SERIES HEADER FOR AREA ',
     *   2A4,' DOES NOT EXIST. DISP ASSUMED TO BE NEW.')
560   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'DESCRIPTION (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
570   FORMAT ('0*** ERROR - BLANK DESCRIPTION NOT ALLOWED.')
580   FORMAT ('0*** WARNING - MISSING PARENTHESIS IN INPUT FIELD ',I2,
     *        '.')
590   FORMAT ('0*** ERROR - REAL NUMBER EXPECTED IN FIELD ',I2,'.')
600   FORMAT (' NUMFLD=',I3,3X,'MINFLD=',I3)
610   FORMAT ('0*** ERROR - NOT ENOUGH INPUT FIELDS PROCESSED.')
620   FORMAT ('0*** NOTE - NO FMAP HEADER CREATED FOR AREA ',2A4,
     *   ' BECAUSE ',I3,' ERRORS OCCURRED.')
630   FORMAT ('0*** ERROR - NULL FIELD NOT ALLOWED IN FIELD ',I3,'.')
640   FORMAT ('0*** ERROR - EXISTING TIME SERIES HAS INVALID TIME ',
     *   'INTERVAL (',I2,').')
650   FORMAT ('0*** ERROR - THE LONGITUDE (',F10.2,') DOES NOT FALL ',
     *   'WITHIN THE USER DEFINED LIMITS OF ',F8.2,' AND ',F8.2,'.')
660   FORMAT ('0*** ERROR - THE LATITUDE (',F10.2,') DOES NOT FALL ',
     *   'WITHIN THE USER DEFINED LIMITS OF ',F8.2,' AND ',F8.2,'.')
670   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
680   FORMAT ('0*** ERROR - BLANK IDENTIFIER IS NOT ALLOWED.')
690   FORMAT ('0*** ERROR - THE FMAP ID (',2A4,') CONTAINS A SET OF ',
     *   'RESERVED CHARACTERS.')
700   FORMAT ('0*** NOTE - FMAP TIME SERIES FOR AREA ',2A4,
     *   ' SUCCESSFULLY WRITTEN.')
710   FORMAT ('0*** NOTE - FMAP TIME SERIES FOR AREA ',2A4,
     *   ' SUCCESSFULLY UPDATED.')
720   FORMAT (' TDISP=',A,3X,'NAFMAP=',I4)
730   FORMAT ('0*** NOTE - ',I4,1X,A4,' AREAS PROCESSED.')
740   FORMAT (' *** EXIT SFFMAP : STATUS CODE=',I2)
C
      END
