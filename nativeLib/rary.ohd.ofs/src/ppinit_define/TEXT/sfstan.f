C MODULE SFSTAN
C-----------------------------------------------------------------------
C
C  ROUTINE TO DEFINE STATION GENERAL PARAMETERS.
C
      SUBROUTINE SFSTAN (LARRAY,ARRAY,DISP,TDISP,IRUNCK,
     *   PRPARM,PRNOTE,UNITS,SUNITS,NFLD,MGPSN,
     *   STAID,NBRSTA,DESCRP,STATE,STALOCO,STALOC,STACOR,ICSTANO,
     *   MSRCCDO,SRCCDO,NSRCCDO,MSRCIDO,SRCIDO,NSRCIDO,
     *   NSRCCD,SRCCD,SRCID,
     *   GOESN,NGOESN,CDASN,NCDASN,
     *   IDESCN,ISTATN,ILTLNN,IELEVN,NPSTAN,ISSTAN,
     *   ITPPVRO,ITTAVRO,
     *   NUGPAO,NUGPA,
     *   NUMSTA,NPRSTA,LSWRK2,ISWRK2,IUIDF1,NUIDF1,NUIDFX,
     *   NSTERR,NSTWRN,IWRITE,LPSTAN,ISTAT)
C
      CHARACTER*4 DISP,TDISP,PRPARM,PRNOTE,UNITS,SUNITS,STATE
      CHARACTER*4 RDISP,WDISP,TYPE,TSTATE,TSRCCD
      PARAMETER (MOPTN=8)
      CHARACTER*8 OPTN(MOPTN)
     *   /'NUMBER  ','SOURCE  ','NOGOESTR','NOCDASTR',
     *    'STATUS  ','GPA     ','        ','        '/
      CHARACTER*20 CHAR/' '/,CHK/' '/
      INTEGER XGENL/4HGENL/
C
      DIMENSION ARRAY(LARRAY)
      DIMENSION ISWRK2(LSWRK2)
C
      INCLUDE 'scommon/dimstan'
      CHARACTER*4 SRCCDO(MSRCCDO),SRCIDO(MSRCIDO,MSRCCDO)
      DIMENSION TELLMTS(2)
C
      INCLUDE 'uiox'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/sugnlx'
      INCLUDE 'scommon/sgboxx'
      INCLUDE 'pdbcommon/pdhshc'
      INCLUDE 'pdbcommon/pdhshi'
      INCLUDE 'pppcommon/ppxctl'
      INCLUDE 'pppcommon/ppdtdr'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_define/RCS/sfstan.f,v $
     . $',                                                             '
     .$Id: sfstan.f,v 1.7 2005/04/01 22:36:30 edwin Exp $
     . $' /
C    ===================================================================
C
C
C  SET TRACE LEVEL
      LTRACE=ISTRC('STAN')
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,*) 'ENTER SFSTAN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('STAN')
C
      ISTAT=0
C      
      LCHAR=LEN(CHAR)/4
      LCHK=LEN(CHK)/4
C
C  SET VALUE FOR UNDEFINED VARIABLES
      UNSD=-999.
      IUNSD=-999
      UNDEF=-997.
      IUNDEF=-997
C
      ILPFND=0
      IRPFND=0
      ISTRT=-1
      NUMFLD=0
      MINFLD=7
      MAXFLD=10
      MAXREQ=7
      NPCFLD=NFLD
C
      INWIND=0
      NOPFLD=0
      NXTFLD=0
      IDESCN=0
      ISTATN=0
      ILTLNN=0
      IELEVN=0
C      
      STALOCO(1)=UNDEF
      STALOCO(2)=UNDEF
      STALOC(1)=UNDEF
      STALOC(2)=UNDEF
      STACOR(1)=UNDEF
      STACOR(2)=UNDEF
      STAELVO=UNDEF
      STAELV=UNDEF
      NBRSTA=0
      ICSTAN=1
      ICSTANO=-1
      ISRCE=0
      NSRCCD=0
      NSRCID=0
      NGOESN=0
      NCDASN=0
      DO 10 I=1,MSRCCD
         SRCCD(I)='????'
10       CONTINUE
      DO 20 J=1,MSRCCD
         DO 25 I=1,MSRCID
            SRCID(I,J)='????'
25          CONTINUE
20       CONTINUE
      NUMSRC=0
      NUMADD=0
      STATE=' '
      ISSTAN=-1
      NUGPA=IUNSD
      NUGPAO=0
C
      IOPFL1=0
      IOPFL2=0
      IOPFL3=0
      IOPFL4=0
      IOPFL5=0
      IOPFL6=0
C
C  CHECK NUMBER OF LINES LEFT ON PAGE
      IF (ISLEFT(5).GT.0) CALL SUPAGE
C
      WRITE (LP,1230)
      CALL SULINE (LP,2)
C
C  PRINT CARD
      CALL SUPCRD
C
C  PRINT HEADER LINE
      WRITE (LP,1240)
      CALL SULINE (LP,1)
      WRITE (LP,1250)
      CALL SULINE (LP,2)
C
      NUMERR=0
      NUMWRN=0
      TDISP=DISP
      SUNITS=UNITS
      IRUGNL=0
C
C  PRINT OPTIONS
      WRITE (LP,1280) DISP,PRNOTE,PRPARM,UNITS
      CALL SULINE (LP,2)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF PREPROCESSOR PARAMETRIC DATA BASE ALLOCATED
C
      IDPPP=1
      CALL SUDALC (0,0,0,0,IDPPP,0,0,0,0,0,NUMERR,IERR)
      IF (IERR.GT.0) THEN
         WRITE (LP,1290)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 80
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      IF (IUGFIL.EQ.0) THEN
C     READ USER GENERAL PARAMETERS AND STORE IN COMMON BLOCK
         CALL SUGTUG (LARRAY,ARRAY,IERR)
         IRUGNL=IERR
         IF (IRUGNL.NE.0) THEN
            DO 30 I=1,4
               IF (I.LE.2) THEN
                  ELLMTS(I)=UNDEF
                  ENDIF
               ULLMTS(I)=UNDEF
               MDRSUB(I)=IUNDEF
30             CONTINUE
            WRITE (LP,1270)
            CALL SUERRS (LP,2,NUMERR)
            GO TO 80
            ENDIF
         ENDIF
C
C  PRINT UGNL PARAMETERS
      IF (LDEBUG.GT.1) THEN      
         INCLUDE 'scommon/callspugnl'
         ENDIF
C
      IF (UNITS.EQ.'ENGL') THEN
         CALL UDUCNV ('M   ','FT  ',1,2,ELLMTS,TELLMTS,IERR)
         ELSE
            CALL UMEMOV (ELLMTS,TELLMTS,2)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK FIELDS FOR DEFINE STAN OPTIONS
C
80    IF (INWIND.EQ.0) GO TO 90
         INULL=1
         GO TO 110
90    INULL=0
      NULREP=0
C
100   CALL UFIELD (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,LCHAR,CHAR,
     *   LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR)
      IF (NFLD.EQ.-1) GO TO 1080
      IF (LDEBUG.GT.0) THEN
         CALL UPRFLD (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,LCHAR,
     *      CHAR,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR)
         ENDIF
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'CHAR=',CHAR
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (NOPFLD.GT.0) GO TO 110
C
C  CHECK FOR PAIRED PARENTHESES
      NPIFLD=0
      CALL SUPFND (ILPFND,IRPFND,NPIFLD,NPCFLD)
C
C  CHECK IF DISP IS NEW AND ALL FIELDS FOUND
110   IF (INWIND.EQ.0) GO TO 120
         IF (NUMFLD.EQ.MAXREQ) GO TO 1080
         GO TO 220
C
120   IF (NOPFLD.GT.0) GO TO 180
C
C  CHECK FOR NULL FIELD
      IF (IERR.NE.1) GO TO 140
         IF (LDEBUG.GT.0) THEN
            WRITE (IOSDBG,1360) NFLD
            CALL SULINE (IOSDBG,1)
            ENDIF
         IF (TDISP.EQ.'NEW') GO TO 130
            NUMFLD=NUMFLD+1
            IF (NFLD.EQ.1) CALL SUPCRD
            GO TO 80
130      INULL=1
         GO TO 230
C
C  CHECK FOR REPEATED NULL FIELD
140   IF (CHAR.EQ.',,'.OR.CHAR.EQ.'NULL') THEN
         IF (LDEBUG.GT.0) THEN
            WRITE (IOSDBG,*) 'NREP=',NREP
            CALL SULINE (LP,1)
            ENDIF
         IF (NREP.GT.0.AND.NREP+NUMFLD.LE.MAXFLD) GO TO 150
            WRITE (LP,1340) NREP,MAXFLD
            CALL SUERRS (LP,2,NUMERR)
            NREP=MAXFLD-NUMFLD
150      IF (TDISP.EQ.'OLD') GO TO 160
            NULREP=NREP-1
            INULL=1
            GO TO 220
160      IF (NFLD.EQ.1) CALL SUPCRD
         IF (NUMFLD.GT.1) GO TO 170
            WRITE (LP,1410)
            CALL SUERRS (LP,2,NUMERR)
            GO TO 80
170      NUMFLD=NUMFLD+NREP
         GO TO 80
         ENDIF
C
C  CHECK FOR DEBUG
180   CALL SUIDCK ('CMDS',CHAR,NFLD,0,ICMD,IERR)
      IF (ICMD.NE.1) GO TO 190
         CALL SBDBUG (NFLD,ISTRT,IERR)
         LDEBUG=ISBUG('STAN')
         GO TO 100
C
C  CHECK FOR COMMAND
190   IF (LATSGN.EQ.1) GO TO 1060
C
C  CHECK FOR PARENTHESIS IN FIELD
      IF (CHAR.EQ.'('.AND.LENGTH.EQ.1) GO TO 220
      IF (CHAR.EQ.')'.AND.LENGTH.EQ.1) GO TO 220
      IF (LLPAR.LE.1) CALL UFPACK (LCHK,CHK,ISTRT,1,LENGTH,IERR)
      IF (LLPAR.GT.1) CALL UFPACK (LCHK,CHK,ISTRT,1,LLPAR-1,IERR)
C
C  CHECK FOR END OF INPUT
      IF (CHK.EQ.'/') GO TO 1080
C
C  IF FIRST FIELD, CHECK FOR KEYWORD ALREADY DONE
      IF (NUMFLD.EQ.0) GO TO 220
C
C  IF PROCESSING NOGOESTR OR NOCDASTR CODES, DO NOT CHECK FOR KEYWORD
      IF (NOPFLD.EQ.3.OR.NOPFLD.EQ.4) GO TO 220
C
C  CHECK FOR KEYWORD
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IKEYWD,IERR)
      IF (IERR.EQ.2) THEN
         IF (NUMFLD+1.GT.3) THEN
            IF (NUMFLD+1.LT.MINFLD) THEN
               INWIND=1
               WRITE (LP,1390) CHK(1:LENSTR(CHK))
               CALL SUERRS (LP,2,NUMERR)
               GO TO 1060
               ENDIF             
            IF (ILPFND.GT.0.AND.IRPFND.EQ.0) THEN
               WRITE (LP,1370) NOPFLD,NPCFLD
               CALL SULINE (LP,2)
               ENDIF
            GO TO 1080
            ENDIF            
         ENDIF
C
C  PRINT CARD
220   IF (NFLD.EQ.1.AND.NUMFLD.GT.0.AND.INWIND.EQ.0) CALL SUPCRD
C
      IF (TDISP.EQ.'NEW'.AND.NUMFLD+1.LE.MINFLD) GO TO 290
      IF (TDISP.EQ.'OLD'.AND.NUMFLD.LT.2) GO TO 290
C
C  CHECK IF PROCESSING OPTIONAL FIELD AND FOUND ONLY PARENTHESES
230   IF (NOPFLD.GT.0.AND.LRPAR.EQ.LENGTH.AND.LENGTH.EQ.1) THEN
         GO TO 290
         ENDIF
      IF (NOPFLD.GT.0.AND.LLPAR.EQ.LENGTH.AND.LENGTH.EQ.1) THEN
         GO TO 290
         ENDIF
C
C  CHECK FOR OPTIONAL FIELD
      DO 240 IOPTN=1,MOPTN
         IF (CHK.EQ.OPTN(IOPTN)) GO TO 250
240      CONTINUE
      IF (NUMFLD+1.LE.MINFLD) GO TO 290
      IF (NOPFLD.GT.0) GO TO 290
         WRITE (LP,1300) NFLD,CHAR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 80
C
C  OPTIONAL FIELD FOUND
250   NUMFLD=NUMFLD+1
C
C  CHECK FOR PARIED PARENTHESES
      IF (ILPFND.GT.0.AND.IRPFND.EQ.0) GO TO 260
         GO TO 270
260   WRITE (LP,1370) NOPFLD,NPCFLD
      CALL SULINE (LP,2)
270   ILPFND=0
      IRPFND=0
C
C  CHECK IF WERE PROCESSING OPTIONAL FIELD
      IF (NOPFLD.NE.2) GO TO 280
      IF (NXTFLD.EQ.1) GO TO 280
         WRITE (LP,1450) NXTFLD,OPTN(NOPFLD)
         CALL SUERRS (LP,2,NUMERR)
C
C  PROCESS OPTIONAL FIELD
280   NOPFLD=IOPTN
      NXTFLD=0
      GO TO (670,790,790,790,800,920),NOPFLD
      WRITE (LP,1460) IOPTN
      CALL SUERRS (LP,2,NUMERR)
      GO TO 80
C
C  SET INDICATORS IF PARENTHESIS FOUND
290   IF (LLPAR.GT.0) ILPFND=1
      IF (LRPAR.GT.0) IRPFND=1
C
      NUMFLD=NUMFLD+1
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1260) NUMFLD,MINFLD,MAXFLD,NUMERR,NOPFLD
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK IF FIELD WITH MORE THAN ONE POSSIBLE PARAMETER
      IF (NOPFLD.GT.0) GO TO (670,790,790,790,800,920),NOPFLD
C
C  CHECK IF MAXIMUM FIELDS EXCEEDED
      IF (NUMFLD.GT.MAXFLD) THEN
         WRITE (LP,1310) NUMFLD,MAXFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1060
         ENDIF
C
      IF (TDISP.EQ.'OLD'.AND.INULL.EQ.1) GO TO 80
C
      GO TO (310,330,460,510,550,580,630),NUMFLD
C      
      WRITE (LP,1470) NUMFLD
      CALL SUERRS (LP,2,NUMERR)
      GO TO 80
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK PARAMETER TYPE
C
310   IF (CHK.NE.'STAN') THEN
         WRITE (LP,1320) 'STAN',NFLD,CHK(1:LENSTR(CHK))
         CALL SUERRS (LP,2,NUMERR)
         GO TO 80
         ENDIF
      TYPE=CHK
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1350) TYPE
         CALL SULINE (IOSDBG,1)
         ENDIF
      GO TO 80
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION IDENTIFIER
C
330   IF (INULL.EQ.0) GO TO 340
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
340   IF (ITYPE.NE.1) GO TO 350
         WRITE (LP,1420) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
350   MSTAID=LEN(STAID)
      IF (LENGTH.GT.MSTAID) THEN
         WRITE (LP,1510) LENGTH,MSTAID,MSTAID
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,MSTAID,STAID,1)
      IF (STAID.EQ.' ') THEN
         WRITE (LP,1480)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'STAID=',STAID
         CALL SULINE (IOSDBG,1)
         ENDIF
      CALL SUIDCK ('STA ',STAID,NFLD,0,IKEYWD,IERR)
      IF (IERR.EQ.0) GO TO 380
         IF (IERR.EQ.2) THEN
C jgg working on HSD bug r25-32 - allowing defn of station named NEW
            IF (STAID .EQ. 'NEW') THEN
	       IERR = 0
	       GO TO 380
	       ENDIF
C jgg - end of potential fix	    	 
            WRITE (LP,1490) STAID
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (IERR.EQ.3) THEN
            WRITE (LP,1500) STAID
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         GO TO 1050
C
380   NUMSTA=NUMSTA+1
C
C  STORE STATION NAME AND PAGE NUMBER
      CALL SUIDF1 (STAID,NUIDF1,NUIDFX,NPRSTA,LSWRK2,ISWRK2,IERR)
      IUIDF1=0
      IF (IERR.GT.0) IUIDF1=1
C
C  CHECK IF STATION EXISTS
      IPRERR=0
      IPTR=0
      RDISP='OLD'
      INCLUDE 'scommon/callsrstan'
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1550) STAID,IERR
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (IERR.EQ.0) THEN   
C     STORE OLD PARAMETER VALUES
         ICSTANO=ICSTAN
         CALL UMEMOV (DESCRP,TDESCRP,5)
         CALL UMEMOV (STALOC,STALOCO,2)              
         NSRCCDO=NSRCCD
         NSRCIDO=NSRCID              
         DO 392 I=1,NSRCCD
            SRCCDO(I)=SRCCD(I)
392         CONTINUE
         DO 396 J=1,NSRCCD
            DO 394 I=1,NSRCID
               SRCIDO(I,J)=SRCID(I,J)
394            CONTINUE
396         CONTINUE
         STAELVO=STAELV
         NUGPAO=NUGPA
         ITPPVRO=ITPPVR
         ITTAVRO=ITTAVR
         IF (LDEBUG.GT.0) THEN
            IPRNT=1
            INCLUDE 'scommon/callspstan'
            ENDIF
         NGOESN=0
         NCDASN=0
         ENDIF
C
C  STATION EXISTS AND DISP IS NEW
      IF (IERR.EQ.0.AND.TDISP.EQ.'NEW') THEN
         TDISP='OLD'
         IF (ICSTAN.EQ.1) THEN
            TDISP='NEW'
            WRITE (LP,1560) STAID,TDISP
            CALL SULINE (LP,2)
            NBRSTA=0
            NGOESN=0
            NCDASN=0
            GO TO 1050
            ENDIF
         WRITE (LP,1570) STAID
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
C
C  STATION DOES NOT EXIST AND DISP IS OLD
      IF (IERR.GT.0.AND.TDISP.EQ.'OLD') THEN
         TDISP='NEW'
         WRITE (LP,1580) STAID,TDISP
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
C
C  CHECK FOR VALID IDENTIFIER
      CALL SUIDCK ('ID  ',STAID,NFLD,0,IKEYWD,IERR)
      IF (IERR.NE.0) THEN
C jgg working on HSD bug r25-32 - allowing defn of station named NEW
         IF (STAID .EQ. 'NEW') THEN
	    IERR = 0
	 ELSE
C jgg - end of potential fix	    	       
            WRITE (LP,1590) STAID,NFLD
            CALL SUERRS (LP,2,NUMERR)
            GO TO 1050
            ENDIF
         ENDIF 
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1790) STAID
         CALL SULINE (IOSDBG,1)
         ENDIF
C         
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION DESCRIPTION
C
460   IF (INULL.EQ.2) THEN
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
      IF (ITYPE.EQ.2) GO TO 480
         WRITE (LP,1440) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
480   IF (LENGTH.LE.20) GO TO 490
         WRITE (LP,1520) LENGTH
         CALL SUWRNS (LP,2,NUMWRN)
490   CALL SUBSTR (CHAR,1,20,DESCRP,1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1800) DESCRP
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (TDISP.EQ.'NEW') GO TO 1050
C
C  CHECK IF DESCRIPTION CHANGED
      IF (DESCRP.NE.TDESCRP) IDESCN=1
C       
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATE DESIGNATOR
C
510   IF (INULL.EQ.1) THEN
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
C         
      IF (ITYPE.EQ.2) GO TO 530
         WRITE (LP,1430) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
C
530   IF (LENGTH.GT.2) THEN
         WRITE (LP,1530) LENGTH
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
C         
      CALL SUBSTR (CHAR,1,4,STATE,1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1810) STATE
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (TDISP.EQ.'NEW') GO TO 1050
C
C  CHECK IF STATE DESIGNATOR CHANGED
      IF (TSTATE.NE.STATE) ISTATN=1
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION LATITUDE - INPUT AS DECIMAL DEGREES OR DEGREES AND MINUTES
C
550   IF (TDISP.EQ.'NEW') STALOC(1)=UNDEF

      IF (INULL.EQ.1) THEN
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
C
      CALL SUCDEG (NFLD,ISTRT,LENGTH,ITYPE,REAL,CHAR,LCHAR,
     *   DEG,XMIN,DEGMIN,SUNITS,NUMFLD,NUMERR,IERR)
      IF (IERR.EQ.0) THEN
         IF (IRUGNL.EQ.0) THEN
            IF (DEGMIN.LT.ULLMTS(2).OR.DEGMIN.GT.ULLMTS(1)) THEN
               WRITE (LP,1600) 'LATITUDE',DEGMIN,ULLMTS(2),ULLMTS(1)
               CALL SUERRS (LP,2,NUMERR)
               GO TO 1050
               ENDIF
            ENDIF
         ENDIF
C         
      STALOC(1)=DEGMIN
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1820) STALOC(1)
         CALL SULINE (IOSDBG,1)
         ENDIF
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION LONGITUDE - INPUT AS DECIMAL DEGREES OR DEGREES AND MINUTES
C
580   IF (TDISP.EQ.'NEW') STALOC(2)=UNDEF
C
      IF (INULL.EQ.1) THEN
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
C         
      CALL SUCDEG (NFLD,ISTRT,LENGTH,ITYPE,REAL,CHAR,LCHAR,
     *   DEG,XMIN,DEGMIN,SUNITS,NUMFLD,NUMERR,IERR)
      IF (IERR.EQ.0) THEN
         IF (IRUGNL.EQ.0) THEN
            IF (DEGMIN.LT.ULLMTS(3).OR.DEGMIN.GT.ULLMTS(4)) THEN
               WRITE (LP,1600) 'LONGITUDE',DEGMIN,ULLMTS(3),ULLMTS(4)
               CALL SUERRS (LP,2,NUMERR)
               GO TO 1050
               ENDIF
            ENDIF
         ENDIF
C         
      STALOC(2)=DEGMIN
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1830) STALOC(2)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  COMPUTE NWSRFS/HRAP COORDINATES
      IF (STALOC(1).GT.0.0.AND.STALOC(2).GT.0.0) GO TO 620
         WRITE (LP,1630)
         CALL SUWRNS (LP,2,NUMWRN)
         GO TO 1050
620   CALL SBLLGD (STALOC(2),STALOC(1),1,STACOR(1),STACOR(2),1,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,1635)
         CALL SUERRS (LP,2,NUMERR)
         ELSE
            IF (LDEBUG.GT.0) THEN
               WRITE (IOSDBG,1860) STACOR
               CALL SULINE (IOSDBG,1)
               ENDIF
         ENDIF
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION ELEVATION
C
630   IF (INULL.EQ.1) THEN
         WRITE (LP,1400) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
C         
      IF (ITYPE.NE.2) GO TO 650
         WRITE (LP,1440) NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
C         
650   STAELV=REAL
      IF (IRUGNL.EQ.0) THEN
         IF (STAELV.GT.TELLMTS(1)+.1.OR.STAELV.LT.TELLMTS(2)-.1) THEN
            WRITE (LP,1620) STAELV,TELLMTS
            CALL SUERRS (LP,2,NUMERR)
            GO TO 1050
            ENDIF
         ENDIF
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1840) STAELV
         CALL SULINE (IOSDBG,1)
         ENDIF
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION NUMBER
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
670   NGOTO=NXTFLD+1
      GO TO (680,720),NGOTO
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
680   IF (IOPFL1.EQ.0) GO TO 690
         WRITE (LP,1660) OPTN(NOPFLD)
         CALL SUWRNS (LP,2,NUMWRN)
C
690   IOPFL1=1
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR.NE.')') GO TO 700
         NOPFLD=0
         NXTFLD=0
         WRITE (LP,1680) OPTN(NOPFLD),NFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
700   IF (LLPAR.EQ.0) CHK=CHAR
      IF (LLPAR.GT.0) CALL SUBSTR (CHAR,1,LLPAR-1,CHK,1)
      IF (CHK.NE.OPTN(NOPFLD)) THEN
         WRITE (LP,1690) CHK(1:LENSTR(CHK)),OPTN(NOPFLD),NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
      NOPFLD=1
      NXTFLD=1
      IF (LLPAR.EQ.0.OR.LLPAR.EQ.LENGTH) GO TO 1050
C
C  CHECK FOR SPECIAL CHARACTERS
720   IF (CHAR.EQ.'('.AND.LENGTH.EQ.1) GO TO 1050
      IF (CHAR.EQ.')'.AND.LENGTH.EQ.1) GO TO 780
      IF (ITYPE.NE.2) GO TO 740
         IF (LRPAR.NE.1) GO TO 730
         IF (NBRSTA.GT.0) GO TO 780
            WRITE (LP,1700) OPTN(NOPFLD),NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 1050
730      IF (LRPAR.EQ.0.OR.LRPAR.EQ.LENGTH) GO TO 740
            WRITE (LP,1440) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NXTFLD=1
            GO TO 1050
740   IF (LLPAR.EQ.0) IBEG=1
      IF (LLPAR.GT.0) IBEG=LLPAR+1
      IF (LASK.GT.0) IBEG=LASK+1
      IEND=LENGTH
      IF (LRPAR.EQ.0) GO TO 750
         IEND=LRPAR-1
         NOPFLD=0
         NXTFLD=0
750   CALL UFINFX (NUMBER,ISTRT,IBEG,IEND,IERR)
      IF (IERR.NE.0) THEN
         IBEG=LLPAR+1
         IEND=LRPAR-1
         IF (IBEG.EQ.IEND) THEN
            WRITE (LP,1750) IBEG,NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (IBEG.NE.IEND) THEN
            WRITE (LP,1760) IBEG,IEND,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         GO TO 780
         ENDIF
C
      IF (NUMBER.GE.1.AND.NUMBER.LE.9999) GO TO 760
         WRITE (LP,1640) NUMBER
         CALL SUERRS (LP,2,NUMERR)
         GO TO 780
C
C  CHECK IF STATION NUMBER CURRENTLY ASSIGNED
760   CALL SUDOPN (1,'PPD ',IERR)
      IF (IERR.GT.0) GO TO 780
      CALL RPDID (TSTAID,NUMBER,1,IPDID)
      IF (IPDID.EQ.0) THEN
         IF (STAID.NE.TSTAID) THEN
            WRITE (LP,1650) NUMBER,TSTAID
            CALL SUERRS (LP,2,NUMERR)
            GO TO 780
            ENDIF
         ENDIF
      NBRSTA=NUMBER
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1850) OPTN(NOPFLD),NBRSTA
         CALL SULINE (IOSDBG,1)
         ENDIF
C
780   IF (LRPAR.EQ.0) GO TO 1050
         NOPFLD=0
         NXTFLD=0
         GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION EXTERNAL DATA SOURCE INFORMATION
C
790   CALL SFSRCE (ISRCE,INULL,NFLD,NUMFLD,ITYPE,
     *   LCHAR,CHAR,LENGTH,LLPAR,LRPAR,
     *   STAID,TDISP,NOPFLD,NXTFLD,IOPFL2,IOPFL3,IOPFL4,
     *   SRCCD,NSRCCD,SRCID,NSRCID,
     *   TSRCCD,NUMSRC,NUMADD,
     *   GOESN,NGOESN,CDASN,NCDASN,
     *   NUMERR,NUMWRN,IWRITE,IERR)
C
      GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION STATUS
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
800   NGOTO=NXTFLD+1
      GO TO (810,850),NGOTO
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
810   IF (IOPFL5.EQ.0) GO TO 820
         WRITE (LP,1660) OPTN(NOPFLD)
         CALL SUWRNS (LP,2,NUMWRN)
C
820   IOPFL5=1
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR.NE.')') GO TO 830
         NOPFLD=0
         NXTFLD=0
         WRITE (LP,1680) OPTN(NOPFLD),NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
830   IF (LLPAR.EQ.0) CHK=CHAR
      IF (LLPAR.GT.0) CALL SUBSTR (CHAR,1,LLPAR-1,CHK,1)
      IF (CHK.NE.OPTN(NOPFLD)) THEN
         WRITE (LP,1690) CHK(1:LENSTR(CHK)),OPTN(NOPFLD),NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
      NOPFLD=5
      NXTFLD=1
      IF (LLPAR.EQ.0.OR.LLPAR.EQ.LENGTH) GO TO 1050
C
C  CHECK FOR SPECIAL CHARACTERS
850   IF (CHAR.EQ.'('.AND.LENGTH.EQ.1) GO TO 1050
      IF (CHAR.EQ.')'.AND.LENGTH.EQ.1) GO TO 910
      IF (ITYPE.NE.2) GO TO 870
         IF (LRPAR.NE.1) GO TO 860
         IF (ISSTAN.NE.-1) GO TO 910
            WRITE (LP,1700) OPTN(NOPFLD),NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 1050
860      IF (LRPAR.EQ.0.OR.LRPAR.EQ.LENGTH) GO TO 870
            WRITE (LP,1430) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NXTFLD=1
            GO TO 1050
870   IF (LLPAR.EQ.0) IBEG=1
      IF (LLPAR.GT.0) IBEG=LLPAR+1
      IF (LASK.GT.0) IBEG=LASK+1
      IEND=LENGTH
      IF (LRPAR.EQ.0) GO TO 880
         IEND=LRPAR-1
         NOPFLD=0
         NXTFLD=0
880   CALL UFPACK (LCHK,CHK,ISTRT,IBEG,IEND,IERR)
      IF (IERR.EQ.0) GO TO 890
         IBEG=LLPAR+1
         IEND=LRPAR-1
         IF (IBEG.EQ.IEND) THEN
            WRITE (LP,1770) IBEG,NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (IBEG.NE.IEND) THEN
            WRITE (LP,1780) IBEG,IEND,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         GO TO 910
C
890   ICMPL=0
      INCMPL=0
      IF (CHK.EQ.'COMPLETE') ICMPL=1
      IF (CHK.EQ.'INCOMPLETE') INCMPL=1
      IF (ICMPL.EQ.0.AND.INCMPL.EQ.0) THEN
         WRITE (LP,1710) 'COMPLETE','INCOMPLETE'
         CALL SUWRNS (LP,2,NUMWRN)
         GO TO 910
         ENDIF
C
      IF (ICMPL.EQ.1) ISSTAN=0
      IF (INCMPL.EQ.1) ISSTAN=1
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1850) OPTN(NOPFLD),ISSTAN
         CALL SULINE (IOSDBG,1)
         ENDIF
      WRITE (LP,1720) CHK(1:LENSTR(CHK))
      CALL SULINE (LP,2)
C
910   IF (LRPAR.EQ.0) GO TO 1050
         NOPFLD=0
         NXTFLD=0
         GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  GRID POINT ADDRESS
C
C  CHECK WHICH FIELD IS TO BE PROCESSED
920   NGOTO=NXTFLD+1
      GO TO (930,970),NGOTO
C
C  READ GRID BOX PARAMETER ARRAYS
930   IF (IBXFIL.EQ.0) CALL SUGTBX (LARRAY,ARRAY,IERR)
C
C  CHECK IF OPTIONAL FIELD PREVIOUSLY PROCESSED
      IF (IOPFL6.EQ.0) GO TO 940
         WRITE (LP,1660) OPTN(NOPFLD)
         CALL SUWRNS (LP,2,NUMWRN)
C
940   IOPFL6=1
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (CHAR.NE.')') GO TO 950
         NOPFLD=0
         NXTFLD=0
         WRITE (LP,1680) OPTN(NOPFLD),NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
950   IF (LLPAR.EQ.0) CHK=CHAR
      IF (LLPAR.GT.0) CALL SUBSTR (CHAR,1,LLPAR-1,CHK,1)
      IF (CHK.NE.OPTN(NOPFLD)) THEN
         WRITE (LP,1690) CHK(1:LENSTR(CHK)),OPTN(NOPFLD),NUMFLD,NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1050
         ENDIF
      NOPFLD=6
      NXTFLD=1
      IF (LLPAR.EQ.0.OR.LLPAR.EQ.LENGTH) GO TO 1050
C
C  CHECK FOR SPECIAL CHARACTERS
970   IF (CHAR.EQ.'('.AND.LENGTH.EQ.1) GO TO 1050
      IF (CHAR.EQ.')'.AND.LENGTH.EQ.1) GO TO 1040
      IF (ITYPE.NE.2) GO TO 990
         IF (LRPAR.NE.1) GO TO 980
         IF (NUGPA.NE.IUNSD) GO TO 1040
            WRITE (LP,1700) OPTN(NOPFLD),NFLD
            CALL SUERRS (LP,2,NUMERR)
            NOPFLD=0
            NXTFLD=0
            GO TO 1050
980      IF (LRPAR.EQ.0.OR.LRPAR.EQ.LENGTH) GO TO 990
            WRITE (LP,1430) NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            NXTFLD=1
            GO TO 1050
990   IF (LLPAR.EQ.0) IBEG=1
      IF (LLPAR.GT.0) IBEG=LLPAR+1
      IF (LASK.GT.0) IBEG=LASK+1
      IEND=LENGTH
      IF (LRPAR.EQ.0) GO TO 1000
         IEND=LRPAR-1
         NOPFLD=0
         NXTFLD=0
1000  CALL UFINFX (NUGPA,ISTRT,IBEG,IEND,IERR)
      IF (IERR.NE.0) THEN
         IBEG=LLPAR+1
         IEND=LRPAR-1
         IF (IBEG.EQ.IEND) THEN
            WRITE (LP,1750) IBEG,NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (IBEG.NE.IEND) THEN
            WRITE (LP,1760) IBEG,IEND,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         GO TO 1040
         ENDIF
C
C  CHECK LENGTH OF GRID POINT ADDRESS
      NCHAR=IEND-IBEG+1
      IF (NCHAR.EQ.3.OR.NCHAR.EQ.4) GO TO 1010
         WRITE (LP,1730)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1040
C
C  CHECK IF GRID BOX DEFINED
1010  IEND=IEND-2
      CALL UFINFX (NUGBOX,ISTRT,IBEG,IEND,IERR)
      IF (IERR.NE.0) THEN
         IBEG=LLPAR+1
         IEND=LRPAR-1
         IF (IBEG.EQ.IEND) THEN
            WRITE (LP,1750) IBEG,NUMFLD,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (IBEG.NE.IEND) THEN
            WRITE (LP,1760) IBEG,IEND,NFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         GO TO 1040
         ENDIF
      IF (IGBOX(NUGBOX).EQ.1) GO TO 1030
         WRITE (LP,1740) NUGBOX
         CALL SUERRS (LP,2,NUMERR)
         GO TO 1040
C
1030  IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,1850) OPTN(NOPFLD),NUGPA
         CALL SULINE (IOSDBG,1)
         ENDIF
C
1040  IF (LRPAR.EQ.0) GO TO 1050
         NOPFLD=0
         NXTFLD=0
         GO TO 1050
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
1050  NPCFLD=NFLD
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'NULREP=',NULREP
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK FOR REPEATED NULL FIELDS
      IF (NULREP.GT.0) NULREP=NULREP-1
      GO TO 80
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  MAXIMUM FIELDS PROCESSED BUT NO KEYWORD FOUND - SEARCH FOR
C  NEXT KEYWORD
1060  ISTRT=-1
1070  CALL UFIELD (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,LCHAR,CHAR,
     *   LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR)
      IF (LATSGN.EQ.1) GO TO 1080
      IF (LLPAR.GT.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LLPAR-1,IERR)
      IF (LLPAR.EQ.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LENGTH,IERR)
      IF (CHK.EQ.'/') GO TO 1080
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IKEYWD,IERR)
      IF (IERR.EQ.2) GO TO 1080
         WRITE (LP,1940) NFLD,CHAR
         CALL SUWRNS (LP,2,NUMWRN)
         GO TO 1070
C
C  CHECK NUMBER OF FIELDS PROCESSED
1080  IF (NUMFLD.EQ.3.AND.ISSTAN.NE.-1) GO TO 1210
      IF (TDISP.EQ.'OLD'.AND.NUMFLD.GE.2) GO TO 1090
      IF (TDISP.EQ.'NEW'.AND.NUMFLD.GE.7) GO TO 1090
         IF (TDISP.EQ.'NEW') THEN
            WRITE (LP,1960) MINFLD
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         IF (TDISP.EQ.'OLD') THEN
            WRITE (LP,1950)
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
C
1090  IF (UNITS.EQ.'METR') GO TO 1100
C
C  CONVERT PARAMETERS TO REQUIRED UNITS
      CALL UDUCNV ('FT  ','M   ',1,1,STAELV,STAELV,IERR)
      IF (IERR.EQ.0) GO TO 1100
         WRITE (LP,1880) IERR
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK FOR MAXIMUM ALLOWABLE STATIONS
1100  MXSTA=MXHSHC
      IF (MXHSHI.LT.MXSTA) MXSTA=MXHSHI
      DO 1110 I=1,NMPTYP
         IF (IPDTDR(1,I).NE.XGENL) GO TO 1110
            IF (IPDTDR(5,I)+1.LE.MXSTA) GO TO 1120
               WRITE (LP,1890) MXSTA
               CALL SUERRS (LP,2,NUMERR)
            GO TO 1120
1110     CONTINUE
C
C  CHECK IF IDENTIFIER SPECIFIED FOR EACH SOURCE CODE
1120  IF (NUMSRC.EQ.0) GO TO 1140
      DO 1130 I=1,NUMSRC
         IF (SRCID(1,I).NE.' '.AND.SRCID(1,I).NE.'????') GO TO 1130
            WRITE (LP,1900) SRCCD(I)
            CALL SUERRS (LP,2,NUMERR)
1130     CONTINUE
C
C  CHECK IF RUNCHECK OPTION SPECIFIED
1140  IF (IRUNCK.EQ.1) THEN
         WRITE (LP,1910) STAID
         CALL SULINE (LP,2)
         GO TO 1210
         ENDIF
C
C  CHECK IF ERRORS ENCOUNTERED
      IF (NUMERR.GT.0) THEN
         IF (IRUNCK.EQ.0) THEN
            WRITE (LP,1920) STAID,NUMERR
            CALL SULINE (LP,2)
            IRUNCK=1
            ELSE
               WRITE (LP,1930) STAID,NUMERR
               CALL SULINE (LP,2)
            ENDIF
         ISTAT=2
         GO TO 1210
         ENDIF
C
      IF (TDISP.EQ.'OLD'.AND.NUMFLD.EQ.2) GO TO 1200
C
C  CHECK IF STATUS IS INCOMPLETE
      IF (TDISP.EQ.'OLD'.AND.ICSTAN.EQ.1) GO TO 1170
      IF (TDISP.EQ.'OLD') GO TO 1170
      IF (ICSTAN.EQ.1) GO TO 1160
         NGPS=MGPSN
         DO 1150 I=1,NGPS
            IPARM(I)=IUNDEF
            GPS(I)='????'
1150        CONTINUE
1160     NSRCID=MSRCID
         IPPP24=0
         IPPPVR=0
         IPCHAR=0
         ITPPVR=0
         IPTM24=0
         ITTAVR=0
         IPTAVR=0
         IPTF24=0
         TF24FE=UNDEF
         IPEA24=0
C
         IF (LDEBUG.GT.0) THEN
            WRITE (IOSDBG,1870) MGPSN,NGPS,(GPS(I),I=1,NGPS)
            CALL SULINE (IOSDBG,1)
            ENDIF
C
1170  ICSTAN=1
C
C  WRITE PARAMETERS TO FILE
      NSRCCD=NUMSRC
      NSRCID=MSRCID
      IVSTAN=4
      WDISP=TDISP
      INCLUDE 'scommon/callswstan'
      IF (IERR.NE.0) THEN
         ISTAT=2
         GO TO 1210
         ENDIF
C
      IF (IWRITE.EQ.0.OR.LDEBUG.EQ.0) GO TO 1210
C
C  READ PARAMETERS
      IPTR=0
      IPRERR=1
      RDISP='OLD'
      INCLUDE 'scommon/callsrstan'
      IF (IERR.GT.0) GO TO 1210
C
C  PRINT PARAMETERS
      IPRNT=1
      UNITS=SUNITS
      INCLUDE 'scommon/callspstan'
      GO TO 1210
C
C  SET POINTER TO STAN PARAMETERS IF DISP IS OLD
1200  NPSTAN=IPTR
      ISTAT=1
C
1210  NSTERR=NSTERR+NUMERR
      NSTWRN=NSTWRN+NUMWRN
C
      IF (TDISP.EQ.'OLD') THEN
C     CHECK DIFFERENCE IN NEW AND OLD LOCATION VALUES
         DIFF1=STALOC(1)-STALOCO(1)
         DIFF2=STALOC(2)-STALOCO(2)
         IF (LDEBUG.GT.0) THEN
            WRITE (IOSDBG,*)
     *         ' STALOC(1)=',STALOC(1),
     *         ' STALOCO(1)=',STALOCO(1),
     *         ' DIFF1=',DIFF1,
     *         ' STALOC(2)=',STALOC(2),
     *         ' STALOCO(2)=',STALOCO(2),
     *         ' DIFF2=',DIFF2,
     *         ' '
            CALL SULINE (IOSDBG,1)
            ENDIF
C     SET INDICATOR IF STATION LOCATION CHANGED
         DIFFC=0.01
         IF (DIFF1.GT.DIFFC.OR.DIFF2.GT.DIFFC) THEN
            ILTLNN=1
            ENDIF
C        CHECK DIFFERENCE IN NEW AND OLD ELEVATION VALUES
            DIFF=STAELV-STAELVO
            IF (LDEBUG.GT.0) THEN
               WRITE (IOSDBG,*)
     *            ' STAELV=',STAELV,
     *            ' STAELVO=',STAELVO,
     *            ' DIFF=',DIFF,
     *            ' '
               CALL SULINE (IOSDBG,1)
               ENDIF
C     SET INDICATOR IF STATION ELEVATION CHANGED
         IF (DIFF.GT.0.01) THEN
            IELEVN=1
            ENDIF
         ENDIF
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,*) 'EXIT SFSTAN : ISTAT=',ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
1230  FORMAT ('0',132('#'))
1240  FORMAT (' ')
1250  FORMAT ('0*--> DEFINE STATION STAN PARAMETERS')
1260  FORMAT (' NUMFLD=',I2,3X,'MINFLD=',I2,3X,'MAXFLD=',I2,3X,
     *   'NUMERR=',I2,3X,'NOPFLD=',I2)
1270  FORMAT ('0*** ERROR - UGNL PARAMETERS NOT DEFINED. ',
     *   'PARAMETER VALUES CANNOT BE CHECKED TO SEE IF LIMITS ',
     *   'EXCEEDED.')
1280  FORMAT ('0DEFINE OPTIONS IN EFFECT :  ',
     *   'DISP=',A,3X,
     *   'PRNTNOTE=',A,3X,
     *   'PRNTPARM=',A,3X,
     *   'UNITS=',A)
1290  FORMAT ('0*** ERROR - PREPROCESSOR PARAMETRIC DATA BASE FILES ',
     *   'ARE NOT ALLOCATED. INPUT DATA WILL BE CHECKED FOR ERRORS.')
1300  FORMAT ('0*** ERROR - INVALID DEFINE STAN OPTION IN CARD FIELD ',
     *   I2,' : ',A)
1310  FORMAT ('0*** ERROR - FIELD ',I2,' EXCEEDS MAXIMUM ALLOWABLE ',
     *   'FIELDS (',I2,').')
1320  FORMAT ('0*** ERROR - IN SFSTAN - THE CHARACTERS ''',A,
     *   ''' WERE EXPECTED IN FIELD ',I2,' BUT ''',A,''' WERE FOUND.')
1340  FORMAT ('0*** ERROR - ',I3,' IS AN INVALID NUMBER OF NULL ',
     *   'FIELDS TO BE REPEATED. MAXIMUM FIELDS ALLOWED IS ',I2,'.')
1350  FORMAT (' PARAMETER TYPE IS ',A4)
1360  FORMAT (' BLANK STRING FOUND IN FIELD ',I2)
1370  FORMAT ('0*** NOTE - RIGHT PARENTHESES ASSUMED IN OPTIONAL ',
     *   'INPUT FIELD ',I2,' (CARD FIELD ' ,I2,').')
1390  FORMAT ('0*** ERROR - THE KEYWORD ''',A,''' WAS FOUND WHEN ',
     *   'ANOTHER STAN FIELD WAS EXPECTED.')
1400  FORMAT ('0*** ERROR - NO VALUE FOUND FOR REQUIRED INPUT FIELD ',
     *   I2,' (CARD FIELD ',I2,').')
1410  FORMAT ('0*** ERROR - NO STATION IDENTIFIER SPECIFIED.')
1420  FORMAT ('0*** ERROR - NON-REAL DATA EXPECTED IN INPUT ',
     *   'FIELD ',I2,' (CARD FIELD ',I2,').')
1430  FORMAT ('0*** ERROR - CHARACTER DATA EXPECTED IN INPUT ',
     *   'FIELD ',I2,' (CARD FIELD ',I2,').')
1440  FORMAT ('0*** ERROR - NON-CHARACTER DATA EXPECTED IN INPUT ',
     *   'FIELD ',I2,' (CARD FIELD ',I2,').')
1450  FORMAT ('0*** ERROR - FIELD ',I2,' NOT FOUND FOR ',A,' ',
     *   'OPTION.')
1460  FORMAT ('0*** ERROR - PROCESSING DEFINE STATION OPTION NUMBER ',
     *   I2,'.')
1470  FORMAT ('0*** ERROR - PROCESSING DEFINE STATION FIELD NUMBER ',
     *   I2,'.')
1480  FORMAT ('0*** ERROR - BLANK IDENTIFIER IS NOT ALLOWED.')
1490  FORMAT ('0*** ERROR - STATION IDENTIFIER (',A,') IS A ',
     *   'RESERVED WORD OR CONTAINS RESERVED CHARACTERS.')
1500  FORMAT ('0*** ERROR - STATION IDENTIFIER (',A,') IS ',
     *   'SHEF STRANGER STATION FORMAT.')
1510  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN STATION ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,' ',
     *   'CHARACTERS WILL BE USED.')
1520  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN STATION ',
     *   'DESCRIPTION (',I2,') EXCEEDS 20. THE FIRST 20 ',
     *   'CHARACTERS WILL BE USED.')
1530  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN STATE ',
     *   'DESIGNATOR (',I2,') EXCEEDS 2. THE FIRST 2 ',
     *   'CHARACTERS WILL BE USED.')
1550  FORMAT (' TSTAID=',A,3X,'SRSTAN STATUS CODE=',I3)
1560  FORMAT ('0*** NOTE - STAN PARAMETERS FOR STATION ',A,
     *   ' EXIST BUT STATION IS NOT COMPLETE. DISP ASSUMED TO BE ',A4,
     *   '.')
1570  FORMAT ('0*** ERROR - DISPOSITION OF NEW WAS SPECIFIED ',
     *   'FOR STATION ',A,' BUT STATION ALREADY EXISTS.')
1580  FORMAT ('0*** WARNING - STAN PARAMETERS FOR STATION ',A,
     *   ' DO NOT EXIST. DISP ASSUMED TO BE ',A,'.')
1590  FORMAT ('0*** ERROR - STATION IDENTIFIER ',A,' IN CARD FIELD ',
     *   I2,' IS A RESERVED WORD OR CONTAINS SPECIAL CHARACTERS.')
1600  FORMAT ('0*** ERROR - STATION ',A,' (',F7.2,') DOES NOT ',
     *   'FALL WITHIN USER DEFINED LIMITS (',F6.2,' TO ',F6.2,').')
1620  FORMAT ('0*** ERROR - STATION ELEVATION (',F9.2,') DOES NOT ',
     *   'FALL WITHIN USER DEFINED LIMITS (',F8.2,' TO ',F8.2,').')
1630  FORMAT ('0*** WARNING - STATION COORDINATES CANNOT BE COMPUTED ',
     *  'BECAUSE STATION LATITUTE AND LONGITUDE NOT DEFINED.')
1635  FORMAT ('0*** ERROR - COMPUTING STATION COORDINATES ',
     *  'FROM LATITUTE AND LONGITUDE NOT DEFINED.')
1640  FORMAT ('0*** ERROR - STATION NUMBER (',I5,') IS LESS THAN ',
     *   '1 OR GREATER THAN 9999.')
1650  FORMAT ('0*** ERROR - STATION NUMBER (',I5,') IS ALREADY ',
     *   'ASSIGNED TO STATION ',A,'.')
1660  FORMAT ('0*** WARNING - STATION ',A,' HAS ALREADY BEEN ',
     *   'SPECIFIED.')
1680  FORMAT ('0*** ERROR - NO STATION ',A,' ',
     *   'FOUND IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1690  FORMAT ('0*** ERROR - PROCESSING STATION ''',A,''' OPTION (',
     *   A,') IN INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1700  FORMAT ('0*** ERROR - NO STATION ',A,' FOUND IN FIELD ',I2,'.')
1710  FORMAT ('0*** WARNING - STATION STATUS MUST BE ''',A,''' OR ''',
     *   A,'''.')
1720  FORMAT ('0*** NOTE - STATION STATUS WILL BE SET TO ''',A,'''.')
1730  FORMAT ('0*** ERROR - GRID POINT ADDRESS CAN ONLY BE 3 OR 4 ',
     *   'CHARACTERS.')
1740  FORMAT ('0*** ERROR - GRID BOX NUMBER ',I2,' IS NOT DEFINED.')
1750  FORMAT ('0*** ERROR - INTEGER VALUE EXPECTED IN COLUMN ',
     *   I2,' OF INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1760  FORMAT ('0*** ERROR - INTEGER VALUE EXPECTED IN COLUMNS ',
     *   I2,'-',I2,' OF FIELD ',I2,'.')
1770  FORMAT ('0*** ERROR - CHARACTER VALUE EXPECTED IN COLUMN ',
     *   I2,' OF INPUT FIELD ',I2,' (CARD FIELD ',I2,').')
1780  FORMAT ('0*** ERROR - CHARACTER VALUE EXPECTED IN COLUMNS ',
     *   I2,'-',I2,' OF FIELD ',I2,'.')
1790  FORMAT (' STATION IDENTIFIER SET TO : ',A)
1800  FORMAT (' STATION DESCRIPTION SET TO : ',A)
1810  FORMAT (' STATE DESCRIPTOR SET TO : ',A2)
1820  FORMAT (' STATION LATITUDE SET TO : ',F9.2)
1830  FORMAT (' STATION LONGITUDE SET TO : ',F9.2)
1840  FORMAT (' STATION ELEVATION SET TO : ',F9.2)
1850  FORMAT (' STATION ',A,' SET TO : ',I5)
1860  FORMAT (' NWSRFS/HRAP COORDINATES = (',F7.2,',',F7.2,')')
1870  FORMAT (' MGPSN=',I2,3X,'NGPS=',I2,3X,'GPS(1...NGPS)=',5(A4,1X))
1880  FORMAT ('0*** ERROR - CONVERTING PARAMETERS. UDUCNV STATUS ',
     *   'CODE=',I3)
1890  FORMAT ('0*** ERROR - MAXIMUM NUMBER OF STATIONS THAT CAN BE ',
     *   'DEFINED (',I4,') EXCEEDED.')
1900  FORMAT ('0*** ERROR - IDENTIFIER NOT SPECIFIED FOR SOURCE CODE ',
     *   A4,'.')
1910  FORMAT ('0*** NOTE - STAN PARAMETERS FOR STATION ',A,
     *   ' NOT WRITTEN BECAUSE RUNCHECK OPTION IS SET.')
1920  FORMAT ('0*** NOTE - STAN PARAMETERS FOR STATION ',A,
     *   ' NOT WRITTEN BECAUSE ',I2,' ERRORS ENCOUNTERED. ',
     *   'RUNCHECK OPTION SET FOR THIS STATION.')
1930  FORMAT ('0*** NOTE - STAN PARAMETERS FOR STATION ',A,
     *   ' NOT WRITTEN BECAUSE ',I2,' ERRORS ENCOUNTERED.')
1940  FORMAT ('0*** WARNING - CONTENTS OF FIELD ',I2,' IS NOT A ',
     *   'KEYWORD : ',A)
1950  FORMAT ('0*** ERROR - NOT ENOUGH STAN PARAMETER VALUES FOUND. ',
     *   'AT LEAST 2 ARE REQUIRED FOR AN EXISTING STATION.')
1960  FORMAT ('0*** ERROR - NOT ENOUGH STAN PARAMETER VALUES FOUND. ',
     *   'AT LEAST ',I2,' ARE REQUIRED FOR A NEW STATION.')
C
      END
