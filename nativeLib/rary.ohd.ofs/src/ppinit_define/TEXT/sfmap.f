C MODULE SFMAP
C-----------------------------------------------------------------------
C
C  ROUTINE TO DEFINE MAP AREA PARAMETERS.
C
      SUBROUTINE SFMAP (LARRAY,ARRAY,DISP,PRPARM,PRNOTE,PLOT,NFLD,
     *   IRUNCK,ISTAT)
C
      CHARACTER*4 TUNITS
      CHARACTER*8 TYPERR,STRING
C
      REAL XMAP/4HMAP /,XOLD/4HOLD /,XNEW/4HNEW /,BLNK/4H    /
      REAL PRE/4HPRE /,DP/4HDP  /,GRID/4HGRID/,THIE/4HTHIE/
      REAL D2/4HD2  /,XNMDR/4HNMDR/,WNTR/4HWNTR/,SUMR/4HSUMR/
      REAL XMDR/4HMDR /,YES/4HYES /
      REAL ENGL/4HENGL/,CMETR/4HMETR/,DNO/4HNO  /
      REAL XPPVR/4HPPVR/,XPP24/4HPP24/
C
      DIMENSION ARRAY(LARRAY)
      PARAMETER (LCHAR=10,LUCHAR=10,LCHK=5)
      DIMENSION CHAR(LCHAR),UCHAR(LUCHAR),CHK(LCHK)
      DIMENSION PID(2),CENTRD(2),CENTRDO(2),ITECHS(5)
      CHARACTER*8 FPID,FPIDO,TID,PXID
      CHARACTER*20 PDESC
      DIMENSION RLAT(4),RLON(4),RX(4),RY(4),FLTLN(2)
      DIMENSION PIDX(2)
      CHARACTER*8 BASNID,BASNIDO
      CHARACTER*20 BDESC
      DIMENSION CORMDR(8)
      DIMENSION STAID(2),STACOR(2)
      DIMENSION WINSTA(1738),SUMSTA(1738),WINTER(869),SUMMER(869)
      PARAMETER (LWKBUF=500)
      DIMENSION IWKBUF(LWKBUF)
      PARAMETER (LXBUF=1)
      DIMENSION XBUF(LXBUF)
C
      INCLUDE 'uio'
      INCLUDE 'ufielx'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'ufreex'
      INCLUDE 'scommon/suerrx'
      INCLUDE 'scommon/sworkx'
      INCLUDE 'scommon/suoptx'
      INCLUDE 'scommon/sugnlx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_define/RCS/sfmap.f,v $
     . $',                                                             '
     .$Id: sfmap.f,v 1.4 1999/07/07 11:15:43 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,1990)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('MAP')
C
C  INITIALIZE POINTERS
      IDIV=23
      IDIM=LSWORK/IDIV
C  TIMING WT ID'S:
      ID1=1
C  TIMING WTS:
      ID2=IDIM*2+1
C  TIMING STATION POINTERS:
      ID3=IDIM*3+1
C  TIMING STATION NWSRFS/HRAP COORDINATES:
      ID4=IDIM*4+1
C  STATION WT ID'S:
      ID5=IDIM*6+1
C  STATION WTS:
      ID6=IDIM*8+1
C  STATION POINTERS:
      ID7=IDIM*9+1
C  STATION NWSRFS/HRAP COORDINATES:
      ID8=IDIM*10+1
C  MDR BOXES:
      ID9=IDIM*12+1
C  X:
      ID10=IDIM*13+1
C  Y:
      ID11=IDIM*14+1
C  IY:
      ID12=IDIM*15+1
C  IXB:
      ID13=IDIM*16+1
C  IXE:
      ID14=IDIM*17+1
C  LATITUDES:
      ID15=IDIM*18+1
C  LONGITUDES:
      ID16=IDIM*19+1
C  JX:
      ID17=IDIM*20+1
C  JY:
      ID18=IDIM*21+1
C  JN:
      ID19=IDIM*22+1
C
      MBPTS=IDIM
      MSEGS=IDIM
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'IN SFMAP -',
     *      ' LSWORK=',LSWORK,
     *      ' IDIV=',IDIV,
     *      ' MBPTS=',MBPTS,
     *      ' MSEGS=',MSEGS,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C      
      NUMERR=0
      NUMWRN=0
C
      MINFLD=8
      NMAP=0
      NUMNEW=0
      NUMOLD=0
      IZERO=0
      NERR=0
      IBERR=0
      IPERR=0
      IMERR=0
      UNSD=-999.
      UNUSED(1)=UNSD
      UNUSED(2)=UNSD
      ISTRT=-1
      ITMFLD=0
      ISTFLD=0
      ISMFLD=0
      IFIN=1
      LFLD=0
      NVALX=0
      NTECH=5
      DO 10 I=1,NTECH
         ITECHS(I)=I
10       CONTINUE
      NMOVED=0
C
C  PRINT CARD
      CALL SUPCRD
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ USER GENERAL PARAMETERS
      CALL SUGTUG (LARRAY,ARRAY,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2010) 'MAP','USER GENERAL'
         CALL SUERRS (LP,2,NUMERR)
         ELSE
            IF (LDEBUG.GT.0) THEN
C           PRINT UGNL PARAMETERS
               UNITS=ENGL
               INCLUDE 'scommon/callspugnl'
               ENDIF
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ COMPUTATIONAL ORDER GENERAL PARAMETERS
C
      INCLUDE 'scommon/callsugtor'
      IF (IERR.GT.0) THEN
         WRITE (LP,2010) 'MAP','COMPUTATIONAL ORDER GENERAL'
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF SUFFICIENT CPU TIME AVAILABLE
20    ICKRGN=0
      ICKCPU=1
      MINCPU=5
      IPRERR=1
      IPUNIT=LP
      TYPERR='ERROR'
      INCLUDE 'clugtres'
      IF (IERR.NE.0) THEN
         CALL SUFATL
         CALL SUEND
         ENDIF
C
      NUMFLD=0
      IFLD=0
      MAPFLG=0
      IREWT=0
      IUBASN=0
      IREMDR=0
      CENTRDO(1)=0.
      CENTRDO(2)=0.
      ITMOLD=0
      ISTOLD=0
      IRERAD=0
      IBSNID=0
      ITMFLG=0
      ISTFLG=0
      ISMFLG=0
      JWT=1
      JID=1
      KWT=1
      KID=1
      TDISP=DISP
      BASNID=' '
      FPID=' '
      POWER=-997.
      ISUMR=0
      MDRFLG=0
      IBMDR=0
      IFIN=1
      IDT=6
      NSETS=1
      NSTWT=0
      MSTWT=0
      NPCPN=0
      MPCPN=0
      RADINF=0.
      IPMAP=0
      NTECH=5
      DO 40 I=1,8
         CORMDR(I)=-997.
40       CONTINUE
      NUMTST=1
      NUMSST=1
      NWNSTA=1
      NSMSTA=1
      ICHECK=0
      MWIN=1
      MSUM=1
      KWIN=0
      KSUM=0
C
50    IFLD=IFLD+1
      IF (IFLD.EQ.1.AND.NMAP.GT.0) GO TO 100
      INULL=1
      IF (IFIN.EQ.1) LFLD=LFLD+1
C
C  GET INPUT FIELD
60    CALL UFLDRD (NFLD,CHAR,LCHAR,LDEBUG,IERR)
C
C  CHECK FOR NULL FIELD
      IF (IERR.NE.1) INULL=0
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK FOR END OF FILE
      IF (IERR.NE.3) GO TO 70
         NFLD=-1
         GO TO 1660
C
C  CHECK FOR DEBUG
70    CALL SUIDCK ('CMDS',CHAR,NFLD,0,ICMD,IERR)
      IF (ICMD.NE.1) GO TO 80
         CALL SBDBUG (NFLD,ISTRT,IERR)
         LDEBUG=ISBUG('MAP ')
         GO TO 60
C
C  CHECK FOR COMMAND
80    IF (LATSGN.EQ.1) GO TO 1660
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (LLPAR.GT.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LLPAR-1,IERR)
      IF (LLPAR.EQ.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LENGTH,IERR)
C
      IF (NFLD.NE.1) GO TO 90
      IF (LATSGN.NE.0) GO TO 90
      IF (CHK(1).EQ.XMAP.AND.NUMFLD.EQ.0) GO TO 90
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 90
      CALL SUPCRD
C
90    IF (NUMFLD.EQ.0) GO TO 100
C
C  CHECK FOR APPROPRIATE FIELD
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 1660
      IF (ITMFLG.GT.0.AND.LFLD.EQ.5) GO TO 660
      IF (ISTFLG.GT.0.AND.LFLD.EQ.6) GO TO 950
      IF (ISUMR.GT.0) GO TO 1170
      IF (ISMFLG.GT.0.AND.LFLD.EQ.7) GO TO 1240
      IF (MDRFLG.GT.0.AND.LFLD.EQ.8) GO TO 1470
C
100   NUMFLD=NUMFLD+1
      GO TO (110,130,280,350,520,800,1340,1340,1610),LFLD
C
      WRITE (LP,2020) NFLD
      CALL SUERRS (LP,2,NUMERR)
      NUMFLD=NUMFLD-1
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  AREA TYPE INDICATOR FIELD
C
110   IF (ITYPE.NE.2) THEN
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
         ENDIF
C
      IF (CHK(1).NE.XMAP) THEN
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C  CHECK IF UNITS CODE SPECIFIED
      IF (LLPAR.GT.0) THEN
         IEND=LRPAR-1
         IF (LRPAR.EQ.0) IEND=LENGTH
         LSTRING=LEN(STRING)/4
         CALL UFPACK (LSTRING,STRING,ISTRT,LLPAR+1,IEND,IERR)
         IF (STRING.EQ.'ENGL'.OR.STRING.EQ.'METR') THEN
            WRITE (LP,2035) 'UNITS CODE',
     *         NFLD,STRING(1:LENSTR(STRING)),' WILL BE IGNORED'
            CALL SUWRNS (LP,2,NUMWRN)
            ELSE
               WRITE (LP,2035) 'UNRECOGNIZED CHARACTERS',
     *            NFLD,STRING(1:LENSTR(STRING)),'.'
               CALL SUWRNS (LP,2,NUMWRN)
            ENDIF
         ENDIF
C        
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  AREA IDENTIFIER FIELD
C
C  CHECK LENGTH OF IDENTIFIER
130   MAXCHR=8
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,2400) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      PID(1)=CHAR(1)
      PID(2)=CHAR(2)
      NMAP=NMAP+1
C
C  CHECK FOR BLANK IDENTIFIER
      IF (PID(1).NE.BLNK.OR.PID(2).NE.BLNK) GO TO 150
         WRITE (LP,2410)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 160
150   CALL SUIDCK ('ID  ',PID,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) THEN
         WRITE (LP,2440) 'MAP',PID
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
         ENDIF
C
C  READ MAP AREA PARAMETERS
160   IPTR=0
      CALL SRMAP (IVER,PID,IDT,ITMWT,POWER,IDIM,NSTWT,ISTWT,IDIM,
     *   NPCPN,NSETS,PDESC,BASNID,FPID,CENTRD,SWORK(ID1),SWORK(ID2),
     *   SWORK(ID4),SWORK(ID5),SWORK(ID6),SWORK(ID8),
     *   UNUSED,LARRAY,ARRAY,IPTR,IZERO,IPTRNX,ISMAP)
C
C  SAVE OLD VALUES
      MSTWT=NSTWT
      MPCPN=NPCPN
      BASNIDO=BASNID
      ITMOLD=ITMWT
      ISTOLD=ISTWT
      CENTRDO(1)=CENTRD(1)
      CENTRDO(2)=CENTRD(2)
      POWOLD=POWER
      FPIDO=FPID
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  READ MAPS PARAMETERS
      IPTR=0
      CALL SRMAPS (IVER,PID,CENTRD,RADINF,IPMAP,NTECH,IBSNID,IDIM,NSTWT,
     *   IDIM,NPCPN,IDIM,NBOX,ITECHS,SWORK(ID3),SWORK(ID7),SWORK(ID9),
     *   CORMDR,UNUSED,LARRAY,ARRAY,IPTR,IZERO,IPTRNX,ISMAPS)
      IPMAPS=IPTR
C
      INDPM=0
      INDERR=0
C
C  CHECK FOR SYSTEM ERROR ACCESSING FILE
      IF (ISMAP.EQ.1) THEN
         WRITE (LP,2070)
         CALL SUERRS (LP,2,NUMERR)
         INDERR=1
         ENDIF
      IF (ISMAPS.EQ.1) THEN
         WRITE (LP,2080)
         CALL SUERRS (LP,2,NUMERR)
         INDERR=1
         ENDIF
C
      IF (INDERR.EQ.1) GO TO 270
C
C  CHECK IF PARAMETER ARRAY TOO SMALL
      IF (ISMAP.NE.3.AND.ISMAPS.NE.3) GO TO 190
         WRITE (LP,2090) LARRAY
         CALL SUERRS (LP,2,NUMERR)
         GO TO 270
C
C  CHECK IF PARAMETERS EXIST AND DISP IS NEW
190   IF (ISMAP.EQ.0.AND.ISMAPS.EQ.0.AND.DISP.EQ.XNEW) THEN
         WRITE (LP,2100) PID
         CALL SUERRS (LP,2,NUMERR)
         GO TO 270
         ENDIF
C
C  CHECK IF MAP AND MAPS PARAMETERS NOT FOUND AND DISP IS OLD
      IF (ISMAP.EQ.2.AND.ISMAPS.EQ.2.AND.DISP.EQ.XOLD) THEN
         WRITE (LP,2110) PID
         CALL SUWRNS (LP,2,NUMERR)
         TDISP=XNEW
         GO TO 270
         ENDIF
C
C  CHECK IF MAP PARAMETERS FOUND BUT MAPS NOT FOUND AND DISP IS OLD
      IF (ISMAP.EQ.0.AND.ISMAPS.NE.0.AND.DISP.EQ.XOLD) THEN
         WRITE (LP,2120) PID
         CALL SUWRNS (LP,2,NUMERR)
         TDISP=XNEW
         GO TO 270
         ENDIF
C
C  CHECK IF MAP PARAMETERS NOT FOUND AND MAPS FOUND AND DISP IS OLD
      IF (ISMAP.NE.0.AND.ISMAPS.EQ.0.AND.DISP.EQ.XOLD) THEN
         WRITE (LP,2130) PID
         CALL SUWRNS (LP,2,NUMERR)
         TDISP=XNEW
         GO TO 270
         ENDIF
      IF (ISMAP.EQ.0.AND.ISMAPS.EQ.0) INDPM=1
C
C  CHECK TO SEE IF TIME SERIES HEADER EXISTS
270   CALL SFTSCK (PID,'MAP ',LXBUF,INDPM,IPMWRT,ITSWRT,IDT,
     *   TDISP,NUMERR,NUMWRN,IERR)
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  AREA DESCRIPTION FIELD
C
280   IF (INULL.EQ.0) GO TO 290
      IF (DISP.EQ.XNEW.OR.TDISP.EQ.XNEW) THEN
         WRITE (LP,2160)
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
      GO TO 50
C
C  CHECK LENGTH OF DESCRIPTION
290   MAXCHR=LEN(PDESC)
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,2150) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL UMEMOV (CHAR,PDESC,5)
C
C  CHECK FOR BLANK DESCRIPTION
      IF (PDESC.EQ.' ') THEN
         WRITE (LP,2160)
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  BASIN BOUNDARY OR CENTROID LATITUDE FIELD
C
350   IFIN=0
      IF (DISP.EQ.XNEW.OR.TDISP.EQ.XNEW) GO TO 370
      IF (BASNID.NE.' ') THEN
         IBSNID=1
         IF (INULL.EQ.0) GO TO 370
         GO TO 390
         ENDIF
C
      IBSNID=0
      IF (INULL.EQ.0) GO TO 370
         IFLD=IFLD+1
         IFIN=1
         GO TO 50
C
370   IF (LLPAR.GT.0.OR.LRPAR.GT.0) GO TO 450
C
C  BASIN BOUNDARY IDENTIFIER SPECIFIED
      IBSNID=1
C
C  CHECK LENGTH OF IDENTIFIER
      MAXCHR=8
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,2450) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,LEN(BASNID),BASNID,1)
C
C  CHECK FOR BLANK IDENTIFIER
      IF (BASNID.EQ.' ') THEN
         WRITE (LP,2260) IFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
C
390   IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  READ BASIN PARAMETERS
      IPTR=0
      IPRERR=0
      CALL SRBASN (ARRAY,LARRAY,IVBASN,BASNID,BDESC,SWORK(ID15),
     *   SWORK(ID16),IDIM,NBPTS,AREA,CAREA,ELEV,CENTRD(1),CENTRD(2),
     *   MAPFLG,MATFLG,PIDX,TID,PXID,IDIM,NSEGS,SWORK(ID12),SWORK(ID13),
     *   SWORK(ID14),LFACTR,IPTR,IPTRNX,IPRERR,IERR)
      IF (IERR.NE.0) THEN
         IF (IERR.EQ.1) THEN
            WRITE (LP,2470)
            CALL SUERRS (LP,2,NUMERR)
            IMERR=1
            GO TO 430
            ENDIF
         IF (IERR.EQ.2) THEN
            WRITE (LP,2460) BASNID
            CALL SUERRS (LP,2,NUMERR)
            IMERR=1
            GO TO 430
            ENDIF
         IF (IERR.EQ.3) THEN
            WRITE (LP,2090) LARRAY
            CALL SUERRS (LP,2,NUMERR)
            IMERR=1
            GO TO 430
            ENDIF
         ENDIF
      CENTRDO(1)=CENTRD(1)
      CENTRDO(2)=CENTRD(2)
C
C  CONVERT FROM LAT/LON TO GRID COORDINATES
      CALL SBLLGD (FLTLN(2),FLTLN(1),1,CENTRD(1),CENTRD(2),0,IERR)
C
      IF (LDEBUG.GT.0) THEN
          WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO,FLTLN
          CALL SULINE (IOSDBG,1)
          ENDIF
C
C  CHECK BASIN IDENTIFIER AGAINST MAP AREA IDENTIFIER
      IF ((PIDX(1).EQ.BLNK.AND.PIDX(2).EQ.BLNK).OR.
     *    (PIDX(1).EQ.PID(1).AND.PIDX(2).EQ.PID(2))) GO TO 430
         WRITE (LP,2340) BASNID,PIDX
         CALL SUERRS (LP,2,NUMERR)
C
430   IF (TDISP.EQ.XOLD) GO TO 440
         IFIN=1
         GO TO 50
C
C  CHECK IF NEW BASID BOUNDARY IDENTIFIER SPECIFIED
440   IF (BASNID.NE.BASNIDO) THEN
         IREWT=1
         IUBASN=1
         ENDIF
      GO TO 500
C
C  CENTROID LATITUDE SPECIFIED
450   IBSNID=0
      IB=LLPAR+1
      IE=LENGTH
      IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2180) IFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
      IF (IFLD.NE.4) GO TO 480
      IF (VALUE.GE.ULLMTS(2).AND.VALUE.LE.ULLMTS(1)) GO TO 470
         WRITE (LP,2320) VALUE,ULLMTS(2),ULLMTS(1)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
470   FLTLN(1)=VALUE
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CENTROID LONGITUDE FIELD
C
480   IF (VALUE.GE.ULLMTS(3).AND.VALUE.LE.ULLMTS(4)) GO TO 490
         WRITE (LP,2310) VALUE,ULLMTS(3),ULLMTS(4)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
C
490   FLTLN(2)=VALUE
      BASNID=' '
      CALL SBLLGD (FLTLN(2),FLTLN(1),1,CENTRD(1),CENTRD(2),1,IERR)
C
      IF (TDISP.EQ.XNEW) GO TO 510
C
C  CHECK IF CENTROID HAS MOVED
500   IF (CENTRD(1).LT.CENTRDO(1)-0.001.OR.
     *    CENTRD(1).GT.CENTRDO(1)+0.001)
     *   IREWT=1
      IF (CENTRD(2).LT.CENTRDO(2)-0.001.OR.
     *    CENTRD(2).GT.CENTRDO(2)+0.001)
     *   IREWT=1
C
510   IFIN=1
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  TIMING WEIGHTS FIELD
C
520   IFIN=0
      IF (INULL.NE.1) GO TO 530
      IF (DISP.EQ.XNEW.OR.TDISP.EQ.XNEW) GO TO 610
         IFIN=1
         GO TO 50
530   IF (LLPAR.EQ.0) GO TO 540
         CALL UFPACK (LUCHAR,UCHAR,ISTRT,1,LLPAR-1,IERR)
         GO TO 550
540   CALL UFPACK (LUCHAR,UCHAR,ISTRT,1,LENGTH,IERR)
550   IF (IERR.NE.0) THEN
         WRITE (LP,2350) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).EQ.PRE) GO TO 570
      IF (UCHAR(1).EQ.D2) GO TO 610
      IF (UCHAR(1).EQ.DP) GO TO 630
         WRITE (LP,2350) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
C
C  PREDETERMINED
570   IF (LLPAR.GT.0) GO TO 580
         WRITE (LP,2170)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
580   IB=LLPAR+1
      IE=LENGTH
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2360) UCHAR
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      ITMWT=1
      ITMFLG=1
      ITMFLD=1
      IF (JID.GT.IDIM*2) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      CALL SUBSTR (UCHAR,1,8,SWORK(ID1+JID-1),1)
      JID=JID+2
      GO TO 750
C
C  1/D**2 WEIGHTS
610   IF (LLPAR.EQ.0) GO TO 620
         WRITE (LP,2370)
         CALL SUERRS (LP,2,NUMERR)
620   POWER=2
      ITMWT=2
      IFIN=1
      GO TO 50
C
C  1/D**POWER
630   ITMWT=3
      POWER=DPOWER(1)
      IF (LLPAR.EQ.0) GO TO 650
         IB=LLPAR+1
         IE=LENGTH
         IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
      IF (IERR.GT.0) GO TO 640
         IF (VALUE.GE.0) GO TO 640
            WRITE (LP,2180) IFLD
            CALL SUERRS (LP,2,NUMERR)
            IFIN=1
            GO TO 50
640      POWER=VALUE
         IFIN=1
         GO TO 50
650   WRITE (LP,2380) POWER
      CALL SULINE (LP,2)
      IFIN=1
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PREDETERMINED TIMING WEIGHTS
C
660   IF (LLPAR.GT.0) THEN
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      ITMFLD=ITMFLD+1
      IF ((ITMFLD/2)*2.NE.ITMFLD) GO TO 720
         IF (ITYPE.EQ.2) GO TO 680
            VALUE=REAL
            GO TO 700
680   IF (LRPAR.EQ.0) THEN
         WRITE (LP,2590) NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
         ENDIF
      IB=1
      IE=LENGTH
      IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
700   IF (JWT.GT.IDIM) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID2+JWT-1)=VALUE
      JWT=JWT+1
      IF (LRPAR.GT.0) THEN
         ITMFLG=0
         IFIN=1
         ENDIF
      GO TO 50
C
720   IF (LLPAR.EQ.0.AND.LRPAR.EQ.0) GO TO 730
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
730   IF (JID.GT.IDIM*2) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID1+JID-1)=CHAR(1)
      SWORK(ID1+JID)=CHAR(2)
      JID=JID+2
C
C  MAKE PREDETERMINED STATION CHECKS
C
C  CHECK IF STATION EXISTS
750   STAID(1)=SWORK(ID1+JID-3)
      STAID(2)=SWORK(ID1+JID-2)
      CALL SFSCHK (LARRAY,ARRAY,STAID,XPPVR,STACOR,IPPP24,IPPPVR,
     *   IPEA24,IPTM24,NUMERR,IERR)
      IF (IERR.EQ.0) THEN
         IF (IPPPVR.EQ.0) THEN
            WRITE (LP,2600) XPPVR,IPPPVR,STAID
            CALL SUERRS (LP,2,NUMERR)
            WRITE (LP,2610)
            CALL SULINE (LP,1)
            ENDIF
         ENDIF
C
C  CHECK FOR DUPLICATE NAMES
      IF (NUMTST.GT.1) THEN
         NUM=NUMTST-1
         DO 770 I=1,NUM
            IF (STAID(1).EQ.SWORK(ID1+I*2-2).AND.
     *          STAID(2).EQ.SWORK(ID1+I*2-1)) THEN
               WRITE (LP,2620) STAID
               CALL SUERRS (LP,2,NUMERR)
               GO TO 790
               ENDIF
770         CONTINUE
         ENDIF
790   NUMTST=NUMTST+1
      SWORK(ID4+JID-3)=STACOR(1)
      SWORK(ID4+JID-2)=STACOR(2)
      CALL SFCONV (SWORK(ID3+NUMTST-2),IPPPVR,1)
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  STATION WEIGHTS FIELD
C
800   IFIN=0
      IF (INULL.NE.1) GO TO 820
      IF (DISP.NE.XNEW.AND.TDISP.NE.XNEW) THEN
         IFIN=1
         LFLD=LFLD+1
         GO TO 50
         ENDIF
      IF (IBSNID.EQ.0) GO TO 920
         GO TO 910
820   IF (LLPAR.EQ.0) GO TO 830
         CALL UFPACK (LUCHAR,UCHAR,ISTRT,1,LLPAR-1,IERR)
         GO TO 840
830   CALL UFPACK (LUCHAR,UCHAR,ISTRT,1,LENGTH,IERR)
840   IF (IERR.NE.0) THEN
         WRITE (LP,2350) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).EQ.PRE) GO TO 860
      IF (UCHAR(1).EQ.GRID) GO TO 900
      IF (UCHAR(1).EQ.THIE) GO TO 910
      IF (UCHAR(1).EQ.DP) GO TO 920
         WRITE (LP,2350) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         LFLD=LFLD+1
         IFIN=1
         GO TO 50
C
C  PREDETERMINED
860   IF (LLPAR.GT.0) GO TO 870
         WRITE (LP,2170)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
870   IB=LLPAR+1
      IE=LENGTH
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2360) UCHAR
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      ISTWT=1
      ISTFLG=1
      ISTFLD=1
      IF (KID.LE.IDIM*2) GO TO 890
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
890   CALL SUBSTR (UCHAR,1,8,SWORK(ID5+KID-1),1)
      CALL SUBSTR (UCHAR,1,8,WINSTA(MWIN),1)
      KID=KID+2
      MWIN=MWIN+2
      GO TO 1110
C
C  GRID POINT
900   ISTWT=2
      IFIN=1
      LFLD=LFLD+1
      IF (IBSNID.EQ.1) GO TO 50
         WRITE (LP,2630)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
C
C  THIESSEN
910   ISTWT=3
      IFIN=1
      LFLD=LFLD+1
      IF (IBSNID.EQ.1) GO TO 50
      WRITE (LP,2640)
      CALL SUERRS (LP,2,NUMERR)
      GO TO 50
C
C  1/D**POWER
920   LFLD=LFLD+1
      ISTWT=4
      POWER=DPOWER(1)
      IF (LLPAR.EQ.0) GO TO 940
         IB=LLPAR+1
         IE=LENGTH
         IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
      IF (IERR.GT.0) GO TO 930
         IF (VALUE.GE.0) GO TO 930
            WRITE (LP,2180) IFLD
            CALL SUERRS (LP,2,NUMERR)
            IFIN=1
            GO TO 50
930      POWER=VALUE
         IFIN=1
         GO TO 50
940   WRITE (LP,2390) POWER
      CALL SULINE (LP,2)
      IFIN=1
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PREDETERMINED STATION WEIGHT FIELDS
C
950   IF (LLPAR.EQ.0) GO TO 960
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
C
960   IF (LRPAR.EQ.1) GO TO 1050
      IF (LRPAR.EQ.0.OR.LENGTH.NE.1) GO TO 970
      LFLD=LFLD+1
      GO TO 1060
C
C  CHECK IF PROCESSING STATION IDENTIFIER OR STATION WEIGHT
970   ISTFLD=ISTFLD+1
      IF ((ISTFLD/2)*2.NE.ISTFLD) GO TO 1080
C
C  SET STATION WEIGHT
      IF (ITYPE.EQ.2) GO TO 980
         VALUE=REAL
         GO TO 1000
980   IF (LRPAR.EQ.0) THEN
         WRITE (LP,2590) NFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 50
         ENDIF
      IB=1
      IE=LENGTH
      IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
1000  IF (KWT.GT.IDIM) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID6+KWT-1)=VALUE
      WINTER(KWIN+1)=VALUE
      KWIN=KWIN+1
      KWT=KWT+1
      IF (LRPAR.EQ.0) GO TO 1070
      ISTFLG=0
      IF (LRPAR.EQ.LENGTH) THEN
         LFLD=LFLD+1
         GO TO 1060
         ENDIF
C
1050  IB=LRPAR+1
      IE=LENGTH
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2480) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).NE.WNTR) THEN
         WRITE (LP,2480) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      ISUMR=1
      NSETS=2
C
1060  IFIN=1
C
1070  GO TO 50
C
C  SET STATION IDENTIFIER
1080  IF (LLPAR.EQ.0.AND.LRPAR.EQ.0) GO TO 1090
         WRITE (LP,2030) NFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
1090  IF (KID.GT.IDIM*2) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID5+KID-1)=CHAR(1)
      SWORK(ID5+KID)=CHAR(2)
      CALL SUBSTR (CHAR,1,8,WINSTA(MWIN),1)
      KID=KID+2
      MWIN=MWIN+2
      NWNSTA=NWNSTA+1
C
C  MAKE PREDETERMINED STATION CHECKS
C
C  CHECK IF STATION EXISTS
1110  STAID(1)=SWORK(ID5+KID-3)
      STAID(2)=SWORK(ID5+KID-2)
      CALL SFSCHK (LARRAY,ARRAY,STAID,XPP24,STACOR,IPPP24,IPPPVR,
     *   IPEA24,IPTM24,NUMERR,IERR)
      IF (IERR.EQ.0) THEN
         IF (IPPP24.EQ.0) THEN
            WRITE (LP,2600) XPP24,IPPP24,STAID
            CALL SUERRS (LP,2,NUMERR)
            ENDIF
         ENDIF
C
C  CHECK FOR DUPLICATE NAMES
      IF (NUMSST.GT.1) THEN
         NCHK=1
         IF (ISMFLG.EQ.0) GO TO 1130
            NWNPLS=NWNSTA+1
            IF (NUMSST.EQ.NWNPLS) GO TO 1160
            NCHK=NWNPLS
1130     NUM=NUMSST-1
         DO 1140 I=NCHK,NUM
            IF (STAID(1).EQ.SWORK(ID5+I*2-2).AND.
     *          STAID(2).EQ.SWORK(ID5+I*2-1)) THEN
               WRITE (LP,2620) STAID
               CALL SUERRS (LP,2,NUMERR)
            GO TO 1160
            ENDIF
1140        CONTINUE
         ENDIF
1160  NUMSST=NUMSST+1
      SWORK(ID8+KID-3)=STACOR(1)
      SWORK(ID8+KID-2)=STACOR(2)
      CALL SFCONV (SWORK(ID7+NUMSST-2),IPPP24,1)
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PREDETERMINED WEIGHTS FOR SUMMER SEASON
C
1170  ISUMR=0
      IFIN=0
      IF (INULL.EQ.0) GO TO 1180
         IFIN=1
         GO TO 50
1180  IF (LLPAR.GT.0) GO TO 1190
         WRITE (LP,2500)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
1190  CALL UFPACK (LUCHAR,UCHAR,ISTRT,1,LLPAR-1,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2350) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).NE.PRE) THEN
         WRITE (LP,2520)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IB=LLPAR+1
      IE=LENGTH
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2360) UCHAR
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      ISMFLD=1
      ISMFLG=1
      IF (KID.GT.IDIM*2) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID5+KID-1)=UCHAR(1)
      SWORK(ID5+KID)=UCHAR(2)
      CALL SUBSTR (UCHAR,1,8,SUMSTA(MSUM),1)
      KID=KID+2
      MSUM=MSUM+2
      GO TO 1110
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
1240  ISMFLD=ISMFLD+1
      IF ((ISMFLD/2)*2.NE.ISMFLD) GO TO 1320
      IF (ITYPE.EQ.2) GO TO 1250
         VALUE=REAL
         GO TO 1260
1250  IB=1
      IE=LENGTH
      IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
1260  IF (KWT.GT.IDIM) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      SWORK(ID6+KWT-1)=VALUE
      SUMMER(KSUM+1)=VALUE
      KWT=KWT+1
      KSUM=KSUM+1
      IF (LRPAR.EQ.0) GO TO 1310
      IF (LRPAR.GT.LENGTH) THEN
         WRITE (LP,2540)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IB=LRPAR+1
      IE=LENGTH
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2480) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).NE.SUMR) THEN
         WRITE (LP,2490) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IFIN=1
      ISMFLG=0
C
1310  GO TO 50
C
1320  IF (KID.GT.IDIM*2) THEN
         WRITE (LP,2330) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1         
         GO TO 50
         ENDIF
      CALL SUBSTR (CHAR,1,8,SWORK(ID5+KID-1),1)
      CALL SUBSTR (CHAR,1,8,SUMSTA(MSUM),1)
      KID=KID+2
      MSUM=MSUM+2
      NSMSTA=NSMSTA+1
      GO TO 1110
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  MDR USAGE FIELD
C
1340  IFIN=0
      IF (INULL.NE.1) GO TO 1350
      IF (DISP.EQ.XNEW.OR.TDISP.EQ.XNEW) GO TO 1370
         IFIN=1
         GO TO 50
1350  IB=1
      IE=LENGTH
      IF (LLPAR.GT.0) IE=LLPAR-1
      CALL UFPACK (LUCHAR,UCHAR,ISTRT,IB,IE,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2550) UCHAR
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
      IF (UCHAR(1).EQ.XNMDR.OR.UCHAR(1).EQ.BLNK) GO TO 1380
      IF (UCHAR(1).EQ.XMDR.AND.LLPAR.EQ.0) GO TO 1390
      IF (UCHAR(1).EQ.XMDR.AND.LLPAR.GT.0) GO TO 1440
         WRITE (LP,2550) UCHAR(1)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
C
C  SPECIAL DEFAULT PROVISION FOR MDR
1370  IF (IBSNID.NE.1.OR.ISTWT.EQ.1) GO TO 1380
         MDRFLG=1
         GO TO 1410
1380  NBOX=0
      IFIN=1
      GO TO 50
C
1390  IF (IBSNID.EQ.1) GO TO 1400
         WRITE (LP,2510)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
C
C  CHECK FOR REDEFINE
1400  IF (BASNID.NE.BASNIDO) IREMDR=1
      IF (MAPFLG.EQ.0) IREMDR=1
      IF (IREMDR.NE.1) GO TO 1430
C
1410  IF (IMERR.EQ.0) GO TO 1420
         IFIN=1
         GO TO 50
C
1420  CALL SBLLGD (SWORK(ID16),SWORK(ID15),NBPTS,SWORK(ID10),
     *   SWORK(ID11),1,IERR)
      CALL SBMDRV (SWORK(ID10),SWORK(ID11),NBPTS,SWORK(ID9),IDIM,NBOX,
     *   SWORK(ID12),SWORK(ID13),SWORK(ID14),NSEGS,LFACTR,IERR)
C
C  PRINT NOTE FOR MDR DEFAULT
      IF (INULL.NE.1.OR.(DISP.NE.XNEW.AND.TDISP.NE.XNEW).OR.
     * PRNOTE.NE.YES) GO TO 1430
      IF (MDRFLG.EQ.0) THEN
         WRITE (LP,2290) PID
         CALL SULINE(LP,2)
         ENDIF
      IF (MDRFLG.EQ.1) THEN
         WRITE (LP,2300) PID
         CALL SULINE(LP,2)
         ENDIF
C
1430  IF (IBMDR.EQ.1) GO TO 1450
         IFIN=1
         GO TO 50
C
1440  IF (IBSNID.NE.1) GO TO 1450
         WRITE (LP,2530)
         CALL SUWRNS (LP,2,NUMERR)
         IBMDR=1
         GO TO 1400
C
C  READ FIRST LAT POINT
1450  IB=LLPAR+1
      IE=LENGTH
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2180) IFLD
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
         ENDIF
C
      RLAT(1)=VALUE
      MDRFLG=1
      NLTLN=1
      NLAT=2
      NLON=1
      GO TO 50
C
C  REMAINING MDR LAT/LON POINTS
1470  NLTLN=NLTLN+1
      IF (ITYPE.EQ.2) GO TO 1480
         VALUE=REAL
         GO TO 1490
1480  IB=1
      IE=LENGTH
      IF (LRPAR.GT.0) IE=LRPAR-1
      CALL UFRLFX (VALUE,ISTRT,IB,IE,IZERO,IERR)
C
1490  IF ((NLTLN/2)*2.NE.NLTLN) GO TO 1510
      IF (NLON.LE.4) GO TO 1500
         WRITE (LP,2270)
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
1500  RLON(NLON)=VALUE
      NLON=NLON+1
      IF (LRPAR.GT.0) GO TO 1530
      GO TO 50
C
1510  IF (NLAT.LE.4) GO TO 1520
         WRITE (LP,2270) LSWORK
         CALL SUERRS (LP,2,NUMERR)
         IFIN=1
         GO TO 50
1520  RLAT(NLAT)=VALUE
      NLAT=NLAT+1
      GO TO 50
C
C  CHECK LAT/LON PAIRS
C
1530  IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2560) (RLAT(I),I=1,4),(RLON(I),I=1,4)
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,2570) (ULLMTS(I),I=1,4)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (RLAT(1).LT.RLAT(4)) GO TO 1550
      IF (RLAT(2).LT.RLAT(3)) GO TO 1550
      IF (RLON(1).LT.RLON(2)) GO TO 1550
      IF (RLON(4).LT.RLON(3)) GO TO 1550
      GO TO 1560
C
1550  WRITE (LP,2580)
      CALL SUERRS (LP,2,NUMERR)
      IFIN=1
      GO TO 50
C
C  CHECK LAT/LON PAIRS AGAINST USER LIMITS
1560  IF (RLAT(1).LT.ULLMTS(2).OR.RLAT(1).GT.ULLMTS(1)) GO TO 1570
      IF (RLAT(2).LT.ULLMTS(2).OR.RLAT(2).GT.ULLMTS(1)) GO TO 1570
      IF (RLAT(3).LT.ULLMTS(2).OR.RLAT(3).GT.ULLMTS(1)) GO TO 1570
      IF (RLAT(4).LT.ULLMTS(2).OR.RLAT(4).GT.ULLMTS(1)) GO TO 1570
      IF (RLON(1).LT.ULLMTS(3).OR.RLON(1).GT.ULLMTS(4)) GO TO 1570
      IF (RLON(2).LT.ULLMTS(3).OR.RLON(2).GT.ULLMTS(4)) GO TO 1570
      IF (RLON(3).LT.ULLMTS(3).OR.RLON(3).GT.ULLMTS(4)) GO TO 1570
      IF (RLON(4).LT.ULLMTS(3).OR.RLON(4).GT.ULLMTS(4)) GO TO 1570
      GO TO 1580
C
1570  WRITE (LP,2280)
      CALL SUERRS (LP,2,NUMERR)
      IFIN=1
      GO TO 50
C
C  COMPUTE MDR BOXES FROM LAT/LON PAIRS
1580  IF (IBMDR.GT.0) GO TO 1600
      CALL SBLLGD (RLON,RLAT,4,RX,RY,1,IERR)
      CALL SBMDRW (RX,RY,SWORK(ID9),IDIM,NBOX,IERR)
      DO 1590 I=1,7,2
         CORMDR(I)=RLAT((I+1)/2)
         CORMDR(I+1)=RLON((I+1)/2)
1590     CONTINUE
1600  IFIN=1
      MDRFLG=0
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  FUTURE MAP ID FIELD
C
1610  IFIN=0
C
C  CHECK LENGTH OF IDENTIFIER
      MAXCHR=8
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,2420) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,LEN(FPID),FPID,1)
      IF (INULL.EQ.0) GO TO 1640
      IF (DISP.NE.XNEW.OR.TDISP.NE.XNEW) GO TO 1630
         WRITE (LP,2430)
         CALL SUERRS (LP,2,NUMERR)
1630  IFIN=1
      GO TO 50
C
1640  CALL SUIDCK ('ID  ',FPID,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) THEN
         WRITE (LP,2440) 'FMAP',FPID
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
      IFIN=1
      GO TO 50
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK NUMBER OF FIELDS PROCESSED
1660  IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2210) NUMFLD,MINFLD
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (NUMFLD.GE.MINFLD) GO TO 1670
         WRITE (LP,2230)
         CALL SUERRS (LP,2,NUMERR)
C
1670  IF (ITMWT.NE.1) GO TO 1680
C
C  MAKE PREDETERMINED TIMING WEIGHT CHECKS
      NSTWT=ITMFLD/2
      IF (NSTWT.EQ.0) NSTWT=MSTWT
      IF (NSTWT.GT.10) THEN
         WRITE (LP,2060) NSTWT
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
1680  IF (ISTWT.NE.1) GO TO 1740
      IF (NSETS.NE.2) GO TO 1690
      CALL SFMAP1 (WINSTA,NWNSTA,SUMSTA,NSMSTA,WINTER,SUMMER,
     *   ID5,ID6,IDIM,ICHECK)
C
C  ROUTINE SFMAP3 IS CALLED ONLY FOR THE PURPOSE OF LISTING OUT
C  WINTER AND SUMMER STATION IDENTIFIERS AND THEIR PRE-DETERMINED
C  WEIGHTS.  THIS ROUTINE IS ACTIVATED ONLY WHEN THE VALUE ZERO
C  IN THE ARGUMENT LIST IS REPLACE BY A VALUE THAT IS EQUAL OR
C  GREATER THAN 1.
      IF (ICHECK.EQ.0) THEN
         CALL SFMAP3 (NPCPN,ID5,ID6,0)
         GO TO 1690
         ENDIF
      WRITE (LP,2330) LSWORK
      CALL SUERRS (LP,2,NUMERR)
      IFIN=1
      GO TO 50
C
1690  WTSUM=0.0
      NPCPN=ISTFLD/2
      IF (NPCPN.EQ.0) NPCPN=MPCPN
      IF (NSETS.EQ.2) NPCPN=NWNSTA
      IF (NPCPN.LE.IDIM) GO TO 1700
         WRITE (LP,2050) NPCPN,IDIM
         CALL SUERRS (LP,2,NUMERR)
1700  DO 1710 I=1,NPCPN
         IF (SWORK(ID6+I-1).LE.0.00000) GO TO 1710
         WTSUM=SWORK(ID6+I-1)+WTSUM
1710     CONTINUE
      IF (WTSUM.GT.0.99999.AND.WTSUM.LT.1.00001) GO TO 1720
         IF (NSETS.EQ.1) THEN
            WRITE (LP,2190) WTSUM
            CALL SUWRNS (LP,2,NUMERR)
            ENDIF
         IF (NSETS.EQ.2) THEN
            WRITE (LP,2200) WTSUM
            CALL SUWRNS (LP,2,NUMERR)
            ENDIF
1720  IF (NSETS.NE.2) GO TO 1740
      WTSUM=0.0
      DO 1730 I=1,NPCPN
         IF (SWORK(ID6+NPCPN+I-1).LE.0.00000) GO TO 1730
         WTSUM=SWORK(ID6+NPCPN+I-1)+WTSUM
1730     CONTINUE
      IF (WTSUM.GT.0.99999.AND.WTSUM.LT.1.00001) GO TO 1740
         WRITE (LP,2220) WTSUM
         CALL SUWRNS (LP,2,NUMERR)
C
C  CHECK FOR ERRORS
1740  IBERR=NERR-IPERR
      IF (IBERR.EQ.0) GO TO 1750
         WRITE (LP,2240) PID,IBERR
         CALL SULINE (LP,2)
         GO TO 1960
C
1750  IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (IPMWRT.NE.1) GO TO 1960
      IF (ITMWT.NE.3.AND.ISTWT.NE.4) GO TO 1760
      IF (POWER.LT.POWOLD-0.001.OR.POWER.GT.POWOLD+0.001) IREWT=1
C
1760  IF (MAPFLG.EQ.0) IREWT=1
      IF (ITMWT.EQ.1) GO TO 1770
      IF (ITMWT.EQ.ITMOLD.AND.IREWT.EQ.0) GO TO 1770
C
C  COMPUTE MAP TIMING WEIGHTS
      IPARM=1
      JTYPE=ITMWT
      IF (ITMWT.EQ.2) JTYPE=4
      CALL SFADRV (PID,ARRAY,LARRAY,IPARM,JTYPE,POWER,STMNWT,NSEGS,
     * LFACTR,SWORK(ID12),SWORK(ID13),SWORK(ID14),CENTRD(1),CENTRD(2),
     * IDIM,NSTWT,SWORK(ID1),SWORK(ID2),SWORK(ID3),SWORK(ID4),IERR)
      IF (IERR.NE.0) GO TO 1740
C
1770  IF (ISTWT.EQ.1) GO TO 1780
      IF (ISTWT.EQ.ISTOLD.AND.IREWT.EQ.0) GO TO 1780
C
C  COMPUTE MAP STATION WEIGHTS
      IRERAD=1
      IPARM=2
      JTYPE=ISTWT-1
      CALL SFADRV (PID,ARRAY,LARRAY,IPARM,JTYPE,POWER,STMNWT,NSEGS,
     * LFACTR,SWORK(ID12),SWORK(ID13),SWORK(ID14),CENTRD(1),CENTRD(2),
     * IDIM,NPCPN,SWORK(ID5),SWORK(ID6),SWORK(ID7),SWORK(ID8),IERR)
      IF (IERR.NE.0) GO TO 1740
C
C  COMPUTE RADIUS OF INFLUENCE
1780  IF (IRERAD.EQ.0.AND.ISTWT.NE.1) GO TO 1790
         C=1.0
         CALL SFRADI (C,NPCPN,SWORK(ID8),CENTRD(1),CENTRD(2),
     *      RADINF)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK SIZE OF TIME SERIES WORK ARRAY
1790  NPDT=1
      NXBUF=0
      IPRERR=1
      CALL SUPRDW ('MAP ',LWKBUF,IDT,NPDT,NXBUF,IPRERR,LWNEED,NUMERR,
     *   IERR)
      IF (IERR.NE.0) THEN
         WRITE (LP,2140)
         CALL SULINE (LP,2)
         GO TO 1740
         ENDIF
C
C  CHECK FOR RUNCHECK OPTION
      IF (IRUNCK.EQ.1) GO TO 1960
C
      CALL SUDOPN (1,'PRD ',IERR)
      IF (IERR.GT.0) GO TO 1740
C
C  SET MAP STATUS FLAG TO INCOMPLETE
      ICOMPX=ICUGNL(1)
      ICUGNL(1)=2
      WDISP=XOLD
      INCLUDE 'scommon/callswugnl'
      CALL SUPCLS (1,'USER',IERR)
C
      IF (FPID.EQ.' ') THEN
         WRITE (LP,2650)
         CALL SUERRS (LP,2,NUMERR)
         INDERR=1
         GO TO 1890
         ENDIF
C
C  WRITE OR UPDATE TIME SERIES HEADER
      INDERR=0
      IF (ITSWRT.NE.1) GO TO 1840
      CALL WPRDH (PID,'MAP ',IDT,'MM  ',NVALX,FLTLN,FPID,PDESC,
     *   NXBUF,XBUF,LWKBUF,IWKBUF,IREC,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPRST ('WPRDH   ',PID,'MAP ',IDT,'MM  ',FPID,
     *      LWKBUF,NVALX,IERR)
         IF (IERR.NE.8) THEN
            INDERR=1
            GO TO 1890
            ENDIF
         GO TO 1860
         ENDIF
      WRITE (LP,2680) PID
      CALL SULINE (LP,2)
      CALL SUDWRT (1,'PRD ',IERR)
      GO TO 1860
C
1840  IF (ITSWRT.NE.2) GO TO 1960
C
C  UPDATE TIME SERIES HEADER
      TUNITS=' '
      CALL WPRDC (PID,'MAP ',TUNITS,FLTLN,PDESC,FPID,NXBUF,XBUF,LWKBUF,
     *   IWKBUF,IREC,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPRST ('WPRDC   ',PID,'MAP ',IDT,'MM  ',FPID,LWKBUF,
     *      NVALX,IERR)
         IF (IERR.NE.8) THEN
            INDERR=1
            GO TO 1890
            ENDIF
         GO TO 1860
         ENDIF
      WRITE (LP,2690) PID
      CALL SULINE (LP,2)
      CALL SUDWRT (1,'PRD ',IERR)
      GO TO 1860
C
1860  IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  WRITE INFORMATION TO PARAMETRIC FILES
      IPTR=0
      IVMAP=1
      NSPACE=1
      CALL SWMAP (IVMAP,PID,IDT,ITMWT,POWER,NSTWT,ISTWT,NPCPN,NSETS,
     *   PDESC,BASNID,FPID,CENTRD,SWORK(ID1),SWORK(ID2),SWORK(ID4),
     *   SWORK(ID5),SWORK(ID6),SWORK(ID8),UNUSED,LARRAY,ARRAY,IPTR,
     *   TDISP,NSPACE,IERR)
      IF (IERR.NE.0) THEN
         INDERR=1
         GO TO 1890
         ENDIF
C
      IPMAP=IPTR
      IVMAPS=2
      CALL SWMAPS (IVMAPS,PID,CENTRD,RADINF,IPMAP,NTECH,IBSNID,NSTWT,
     *   NPCPN,NBOX,ITECHS,SWORK(ID3),SWORK(ID7),SWORK(ID9),CORMDR,
     *   UNUSED,LARRAY,ARRAY,IPTR,TDISP,NSPACE,IERR)
      IF (IERR.NE.0) THEN
         INDERR=1
         CALL WPPDEL (PID,'MAP ',IERR)
         IF (IERR.EQ.0) THEN
            WRITE (LP,2670) PID
            CALL SULINE (LP,2)
            ELSE
               WRITE (LP,2660) PID,IERR
               CALL SUERRS (LP,2,NUMERR)
               GO TO 1890
            ENDIF
         ENDIF
C
C  CHECK IF MAPS PARAMETER RECORD MOVED
1890  IF (TDISP.EQ.XOLD.AND.IPTR.NE.IPMAPS) NMOVED=NMOVED+1
C
C  SET MAP STATUS INDICATOR TO COMPLETE IF COMPLETE BEFORE
      IF (ICOMPX.EQ.1.OR.ICOMPX.EQ.2) ICUGNL(1)=1
      IF (ICOMPX.EQ.0) ICUGNL(1)=0
      WDISP=XOLD
      INCLUDE 'scommon/callswugnl'
C
      IF (INDERR.EQ.1) GO TO 1740
C
C  CHECK IF BASIN BOUNDARY USED
      IF (IBSNID.NE.1) GO TO 1920
C
C  CHECK IF CURRENT BASIN BOUNDARY PARAMETERS NEED TO BE UPDATED
      IF (IUBASN.EQ.0.AND.MAPFLG.EQ.1) GO TO 1920
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,2040) IFLD,BASNID,BASNIDO
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  WRITE MAP ID IN BASIN PARAMETER RECORD
      IPTR=0
      CALL RPPREC (BASNID,'BASN',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,IERR)
      IF (IERR.NE.0) THEN
         CALL SRPPST (BASNID,'BASN',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         GO TO 1740
         ENDIF
      ARRAY(14)=PID(1)
      ARRAY(15)=PID(2)
      MAPFLG=1
      ARRAY(18)=MAPFLG+.01
      IPTR=0
      CALL WPPREC (BASNID,'BASN',NFILL,ARRAY,IPTR,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPPST (BASNID,'BASN',NFILL,IPTR,IERR)
         GO TO 1740
         ENDIF
      WRITE (LP,2250) BASNID
      CALL SULINE (LP,2)
C
C  CHECK IF OLD BASIN BOUNDARY PARAMETERS NEED TO BE UPDATED
1920  IF (TDISP.EQ.XNEW) BASNIDO=BASNID
      IF (BASNIDO.EQ.' ') GO TO 1950
      IF (BASNID.EQ.BASNIDO) GO TO 1950
C
C  UPDATE OLD BASIN BOUNDARY PARAMETERS
      IPTR=0
      CALL RPPREC (BASNIDO,'BASN',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,IERR)
      IF (IERR.NE.0) THEN
         CALL SRPPST (BASNIDO,'BASN',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         GO TO 1740
         ENDIF
      ARRAY(14)=BLNK
      ARRAY(15)=BLNK
      MAPFLG=0
      ARRAY(18)=MAPFLG+.01
      CALL WPPREC (BASNIDO,'BASN',NFILL,ARRAY,IPTR,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPPST (BASNIDO,'BASN',NFILL,IPTR,IERR)
         GO TO 1740
         ENDIF
      WRITE (LP,2250) BASNIDO
      CALL SULINE (LP,2)
C
C  READ MAP PARAMETERS
1950  IPTR=0
      IPRERR=1
      CALL SRMAP (IVER,PID,IDT,ITMWT,POWER,IDIM,NSTWT,ISTWT,IDIM,
     *   NPCPN,NSETS,PDESC,BASNID,FPID,CENTRD,SWORK(ID1),SWORK(ID2),
     *   SWORK(ID4),SWORK(ID5),SWORK(ID6),SWORK(ID8),
     *   UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,IERR)
      IF (IERR.NE.0) GO TO 1740
C
C  READ MAPS PARAMETERS
      IPTR=0
      CALL SRMAPS (IVER,PID,CENTRD,RADINF,IPMAP,NTECH,IBSNID,IDIM,NSTWT,
     *   IDIM,NPCPN,IDIM,NBOX,ITECHS,SWORK(ID3),SWORK(ID7),SWORK(ID9),
     *   CORMDR,UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,IERR)
      IF (IERR.NE.0) GO TO 1740
C
      IF (TDISP.EQ.XNEW) NUMNEW=NUMNEW+1
      IF (TDISP.EQ.XOLD) NUMOLD=NUMOLD+1
C
C  UPDATE MAP COUNTER
      IF (TDISP.EQ.XNEW) NAMAP=NAMAP+1
C
      IF (PRPARM.EQ.DNO) GO TO 1960
C
C  PRINT MAP PARAMETERS
      UNITS=ENGL
      IF (IOPUNT.EQ.1) UNITS=CMETR
      IPRNT=1
      CALL SPMAP (IPRNT,IVMAP,IVMAPS,PID,IDT,ITMWT,POWER,NSTWT,ISTWT,
     *   NPCPN,NSETS,PDESC,BASNID,FPID,CENTRD,SWORK(ID1),SWORK(ID2),
     *   SWORK(ID4),SWORK(ID5),SWORK(ID6),SWORK(ID8),RADINF,IPMAP,
     *   NTECH,IBSNID,NBOX,ITECHS,SWORK(ID3),SWORK(ID7),SWORK(ID9),
     *   CORMDR,UNUSED,SWORK(ID12),SWORK(ID13),SWORK(ID14),NSEGS,
     *   SWORK(ID10),SWORK(ID11),SWORK(ID17),SWORK(ID18),NBPTS,LFACTR,
     *   PLOT,LARRAY,ARRAY,UNITS,AREA,CAREA,SWORK(ID19),IERR)
      IF (IERR.NE.0) GO TO 1740
C
C  CHECK IF END OF INPUT ENCOUNTERED
1960  IF (NFLD.NE.-1) THEN
C     REINITIALIZE VARIABLES
         IPERR=NERR
         IMERR=0
         LFLD=1
         IF (CHK(1).EQ.XMAP) THEN
            CALL SUPCRD
            GO TO 20
            ENDIF
         ENDIF
C
C  UPDATE GENERAL COMPUTATIONAL ORDER PARAMETERS
      IF (FPID.NE.FPIDO) THEN
         ICFMAP=1
         ENDIF
      INCLUDE 'scommon/callsuwtor'
C
C  CHECK IF ANY MAPS PARAMETER RECORDS MOVED
      IF (NMOVED.EQ.0) GO TO 1980
         WRITE (LP,2000)
         CALL SULINE (LP,2)
         WRITE (LP,2700) NMOVED
         IF (IOPOVP.EQ.1) THEN
            WRITE (LP,2700) NMOVED
            WRITE (LP,2700) NMOVED
            ENDIF
         CALL SUWRNS (LP,0,NUMERR)
C
1980  WRITE (LP,2710) NMAP
      CALL SULINE (LP,2)
      IF (NUMNEW.GT.0) THEN
         WRITE (LP,2720) NUMNEW
         CALL SULINE (LP,2)
         ENDIF
      IF (NUMOLD.GT.0) THEN
         WRITE (LP,2730) NUMOLD
         CALL SULINE (LP,2)
         ENDIF
      IF (NUMNEW.EQ.0.AND.NUMOLD.EQ.0) THEN
         WRITE (LP,2740)
         CALL SULINE (LP,2)
         ENDIF
C
      IF (NERR.GT.0) ISTAT=1
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,2750) ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
1990  FORMAT (' *** ENTER SFMAP')
2000  FORMAT ('0')
2010  FORMAT ('0*** ERROR - ',A,' AREA CANNOT BE DEFINED BECAUSE ',
     *   A,' PARAMETERS NOT SUCCESSFULLY READ.')
2020  FORMAT ('0*** ERROR - PROCESSING CARD FIELD ',I2,'.')
2030  FORMAT ('0*** ERROR - INVALID CHARACTER IN CARD FIELD ',I2,'.')
2035  FORMAT ('0*** WARNING - ',A,' ',
     *   'FOUND IN PARENTHESES IN FIELD ',I2,' (',A,')',A)
2040  FORMAT (' IFLD=',I2,3X,'BASNID=',A,3X,'BASNIDO=',A,3X,
     *   'FLTLN(1)=',F5.2,3X,'FLTLN(2)=',F5.2)
2050  FORMAT ('0*** ERROR - IN SFMAP - THE NUMBER OF PREDETERMINED ',
     *   'STATION WEIGHTS(',I3,') EXCEEDS THE ARRAY DIMENSION(',I3,').')
2060  FORMAT ('0*** ERROR - IN SFMAP - TOO MANY (',I3,') PREDETERMINED',
     *   ' TIMING WEIGHT STATIONS WERE SPECIFIED. MAXIMUM IS 10.')
2070  FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING MAP RECORD.')
2080  FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING MAPS RECORD.')
2090  FORMAT ('0*** ERROR - PARAMETER ARRAY DIMENSION (',I4,
     *   ' IS TOO SMALL.')
2100  FORMAT ('0*** ERROR - MAP  PARAMETERS EXIST FOR AREA ',2A4,'.')
2110  FORMAT ('0*** WARNING - MAP  PARAMETERS NOT FOUND FOR AREA ',2A4,
     *   '. DISP ASSUMED TO BE NEW.')
2120  FORMAT ('0*** WARNING - MAP PARAMETER RECORD EXISTS BUT MAPS ',
     *   'PARAMETER RECORD NOT FOUND FOR AREA ',2A4,
     *   '. DISP ASSUMED TO BE NEW.')
2130  FORMAT ('0*** WARNING - MAPS PARAMETER RECORD EXISTS BUT MAP ',
     *   'PARAMETER RECORD NOT FOUND FOR AREA ',2A4,
     *   '. DISP ASSUMED TO BE NEW.')
2140  FORMAT ('0*** NOTE - NO MAP TIME SERIES HEADER CAN BE CREATED ',
     *   'OR CHANGED DUE TO THE ABOVE ERROR.')
2150  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'DESCRIPTION (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
2160  FORMAT ('0*** ERROR - DESCRIPTION IS BLANK.')
2170  FORMAT ('0*** WARNING - MISSING PARENTHESIS IN FIELD ',I2,'.')
2180  FORMAT ('0*** ERROR - INVALID REAL NUMBER IN FIELD ',I2,'.')
2190  FORMAT ('0*** WARNING - SUM OF PREDETERMINED STATION ',
     *   'WEIGHTS (',F5.2,') IS NOT 1.0.')
2200  FORMAT ('0*** WARNING - SUM OF PREDETERMINED WINTER STATION ',
     *   'WEIGHTS (',F5.2,') IS NOT 1.0.')
2210  FORMAT (' NUMFLD=',I3,3X,'MINFLD=',I3)
2220  FORMAT ('0*** WARNING - SUM OF PREDETERMINED SUMMER STATION ',
     *   'WEIGHTS (',F5.2,') IS NOT 1.0.')
2230  FORMAT ('0*** ERROR - NOT ENOUGH INPUT FIELDS PROCESSED.')
2240  FORMAT ('0*** NOTE - MAP AREA ',2A4,' NOT DEFINED OR ',
     *   'REDEFINED BECAUSE ',I2,' ERROR ENCOUNTERED.')
2250  FORMAT ('0*** NOTE - BASN PARAMETERS SUCCESSFULLY UPDATED ',
     *   'FOR BASIN ',A,'.')
2260  FORMAT ('0*** ERROR - NULL FIELD NOT ALLOWED IN FIELD ',I3,'.')
2270  FORMAT ('0*** WARNING - ONLY 4 PAIRS OF LAT/LON POINTS CAN BE ',
     *   'ENTERED FOR MDR BOX DEFINITION.')
2280  FORMAT ('0*** ERROR - MDR LAT/LON PAIRS DO NOT ALL FALL WITHIN ',
     *   'USER DEFINED LIMITS.')
2290  FORMAT ('0*** NOTE - MDR WILL NOT BE USED WITH MAP AREA ',2A4)
2300  FORMAT ('0*** NOTE - MDR WILL BE USED WITH MAP AREA ',2A4)
2310  FORMAT ('0*** ERROR - THE LONGITUDE (',F10.2,') DOES NOT FALL ',
     *   'WITHIN THE USER DEFINED LIMITS OF ',F8.2,' AND ',F8.2,'.')
2320  FORMAT ('0*** ERROR - THE LATITUDE  (',F10.2,') DOES NOT FALL ',
     *   'FALL WITHIN THE USER DEFINED LIMITS OF ',F8.2,5H AND ,F8.2,
     *   '.')
2330  FORMAT ('0*** ERROR - IN SFMAP - DIMENSION (',I5,') OF WORK ',
     *   'ARRAY HAS BEEN EXCEEDED.')
2340  FORMAT ('0*** ERROR - BASIN BOUNDARY ',A,' ALREADY USED BY ',
     *   'MAP AREA ',2A4,'.')
2350  FORMAT ('0*** ERROR - ',A4,' IS AN INVALID STATION WEIGHT TYPE.')
2360  FORMAT ('0*** ERROR - INVALID MAP STATION ID : ',5A4)
2370  FORMAT ('0*** ERROR - PARENTHESES NOT EXPECTED IN 1/D**2 FIELD.')
2380  FORMAT ('0*** NOTE - USER SPECIFIED DEFAULT POWER (',F5.2,
     *   ') WILL BE USED FOR 1/D**POWER TIMING WEIGHTS.')
2390  FORMAT ('0*** NOTE - USER SPECIFIED DEFAULT POWER (',F5.2,
     *   ') WILL BE USED FOR 1/D**POWER STATION WEIGHTS.')
2400  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
2410  FORMAT ('0*** ERROR - BLANK MAP IDENTIFIER IS NOT ALLOWED.')
2420  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN FMAP AREA ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
2430  FORMAT ('0*** ERROR - BLANK FMAP IDENTIFIER IS NOT ALLOWED.')
2440  FORMAT ('0*** ERROR - THE ',A,' ID (',A,') CONTAINS A SET OF ',
     *   'RESERVED CHARACTERS.')
2450  FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN BASIN ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
2460  FORMAT ('0*** ERROR - BASIN ',A,' IS NOT DEFINED.')
2470  FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING BASN RECORD.')
2480  FORMAT ('0*** ERROR - INVALID CODE WORD : ',A4,
     *   '. SHOULD BE ''WNTR''.')
2490  FORMAT ('0*** ERROR - INVALID CODE WORD : ',A4,
     *   '. SHOULD BE ''SUMR''.')
2500  FORMAT ('0*** ERROR - NO PARENTHESIS FOUND IN SUMMER WEIGHT ',
     *   'FIELD.')
2510  FORMAT ('0*** ERROR - NO BASIN INFORMATION AVAILABLE FOR ',
     *   'COMPUTING MDR BOXES.')
2520  FORMAT ('0*** ERROR - INVALID TYPE OF SUMMER SEASON WEIGHT.')
2530  FORMAT ('0*** WARNING - THE SPECIFIED BASIN WILL BE USED FOR ',
     *   'COMPUTING MDR BOXES AND LAT/LON POINTS WILL NOT BE STORED.')
2540  FORMAT ('0*** ERROR - ''SUMR'' MUST BE SPECIFIED IN INPUT.')
2550  FORMAT ('0*** ERROR - INVALID MDR USAGE OPTION : ',5A4)
2560  FORMAT (' MDR LATS: ',4F10.2,3X,'LONS: ',4F10.2)
2570  FORMAT (' USER SPECIFIED MDR LIMITS: ',4F10.2)
2580  FORMAT ('0*** ERROR - INVALID LAT/LON PAIRS SPECIFIED FOR MDR ',
     *   'AREA.')
2590  FORMAT ('0*** ERROR - A CHARACTER VALUE WAS ENTERED AS A ',
     *   'PREDETERMINED WEIGHT IN CARD FIELD ',I2,'.')
2600  FORMAT ('0*** ERROR - ',A4,' POINTER (',I3,') INVALID FOR ',
     *   'STATION ',2A4,'.')
2610  FORMAT (T14,'A 24-HR PCPN STATION MAY BE BEING USED AS A TIMIMG ',
     *   'STATION.')
2620  FORMAT ('0*** ERROR - STATION ',2A4,' HAS ALREADY BEEN ',
     *   'SPECIFIED.')
2630  FORMAT ('0*** ERROR - GRID POINT WEIGHTING CANNOT BE USED ',
     * 'BECAUSE BASIN DEFINITION WAS NOT FOUND.')
2640  FORMAT ('0*** ERROR - THIESSEN WEIGHTING CANNOT BE USED BECAUSE',
     * ' NO BASIN WAS DEFINED FOR THIS AREA.')
2650  FORMAT ('0*** ERROR - FUTURE MAP IDENTIFIER WAS NOT SPECIFIED.')
2660   FORMAT ('0*** ERROR - IN SFMAP - ERROR DELETING MAP ',
     *   'PARAMETERS FOR AREA ',2A4,'. WPPDEL STATUS CODE=',I3)
2670  FORMAT ('0*** NOTE - MAP PARAMETERS SUCCESSFULLY DELETED FOR ',
     *   'AREA ',2A4,'.')
2680  FORMAT ('0*** NOTE - MAP  TIME SERIES SUCCESSFULLY WRITTEN ',
     *   'FOR AREA ',2A4,'.')
2690  FORMAT ('0*** NOTE - MAP  TIME SERIES SUCCESSFULLY UPDATED ',
     *   'FOR AREA ',2A4,'.')
2700  FORMAT ('+*** WARNING - ',I4,' MAPS AREA PARAMETER RECORDS ',
     *   'WERE MOVED. THE @ORDER COMMAND SHOULD BE RUN TO ',
     *   'MAINTAIN MAXIMUM EFFICIENCY.')
2710  FORMAT ('0*** NOTE - ',I4,' MAP AREAS PROCESSED.')
2720  FORMAT ('0*** NOTE - ',I4,' MAP AREAS SUCCESSFULLY DEFINED.')
2730  FORMAT ('0*** NOTE - ',I4,' MAP AREAS SUCCESSFULLY REDEFINED.')
2740  FORMAT ('0*** NOTE - NO MAP AREAS SUCCESSFULLY DEFINED OR ',
     *   'REDEFINED.')
2750  FORMAT (' *** EXIT SFMAP : STATUS CODE=',I2)
C
      END
