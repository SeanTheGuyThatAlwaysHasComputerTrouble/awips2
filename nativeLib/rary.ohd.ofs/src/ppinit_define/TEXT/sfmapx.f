C MODULE SFMAPX
C-----------------------------------------------------------------------
C
C  ROUTINE TO DEFINE MAPX AREA PARAMETERS.
C
      SUBROUTINE SFMAPX (LARRAY,ARRAY,DISP,PRPARM,NFLD,IRUNCK,ISTAT)
C
      CHARACTER*4 DISP,TDISP,PRPARM
      PARAMETER (LCHAR=10,LCHK=5)
      CHARACTER*4 CHAR(LCHAR),CHK(LCHK)
      CHARACTER*8 STRING,FTSID
C
CFAN
C     INPUT FILE FORMAT                                        !cfan
C     @DEFINE AREA                                             !cfan
Cold  MAPX DARNC 'PEC R AT DARLINGTON' DARNC DARNC             !cfan
Cnew  MAPX DARNC 'PEC R AT DARLINGTON' 1 DARNC DARNC           !cfan
Cnew  MAPX DARNC 'PEC R AT DARLINGTON' 2 DARNC DARNC1 DARNC    !cfan
C     @STATUS                                                  !cfan 
C     @STOP                                                    !cfan 
      PARAMETER (MAXBASN=99)                                   !cfan
      DIMENSION BASNID00(MAXBASN*2)                            !cfan
      DIMENSION BASNIDOLD(2)                                   !cfan
CFAN
C
      REAL BLNK/4H    /
C
      DIMENSION ARRAY(LARRAY)
      DIMENSION XMAPID(2),DESC(5),CENTRD(2),FMAPID(2)
      DIMENSION FLTLN(2),PID(2),TID(2),PXID(2)
      DIMENSION BASNID(2),BDESC(5)
      PARAMETER (LWKBUF=2000)
      DIMENSION IWKBUF(LWKBUF)
      PARAMETER (LXBUF=1)
      DIMENSION XBUF(LXBUF)
      DIMENSION IHEAD(22)
      DIMENSION BASOLD(2)
C
      INCLUDE 'uio'
      INCLUDE 'ufielx'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'ufreex'
      INCLUDE 'scommon/suerrx'
      INCLUDE 'scommon/sworkx'
      INCLUDE 'scommon/suoptx'
      INCLUDE 'scommon/sugnlx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_define/RCS/sfmapx.f,v $
     . $',                                                             '
     .$Id: sfmapx.f,v 1.7 2002/10/16 14:42:44 dws Exp $
     . $' /
C    ===================================================================
C

C  SET TRACE LEVEL
      CALL SBLTRC ('MAPX',' ','SFMAPX',LTRACE)
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,540)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      CALL SBLDBG ('MAPX',' ','SFMAPX',LDEBUG)
C
C
C  INITIALIZE POINTERS
      IDIV=5
      IDIM=LSWORK/IDIV
C  IY:
      ID1=1
C  IXB:
      ID2=IDIM*1+1
C  IXE:
      ID3=IDIM*2+1
C  LATITUDES:
      ID4=IDIM*3+1
C  LONGITUDES:
      ID5=IDIM*4+1
C
      MBPTS=IDIM
      MSEGS=IDIM
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'IN SFMAPX -',
     *      ' LSWORK=',LSWORK,
     *      ' IDIV=',IDIV,
     *      ' MBPTS=',MBPTS,
     *      ' MSEGS=',MSEGS,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF   
C
      ISTAT=0
C      
      NUMERR=0
      NUMWRN=0
      MINFLD=5
      NMAPX=0
      NUMNEW=0
      NUMOLD=0
      NERR=0
      IBERR=0
      IPERR=0
C
      ISTRT=-1
      IENDIN=0
C
C  PRINT CARD
      CALL SUPCRD
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF SUGNLX COMMON BLOCK FILLED
C
      IF (IUGFIL.EQ.0) THEN
C     READ USER GENERAL PARAMETERS
         CALL SUGTUG (LARRAY,ARRAY,IERR)
         IF (IERR.EQ.0) THEN
            IUGFIL=1
            ELSE
               WRITE (LP,550) 'MAPX','USER GENERAL'
               CALL SUERRS (LP,2,NUMERR)
            ENDIF
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ GENERAL COMPUTATIONAL ORDER PARAMETERS
C
      INCLUDE 'scommon/callsugtor'
      IF (IERR.GT.0) THEN
         WRITE (LP,550) 'MAPX','COMPUTATIONAL ORDER GENERAL'
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
10    NUMFLD=0
      IFLD=0
      IUBASN=0

      LMN=0                      !cfan 0/1 for old/new input format

      TDISP=DISP
      CALL UREPET (' ',BASNID,8)
      CALL UREPET (' ',FMAPID,8)
CFAN
      CALL UREPET (' ',BASNID00,72)    !cfan
      NUMB=0     !CFAN
CFAN
      ITIME=1
C
20    IFLD=IFLD+1
CF10/02
c      IF (IFLD .GE. 6) THEN
c        GOTO 10
c      ENDIF
CF10/02
      IF (IFLD.EQ.1.AND.NMAPX.GT.0) GO TO 80
      INULL=1
C
C  GET INPUT FIELD
30    CALL UFLDRD (NFLD,CHAR,LCHAR,LDEBUG,IERR)
C
C  CHECK FOR NO ENDING QUOTE IN CHARACTER STRING
      IF (IERR.EQ.6) THEN
         CALL UFLDST (NFLD,ISTRT,LENGTH,ITYPE,NREP,INTEGR,REAL,
     *      LCHAR,CHAR,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,IERR,
     *      NUMERR,NUMWRN)
         ENDIF
C
C  CHECK FOR NULL FIELD
      IF (IERR.NE.1) INULL=0
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,560) IFLD
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK FOR END OF FILE
      IF (IERR.NE.3) GO TO 50
         IENDIN=1
         GO TO 370
C
C  CHECK FOR DEBUG
50    CALL SUIDCK ('CMDS',CHAR,NFLD,0,ICMD,IERR)
      IF (ICMD.EQ.1) THEN
         CALL SBDBUG (NFLD,ISTRT,IERR)
         CALL SBLTRC ('MAPX',' ','SFMAPX',LTRACE)
         CALL SBLDBG ('MAPX','        ','SFMAPX  ',LDEBUG)
         GO TO 30
         ENDIF
C
C  CHECK FOR COMMAND
      IF (LATSGN.EQ.1) THEN
         IENDIN=1
         GO TO 370
         ENDIF
C
C  CHECK FOR PARENTHESES IN FIELD
      IF (LLPAR.GT.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LLPAR-1,IERR)
      IF (LLPAR.EQ.0) CALL UFPACK (LCHK,CHK,ISTRT,1,LENGTH,IERR)
C
      IF (NFLD.NE.1) GO TO 70
      IF (LATSGN.NE.0) GO TO 70
      IF (CHK(1).EQ.'MAPX'.AND.NUMFLD.EQ.0) GO TO 70
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 70
      CALL SUPCRD
C
70    IF (NUMFLD.EQ.0) GO TO 80
C
C  CHECK FOR APPROPRIATE FIELD
      CALL SUIDCK ('DEFN',CHK,NFLD,0,IREF,IERR)
      IF (IERR.EQ.2) GO TO 370
C
80    NUMFLD=NUMFLD+1
  
      GO TO (90,110,220,270,330),IFLD
      WRITE (LP,570) IFLD
      CALL SUERRS (LP,2,NUMERR)
      NUMFLD=NUMFLD-1
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  FIRST FIELD - AREA TYPE 'MAPX' INDICATOR
C
90    IF (ITYPE.NE.2) THEN
         WRITE (LP,580) IFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
         ENDIF
C
      IF (CHK(1).NE.'MAPX') THEN
         WRITE (LP,580) IFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF
C
C  CHECK IF UNITS CODE SPECIFIED
      IF (LLPAR.GT.0) THEN
         IEND=LRPAR-1
         IF (LRPAR.EQ.0) IEND=LENGTH
         LSTRING=LEN(STRING)/4
         CALL UFPACK (LSTRING,STRING,ISTRT,LLPAR+1,IEND,IERR)
         IF (STRING.EQ.'ENGL'.OR.STRING.EQ.'METR') THEN
            WRITE (LP,585) 'UNITS CODE',
     *         NFLD,STRING(1:LENSTR(STRING)),' WILL BE IGNORED.'
            CALL SUWRNS (LP,2,NUMWRN)
            ELSE
               WRITE (LP,585) 'UNRECOGNIZED CHARACTERS',
     *            NFLD,STRING(1:LENSTR(STRING)),'.'
               CALL SUWRNS (LP,2,NUMWRN)
            ENDIF
         ENDIF
C         
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SECOND FIELD - AREA IDENTIFIER
C
C  CHECK LENGTH OF IDENTIFIER
110   MAXCHR=8
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,590) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,MAXCHR,XMAPID,1)

C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,600) XMAPID
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      NMAPX=NMAPX+1
C
C  CHECK FOR BLANK IDENTIFIER
      IF (XMAPID(1).NE.BLNK.OR.XMAPID(2).NE.BLNK) GO TO 120
         WRITE (LP,610)
         CALL SUERRS (LP,2,NUMERR)
         GO TO 130
120   CALL SUIDCK ('ID  ',XMAPID,NFLD,0,IREF,IERR)
      IF (IERR.NE.2) GO TO 130
         WRITE (LP,620) XMAPID
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
C
C  READ MAPX AREA PARAMETERS
130   IPTR=0
      IPRERR=0
CFAN  CALL SRMAPX (IVMAPX,XMAPID,ITIME,DESC,BASNID,FMAPID,
CFAN *   UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,ISMAPX)
      CALL SRMAPX (IVMAPX,XMAPID,ITIME,DESC,BASNID00,FMAPID,   !cfan
     *   UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,ISMAPX,NUM)   !cfan

C
C  SAVE OLD VALUES
      CALL SUBSTR (BASNID,1,8,BASOLD,1)
C
      INDPM=0
C
C  CHECK FOR SYSTEM ERROR ACCESSING FILE
      IF (ISMAPX.NE.1) GO TO 140
         WRITE (LP,630)
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK IF PARAMETER ARRAY TOO SMALL
140   IF (ISMAPX.NE.3) GO TO 150
         WRITE (LP,640) LARRAY
         CALL SUERRS (LP,2,NUMERR)
         GO TO 210
C
C  CHECK IF MAPX PARAMETERS EXIST AND DISP IS NEW
150   IF (ISMAPX.EQ.0.AND.DISP.EQ.'NEW') GO TO 160
         GO TO 170
160   WRITE (LP,650) 'MAPX',XMAPID
      CALL SUERRS (LP,2,NUMERR)
      GO TO 210
C
C  CHECK IF MAPX PARAMETERS NOT FOUND AND DISP IS OLD
170   IF (ISMAPX.EQ.2.AND.DISP.EQ.'OLD') GO TO 180
         GO TO 190
180   TDISP='NEW'
      WRITE (LP,660) 'MAPX','NOT FOUND',XMAPID,TDISP
      CALL SUWRNS (LP,2,NUMERR)
      GO TO 210
C
C  CHECK IF MAPX PARAMETERS FOUND AND DISP IS OLD
190   IF (ISMAPX.EQ.0.AND.DISP.EQ.'OLD') GO TO 210
C
C  CHECK IF MAPX PARAMETERS NOT FOUND AND DISP IS OLD
      IF (ISMAPX.NE.0.AND.DISP.EQ.'OLD') GO TO 200
         IF (ISMAPX.EQ.0) INDPM=1
            GO TO 210
200   TDISP='NEW'
      WRITE (LP,660) 'MAPX','NOT FOUND',XMAPID,TDISP
      CALL SUWRNS (LP,2,NUMERR)
C
210   IF (TDISP.EQ.'NEW') IUBASN=1
C
C  CHECK TO SEE IF TIME SERIES HEADER EXISTS
      CALL SFTSCK (XMAPID,'MAPX',LXBUF,INDPM,IPMWRT,ITSWRT,ITIME,
     *   TDISP,NUMERR,NUMWRN,IERR)
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  THIRD FIELD - AREA DESCRIPTION
C
220   IF (INULL.EQ.0) GO TO 230
      IF (DISP.EQ.'NEW'.OR.TDISP.EQ.'NEW') GO TO 250
      GO TO 20
C
C  CHECK LENGTH OF DESCRIPTION
230   MAXCHR=20
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,670) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,MAXCHR,DESC,1)
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,680) DESC
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK FOR BLANK DESCRIPTION
      DO 240 I=1,5
         IF (DESC(I).NE.BLNK) GO TO 260
240      CONTINUE
250   WRITE (LP,690)
      CALL SUERRS (LP,2,NUMERR)
C
260   GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  BASIN BOUNDARY IDENTIFIER
C
C  CHECK LENGTH OF IDENTIFIER
270   MAXCHR=8
CFAN

      IF (LENGTH.LE.2) THEN                      !cfan

          LMN=1

          READ(CHAR(1),'(I4)',iostat=ierr) NUMBASNID
          NUMBASNID00=NUMBASNID
      IFLD=IFLD-1
      GO TO 20
CFAN10/15
      ELSE IF (LENGTH.GT.2 .AND. LMN.EQ.0) THEN
          NUMBASNID=1
          NUMBASNID00=1
          CALL SUBSTR (CHAR,1,MAXCHR,BASNID,1)
          CALL SUBSTR (BASNID,1,8,BASNID00,1)  

      GOTO 280 
CFAN10/15
      ENDIF
CFAN
      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,700) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,MAXCHR,BASNID,1)
CFAN
      NUMB=NUMB+1                                      !cfan
      CALL SUBSTR (BASNID,1,8,BASNID00,(NUMB-1)*8+1)   !cfan
CFAN
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,710) BASNID
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK FOR BLANK IDENTIFIER
      IF (BASNID(1).NE.BLNK.OR.BASNID(2).NE.BLNK) GO TO 280
         WRITE (LP,720) IFLD
         CALL SUERRS (LP,2,NUMERR)
         GO TO 20
C
C  READ BASIN PARAMETER RECORD TO SEE IF BASIN ID PREVIOUSLY DEFINED
280   IPTR=0
      IPRERR=0
CFAN 
      DO II=1,2                      !cfan
      BASNIDOLD(II)=BASNID(II)       !cfan
      ENDDO                          !cfan
CFAN
      CALL SRBASN (ARRAY,LARRAY,IVBASN,BASNID,BDESC,SWORK(ID4),
     *   SWORK(ID5),IDIM,NBPTS,AREA,CAREA,ELEV,CENTRD(1),CENTRD(2),
     *   MAPFLG,MATFLG,PID,TID,PXID,IDIM,NSEGS,SWORK(ID1),SWORK(ID2),
     *   SWORK(ID3),LFACTR,IPTR,IPTRNX,IPRERR,IERR)
CFAN 
      DO II=1,2                      !cfan
      BASNID(II)=BASNIDOLD(II)       !cfan
      ENDDO                          !cfan
CFAN
      IF (IERR.GT.0) THEN
         IF (IERR.NE.2) GO TO 290
            WRITE (LP,730) BASNID
            CALL SUERRS (LP,2,NUMERR)
            GO TO 320
290      IF (IERR.EQ.3) GO TO 300
            IF (IERR.NE.1) GO TO 310
               WRITE (LP,740)
               CALL SUERRS (LP,2,NUMERR)
               GO TO 320
300      WRITE (LP,640) LARRAY
         CALL SUERRS (LP,2,NUMERR)
         GO TO 320
         ENDIF
C
C  CONVERT FROM LAT/LON TO GRID COORIDINATES
310   CALL SBLLGD (FLTLN(2),FLTLN(1),1,CENTRD(1),CENTRD(2),0,IERR)
C
C  CHECK BASIN IDENTIFIER AGAINST MAPX AREA IDENTIFIER
      IF (PXID(1).EQ.BLNK.AND.PXID(2).EQ.BLNK) GO TO 320
      IF (PXID(1).EQ.XMAPID(1).AND.PXID(2).EQ.XMAPID(2)) GO TO 320
         WRITE (LP,750) BASNID,PXID
         CALL SUERRS (LP,2,NUMERR)
C
CFAN320   IF (TDISP.EQ.'NEW') GO TO 20
320   IF (TDISP.EQ.'NEW') THEN
        NUMBASNID=NUMBASNID-1
        IF (NUMBASNID .GT. 0) THEN
         IFLD=IFLD-1
        ENDIF
        GO TO 20
      ENDIF
CFAN
C
C  CHECK IF NEW BASNID BOUNDARY IDENTIFIER SPECIFIED
CFAN  IF (BASNID(1).EQ.BASOLD(1).AND.BASNID(2).EQ.BASOLD(2)) GO TO 20
      IF (BASNID(1).EQ.BASOLD(1).AND.BASNID(2).EQ.BASOLD(2)) THEN
        NUMBASNID=NUMBASNID-1
        IF (NUMBASNID .GT. 0) THEN
         IFLD=IFLD-1
        ENDIF
        GO TO 20
      ENDIF
CFAN
      IUBASN=1
CFAN
      NUMBASNID=NUMBASNID-1

      IF (NUMBASNID .GT. 0) THEN
      IFLD=IFLD-1
      ENDIF
CFAN
      GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  FUTURE MAP ID FIELD
C
C  CHECK LENGTH OF IDENTIFIER
330   MAXCHR=8

      IF (LENGTH.GT.MAXCHR) THEN
         WRITE (LP,760) LENGTH,MAXCHR,MAXCHR
         CALL SUWRNS (LP,2,NUMWRN)
         ENDIF
      CALL SUBSTR (CHAR,1,MAXCHR,FMAPID,1)
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,770) FMAPID
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (INULL.EQ.0) GO TO 340
C
C  CHECK IF FUTURE IDENTIFIER IS BLANK

      IF (DISP.NE.'NEW'.OR.TDISP.NE.'NEW') GO TO 360
         WRITE (LP,780)
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK IF IDENTIFIER CONTAINS RESERVED CHARACTERS
340   CALL SUIDCK ('ID  ',FMAPID,NFLD,0,IREF,IERR)
      IF (IERR.NE.2) GO TO 350
         WRITE (LP,790) FMAPID
         CALL SUERRS (LP,2,NUMERR)
C
C  CHECK IF FUTURE MAP ID EXISTS
350   CALL RPRDFH (FMAPID,'MAP ',LXBUF,IHEAD,NUMX,XBUF,IERR)
      IF (IERR.GT.0) THEN
         CALL SRPRST ('RPRDFH  ',FMAPID,'FMAP',LXBUF,NUMERR,IERR)
         ENDIF

C
360   GO TO 20
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK NUMBER OF FIELDS PROCESSED
370   IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,800) NUMFLD,MINFLD
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (NUMFLD.LT.MINFLD) THEN
         WRITE (LP,810) MINFLD,NUMFLD
         CALL SUERRS (LP,2,NUMERR)
         ENDIF

C
C  CHECK FOR ERRORS
380   IBERR=NERR-IPERR
      IF (IBERR.EQ.0) GO TO 390
         WRITE (LP,820) 'MAPX',XMAPID,IBERR
         CALL SULINE (LP,2)
         GO TO 510
C
390   IF (IPMWRT.NE.1) GO TO 510
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF BUFFER FOR PROCESSED DATA BASE READ/WRITE ROUTINE LARGE
C  ENOUGH
      NPDT=1
      NX=0
      CALL SUPRDW ('MAPX',LWKBUF,ITIME,NPDT,NX,1,LWKNED,NUMERR,IERR)
      IF (IERR.GT.0) THEN
         WRITE (LP,830)
         CALL SULINE (LP,2)
         GO TO 380
         ENDIF
C
C  CHECK FOR RUNCHECK OPTION
      IF (IRUNCK.EQ.1) GO TO 510
C
      CALL SUDOPN (1,'PRD ',IERR)
      IF (IERR.GT.0) GO TO 380
C
      IF (FMAPID(1).EQ.BLNK.AND.FMAPID(2).EQ.BLNK) GO TO 400
         GO TO 410
400   WRITE (LP,840)
      CALL SUERRS (LP,2,NUMERR)
      INDERR=1
      GO TO 450
C
410   INDERR=0
      NVALX=0
      FTSID=' '
C      
      IF (ITSWRT.NE.1) GO TO 420
C
C  WRITE TIME SERIES HEADER
      CALL WPRDH (XMAPID,'MAPX',ITIME,'MM  ',NVALX,FLTLN,FTSID,DESC,NX,
     *   XBUF,LWKBUF,IWKBUF,IREC,IERR)
      IF (IERR.GT.0) THEN
         CALL SWPRST ('WPRDH   ',XMAPID,'MAPX',ITIME,'MM  ',FTSID,
     *      LWKBUF,NVALX,IERR)
         IF (IERR.NE.8) THEN
            INDERR=1
            GO TO 450
            ENDIF
         GO TO 440
         ENDIF
      WRITE (LP,850) 'MAPX',XMAPID
      CALL SULINE (LP,2)
      CALL SUDWRT (1,'PRD ',IERR)
      GO TO 440
C
420   IF (ITSWRT.NE.2) GO TO 510
C
C  UPDATE TIME SERIES HEADER
      CALL WPRDC (XMAPID,'MAPX','    ',FLTLN,DESC,FTSID,NX,XBUF,LWKBUF,
     *   IWKBUF,IREC,IERR)
      IF (IERR.EQ.0) GO TO 430
         CALL SWPRST ('WPRDC   ',XMAPID,'MAPX',ITIME,'MM  ',FTSID,
     *      LWKBUF,NVALX,IERR)
         IF (IERR.NE.8) THEN
            INDERR=1
            GO TO 450
            ENDIF
         GO TO 440
430   WRITE (LP,860) 'MAPX',XMAPID
      CALL SULINE (LP,2)
      CALL SUDWRT (1,'PRD ',IERR)
C
C  WRITE INFORMATION TO PARAMETRIC FILES
440   IPTR=0
CFAN  IVMAPX=1
      IVMAPX=2      ! cfan version 2 for MAP1

CFAN
      CALL SWMAPX (IVMAPX,XMAPID,DESC,ITIME,BASNID00,FMAPID,
     *   TDISP,UNUSED,LARRAY,ARRAY,IERR,NUMBASNID00)
CFAN
CFAN      CALL SWMAPX (IVMAPX,XMAPID,DESC,ITIME,BASNID,FMAPID,
CFAN     *   TDISP,UNUSED,LARRAY,ARRAY,IERR)
      IF (IERR.NE.0) INDERR=1
C
450   IF (INDERR.EQ.1) GO TO 380
C
C  CHECK IF CURRENT BASIN BOUNDAY PARAMETERS NEED TO BE UPDATED
      IF (IUBASN.EQ.0) GO TO 480
C
C  WRITE MAPX ID IN BASIN PARAMETER RECORD
      IPTR=0

      DO II=1,NUMBASNID00                    !cfan

      BASNID(1)=BASNID00((II-1)*2+1)      !cfan
      BASNID(2)=BASNID00((II-1)*2+2)      !cfan
      CALL RPPREC (BASNID,'BASN',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,IERR)
      IF (IERR.EQ.0) GO TO 460
         CALL SRPPST (BASNID,'BASN',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         GO TO 380
460   ARRAY(20)=XMAPID(1)
      ARRAY(21)=XMAPID(2)
      IPTR=0
      CALL WPPREC (BASNID,'BASN',NFILL,ARRAY,IPTR,IERR)
      IF (IERR.EQ.0) GO TO 470

         CALL SWPPST (BASNID,'BASN',NFILL,IPTR,IERR)
         GO TO 380
470   WRITE (LP,870) BASNID
c470   WRITE (LP,870) BASNID00                !cfan
     
      ENDDO                                  !cfan

      CALL SULINE (LP,2)
C
C  CHECK IF OLD BASIN BOUNDARY PARAMETERS NEED TO BE UPDATED
480   IF (TDISP.EQ.'NEW') CALL SUBSTR (BASNID,1,8,BASOLD,1)
      IF (BASOLD(1).EQ.BLNK.AND.BASOLD(2).EQ.BLNK) GO TO 500
      IF (BASNID(1).EQ.BASOLD(1).AND.BASNID(2).EQ.BASOLD(2)) GO TO 500
C
C  UPDATE OLD BASIN BOUNDARY PARAMETERS
      IPTR=0
      CALL RPPREC (BASOLD,'BASN',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,IERR)
      IF (IERR.EQ.0) GO TO 490
         CALL SRPPST (BASOLD,'BASN',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         GO TO 380
490   ARRAY(20)=BLNK
      ARRAY(21)=BLNK

      CALL WPPREC (BASOLD,'BASN',NFILL,ARRAY,IPTR,IERR)
      IF (IERR.GT.0) THEN
         CALL SWPPST (BASOLD,'BASN',NFILL,IPTR,IERR)
         GO TO 380
         ENDIF
      WRITE (LP,870) BASOLD
      CALL SULINE (LP,2)
C
C  READ MAPX PARAMETERS
500   IPTR=0
      IPRERR=1
CFAN  CALL SRMAPX (IVMAPX,XMAPID,ITIME,DESC,BASNID,FMAPID,
CFAN *   UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,IERR)
      CALL SRMAPX (IVMAPX,XMAPID,ITIME,DESC,BASNID00,FMAPID,   !cfan
     *   UNUSED,LARRAY,ARRAY,IPTR,IPRERR,IPTRNX,IERR,NUMB)        !cfan
      IF (IERR.NE.0) GO TO 380
C
C  UPDATE MAPX COUNTER
      IF (TDISP.EQ.'NEW') NUMNEW=NUMNEW+1
      IF (TDISP.EQ.'OLD') NUMOLD=NUMOLD+1
C
C  UPDATE FUTURE MAP COUNTER
      IF (TDISP.EQ.'NEW') NAMAPX=NAMAPX+1
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,880) TDISP,NAMAPX
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (PRPARM.EQ.'NO') GO TO 510
C
C  PRINT MAPX PARAMETERS
      IPRNT=1
      CALL SPMAPX (IPRNT,IVMAPX,XMAPID,DESC,ITIME,
CFAN *   BASNID,FMAPID,UNUSED,IERR)
     *   BASNID00,FMAPID,UNUSED,IERR,NUMB)
      IF (IERR.NE.0) GO TO 380
C
C  CHECK IF END OF INPUT OR STOP COMMAND ENCOUNTERED
510   IF (IENDIN.EQ.1) GO TO 520
C
C  REINITIALIZE VARIABLES
      IPERR=NERR
      IFLD=1
      IF (CHK(1).NE.'MAPX') GO TO 520
         CALL SUPCRD
         GO TO 10
C
520   IF (IRUNCK.EQ.1) GO TO 530
C
C  UPDATE GENERAL COMPUTATIONAL ORDER PARAMETERS
      INCLUDE 'scommon/callsuwtor'
C
530   WRITE (LP,890) NMAPX,'MAPX'
      CALL SULINE (LP,2)
      IF (NUMNEW.GT.0) THEN
         WRITE (LP,900) NUMNEW
         CALL SULINE (LP,2)
         ENDIF
      IF (NUMOLD.GT.0) THEN
         WRITE (LP,910) NUMOLD
         CALL SULINE (LP,2)
         ENDIF
      IF (NUMNEW.EQ.0.AND.NUMOLD.EQ.0) THEN
         WRITE (LP,920)
         CALL SULINE (LP,2)
         ENDIF
C
      IF (NERR.GT.0) ISTAT=1
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,930) ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF

C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
540   FORMAT (' *** ENTER SFMAPX')
550   FORMAT ('0*** ERROR - ',A,' AREA CANNOT BE DEFINED BECAUSE ',
     *   A,' PARAMETERS NOT SUCCESSFULLY READ.')
560   FORMAT (' IFLD=',I2)
570   FORMAT ('0*** ERROR - PROCESSING FIELD ',I2,'.')
580   FORMAT ('0*** ERROR - INVALID CHARACTER IN CARD FIELD ',I3,'.')
585   FORMAT ('0*** WARNING - ',A,' ',
     *   'FOUND IN PARENTHESES IN FIELD ',I2,' (',A,')',A)
590   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
600   FORMAT (' XMAPID=',2A4)
610   FORMAT ('0*** ERROR - BLANK MAPX IDENTIFIER IS NOT ALLOWED.')
620   FORMAT ('0*** ERROR - THE MAPX IDENTIFIER (',2A4,
     *   ') CONTAINS RESERVED CHARACTERS.')
630   FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING MAPX RECORD.')
640   FORMAT ('0*** ERROR - PARAMETER ARRAY DIMENSION (',I4,
     *   ' IS TOO SMALL.')
650   FORMAT ('0*** ERROR - ',A4,' PARAMETERS EXIST FOR AREA ',2A4,'.')
660   FORMAT ('0*** WARNING - ',A4,' PARAMETERS ',A,' FOR AREA ',
     *   2A4,'. DISP ASSUMED TO BE ',A,'.')
670   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN AREA ',
     *   'DESCRIPTION (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
680   FORMAT (' DESC=',2A4)
690   FORMAT ('0*** ERROR - BLANK DESCRIPTION NOT ALLOWED.')
700   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN BASIN ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
710   FORMAT (' BASNID=',2A4)
720   FORMAT ('0*** ERROR - NULL FIELD NOT ALLOWED IN FIELD ',I3,'.')
730   FORMAT ('0*** ERROR - BASIN ',2A4,' IS NOT DEFINED.')
740   FORMAT ('0*** ERROR - SYSTEM ERROR ACCESSING BASN RECORD.')
750   FORMAT ('0*** ERROR - BASIN BOUNDARY ',2A4,' ALREADY USED BY ',
     *   'MAPX AREA ',2A4,'.')
760   FORMAT ('0*** WARNING - NUMBER OF CHARACTERS IN FUTURE AREA ',
     *   'IDENTIFIER (',I2,') EXCEEDS ',I2,'. THE FIRST ',I2,
     *   ' CHARACTERS WILL BE USED.')
770   FORMAT (' FMAPID=',2A4)
780   FORMAT ('0*** ERROR - BLANK FUTURE IDENTIFIER IS NOT ALLOWED.')
790   FORMAT ('0*** ERROR - THE FUTURE IDENTIFIER (',2A4,
     *   'CONTAINS RESERVED CHARACTERS.')
800   FORMAT (' NUMFLD=',I3,3X,'MINFLD=',I3)
810   FORMAT ('0*** ERROR - ',I2,' INPUT FIELDS EXPECTED. ',
     *   I2,' FIELDS FOUND.')
820   FORMAT ('0*** NOTE - ',A4,' AREA ',2A4,' NOT DEFINED OR ',
     *   'REDEFINED BECAUSE ',I2,' ERROR ENCOUNTERED.')
830   FORMAT ('0*** NOTE - NO MAPX TIME SERIES HEADER CAN BE CREATED ',
     *   'OR CHANGED DUE TO THE ABOVE ERROR.')
840   FORMAT ('0*** ERROR - FUTURE MAPX IDENTIFIER WAS NOT SPECIFIED.')
850   FORMAT ('0*** NOTE - ',A4,' TIME SERIES SUCCESSFULLY WRITTEN ',
     *   'FOR AREA ',2A4,'.')
860   FORMAT ('0*** NOTE - ',A4,' TIME SERIES SUCCESSFULLY UPDATED ',
     *   'FOR AREA ',2A4,'.')
870   FORMAT ('0*** NOTE - BASN PARAMETERS SUCCESSFULLY UPDATED ',
     *   'FOR BASIN ',2A4,'.')
c    *   'FOR BASIN ',200A4,'.')              !cfan
880   FORMAT (' TDISP=',A,3X,'NAMAPX=',I4)
890   FORMAT ('0*** NOTE - ',I4,1X,A4,' AREAS PROCESSED.')
900   FORMAT ('0*** NOTE - ',I4,' MAPX AREAS SUCCESSFULLY DEFINED.')
910   FORMAT ('0*** NOTE - ',I4,' MAPX AREAS SUCCESSFULLY REDEFINED.')
920   FORMAT ('0*** NOTE - NO MAPX AREAS SUCCESSFULLY DEFINED OR ',
     *   'REDEFINED.')
930   FORMAT (' *** EXIT SFMAPX : STATUS CODE=',I2)
C
      END
