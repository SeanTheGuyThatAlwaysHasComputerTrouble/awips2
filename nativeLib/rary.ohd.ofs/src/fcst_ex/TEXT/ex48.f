C MODULE EX48
C-----------------------------------------------------------------------
C
C MULT/DIV OPERATION EXECUTION ROUTINE
C
C OHIO RIVER FORECAST CENTER/DAN MULLEN 6/7/94 VER 1
C
C THIS PROGRAM DIVIDES THE FLOWS FROM THE DIVISOR TIME SERIES INTO
C THE FLOWS FROM THE QUOTIENT TIME SERIES.
C
        SUBROUTINE EX48 (PO, QIN1, QIN2, QOUT)
C
C DECLARE VARIABLES AND COMMON BLOCKS
C
        INTEGER ITIQ,LTIQ,IDT
        COMMON /FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
        COMMON /FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     &  NOW(5),LOCAL,NDUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
        DIMENSION PO(*),QIN1(*),QIN2(*),QOUT(*),SNAME(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ex/RCS/ex48.f,v $
     . $',                                                             '
     .$Id: ex48.f,v 1.2 2000/12/18 23:20:54 dws Exp $
     . $' /
C    ===================================================================
C
        DATA SNAME/4hEX48,4h    /
C
C DESIGNATE TRACE LEVELS
C
        CALL FPRBUG(SNAME,1,48,IBUG)
C
C SET IDT EQUAL TO THE TIME INTERVAL OF THE TIME SERIES
C
        IDT=PO(5)
C
C DEBUG OUTPUT
C
        IF(IBUG.EQ.0) GO TO 10
        IUSEP=12
C
C DISPLAY THE CONTENTS OF THE PO ARRAY
C
        WRITE(IODBUG,1000)
1000    FORMAT(1X,'CONTENTS OF PO ARRAY.')
        WRITE(IODBUG,1001) (PO(I),I=1,IUSEP)
1001    FORMAT(1X,'PO=(EX)',F5.2,2X,2A4,1X,A4,F5.2,2X,2A4,1X,A4,
     &  2X,2A4,1X,A4,2X,F5.2)
C
C DETERMINE NUMBER OF FLOW VALUES TO BE OPERATED ON
C
        ITIQ=(IDA-IDADAT)*24/IDT+IHR/IDT
        LTIQ=(LDA-IDADAT)*24/IDT+LHR/IDT
C
C DISPLAY THE FLOW VALUES FOR THE TWO TIME SERIES
C
        IF(PO(12).EQ.0.01) WRITE(IODBUG,1002)
1002    FORMAT(9X,'TIME SERIES #1',3X,'DIVIDED BY-->',3X,
     &  'TIME SERIES #2')
        IF(PO(12).EQ.1.01) WRITE(IODBUG,1007)
1007    FORMAT(9X,'TIME SERIES #1',3X,'MULTIPLIED BY-->',3X,
     &  'TIME SERIES #2')
        DO I=ITIQ,LTIQ
        WRITE(IODBUG,1003) I,QIN1(I),QIN2(I)
1003    FORMAT(1X,'FLOW #',I2,1X,F10.2,28X,F10.2)
        ENDDO
10      CONTINUE
C
C COMPUTE TOTAL NUMBER OF PERIODS
C
        NPD=(LDA-IDA)*24/IDT+(LHR-IHR)/IDT+1
C
C INITIALIZE DAY AND HOUR
C
        KDA=IDA
        KHR=IHR
C
C DIVISION/MULTIPLICATION COMPUTATION
C
        N=0
        DO 100 IPD=1,NPD
          I=(KDA-IDADAT)*24/IDT+KHR/IDT
          IF(PO(12).EQ.1.01) GO TO 30
          IF(QIN2(I).EQ.0.) N=N+1
          IF(QIN2(1).EQ.0.) QIN2(1)=1.
          IF(QIN2(I).EQ.0.) QIN2(I)=QIN2(I-1)
30        IF(PO(12).EQ.1.01) QOUT(I)=QIN1(I)*QIN2(I)
          IF(PO(12).EQ.0.01) QOUT(I)=QIN1(I)/QIN2(I)
20        KHR=KHR+IDT
          IF(KHR.LE.24) GO TO 100
          KHR=IDT
          KDA=KDA+1
100     CONTINUE
C
C PRINT WARNING IF THE A FLOW WAS EQUAL TO ZERO
C
       IF (N.NE.0) THEN
          WRITE(IODBUG,1008) N
1008   FORMAT('0**WARNING** ',I3,' FLOW VALUES WERE EQUAL TO ZERO. ',
     &   'THESE FLOWS WERE SET EQUAL THE PREVIOUS FLOW.')
          CALL WARN
          ENDIF
C
C DEBUG OUTPUT AND PRINT
C
        IF(IBUG.EQ.0) GO TO 150
        WRITE(IODBUG,1004)
1004    FORMAT(1X,'OUTPUT TIME SERIES')
        DO I=ITIQ,LTIQ
        WRITE(IODBUG,1005)QOUT(I)
1005    FORMAT(5X,F10.2)
        ENDDO
150     CONTINUE
        IF(IBUG.GE.1) WRITE(IODBUG,1006)
1006    FORMAT(1H0,'** EXIT EX48')
        RETURN
        END
