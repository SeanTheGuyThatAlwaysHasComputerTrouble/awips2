C MEMBER EX39
C  (from old member FCEX39)
C
C    THIS IS THE EXECUTION SUBROUTINE FOR THE WGRFC TABLE LOOKUP OPERATI
C
C
      SUBROUTINE EX39(P,DI,DO)
C
C    THIS IS THE EXECUTION SUBROUTINE FOR THE WGRFC TABLE LOOKUP
C    OPERATION TO BE USED FOR CHANNEL LOSSES AND BACKWATER EFFECTS
C
C
C    ORIGINALLY PROGRAMMED BY DAVE REED WGRFC  7/87
C     LINEAR INTERPOLATION ALGORITHM CHANGED - GEORGE SMITH - HRL 3/88
C     OUTPUT TIME SERIES VALUE SET TO MISSING WHEN AN INPUT TIME
C     SERIES MISSING VALUE FOUND - JERRY M. NUNN - WGRFC - 1/26/90
C
C
C    ARGUMENT LIST
C
C    P      PARAMETER ARRAY
C    DI     INPUT ITME SERIES
C    DO     OUTPUT TIME SERIES
C
C
C    DIMENSION
C
      DIMENSION P(1),DI(1),DO(1),SNAME(2)
C
C    COMMON BLOCKS
C
      INCLUDE 'common/fctime'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ex/RCS/ex39.f,v $
     . $',                                                             '
     .$Id: ex39.f,v 1.1 1995/09/17 18:57:11 dws Exp $
     . $' /
C    ===================================================================
C
      DATA SNAME/4HEX39,4H    /
C
C    CHECK TRACE LEVEL
C
      IF(ITRACE.GE.1)WRITE(IODBUG,900)
  900 FORMAT(1H0,16H** EX39 ENTERED.)
C
C     DEBUG OUTPUT
C
C
      CALL FPRBUG(SNAME,1,39,IBUG)
      IF(IBUG.EQ.0)GOTO 1000
      I1=1
      I2=10
      WRITE(IODBUG,9010)I1,I2,(P(J),J=1,10)
 9010 FORMAT(1H0,2HP(,I2,3H - ,I2,2H) ,10F10.3)
      WRITE(IODBUG,9400)(P(J),J=11,18)
 9400 FORMAT(1H0,21HINPUT TIME SERIES ID=,2A4,
     16H TYPE=,A4,10H TIME INT=,F4.0,23H OUTPUT TIME SERIES ID=,
     22A4,6H TYPE=,A4,10H TIME INT=,F4.0)
      N=P(2)
      DO 1100 I=19,N,10
      I1=I
      I2=I1+9
      IF(I2.GT.N)I2=N
 1100 WRITE(IODBUG,9010)I1,I2,(P(J),J=I1,I2)
C
C
 1000 CONTINUE
C
C    DETERMINE LOCATION IN DI AND DO ARRAY
C
C
      IDT=P(14)
      I1=(IDA-IDADAT)*(24/IDT)+(IHR-1)/IDT+1
      I2=(LDA-IDADAT)*(24/IDT)+(LHR-1)/IDT+1
C
C    LOOP FOR EACH POINT AND DO CONVERSION
C
      NP=P(3)
C
      DO 100 I=I1,I2
C
C  SEE IF VALUE IS BELOW SECOND SMALLEST ENTRY IN TABLE
C    PAIRS OF TABLE ENTRIES START IN P(19)
C
      J=1
      IF(DI(I).LE.P(19+2))GO TO 140
C
C  SEE IF VALUE IS ABOVE SECOND LARGEST ENTRY IN TABLE
C
      J=NP-1
      IF(DI(I).GT.P(17+J*2))GO TO 140
C
C  VALUE MUST BE BETWEEN SECOND SMALLEST AND SECOND LARGEST ENTRIES
C
      NPM2=NP-2
      DO 130 J=2,NPM2
      IF(DI(I).LE.P(19+J*2))GO TO 140
 130  CONTINUE
C
C  SHOULD NEVER GET HERE - WRITE WARNING IF DO SO
C
      WRITE(IPR,902)I,(P(JJ),JJ=15,18)
 902  FORMAT(1H0,10X,'**WARNING** PROBLEM IN LOOKUP OPERATION STORING ',
     1 'VALUE FOR TIME PERIOD',I3,' IN TIME SERIES ',2A4,1X,A4,I3,1H./
     2 11X,'THE LARGEST PAIR OF VALUES IN THE LOOKUP TABLE WILL BE ',
     3 'USED TO INTERPOLATE.')
      CALL WARN
C
      J=NP-1
C
C  NOW HAVE DETERMINED WHICH PAIR OF POINTS TO USE FOR INTERPOLATION
C
 140  K=17+J*2
      DO(I) = P(K+1) + (P(K+3)-P(K+1)) * (DI(I)-P(K))/(P(K+2)-P(K))
C
C.....CHECK IF INPUT TIME SERIES ELEMENT IS MISSING. IF SO...SET OUTPUT
C.....TIME SERIES ELEMENT TO MISSING ALSO.
C
      KP = IFMSNG(DI(I))
      IF(KP .EQ. 1) DO(I) = -999.0
C
  100 CONTINUE
C
      IF(ITRACE.GE.1)WRITE(IODBUG,901)
  901 FORMAT(1H0,15H** EX39 EXITED.)
      RETURN
      END
