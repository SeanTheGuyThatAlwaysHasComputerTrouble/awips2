      SUBROUTINE EX46(PO,CO,QIN,QOUT)
       

C       THIS IS THE EXECUTION SUBROUTINE FOR THE NO MISSING VALUES
C       OPERATION
C       ORIGINALLY WRITTEN BY MIKE SMITH HRL, June 1996
C       ADOPTED FROM THE EX45 ROUTINE WRITTEN BY KUANG SHEN HSU FOR THE 
C       DELTA TS OPERATION (45) AND THE RRS PREPROCESSOR MODULES 
C       'QINSTM' AND 'QEXTRP'.  ESSENTIALLY, THE DECISION RULES IN RRS FOR 
C       FILLING IN MISSING DATA ARE USED HERE, ALONG WITH SOME OF THE SAME
C       VARIABLE NAMES AND TERMINOLOGY.  THE METHOD OF RECEEDING A
C       VALUE (FORWARDS AND BACKWARDS) IN RRS IS USED HERE: SEE USERS
C       MANUAL SECTION VI.3.3B 'DEFINE STATION' FOR THE EQUATION.

      
       
      DIMENSION PO(1),CO(1),QIN(1),QOUT(1)
      DIMENSION SNAME(2)
      DIMENSION CTEMP(2)
       
      COMMON/FPROG/MAINUM,VERS,VDATE(2),PNAME(5),NDD
      COMMON/IONUM/IN,IPR,IPU
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20) 
      COMMON/FCONIT/IVALUE
      COMMON/FENGMT/ METRIC
      COMMON/FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     1  NOW(5),LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/FCARY/IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      
      DATA SNAME/4HEX46,4H    /
      
      REAL  NEWVAL, NEXTOBS
      INTEGER FIRSTPD
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ex/RCS/ex46.f,v $
     . $',                                                             '
     .$Id: ex46.f,v 1.3 2004/02/09 17:45:03 lwu Exp $
     . $' /
C    ===================================================================
C
 
   
C..................................................................................
     
C         LIST OF VARIABLES USED IN THIS SUBROUTINE
         
C     IDT   TIME STEP IN HOURS
C     NPD   NUMBER OF PERIODS IN CURRENT RUN
C     IDP   COUNTER TO LOOP THRU NUMBER OF PERIODS, npd
C  PREOBS   MOST RECENT OBSERVATION FOUND before THE MISSING VALUE
C NEXTOBS   FIRST OBSERVATION FOUND  AFTER MISSING VALUE
C  NEWVAL   OUTPUT VALUE FROM THIS SUBROUTINE TO BE PLACED IN THE 
C           OUTPUT TIME SERIES.
C  IPREVT   TIME (POSITION IN D ARRAY) CORRESPONDING TO PREOBS
C  INEXTT   TIME (POSITION IN D ARRAY) CORRESPONDING TO NEXTOBS
C  IFIRST   NUMBER OF PERIOD AFTER MISSING VALUE. SERVES AS DO LOOP STARTING INDICE
C   ISTOP   NUMBER OF THE PERIOD PRECEDING THE MISSING VALUE.  SERVES AS ENDING DO LOOP
C           INDICE
C       I   LOCATION OF OBSERVATION IN THE INPUT AND OUTPUT "D" ARRAYS
C  IALLMSG    FLAG INDICATING IF ENTIRE INPUT TIME SERIES IS MISSING
C           =0   AT LEAST ONE VALID OBS.
C           =1   ALL MISSING

C   CTEMP   TEMPORARY CARRY OVER STORAGE VARIABLE, USED WITH FCWTCO
C     IDA   INITIAL DAY OF CURRENT RUN
C     IHR   INITIAL HOUR OF CURRENT RUN
C     LDA   LAST DAY OF CURRENT RUN
C     LHR   LAST HOUR OF CURRENT RUN
C     KDA   COUNTER FOR DAYS IN MAIN DO LOOP
C     KHR   COUNTER FOR HOURS IN MAIN DO LOOP
C   INCDAY  INTERMEDIATE CARRY OVER DAY
C  INCHOUR  INTERMEDIATE CARRY OVER HOUR
C  IDADAT   INITITAL DAY ASSOCIATED WITH FIRST DATA VALUE IN TIME SERIES
C     QIN   INPUT TIME SERIES CONTAINING MISSING VALUES
C    QOUT   OUTPUT TIME SERIES CONTAINING NO MISSING VALUES

C  IBACKT   NUMBER OF TIME PERIODS THAT THE CARRYOVER VALUE EXITS BEFORE
C           THE FIRST VALUE IN THE INPUT TIME SERIES (ASSOCIATED WITH IDADAT)
C           IE, NUMBER OF TIME STEPS BEFORE THE CARRYOVER DATE
C INTERP   INTERPOLATION SCHEME FOR GAPS OCCURRING BETWEEN TWO VALID VALUES 
C           IN INPUT TIME SERIES
C           =0  RETAIN LAST VALUE
C           =1  LINEAR INTERPOLATION

C  EXTRAP   RECESSION COEFFICIENT FOR 24 HOUR PERIOD
C  RECESS   MULTIPLICATION FACTOR FOR EACH RECEEDED VALUE  
     
C...................................................................................     
      CALL FPRBUG(SNAME,1,46,IBUG)

C     COMPUTE INITIAL PARAMETERS AND DO LOOP INDICES  
    
      IDT=PO(5)
      INTERP=PO(10)
      EXTRAP=PO(11)
      

C     COMPUTE NUMBER OF PERIODS (NPD) FOR MAIN COMPUTATIONAL LOOP

       NPD=(LDA-IDA)*24/IDT+(LHR-IHR)/IDT+1
    
C     COMPUTE LOCATION OF FIRST AND LAST PERIOD IN D ARRAY 

        FIRSTPD=(IDA-IDADAT)*24/IDT+IHR/IDT
        LASTPD=(LDA-IDADAT)*24/IDT + LHR/IDT

  
C      INITIALIZE DAY, HOUR, AND INTERPOLATION SCHEME
           KDA=IDA
           KHR=IHR
           
           
C=========== BEGIN MAIN COMPUTATIONAL LOOP THRU INPUT TIME SERIES ============
           
      DO 200 IDP=1,NPD
      
C       FIND LOCATION 'I' IN D ARRAYS USING STANDARD FORMULA GIVEN IN
C       NWSRFS USER MANUALS CHAPTER 8. 
 
        I=(KDA-IDADAT)*24/IDT+KHR/IDT
         
 
C      IF A VALID ENTRY IS FOUND, PLACE INTO OUTPUT TIME SERIES.

             IF(QIN(I).GT.-999.) THEN
               NEWVAL=QIN(I)
	       GO TO 190
             ENDIF             
           
C      MISSING ENTRY FOUND. LOOK AT THE OBS TO FIND ONE BEFORE
C           AND AFTER IF POSSIBLE.


C         INITIALIZE VARIABLES FOR THIS LOOP
             NEWVAL=0.0
             PREOBS=-999.
             NEXTOBS=-999.
             IPREVT=0
             INEXTT=0
             IBACKT=0



C      LOOK FOR CLOSEST OBS AFTER MISSING ENTRY
             IFIRST=I+1
             DO 80 J=IFIRST,LASTPD
                IF(QIN(J).LT.-998.) GO TO 80
C                  OBS FOUND. THIS IS CLOSEST AFTER MISSING TIME SERIES ENTRY
                   INEXTT=J
                   NEXTOBS=QIN(J)
                   GO TO 90
 80          CONTINUE

C.........................................................................               
C    SPECIAL CASE: ENTIRE INPUT TIME SERIES IS MISSING:
C                  IN FIRST PASS THROUGH ARRAY, IF ALL ARE MISSING, 
C                  EXAMINE CO VALUE AND PRINT WARNING MESSAGE.
              IF(IDP.EQ.1) THEN
                IALLMSG=1


C               ENTIRE INPUT TIME SERIES IS MISSING.  TWO OPTIONS IF
C               CARRYOVER SUPPLIED:
C              1.  EXTRAP = 1  SET ENTIRE OUTPUT TIME SERIES TO INPUT
C                              CARRYOVER VALUE
C              2.  EXTRAP <1.0 RECEED INPUT CARRYOVER VALUE TO FILL IN
C                              OUTPUT TIME SERIES.


                IF(IFMSNG(CO(1)).EQ.0)THEN
		    IBACKT=CO(2)
		    TIMES=FLOAT(IBACKT)
C                   FIRST, COMPUTE FIRST TS VALUE,
C                   THEN RECEED TO FIRST OBS. 
		    QOUT(FIRSTPD) = CO(1)*EXTRAP**(TIMES*IDT/24.)
		    PREOBS=QOUT(FIRSTPD)
		    RECESS=EXTRAP**(IDT/24.)
		      DO 82 N=FIRSTPD+1,LASTPD
		        QOUT(N)=PREOBS*RECESS
		        PREOBS=QOUT(N)	          
  82                  CONTINUE
  
                ELSEIF(IFMSNG(CO(1)).EQ.1)THEN
C                    ENTIRE INPUT TS IS MISSING AND NO CARRYOVER VALUE IS
C                    AVAILABLE. SET OUTPUT TS TO ZERO.
		     DO 83 N=FIRSTPD,LASTPD
		        QOUT(N)=0.0
  83                 CONTINUE
                     
                ENDIF
  
C               IF IT IS AN ESP RUN, DON'T PRINT THE MESSAGE. -- LW
                IF(MAINUM.NE.2) THEN
                  WRITE(IPR,86)
  86              FORMAT(10X,'** WARNING **   INPUT TIME SERIES ', 
     *            'CONTAINS ALL MISSING VALUES.  CHECK IF THIS IS OK')
                  CALL WARN
                ENDIF
                GO TO 210
              ENDIF
C             END OF SPECIAL CASE OF ALL MISSING VALUES IN INPUT TS.	      
C.............................................................................              
 90         CONTINUE  
 
C   LOOK FOR CLOSEST OBS BEFORE MISSING ENTRY

            ISTOP=I-1
            ISTART = I-FIRSTPD
C              
C           IF FIRST VALUE IN TIME SERIES IS MISSING, LOOK AT 
C           CARRYOVER
             IF(I.EQ.FIRSTPD) GO TO 102
            
          
            DO 100 J=1,ISTART
              IF(QIN(ISTOP-j+1) .LT. -998.) GO TO 100
C
C               OBS FOUND. THIS IS CLOSEST BEFORE MISSING TIME SERIES ENTRY
                IPREVT=ISTOP - J +1
                PREOBS=QIN(ISTOP - J+1)
	
                GO TO 110
 100         CONTINUE
 102         CONTINUE
        
c            NO OBSERVATION FOUND IN INPUT TIME SERIES BEFORE THE 
C            CURRENT MISSING VALUE.  EXAMINE THE CARRYOVER VALUE.  IF 
C            CARRYOVER VALUE IS PRESENT, USE IT TO INTERPOLATE MISSING 
C            VALUES.


        IF(IFMSNG(CO(1)).EQ.0) THEN
c          USE CARRYOVER VALUE FOR INTERPOLATION.  EXTEND TIME 
C          SPAN OF INTERPOLATION BY ADDING TIME OF CARRYOVER 
c          TO INEXTT.
              PREOBS=CO(1)
              ibackt=co(2)
              iprevt=firstpd - (ibackt + 1)
	      
              
              GO TO 130
        ELSE
C          CARRYOVER NOT PRESENT, AND NO VALID OBS EXITS IN INPUT
C          TIME SERIES BEFORE THE CURRENT MISSING VALUE. THEREFORE,  
c          REPLACE MISSING VALUE WITH THE NEXT VALID OBS IN INPUT 
C          TIME SERIES, OR RECEED BACKWARDS FROM THE NEXT OBS. THIS 
C          DEPENDS ON THE USER SELECTED VALUE OF 'EXTRAP'
C            EXTRAP = 1.0  FILL IN BACKWARDS USING FIRST VALID OBS.
C            EXTRAP < 1.0  RECEED BACKWARDS FROM NEXT OBS
	    

	      IF(IFMSNG(NEXTOBS).EQ.0) THEN
	         TIMES = float(INEXTT - I)
		 NEWVAL = NEXTOBS/EXTRAP**(TIMES*IDT/24)
		 go to 190
              ENDIF       
           
        ENDIF
        
 
 110     CONTINUE
c        SEE WHAT SITUATION EXISTS TO DETERMINE WHAT ACTION TO 
C        TAKE.

  

         IF(ifmsng(nextobs).EQ.0) go to 130
        
C         NO OBS EXISTS IN REMAINDER OF TIME SERIES.
C         EXTEND LAST VALUE (TWO OPTIONS, DEPENDING ON THE VALUE
C         OF EXTRAP) AND EXIT LOOP. THIS FORMULA IS LISTED IN THE
C         NWSRFS USER'S MANUAL IN SECTION VI.3.3B "DEFINE STATION".

                RECESS = EXTRAP**(IDT/24.)
                  DO 116 JJ=I,LASTPD
                    QOUT(JJ)=PREOBS*RECESS
                    PREOBS=QOUT(JJ)
 116              CONTINUE
                GO TO 210
               

 
 130     CONTINUE
 
C        OBS EXIST BEFORE AND AFTER MISSING VALUE.  CHECK INTERPOLATION
C        TYPE TO DECIDE HOW TO COMPUTE MISSING VALUE.
c        IBACKT IS ONLY USED HERE IF THE CARRYOVER VALUE IS USED.

         IF(INTERP.EQ.1)THEN
C         LINEAR INTERPOLATION
C           COMPUTE NUMBER OF PERIODS TO INTERPOLATE ACROSS        
            DIFF= INEXTT - IPREVT

 
            NEWVAL=PREOBS+(NEXTOBS-PREOBS)*(I-IPREVT)/DIFF
  
 
         ELSEIF(INTERP.EQ.0) THEN
C           RETAIN LAST VALUE (PREOBS)
            NEWVAL=PREOBS
         ENDIF

C     OBSERVATION FOUND. ASSIGN VALUE TO OUTPUT TIME SERIES      
 190        QOUT(I)=NEWVAL
     
 

C       INCREMENT TO NEXT TIME STEP
         KHR=KHR+IDT
         IF(KHR.LE.24) GO TO 200
          KHR=IDT
          KDA=KDA+1

 200   CONTINUE    
 210   CONTINUE
C____________________END OF MAIN COMPUTATIONAL LOOP_______________
  

        IF(IFILLC.EQ.0) GO TO 460
c     carryover only stored if ifillc > 0, regardless of value of ncstor

C______ LOOP THRU INPUT TS TO STORE INTERMEDIATE CARRYOVER _________

C       USE SAME SEARCH METHODS AS ABOVE LOOP. THE SEARCH FOR 
C       INTERMEDIATE CARRYOVER IS USUALLY DONE IN THE MAIN EXECUTION
C       LOOP IN AN OPERATION. HOWEVER, IN THIS OPERATION, A SEPARATE LOOP
C       IS USED FOR THIS, AS THE MAIN EXECUTION LOOP DOES NOT sequentially
c       PROCESS THE INPUT TIME SERIES IN A MANNER THAT EASILY FACILITATES
c       A SEARCH FOR INTERMEDIATE CARRYOVER.

C     INITIALZE VALUES

       CTEMP(1) = -999.0
       CTEMP(2) = 0.0
       IBACKT  = CO(2)

       
C    CASE 1.  NO INTERMEDIATE CARRYOVER TO BE STORED       
      IF(NCSTOR.EQ.0) GO TO 460
       

	
C    CASE 2.  LOOK FOR CARRYOVER DATES IN INPUT TIME SERIES

        KDA=IDA
	KHR=IHR
	
	DO 400 IDP = 1,NPD
	
	  I= (KDA - IDADAT)*24/IDT + KHR/IDT
         
	   
	  DO 360 J=1,NCSTOR


	  
	   INCDAY = ICDAY(J)
	   INCHOUR= ICHOUR(J)
            
	   
        IF(KDA.EQ.INCDAY.AND.KHR.EQ.INCHOUR) THEN
	   
	    IF(IFMSNG(QIN(I)).EQ.0) THEN
	      CTEMP(1) = QIN(I)
	      CTEMP(2) = 0
	      CALL FCWTCO(KDA,KHR,CTEMP,2)
	      GO TO 310
	      
	    ELSE IF(IFMSNG(QIN(I)).EQ.1) THEN  
	      ISTOP = I-1
	      ISTART = I - FIRSTPD
	
		IF(I.EQ.FIRSTPD) GO TO 285
	        DO 280 JJ=1,ISTART

		 IF(QIN(ISTOP-JJ+1).LT.-998.) GO TO 280
		   CTEMP(1) = QIN(ISTOP-JJ+1)
		   CTEMP(2) = I - ( ISTOP -JJ +1)
		   CALL FCWTCO(KDA,KHR,CTEMP,2)
		   GO TO 310
 280            CONTINUE
 285            CONTINUE

 
	        IF(IFMSNG(CO(1)).EQ.0) THEN
                 
                  CTEMP(1) = CO(1)
	          CTEMP(2) = I -(FIRSTPD - IBACKT)
	          CALL FCWTCO(KDA,KHR,CTEMP,2)
	          GO TO 310
	        
		 ELSE IF(IFMSNG(CO(1)).EQ.1)THEN
		   CTEMP(1) = -999.
		   CTEMP(2) = 0
		   CALL FCWTCO(KDA,KHR,CTEMP,2)
		   GO TO 310
	         END IF
		 
		 
	     ENDIF
	     

 310    CONTINUE
 
            IF(IBUG.EQ.0) GO TO 370
C             DEBUG INTERMEDIATE CARRY OVER
              WRITE(IODBUG,340)
              WRITE(IODBUG,350) J, CTEMP(1), CTEMP(2)
            ENDIF
       
 340   FORMAT(2X,'INTERMEDIATE CARRYOVER',/)
 350   FORMAT(2X,'NCSTOR= ',I4,2X,'CTEMP 1 AND 2 = ',f10.2,1X,I4)
      
             
	   
C          END OF DO-LOOP SEARCH FOR CO DATE	   
 360       CONTINUE   

 370      CONTINUE

C        INCREMENT TO NEXT TIME STEP
         KHR=KHR+IDT
         IF(KHR.LE.24) GO TO 400
          KHR=IDT
          KDA=KDA+1 
	  

 400   CONTINUE
 460   CONTINUE 
 
 
c  NOTE *********************************************************** 
c   change the following steps when testing with ofs test data set
C    REMOVE THE COMMENT DECLARATIONS



C________END OF INTERMEDIATE CARRYOVER LOOP _______ 

C     SAVE FINAL PERIOD CARRY OVER FOR MCP AND ESP APPLICATIONS
C     IF REQUESTED
    
        IF(IFILLC.EQ.1) CO(1)=QIN(LASTPD)
        IF(IBUG.EQ.1)   WRITE(IODBUG,470) CO(1)
  470   FORMAT(/,10x,'FINAL PERIOD CARRYOVER = ',f10.2)
C.................................................................
C        DEBUG OUTPUT
         IF(IBUG.EQ.0) GO TO 480
	 
C        PRINT INPUT AND OUTPUT TIME SERIES FROM BEGINNING TO END
C        OF RUN PERIOD  
	 
	 WRITE(IODBUG,471)
	 WRITE(IODBUG,473) (QIN(NN),NN=FIRSTPD,LASTPD)
	 
         WRITE(IODBUG,472)
         WRITE(IODBUG,473) (QOUT(NN),NN=FIRSTPD,LASTPD)
	 
  471    FORMAT(/,3X,'INPUT TIME SERIES',/)
  472    FORMAT(/,3X,'OUTPUT TIME SERIES',/)
  473    FORMAT(8f10.2)
  
  480  CONTINUE
       IF(ITRACE.GE.1) WRITE(IODBUG,485)
  485  FORMAT(1H0,'** EXIT EX46 **')
  
       RETURN
       END
