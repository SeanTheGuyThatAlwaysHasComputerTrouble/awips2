C MEMBER EX13
C  (from old member FCEX13)
C
      SUBROUTINE EX13(P,C,QIN,QOUT,R)
C
C     THIS IS THE EXECUTION SUBROUTINE FOR
C     TATUM COEFFICIENT ROUTING
C
C     THIS SUBROUTINE INITIALLY WRITTEN BY
C          DAVID REED--HRL   DEC 1979
C
      DIMENSION P(1),C(1),QIN(1),QOUT(1),R(1)
C
C     COMMON BLOCKS
C
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     1NOW(5),LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/IONUM/IN,IPR,IPU
      COMMON/FCARY/IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ex/RCS/ex13.f,v $
     . $',                                                             '
     .$Id: ex13.f,v 1.1 1995/09/17 18:56:35 dws Exp $
     . $' /
C    ===================================================================
C
C
C     CHECK TRACE LEVEL-FOR THIS SUBROUTINE =1
C
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
  900 FORMAT(1H0,14H**EX13 ENTERED)
C
C     CHECK TO SEE IF DEBUG OUTPUT IS NEEDED
C
      IBUG=0
      IF(IDBALL.GT.0) IBUG=1
      IF(NDEBUG.EQ.0) GO TO 100
      DO 10 I=1,NDEBUG
      IF(IDEBUG(I).EQ.13) GO TO 11
   10 CONTINUE
      GO TO 100
   11 IBUG=1
  100 NL=P(16)
      NQST=17+NL
      NCOEF=0
      DO 101 I=1,NL
  101 NCOEF=NCOEF+P(16+I)
      NCARRY=NCOEF-NL
      NLM1=NL-1
      NCST=NQST+NLM1
      NTOTAL=NCST+NCOEF-1
      IF(IBUG.EQ.0)GO TO 303
      WRITE(IODBUG,901)(P(I),I=2,6),NTOTAL,NCARRY
  901 FORMAT(1H0,10X,30HTATUM COEFFICIENT ROUTING FOR ,5A4,//,11X,
     151HCONTENTS OF P AND C ARRAYS     NUMBER OF VALUES  P=,
     2I3,5H  C =,I3)
      WRITE(IODBUG,902)(P(I),I=1,NTOTAL)
  902 FORMAT(1H0,14(F8.3,1X))
      IF (NCARRY.EQ.0) GO TO 303
      WRITE(IODBUG,902)(C(I),I=1,NCARRY)
  303 IC=1
      KDA=IDA
      KHR=IHR
      KDT=P(10)
      IF (NCARRY.EQ.0) GO TO 102
      DO 201 I=1,NCARRY
  201 R(I)=C(I)
C
C     BEGIN COMPUTATIONAL LOOP
C
  102 I=(KDA-IDADAT)*24/KDT+KHR/KDT
C
C     APPORTION FLOW TO EACH LAYER AND ROUTE IT
C
      FLOWOT=0.0
      FLOWIN=QIN(I)
      IPTR=NCST
      IPTRC=1
      DO 103 J=1,NL
      NCL=P(16+J)
      NCLM=NCL-1
      IF(NL.GT.1)GO TO 205
      FLOW=FLOWIN
      GO TO 105
  205 IF(J.GT.1)GO TO 300
      IF(FLOWIN.GT.P(NQST))FLOW=P(NQST)
      IF(FLOWIN.LE.P(NQST))FLOW=FLOWIN
      GO TO 105
  300 IF(J.EQ.NL)GO TO 310
      IF(P(NQST+J-1).LT.FLOWIN)FLOW=P(NQST+J-1)-P(NQST+J-2)
      IF((P(NQST+J-1).GE.FLOWIN).AND.(P(NQST+J-2).LT.FLOWIN))FLOW=FLOWIN
     1-P(NQST+J-2)
      IF(P(NQST+J-2).GT.FLOWIN)FLOW=0.0
      GO TO 105
  310 IF(P(NQST+J-2).GT.FLOWIN)FLOW=0.
      IF(P(NQST+J-2).LE.FLOWIN)FLOW=FLOWIN-P(NQST+J-2)
  105 CONTINUE
      FLOWOT=FLOWOT+FLOW*P(IPTR)
      IF(NCL.EQ.1)GO TO 206
      DO 104 K=1,NCLM
  104 FLOWOT=FLOWOT+P(IPTR+K)*R(IPTRC+K-1)
      IF(NCL.EQ.2)GO TO 207
      DO 106 L=2,NCLM
  106 R(IPTRC+NCL-L)=R(IPTRC+NCL-L-1)
  207 CONTINUE
      R(IPTRC)=FLOW
  206 IPTR=IPTR+NCL
      IPTRC=IPTRC+NCLM
  103 CONTINUE
      QOUT(I)=FLOWOT
C
C     CHECK TO SEE IF CARRYOVER SHOULD BE STORED
C
      IF (NCARRY.EQ.0) GO TO 115
      IF(IFILLC.EQ.0) GO TO 115
      IF(IC.GT.NCSTOR) GO TO 115
      IF((KDA.EQ.ICDAY(IC)).AND.(KHR.EQ.ICHOUR(IC))) GO TO 116
      GO TO 115
C
C     INTERMEDIATE CARRYOVER BEING SAVED
C
  116 CALL FCWTCO(KDA,KHR,R,NCARRY)
C
      IC=IC+1
C
C    CHECK FOR FINISH TIME AND ALSO INCREMENT TIME
C
  115 IF((KDA.EQ.LDA).AND.(KHR.EQ.LHR)) GO TO 117
      IHOUR=KHR+KDT
      IF(IHOUR.GT.24) GO TO 118
      KHR=KHR+KDT
      GO TO 102
  118 KDA=KDA+1
      KHR=KHR+KDT-24
      GO TO 102
C
C     CHECK TO SEE IF CARRYOVER SHOULD BE STORED
C
  117 IF (NCARRY.EQ.0) GO TO 119
      IF(IFILLC.EQ.0) GO TO 119
      DO 120 J=1,NCARRY
  120 C(J)=R(J)
C
C     CHECK FOR DEBUG OUTPUT
C
  119 IF(IBUG.EQ.0) GO TO 121
      WRITE(IODBUG,901)(P(I),I=2,6),NTOTAL,NCARRY
      WRITE(IODBUG,902)(P(I),I=1,NTOTAL)
      IF (NCARRY.EQ.0) GO TO 121
      WRITE(IODBUG,902)(C(I),I=1,NCARRY)
  121 RETURN
      END
