C MEMBER EX53
C-----------------------------------------------------------------------
C
C@PROCESS LVL(77)
C
      SUBROUTINE EX53(P,D1X,D2Z,SY)
C
C     ALL EXECUTION ROUTINES BY CONVENTION MUST BE NAMED FCEX**
C     WHERE ** IS THE NUMBER ASSIGNED TO THE OPERATION

C     THIS IS THE EXECUTION ROUTINE FOR SSARR 3-VARIABLE OPERATIONI

C     THIS ROUTINE INITIALLY WRITTEN BY
C          RAY FUKUNAGA -- NWRFC   AUGUST 1995

C     REAL * 4  P(*),SY(*)
      REAL * 4  D1X(*),D2Z(*),P23
      REAL * 4  TABLE(700)
      DIMENSION P(*),SY(*)
      CHARACTER C23,C27

C     LOOKUP BASED ON THE DATE?

      LOGICAL DATELU

      INTEGER XINDX,ZINDX
      INTEGER BD1X,ED1X,BD2Z,ED2Z,BSY,ESY,STEPX,STEPZ

C     COMMON BLOCKS
C
C     DEBUG COMMON
C        IODBUG - UNIT NUMBER TO WRITE OUT ALL DEBUG OUTPUT
C     COMMON /FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      INCLUDE 'common/fdbug'

C     UNIT NUMBERS COMMON
C     ALWAYS USE THE VARIABLES IN IONUM TO SPECIFY UNIT NUMBER
C     COMMON /IONUM/IN,IPR,IPU
      INCLUDE 'common/ionum'

C     TIMING INFORMATION COMMON
      COMMON /FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     +               LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT

      EQUIVALENCE(P23,C23)
      EQUIVALENCE(P27,C27)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/pda/users/sharpd/devl/src/fcst_ex/myRCS/ex53.f,v $
     . $',                                                             '
     .$Id: ex53.f,v 1.3 2007/06/26 23:57:27 sharpd Exp $
     . $' /
C    ===================================================================
C
C
C     IDARUN - I* 4 - INITIAL JULIAN DAY OF THE ENTIRE RUN
C     IHRRUN - I* 4 - INITIAL HOUR OF THE ENTIRE RUN
C     LDARUN - I* 4 - JULIAN DAY OF LAST DAY OF THE ENTIRE RUN
C     LHRRUN - I* 4 - LAST HOUR OF ENTIRE RUN
C     LDACPD - I* 4 - JULIAN DAY OF LAST DAY WITH OBSERVED DATA
C     LHRCPD - I* 4 - LAST HOUR WITH OBSERVED DATA
C     NOW    - I* 4 - CURRENT TIME FROM THE COMPUTER'S CLOCK
C                     NOW(1) - MONTH
C                     NOW(2) - DAY
C                     NOW(3) - YEAR (4 DIGIT)
C     LOCAL  - I* 4 - HOUR OFFSET TO LOCAL TIME
C     NOUTZ  - I* 4 - DEFAULT TIME ZONE NUMBER FOR OUTPUT
C     NOUTDS - I* 4 - DEFAULT DAYLIGHT SAVING TIME SWITCH FOR OUTPUT
C                     =0, STANDARD TIME
C                     =1, DAYLIGHT SAVING TIME
C     NLSTZ  - I* 4 - TIME ZONE NUMBER OF LOCAL STANDARD TIME
C     IDA    - I* 4 - JULIAN DATE OF THE FIRST DAY TO BE COMPUTED
C     IHR    - I* 4 - FIRST HOUR TO BE COMPUTED IN THE CURRENT PASS
C     LDA    - I* 4 - JULIAN DATE OF THE LAST DAY TO BE COMPUTED
C     LHR    - I* 4 - LAST HOUR TO BE COMPUTED IN THE CURRENT PASS
C     IDADAT - I* 4 - JULIAN DATE OF THE FIRST DAY OF TIME SERIES DATA

C     POSITION   CONTENTS OF P ARRAY
C      1         VERSION NUMBER OF OPERATION
C      2-19      DESCRIPTION - TITLE
C     20         # OF POINTS IN THE P ARRAY

C     21-22      1ST INDEPENDENT VARIABLE (X) TIME SERIES IDENTIFIER
C     23         1ST INDEPENDENT VARIABLE (X) TIME SERIES DATA TYPE CODE
C     24         1ST INDEPENDENT VARIABLE (X) TIME SERIES TIME INTERVAL

C     25-26      2ND INDEPENDENT VARIABLE (Z) TIME SERIES IDENTIFIER
C     27         2ND INDEPENDENT VARIABLE (Z) TIME SERIES DATA TYPE CODE
C     28         2ND INDEPENDENT VARIABLE (Z) TIME SERIES TIME INTERVAL

C     29-30      RESULTANT (Y) TIME SERIES IDENTIFIER
C     31         RESULTANT (Y) TIME SERIES DATA TYPE CODE
C     32         RESULTANT (Y) TIME SERIES TIME INTERVAL

C                Z SEGMENTS (Z1,X11,Y11,X12,Y12,Z2,X21,Y21,X22,Y22,ETC)
C     33         THE UNITS THAT THE USER ENTERS THE Z SEGMENT ARRAY
C                'ENGL' OR 'METR' (DEFAULT)
C     34         NUMBER OF POINTS IN THE Z SEGMENT ARRAY
C     35+        Z SEGMENT ARRAY

C     THEREFORE THE NUMBER OF ELEMENTS REQUIRED IN THE P ARRAY IS
C        34 + NUMBER OF POINTS IN THE Z SEGMENT ARRAY


C     CHECK THE TRACE LEVEL AND WHETHER DEBUG OUTPUT IS NEEDED
      CALL FPRBUG ('EX53    ',1,53,IBUG)

C     LOOKUP BASE ON DATE?
      P23=P(23)
      IF (C23.EQ.'DATE') THEN
         DATELU=.TRUE.
      ELSE
         DATELU=.FALSE.
      ENDIF

C     GET TIME INTERVAL FROM 1ST INDEPENDENT VARIABLE TIME SERIES;
C     THEN, EXTRACT THE MULTIVALUE INXDEX FROM THE DECIMAL PORTION
C     OF P(24) and P(28) IF IT EXISTS
      IDT = INT(P(24))
      RXINDX=P(24)
      RZINDX=P(28)
      XINDX=NINT((P(24)-IDT)*10)
      ZINDX=NINT((P(28)-IDT)*10)

C     IF X- OR ZINDX=0, INDICATES NOT A MV TIMESERIES;
C     IN THIS CASE THE INDX EFFECTIVELY DEFAULTS TO 1
      IF (XINDX.EQ.0) THEN
         XINDX=1
      ENDIF
      IF (ZINDX.EQ.0) THEN
         ZINDX=1
      ENDIF

C     I1 = (IDA-IDADAT)*(24/IDT) + (IHR-1)/IDT + 1
C     I2 = (LDA-IDADAT)*(24/IDT) + (LHR-1)/IDT + 1
      P27=P(27)
      IF (.NOT.DATELU) THEN
         CALL FDCODE(P23,UNITS,DIMN,IMSNG,NVPDTX,TSCAL,NAD,IERR)
         BD1X = (IDA-IDADAT)*(24/IDT) + ((IHR-1)/(IDT*NVPDTX)) + XINDX
         ED1X = (LDA-IDADAT)*(24/IDT) + ((LHR-1)/(IDT*NVPDTX)) + XINDX
      ENDIF
      CALL FDCODE(P27,UNITS,DIMN,IMSNG,NVPDTZ,TSCAL,NAD,IERR)
      BD2Z = (IDA-IDADAT)*(24/IDT) + ((IHR-1)/(IDT*NVPDTZ)) + ZINDX
      ED2Z = (LDA-IDADAT)*(24/IDT) + ((LHR-1)/(IDT*NVPDTZ)) + ZINDX
      BSY = (IDA-IDADAT)*(24/IDT) + (IHR-1)/IDT + 1
      ESY = (LDA-IDADAT)*(24/IDT) + (LHR-1)/IDT + 1
      STEPX=NVPDTX
      STEPZ=NVPDTZ

C     BUILD TABLE ARRAY FROM P ARRAY
      DO 105 IT=1,NINT(P(34))+1
 105  TABLE(IT) = P(33+IT)

      IF (IBUG.GE.1) WRITE(IODBUG,1105) (IB,TABLE(IB),IB=2,TABLE(1)+1)
 1105 FORMAT(13('EX53: ',7(I3,F10.2),/))

      IF (.NOT.DATELU) THEN
         IDXX=BD1X
      ENDIF
      IDXZ=BD2Z
      DO 10 IDXY=BSY,ESY
         IF (.NOT.DATELU) THEN
            X=D1X(IDXX)
         ELSE
            X=IDADAT+(IDXY*(IDT/24))
         ENDIF
         Z=D2Z(IDXZ)
         CALL TLU53(X,Z,TABLE,Y)
         SY(IDXY)=Y
         IF (.NOT.DATELU) THEN
            IDXX=IDXX+STEPX
         ENDIF
         IDXZ=IDXZ+STEPZ
	 IF (IBUG.GE.1) WRITE(IODBUG,1110) IDXX,IDXZ,IDXY,X,Z,Y
 1110    FORMAT('EX53: IDXX,IDXZ,IDXY,X,Z,Y: ',I5,I5,I5,3F10.2)
 10   CONTINUE

C     IF (IBUG.EQ.1) WRITE(IODBUG,1002) LDA,IDA,LHR,IHR,IDT,
C    +                                  STRTX,FNSHX,STRTZ,FNSHZ
C1002 FORMAT('EX53: LDA (DATE OF LAST  DAY TO BE COMPUTED): ',I7,/,
C    +       'EX53: IDA (DATE OF FIRST DAY TO BE COMPUTED): ',I7,/,
C    +       'EX53: LHR (LAST  HOUR TO BE COMPUTED       ): ',I7,/,
C    +       'EX53: IHR (FIRST HOUR TO BE COMPUTED       ): ',I7,/,
C    +       'EX53: IDT (TIME INTERVAL                   ): ',I7,/,
C    +       'EX53: STRTX (FIRST ELEMENT TO COMPUTE (X)  ): ',I7,/,
C    +       'EX53: FNSHX (LAST  ELEMENT TO COMPUTE (X)  ): ',I7,/,
C    +       'EX53: STRTZ (FIRST ELEMENT TO COMPUTE (Z)  ): ',I7,/,
C    +       'EX53: FNSHZ (LAST  ELEMENT TO COMPUTE (Z)  ): ',I7)

      IF (ITRACE.GE.1) WRITE(IODBUG,991)
 991  FORMAT (//,'EX53: EXITED:')

      RETURN
      END
