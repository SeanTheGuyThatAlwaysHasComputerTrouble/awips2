C MODULE EX27
C-----------------------------------------------------------------------
C
C  THIS IS THE EXECUTION SUBROUTINE FOR THE WGRFC TABULAR OUTPUT
C  OPERATION (LIST-FTW)
C
C  WRITTEN BY DAVE REED - WGRFC - 4/87
C
      SUBROUTINE EX27 (PO,IP,D)
C
C   PROCEDURE:
C  1. DIMENSION AND COMMON
C  2. CHECK COMMON FNOPRTO SEE IF ANY PRINT OUT IS ALLOWED
C  3. CHECK FPLTAB TO SEE IF TABULAR OUTPUT IS ALLOWED
C  4. CHECK ALL CRITERIA TIME SERIES TO SEE IF OUTPUT SHOULD BE OFF
C  5. PRINT TITLE LINES
C  6. CHECK IF RATING NEEDED - IF SO DISPLAY INFORMATIONC
C  7. DETERMINE WHICH TIME SERIES TO TABULATE THIS PASS
C  8. DETERMINE HEADING FORMAT AND PRINT
C  9. PRINT HEADING LINE
C 10. LOOP FOR EACH TIME SERIESVC
C 11. DETERMINE IF THIS TIME SERIES SHOULD BE TABULATED
C 12. DETERMINE FREQUENCY AND FORMAT
C 13. PRINT TIME SERIES
C 14. END LOOP
C 15. CHECK IF MORE TIME SERIES TO BE PLOTTED - IF SO GO BACK TO STEP 7
C 16. RETURN
C
      DIMENSION PO(*),PDATA(75),IP(1),D(1),FMT(10),SNAME(2)
      DIMENSION IC(100),IPTS(100,2)
      DIMENSION IMONTH(25),IDAYS(75),IHRS(25),TPRT0(20)
      DIMENSION IHRSP(20)
      CHARACTER*4 TFMT0(75)
      CHARACTER*4 TFMT1(15)
      CHARACTER*4 TFMT2(75)
      CHARACTER*4 TFMT3(15)
      CHARACTER*4 RFMT(100)
      CHARACTER*4 IXFMT,IPARL,IFMT1,IFMT2
      CHARACTER*4 JXFMT,JPARL,JFMT1,JFMT2
      CHARACTER*4 R1X,RI2,RAM,RPM
C
      INCLUDE 'common/mod127'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fratng'
      INCLUDE 'common/fpltab'
      INCLUDE 'common/fnopr'
C
      EQUIVALENCE (FMT1,IFMT1),(FMT2,IFMT2)
CCC   EQUIVALENCE (F1,IF1),(F2,IF2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ex/RCS/ex27.f,v $
     . $',                                                             '
     .$Id: ex27.f,v 1.3 2002/02/22 21:52:19 dws Exp $
     . $' /
C    ===================================================================
C
      DATA FMT/4H(1H ,4H,2A4,4H,1X,,4HA4,1,4HX,A4,4H,I3 ,
     1 4H,3X,,4HA4,2,4HX,  ,01*4H    /
      DATA RFMT/100*' '/
      DATA TFMT0/4H(1X,,4H10HT,4HIMES,4H ARE,4H ,A4,4H,15X,4H,   ,
     1 68*4H    /
      DATA TFMT1/4H(3H ,4HTS,7,4HX,4H,4HTYPE,4H,6X,,4H7HTS,
     1 4H   T,4HS,3X,4H,   ,4H    ,4H    ,4H    ,4HI2,',4H/',I,4H2)) /
      DATA TFMT2/4H(3H ,4HID,7,4HX,4H,4HCODE,4H,6X,,4H9HIN,
     1 4HT  U,4HNIT,,4H1X, ,66*4H    /
C
      DATA RPM     /'3H P'/
      DATA RAM     /'3H A'/
      DATA RI2     /'I2, '/
      DATA R1X     /'1X, '/

      DATA IXFMT   /'00X,'/
      DATA IPARL   /'00( '/
      DATA IFMT1   /' F00'/
      DATA IFMT2   /'.00,'/

      DATA RMID1,RMID2/4H4HMI,4HDN ,/
      DATA RNOON1,RNOON2/4H4HNO,4HON ,/
      DATA TFMT3/4H(30H,4H ---,4H----,4H- --,4H-- -,4H--- ,
     14H----,4H ---,4H- , ,4H    ,4H1H ,,4H    ,4H1H- ,4H    ,4H))) /
C
      DATA ENDFMT /4H1X) /
      DATA RBLNK   /4H    /
      DATA SNAME   /4HEX27,4H    /
      DATA RM,CMS,FT,CFS/2HM ,3HCMS,2HFT,3HCFS/
      DATA A4,R4X/4HA4, ,4H4X, /
      DATA BLANK,ASTER,A1/1H ,1H*,4HA1, /
      DATA ACFT,RKMCUB/4HACFT,4HK-M3/
C
C
C  CALL FPRBUG TO SEE IF DEBUG OUTPUT IS NEEDED
      CALL FPRBUG (SNAME,1,27,IBUG)
C
      IF(ITRACE.GE.1)WRITE(IODBUG,*) 'ENTER EX27'
C
      IF (IBUG.EQ.1) WRITE(IODBUG,7212)(D(J),J=1,252)
 7212 FORMAT(10F10.2)
C
      NTS=PO(4)
      NTITL=PO(3)
C
      IF(IBUG.EQ.0) GO TO 90
C
      WRITE(IODBUG,1900)(PO(J),J=1,30)
 1900 FORMAT(1H0,11HP(  1-  6) ,6F5.0,8H P(7-11),5(1X,A4),/,
     110X,11HP( 12- 30) ,20F5.0)
      IPT=30
      DO 1100 I=1,NTITL
      IP1=IPT+1
      IP2=IP1+17
      WRITE(IODBUG,1903)IP1,IP2,(PO(J),J=IP1,IP2)
 1903 FORMAT(1H ,2HP(,I3,1H-,I3,2H) ,18A4)
      IPT=IPT+18
 1100 CONTINUE
      IPT=30+NTITL*18
      DO 1110 I=1,NTS
      IP1=IPT+1
      IP2=IP1+17
      WRITE(IODBUG,1904)IP1,IP2,(PO(J),J=IP1,IP2)
 1904 FORMAT(1H ,2HP(,I3,1H-,I3,2H) ,2A4,1X,A4,1X,3F6.0,
     11X,A4,7F6.0,2(1X,A4),2F10.3)
      IPT=IPT+18
 1110 CONTINUE
      WRITE(IODBUG,1905)(IP(I),I=1,NTS)
 1905 FORMAT(1H ,3HIP=,20I5)
C
      IF(PO(10).EQ.RBLNK.AND.PO(11).EQ.RBLNK) GO TO 90
C
      WRITE(IODBUG,1906)RTCVID,RIVERN,RIVSTA
 1906 FORMAT(1X,18HRATING INFORMATION,1X,2A4,1X,5A4,1X,5A4)
      WRITE(IODBUG,1907)RLAT,RLONG,FPTYPE,AREAT,AREAL,FLDSTG,FLOODQ,
     1RVISFS,SCFSTG,WRNSTG,GZERO,NRCPTS
 1907 FORMAT(1H0,2F9.2,1X,5A4,4F9.2,1X,A4,4F9.2,I5)
      WRITE(IODBUG,1908)LOCQ,LOCH,STGMIN,NCROSS,LXTOPW,LXELEV,
     1ABELOW,FLOODN,SLOPE,FRLOOP,SHIFT,OPTION,LASDAY,IPOPT
 1908 FORMAT(1X,2I5,F9.2,3I5,5F9.2,1X,A4,2I5)
      WRITE(IODBUG,1909)RFSTG,RFQ,IRFDAY,RFCOMT
 1909 FORMAT(1H ,2F9.2,1X,I5,1X,5A4)
      WRITE(IODBUG,1910)EMPTY
 1910 FORMAT(1H0,1X,6HEMPTY=,/,3(1X,10F10.2,/))
      WRITE(IODBUG,1911)XRC
 1911 FORMAT(1H0,1X,4HXRC=,/,30(1X,10F10.2,/))
C
   90 CONTINUE
C
C    CHECK FNOPR TO SEE IF PRINTER OUTPUT IS NEEDED
C
      IF(NOPROT.EQ.1) GO TO 999
C
C    CHECK FPLTAB TO SEE IF TABULAR OUTPUT IS NEEDED
C
      NTITL=PO(3)
      IPT=30+NTITL*18
      IF(IPRHY.EQ.-1) GO TO 999
C
C  MUST USE OPERATIONAL CRITERIA - DETERMINE IF TABULAR OUTPUT NEEDED
C
C  FIRST DETERMINE END POINTS OF ALL TIME SERIES VALUES
      IDO=0
      MINTSA=24
      ICRIT=0
      DO 100 I=1,NTS
         IFUT=PO(IPT+8+(I-1)*18)
         IDT=PO(IPT+4+(I-1)*18)
         IDTP=PO(IPT+5+(I-1)*18)
         IF(MINTSA.GT.IDT)MINTSA=IDT
         I1=(IDA-IDADAT)*(24/IDT)+(IHR-1)/IDT+1
         I2=(LDA-IDADAT)*(24/IDT)+(LHR-1)/IDT+1
         ICUR=(LDACPD-IDADAT)*(24/IDT)+(LHRCPD-1)/IDT+1
         IFUTR=IFUT*(IDTP/IDT)
         IF(I2.GT.(ICUR+IFUTR))I2=ICUR+IFUTR
         IPTS(I,1)=I1
         IPTS(I,2)=I2
C     CHECK IF THIS TIME SERIES SHOULD BE PRINTED
         IC(I)=0
         IF(PO(IPT+11+(I-1)*18).LT.0.5)IC(I)=1
         IF(PO(IPT+11+(I-1)*18).LT.0.5) GO TO 100
         IF(PO(IPT+11+(I-1)*18).GT.1.5)ICRIT=ICRIT+1
         CRIT=PO(IPT+13+(I-1)*18)
         IF(PO(IPT+14+(I-1)*18).LT.0.5)
     1    CRIT=(CRIT-PO(IPT+18+(I-1)*18))/PO(IPT+17+(I-1)*18)
         DO 110 J=I1,I2
            J1=J+IP(I)-1
            IMSGV=IFMSNG(D(J1))
            IF(IMSGV.EQ.1) GO TO 110
            IF(D(J1).LE.CRIT) GO TO 110
            IC(I)=1
            IF(PO(IPT+11+(I-1)*18).GT.1.5)IDO=1
            GOTO 100
  110       CONTINUE
  100    CONTINUE
C
C  DETERMINE THE TOTAL NUMBER OF ORDS FROM ALL TIME SERIES
      ITOTLP=0
      DO 101 I=1,NTS
         IDT=PO(IPT+4+(I-1)*18)
         IORD=(IPTS(I,2)-IPTS(I,1))+1
         IORD=IORD*(IDT/MINTSA)
         IF(ITOTLP.LT.IORD)ITOTLP=IORD
  101    CONTINUE
C
C  CHECK IF IPRHY IS SET TO ALWAYS PRINT
      IF(IPRHY.EQ.1) THEN
         DO 103 I=1,NTS
            IC(I)=1
  103       CONTINUE
         GOTO 120
         ENDIF
C
C    CHECK CASE - NO CRITERIA TS BUT PRINT NEEDED BECAUSE NO CRITERIA
C
      IF(IDO.EQ.1) GO TO 120
      IF(ICRIT.GT.0.AND.IDO.EQ.0) GO TO 999
C
C      SEE IF ANY IC(I)<>0
C
      DO 130 I=1,NTS
      IF(IC(I).NE.0) GO TO 120
  130 CONTINUE
C
C    NONE - NO PRINT
C
      GOTO 999
C
  120 CONTINUE
C
C.... SET IC PARAMETER TO 1 FOR ALL CRITERIA TIME SERIES
C
      DO 121 I=1,NTS
      IF(PO(IPT+(I-1)*18+11).GT.1.5)IC(I)=1
  121 CONTINUE
C
C   PRINT TITLE LINES
C
      IF(PO(5).GT.0.5)WRITE(IPR,900)
  900 FORMAT(1H1)
C
C
      DO 140 I=1,NTITL
      I1=(I-1)*18+31
      I2=I1+17
  140 WRITE(IPR,901)(PO(J),J=I1,I2)
  901 FORMAT(1X,18A4)
C
C    PRINT RATING INFORMATION IF DESIRED
C
      IF(PO(10).EQ.RBLNK.AND.PO(11).EQ.RBLNK) GO TO 200
C
C     RATING TO BE PRINTED -
C
      IF(IRFDAY.EQ.-999) GO TO 210
      IM=IRFDAY/10**6
      ID=(IRFDAY-IM*10**6)/10**4
      IY=IRFDAY-(IM*10**6+ID*10**4)
      GOTO 211
  210 IM=0
      ID=0
      IY=0
C
C    CONVERT FROM MET TO ENG IF NEEDED
C
  211 Q=RFQ
      STG=RFSTG
      UNITST=RM
      UNITQ=CMS
      IF(METRIC.NE.0) GO TO 214
      IF(STG.GT.-998.)STG=STG*3.2808
      UNITST=FT
      IF(Q.GT.-998)Q=Q*35.3137
      UNITQ=CFS
  214 WRITE(IPR,902)STG,UNITST,Q,UNITQ,IM,ID,IY,(RFCOMT(J),J=1,5)
  902 FORMAT(1H ,15HFLOOD OF RECORD,F7.1,1X,A2,4X,F11.0,1X,A3,4H ON ,
     1I2,'/',I2,'/',I4,4X,5A4)
C
C    NOW PRINT OUT WARNING STAGE
C
      STG=FLDSTG
      WS=WRNSTG
      Q=FLOODQ
      UNITS=RM
      UNITQ=CMS
      IF(METRIC.NE.0) GO TO 212
      IF(STG.GT.-998)STG=STG*3.2808
      IF(WS.GT.-998.)WS=WS*3.2808
      IF(Q.GT.-998.)Q=Q*35.3137
      UNITST=FT
      UNITQ=CFS
  212 WRITE(IPR,903)STG,UNITST,Q,UNITQ,WS,UNITST
  903 FORMAT(1H ,19H CRITICAL STAGES FS,F8.1,1X,A2,F12.0,1X,A3,4X,
     12HWS,F8.1,1X,A2)
C
C     PRINT OPTIONAL INFORMATION IF AVAILABLE
C
      IPTR1=IPOPT
      IPTR=XRC(IPTR1)
 2285 FORMAT(10I10)
  213 IF(IPTR.EQ.-1) GO TO 200
C
      IF(IPTR.EQ.1) GO TO 240
      IF(IPTR.EQ.3) GO TO 250
      IF(IPTR.EQ.4) GO TO 260
      IPTR1=XRC(IPTR1+1)
      IPTR=XRC(IPTR1)
      GOTO 213
C
C    COMMENT OUTPUT
C
  240 I1=IPTR1+2
      I2=XRC(IPTR1+1)-1
      WRITE(IPR,904)(XRC(J),J=I1,I2)
  904 FORMAT(1H ,9H COMMENTS,5X,20A4)
      IPTR1=XRC(IPTR1+1)
      IPTR=XRC(IPTR1)
C
      GOTO 213
C
C    NWS ID OUTPUT
C
  250 WRITE(IPR,905)XRC(IPTR1+2),XRC(IPTR1+3)
  905 FORMAT(1H ,7H NWS-ID,7X,2A4)
      IPTR1=XRC(IPTR1+1)
      IPTR=XRC(IPTR1)
      GOTO 213
C
C    BANKFULL STAGE
C
  260 STG=XRC(IPTR1+2)
      UNITS=RM
      IF(METRIC.NE.0) GO TO 261
      IF(STG.GT.-998.)STG=STG*3.2808
      UNITS=FT
C
  261 WRITE(IPR,906)STG,UNITS
  906 FORMAT(1H ,9H BANKFULL,5X,F8.1,1X,A3)
      IPTR1=XRC(IPTR1+1)
      IPTR=XRC(IPTR1)
      GOTO 213
C
  200 CONTINUE
C
C    DETERMINE ORDINATES OF LDACPD AND LHRCPD
C
      ILDA=(LDACPD-IDADAT)*24/MINTSA+(LHRCPD-1)/MINTSA+1
C
C
      IBGN=(IDA-IDADAT)*24/MINTSA+(IHR-1)/MINTSA+1
      IJULHR=IDADAT*24-24
      IENDMX=IBGN+ITOTLP-1
C
C    DETERMINE WHICH TIME SERIES TO PRINT AND THEN INTERVAL THIS PASS TH
C
  202 CONTINUE
      MINTS=24
      NUMTS=0
      MAXLFT=0
      MAXRT=0
      DO 300 I=1,NTS
      IF(IC(I).EQ.0) GO TO 300
      IPT=30+NTITL*18+(I-1)*18
      IDTP=PO(IPT+5)
      NUMTS=NUMTS+1
      IDT=PO(IPT+4)
      IF(MINTS.GT.IDTP)MINTS=IDTP
      IF(MAXLFT.LT.IFIX(PO(IPT+10)))MAXLFT=IFIX(PO(IPT+10))
      IF(MAXRT .LT.IFIX(PO(IPT+9)))MAXRT= IFIX(PO(IPT+9))
  300 CONTINUE
      IF(NUMTS.EQ.0) GO TO 999
C
C  DETERMINE NUMBER OF ORDINATES ON THIS LINE
      ICHARS=MAXLFT+MAXRT+2
C
      NORD=IFIX(PO(6))-31
      NORD=NORD/ICHARS
C
C  BEGIN LOOP FOR EACH TIME SERTIES
C
      IEND=NORD*(MINTS/MINTSA)+IBGN-1
      IF(IEND.GT.IENDMX)IEND=IENDMX
C
C    PRINT HEADING
C
C    DETERMINE TIMES
C
           CALL FMTNUM( 1,(ICHARS-5),IXFMT,JXFMT )

      NDATA0=0
      IFMT0=8
      J=0
      DO 480 I=IBGN,IEND
      ITM=I*MINTSA
      IF(((ITM/MINTS)*MINTS).NE.ITM) GO TO 480
      KD=IDADAT+ITM/24
      KH=MOD(ITM,24)
C
C    CALL MDYH1 TO GET CURRENT TIME
C
      CALL MDYH1(KD,KH,IMONTH(J+1),IDAYS(J+1),IDYR,IHRS(J+1),NOUTZ,
     1NOUTDS,TZCODE)
      J=J+1
      TFMT0(IFMT0) = JXFMT
      TFMT0(IFMT0+1) = R1X
      IFMT0=IFMT0+2
      IF(KH.NE.0) GO TO 479
      CALL UMEMOV (A4,TFMT0(IFMT0:IFMT0),1)
      IFMT0=IFMT0+1
      NDATA0=NDATA0+1
      IF(I.EQ.ILDA)TPRT0(NDATA0)=PO(8)
      IF(I.LT.ILDA)TPRT0(NDATA0)=PO(7)
      IF(I.GT.ILDA)TPRT0(NDATA0)=PO(9)
      GOTO 480
C
C
  479 IF(KD.NE.LDACPD.OR.KH.NE.LHRCPD) GO TO 478
      CALL UMEMOV (A4,TFMT0(IFMT0:IFMT0),1)
      IFMT0=IFMT0+1
      NDATA0=NDATA0+1
      TPRT0(NDATA0)=PO(8)
      GOTO 480
C
  478 CONTINUE
      CALL UMEMOV (R4X,TFMT0(IFMT0:IFMT0),1)
      IFMT0=IFMT0+1
  480 CONTINUE
C
C    CONSTRUCT TITLE LINES FORMATS AND PRINT
C
      WRITE(IPR,907)
           CALL FMTNUM( 1,NORD,IPARL,JPARL )
      TFMT1(10) = JPARL
C

           CALL FMTNUM( 1,(ICHARS-5),IXFMT,JXFMT )

             TFMT1(11) = JXFMT
C
      NDATA=0
      IFMT=10
C
      DO 580 I=1,J
                TFMT2(IFMT) = JXFMT
         IFMT=IFMT+1
         IF(IHRS(I).EQ.0.OR.IHRS(I).EQ.12.OR.IHRS(I).EQ.24) GOTO 581
                   TFMT2(IFMT) = RI2
             IF(IHRS(I).LT.12) TFMT2(IFMT+1) = RAM
             IF(IHRS(I).GT.12) TFMT2(IFMT+1) = RPM
            CALL UMEMOV (RM,TFMT2(IFMT+2:IFMT+2),1)
            NDATA=NDATA+1
            IHRSP(NDATA)=IHRS(I)
            IF(IHRSP(NDATA).GT.12)IHRSP(NDATA)=IHRSP(NDATA)-12
            IFMT=IFMT+3
            GOTO 580
  581    IF(IHRS(I).EQ.12) GO TO 582
                   TFMT2(IFMT) = R1X
            CALL UMEMOV (RMID1,TFMT2(IFMT+1:IFMT+1),1)
            CALL UMEMOV (RMID2,TFMT2(IFMT+2:IFMT+2),1)
            IFMT=IFMT+3
            GOTO 580
  582    CONTINUE
                    TFMT2(IFMT) = R1X
         CALL UMEMOV (RNOON1,TFMT2(IFMT+1:IFMT+1),1)
         CALL UMEMOV (RNOON2,TFMT2(IFMT+2:IFMT+2),1)
         IFMT=IFMT+3
  580    CONTINUE
      CALL UMEMOV (ENDFMT,TFMT2(IFMT:IFMT),1)
      CALL UMEMOV (ENDFMT,TFMT0(IFMT0:IFMT0),1)
      IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,'(1X,A,99A4)') 'TFMT0=',TFMT0
         WRITE (IODBUG,'(1X,A,99A4)') 'TFMT1=',TFMT1
         WRITE (IODBUG,'(1X,A,99A4)') 'TFMT2=',TFMT2
         WRITE (IODBUG,*) 'NDATA0=',NDATA0
         WRITE (IODBUG,'(1X,A,A4)') 'TZCODE=',TZCODE
        WRITE (IODBUG,'(1X,A,99(A4,1X))') 'TPRT0=',(TPRT0(K),K=1,NDATA0)
         ENDIF
      IF(NDATA0.GT.0) WRITE(IPR,TFMT0,IOSTAT=IERR)
     $    TZCODE,(TPRT0(K),K=1,NDATA0)
      IF (IERR.GT.0 .AND. IBUG.EQ.1)
     $  WRITE(IODBUG,*) 'ios=',IERR,'  TFMT0 is: ',TFMT0
      IF(NDATA0.EQ.0) WRITE(IPR,TFMT0,IOSTAT=IERR) TZCODE
      IF(NDATA0.EQ.0 .AND. IERR.GT.0 .AND. IBUG.EQ.1)
     $    WRITE(IODBUG,*) 'ios=',IERR,'  TFMT0 is: ',TFMT0
      WRITE(IPR,TFMT1,IOSTAT=IERR) (IMONTH(K),IDAYS(K),K=1,J)
      IF (IERR.GT.0 .AND. IBUG.EQ.1)
     $    WRITE(IODBUG,*) 'ios=',IERR,'  TFMT1 is: ',TFMT1
      IF(NDATA.GT.0) WRITE(IPR,TFMT2,IOSTAT=IERR) (IHRSP(K),K=1,NDATA)
      IF(NDATA.GT.0 .AND. IERR.GT.0 .AND. IBUG.EQ.1)
     $   WRITE(IODBUG,*) 'ios=',IERR,'  TFMT2 is: ',TFMT2
      IF(NDATA.EQ.0) WRITE(IPR,TFMT2,IOSTAT=IERR)
      IF(NDATA.EQ.0 .AND. IERR.GT.0 .AND. IBUG.EQ.1)
     $   WRITE(IODBUG,*) 'ios=',IERR,'  TFMT2 is: ',TFMT2
C

           CALL FMTNUM( 1,(ICHARS-1),IPARL,JPARL )
      TFMT3(12) = JPARL
           CALL FMTNUM( 1,J,IPARL,JPARL )
      TFMT3(10) = JPARL
      WRITE(IPR,TFMT3,IOSTAT=IERR)
      DO 500 II=1,NTS
      IPDATA=IP(II)
      IPT=30+18*NTITL+(II-1)*18
C
C    CHECK IF NTS=1 IF IT IS SEE IF LINE 0 SHOULD BE BLANK
C
      IF(II.NE.1) GO TO 501
C
      IF(PO(12).LT.0.5) GO TO 501
C
      I1=IFIX(PO(12))
      DO 503 I=1,I1
      IF(PO(I+13).LT.0.5)WRITE(IPR,907)
  907 FORMAT(1H )
  503 CONTINUE
C
C  CHECK TO SEE IF TS SHOULD BE TABULATED
  501 IF(IC(II).EQ.0) GO TO 500
C
C  SET UP INITIAL FORMAT STATEMENT
      DO 510 I=1,20
         CALL UMEMOV (FMT(I),RFMT(I),1)
  510    CONTINUE
      IFMT=10
C
C  DETERMINE FORMAT FOR DATA
      IDT=PO(IPT+4)
      IDTP=PO(IPT+5)
      IRIT=PO(IPT+9)
Cx    L1=(ICHARS-1)/10
Cx    L2=MOD((ICHARS-1),10)
Cx    IF1=IFMT1+L1*256+L2

      CALL FMTNUM( 3,(ICHARS-1),IFMT1,JFMT1 )
C
Cx    L2=MOD(IRIT,10)
Cx    L1=IRIT/10
Cx    IF2=IFMT2+L1*4096+L2*256

      CALL FMTNUM( 2,IRIT,IFMT2,JFMT2 )

           CALL FMTNUM( 1,ICHARS,IXFMT,JXFMT )
C
C  FORMAT F1,F2 WHEN PLACED IN ARRAY RFMT
C
C  BEGIN CHECKING DATA POSITIONS TO SEE IF TIME PLOT
      NDATA=0
C
C    DETERMINE IF ALL INTO FUTURE HAVE BEEN PRINTED
C
      IEND1=IEND
      N1=(IPTS(II,2)-IPTS(II,1))+1
      N1=N1*IDT/MINTSA
      IF(N1.LT.IEND)IEND1=N1
C
      DO 520 I=IBGN,IEND1
      ITM=I*MINTSA
      IJULH=IJULHR+ITM
      IF(((ITM/MINTS)*MINTS).NE.ITM) GO TO 520
C
C    DATA VALUE FOR THIS TIME SERIES AT THIS TIME
C
      IF(((ITM/IDTP)*IDTP).NE.ITM) GO TO 521
C
C    DATA TO DISPLAY NOW
C
C    CHECK IF RUNOFF OVERRIDE WAS FOUND
C
      DFLAG=BLANK
      IF(NTS27.EQ.0) GO TO 530
C
C    CHECK EACH OVERRIDE TIME SERIES
C
      DO 540 IJK=1,NTS27
      IF(TSID27(1,IJK).NE.PO(IPT+1).OR.TSID27(2,IJK).NE.PO(IPT+2).
     1OR.DTYP27(IJK).NE.PO(IPT+3)) GO TO 540
      IF(IDT27(IJK).NE.IDT) GO TO 540
C
C    TIME SERIES HAS DATA - CHECK IF CORRECT TIME
C
      NUMBR=NVAL27(IJK)
      DO 541 IJKL=1,NUMBR
      ITIMX=ISTR27(IJK)+(IJKL-1)*IDT
      IF(IJULH.NE.ITIMX) GO TO 541
      DFLAG=ASTER
      GOTO 530
  541 CONTINUE
  540 CONTINUE
  530 CONTINUE
C
      KD=IDADAT+ITM/24
      KH=MOD(ITM,24)
      IF(KH.NE.0) GO TO 533
      KH=24
      KD=KD-1
  533 IPOINT=(KD-IDADAT)*24/IDT+(KH-1)/IDT
      IMSGV=IFMSNG(D(IPOINT+IPDATA))
      IF(IMSGV.EQ.1.AND.PO(IPT+6).GT.0.5) GO TO 521
      NDATA=NDATA+1
      PDATA(NDATA)=D(IPOINT+IPDATA)
      IF(METRIC.EQ.0.AND.IMSGV.EQ.0)PDATA(NDATA)=PDATA(NDATA)*
     1   PO(IPT+17)+PO(IPT+18)
      IF(PO(IPT+12).GT.0.5.AND.IMSGV.EQ.0)
     1PDATA(NDATA)=PDATA(NDATA)*(24/IDTP)
C
C
      IF(PO(IPT+12).GT.-0.5.OR.IMSGV.EQ.1) GO TO 531
      IF(METRIC.EQ.0)PDATA(NDATA)=PDATA(NDATA)*1.98347
      IF(METRIC.EQ.1)PDATA(NDATA)=PDATA(NDATA)*86.4
  531 PDATA(NDATA+1)=DFLAG
      NDATA=NDATA+1
      RFMT(IFMT) = JFMT1
      RFMT(IFMT+1) = JFMT2
      CALL UMEMOV (A1,RFMT(IFMT+2:IFMT+2),1)
      IFMT=IFMT+3
 7791 FORMAT(10I5)
 7792 FORMAT(5F12.5)
      GOTO 520
C
C    NO DATA TO DISPLAY - SEE IF THERE IS AN ORDINATE PRINTED HERE
C
  521 CONTINUE
               RFMT(IFMT) = JXFMT
      IFMT=IFMT+1
  520 CONTINUE
      CALL UMEMOV (ENDFMT,RFMT(IFMT:IFMT),1)
C
      UNITS=PO(IPT+16)
      IF(METRIC.EQ.1)UNITS=PO(IPT+15)
      IF(PO(IPT+12).GT.0.5)UNITS=CFS
      IF(PO(IPT+12).GT.0.5.AND.METRIC.EQ.1)UNITS=CMS
      IF(PO(IPT+12).GT.-0.5) GO TO 532
      IF(METRIC.EQ.0)UNITS=ACFT
      IF(METRIC.EQ.1)UNITS=RKMCUB
  532 CONTINUE
      IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,'(1X,A,99A4)') 'RFMT=',RFMT
         WRITE (IODBUG,*) 'NDATA=',NDATA
         ENDIF
      IF(NDATA.GT.0) WRITE(IPR,RFMT,IOSTAT=IERR)
     $    (PO(IPT+J),J=1,3),PO(IPT+7),IDT,UNITS,(PDATA(J),J=1,NDATA)
      IF(NDATA.EQ.0) WRITE(IPR,RFMT,IOSTAT=IERR)
     $    (PO(IPT+J),J=1,3),PO(IPT+7),IDT,UNITS
C
C    DETERMINE IF BLANK LINES ARE NEEDED AND PRINT
C
      I1=IFIX(PO(12))
      IF(I1.EQ.0) GO TO 500
      DO 522 IJK=1,I1
      I2=IFIX(PO(12+IJK))
  522 IF(I2.EQ.II)WRITE(IPR,907)
  500 CONTINUE
C
      IBGN=IEND+1
C
C  CHECK IF ANY MORE TS SHOULD BE PRINTED
      DO 550 II=1,NTS
         IPT=30+18*NTITL+(II-1)*18
         IF(IC(II).EQ.0) GO TO 550
         IDT=PO(IPT+4)
         N1=(IPTS(II,2)-IPTS(II,1))+1
         N1=N1*IDT/MINTSA
         IF(N1.LT.IBGN)IC(II)=0
  550    CONTINUE
      GOTO 202
C
  999 RETURN
C
      END
