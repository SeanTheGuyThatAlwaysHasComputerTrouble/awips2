C MEMBER XCTQ26
C  (from old member FCXCTQ26)
C
C @PROCESS LVL(77)
C DESC COMPUTE A TOTAL Q VS MAX GENERATION Q CURVE
C----------------------------------------------------------------------
C                             LAST UPDATE: 02/22/94.10:23:48 BY $WC30KH
C
      SUBROUTINE XCTQ26(PO,W,LOCTQ,SPEL,SPQ,NQE,HD,HQ,NHQ,RCNM)
C---------------------------------------------------------------------
C  SUBROUTINE TO COMPUTE THE TOTAL DISCHARGE VS. MAXIMUM GENERATION
C  DISCHARGE CURVE FROM ITS COMPONENT PIECES. THIS IS
C  AN ITERATIVE PROCEDURE, WITH VALUES FOR EACH ELEVATION ASSIGNED
C  WHEN EITHER THE CONVERGENCE CRITERION OR THE MAX ITERATION (15) HAS
C  BEEN EXCEEDED.
C---------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - AUGUST 1983
C---------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/fratng'
      INCLUDE 'common/genq26'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/root26'
C
       DIMENSION W(1),PO(*),SPEL(1),SPQ(1),HD(1),HQ(1),RCNM(1),CYO(4)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xctq26.f,v $
     . $',                                                             '
     .$Id: xctq26.f,v 1.1 1995/09/17 19:06:28 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XCTQ26 ***')
C
C  SET UP NEEDED CONSTANT VARIABLES AND POINTERS
C
      NTRP = 0
C
C  SET INITIAL GENERATION Q ESTIMATE AS THE FIRST ELEMENT IN THE
C  HEAD VS Q ARRAY.
C
      QGEN = HQ(1)
C
C  SET DUMMY VARIABLES FOR CALL TO FSTGQ
C
      ISTGQ = 2
      ITSPOS = 1
      NVALS = 1
      TSDELT = PO(7)
      DO 10 I=1,4
      CYO(I) = 0.0
   10 CONTINUE
      KSTHR = TSDELT
C
C-------------------------------------------------
C  CREATE A TOTALQ - MAX GEN Q ENTRY FOR AN ELEVATION IN THE STORAGE
C  CURVE.
C
      DO 1000 I=1,NSE
      ITERS = 0
      LOCT = LOCTQ + I - 1
      LOCMQ = LOCT + NSE
C
C  THE ELEVATION FOR THE CURVE IS THE SAME AS THE ELEVATION FOR
C  THE STORAGE CURVE.
C
      ELSP = PO(LESELV+I-1)
C
C  GET THE SPILLWAY DISCHARGE FOR THE ELEVATION.
C
      CALL NTER26(ELSP,TSPQ,SPEL,SPQ,NQE,IFLAG,NTRP,IBUG)
C
C--------------------
C  NOW COMPUTE THE GENERATION Q TO CONVERGENCE
C   (OR PAST ALLOWED NO. OF ITERATIONS)
C
  150 CONTINUE
      QTOT = TSPQ + QGEN + SLUICE
C
C  GET THE STAGE FOR THIS DISCHARGE. FSTGQ IS FORCED TO THE LINEAR
C  TRANSFORMATION BY HAVING ALL ZEROS FOR CARRYOVER.
C
      CALL FGETRC(RCNM,IERRC)
      FLSAVE=FRLOOP
      FRLOOP=-999.0
      CALL FSTGQ(RCNM,ISTGQ,ITSPOS,NVALS,TSDELT,QTOT,TWEL,IX,X,X1,X2,X3,
     .           X4,IX1,X5,IX2,CYO,JULDAY,KSTHR,IX3,IX4,IX5)
      FRLOOP=FLSAVE
C
C  GET TOTAL ELEVATION
C
      TOTEL = GZERO + TWEL
C
C  COMPUTE HEAD (DIFFERENCE BETWEEN POOL ELEVATION AND TAILWATER ELEV.)
C
      HEAD = ELSP - TOTEL
C
C  COMPUTE THE MAX GENERATION DISCHARGE FOR THIS HEAD.
C
      CALL NTER26(HEAD,HEADQ,HD,HQ,NHQ,IFLAG,NTRP,IBUG)
C
C  GET FRACTIONAL DIFFERENCE BETWEEN THE OLD ESTIMATE AND THE ALLOWED.
C
      PCTERR = ABS((QGEN-HEADQ)/QGEN)
C
C  IF EITHER THE ERROR IS WITHIN TOLERANCE OR WE'VE EXCEEDED THE ALLOWED
C  NUMBER OF ITERATIONS, WE HAVE THE MAXQ FOR THIS ELEVATION.
C
      ITERS = ITERS + 1
      IF (PCTERR.LE.PCTERG.OR.ITERS.GT.15) GO TO 900
C
C  SET THE NEW ESTIMATE TO THE OLD PLUS HALF THE DIFFERENCE BETWEEN THE
C  OLD AND THE NEW.
C
      QGEN = QGEN + 0.5*(HEADQ-QGEN)
      GO TO 150
C
C--------------------------------
C  WE'VE REACHED THE MAX GEN Q FOR THIS ELEVATION. STORE THE TOTAL Q AND
C  THE MAX GEN Q IN THE WORK ARRAY.
C
  900 CONTINUE
      W(LOCT) = QTOT
      W(LOCMQ) = QGEN
 1000 CONTINUE
C
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XCTQ26 ***')
      RETURN
      END
