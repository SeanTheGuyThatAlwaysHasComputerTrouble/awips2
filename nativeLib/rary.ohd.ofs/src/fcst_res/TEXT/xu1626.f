C MEMBER XU1626
C  (from old member FCXU1626)
C
      SUBROUTINE XU1626(PO,W,D,LOCWS,LOCOWS)
C---------------------------------------------------------------------
C                             LAST UPDATE: 01/06/94.11:42:16 BY $WC21DT
C
C  SUBROUTINE TO COMPUTE ADD'L FLOWS CONTRIBUTED BY PRECIP AND, POSSIBLY
C  EVAPORATION, ON THE SURFACE OF A RESERVOIR.
C  SLIGHTLY DIFFERENT THINGS ARE DONE FOR THE TWO PASSES IN WHICH THIS
C  SUBROUTINE CAN BE CALLED. THESE DIFFERING TASKS ARE DESCRIBED BELOW.
C
C  ALL POINTERS AND NECESSARY PARMS HAVE BEEN FILLED PRIOR TO ANY CALLS
C  TO THIS SUBROUTINE.
C----------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - OCTOBER 1983
C----------------------------------------------------------------------
C
      INCLUDE 'common/xre26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/resv26'
      INCLUDE 'common/xco26'
      INCLUDE 'common/fdbug'
C
      DIMENSION PO(1),W(1),D(1),LOCWS(1),LOCOWS(1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xu1626.f,v $
     . $',                                                             '
     .$Id: xu1626.f,v 1.5 2005/02/22 13:52:48 hsu Exp $
     . $' /
C    ===================================================================
C
C
C  DEBUG TRACE IF CALLED FOR
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XU1626 ***')
      I4 = 4
      TOL=HREA
C
C-----------------------------------------------------------------------
C  CHECK ON WHICH PASS WE'RE IN NOW
C
ccc      IF (NRAEV .EQ. 2) GO TO 500
C
C  HERE WE'RE IN THE FIRST PASS. THE THINGS THAT NEED TO BE DONE HERE
C  ARE:
C
C    1) COMPUTE THE AVERAGE AREA,
C    2) DETERMINE THE AMOUNT OF CONTRIBUTING RAIN AND EVAP,
C    3) COMPUTE ADD'L FLOW VOLUME CONTRIBUTED,
C    4) TRANSFER CURRENT CARRYOVER TO HOLDING SPACE FOR POSSIBLE RE-
C       ESTABLISHMENT ON SECOND PASS.
C
C  DETERMINE AVERAGE AREA (JUST AREA AT STARTING ELEVATION AS FIRST
C   GUESS ON AREA IS TO KEEP ELEVATION CONSTANT)
C
      CALL NTER26(ELEV1,AREA1,W(LPTAEL),W(LPTARA),NSE,IFLAG,NTERP,IBUG)
C
C  NOW DETERMINE AMOUNT OF R/E TO MULT AREA BY TO GET VOLUME
C
C  THE FOLLOWING CHANGE MADE ON 10/17/90 -- #280
      IF(IBUG.LT.2) GO TO 110
      IF(NS2.GT.1) GO TO 110
      IST=LOCRTS
      IEND=IST+NUM-1

      WRITE(IODBUG,1602) (D(I),I=IST,IEND)
 1602 FORMAT(5X,'RAINFALL DATA FROM TIME SERIES:'/
     &(5X,20F5.2))
C      ADDHTR = D(LOCRTS+NS2-1)
  110 ADDHTR = D(LOCRTS+NS2-1)
C  END OF CHANGE OF 10/17/90
      ADDHTE = 0.00
C
C  SEE IF WE CHECK FOR EVAP EFFECTS.
C
      IF (IEVSW .LT. 0) GO TO 300
C  THE FOLLOWING CHANGE MADE ON 10/17/90 -- #280
      NDAY = (NS2-1)/NTIM24
      NPERD = MOD(NS2-1,NTIM24) + 1
      FACT = EDISTN(NPERD)
C  END OF CHANGE OF 10/17/90
C
C  EVAP IS CONSIDERED. SEE IF IT COMES FROM TS OR CURVE
C
      IF (IEVSW .GT. 0) GO TO 200
C
C  HERE EVAP COMES FROM MONTHLY CURVE
C
C  THE FOLLOWING CHANGE MADE ON 10/17/90 -- #280
C      NDAY = (NS2-1)/NTIM24
C      NPERD = MOD(NS2-1,NTIM24) + 1
C      FACT = EDISTN(NPERD)
C  END OF CHANGE OF 10/17/90
C
C  DETERMINE REDUCTION FACTOR. USED NOW ONLY FOR MEAN MONTHLY CURVE
C  OF PE. FACTOR IS LINEARLY REDUCED FROM A VALUE OF 1.0 AT PCPN OF
C  O.O TO O.O AT A PCPN VALUE OF 6.35 MM (.25 IN.).  THESE RANGES OF
C  PCPN ARE FOR A 6-HR PERIOD. AN ADJUSTMENT IS NEEDED FOR A DIFFERENT
C  TIME PERIOD.
C
      PCPNP = 6.35*FLOAT(MINODT)/6.
      PCT = (PCPNP-ADDHTR)/PCPNP
      IF (PCT .LT. 0.) PCT = 0.0
C
      IF (FACT .LE. 0.001) FACT=0.
      ADDHTE = -FACT * W(LRETS+NDAY)*PCT
      GO TO 300
C
C  HERE WE PULL THE EVAP VALUE FROM A TIME-SERIES.
C
  200 CONTINUE
C  THE FOLLOWING CHANGE MADE ON 10/17/90 -- #280
C      ADDHTE = -D(LOCETS+NS2-1)
      IF(IBUG.LT.2) GO TO 220
      IF(NS2.GT.1) GO TO 220
      IST=LOCETS
      NDUM=NUM/NTIM24
      IEND=IST+NDUM-1
      WRITE(IODBUG,1605) (D(I),I=IST,IEND)
 1605 FORMAT(5X,'EVAPORATION DATA ARE FROM TIME SERIES:',
     & /(5X,8F10.2))
  220 IF (D(LOCETS+NDAY).GE.0) ADDHTE = -D(LOCETS+NDAY)*FACT
C  END OF CHANGE OF 10/17/90
C
C  COMPUTE ADD'L VOLUME AND ASSIGN IT TO ADD'L Q TRACE
C  (HEIGHT VALUES ARE IN MILLIMETERS.)
C
  300 CONTINUE
      ADDHT = ADDHTR + ADDHTE
      IF (ABS(ADDHT) .LE. 0.00001) ADDHT=0.
      IF(HREA .LT. 1.0) GO TO 304
      CALL NTER26(HREA,AREA1,W(LPTAEL),W(LPTARA),NSE,IFLAG,NTERP,
     1 IBUG)
      GO TO 305
CCC *** EV CHANGE *** TO MAKE 1ST GUESS AT AREA1 IF THERE IS RAIN
 304  ESTELV=ELEV1+ADDHT/1000.
      CALL NTER26(ESTELV,ESTARE,W(LPTAEL),W(LPTARA),NSE,IFLAG,NTERP,
     1 IBUG)
      AREA1=(AREA1+ESTARE)*0.5
      IF (AREA1.LT.0.1000) AREA1=0.100
CCC ** END OF CHANGE ***
 305  CONTINUE
      READLQ = AREA1 * ADDHT/1000
C
      W(LPTADL+NS2-1) = READLQ
C
C  SET UP TEST VALUE OF ADD'L VOLUME BASED ON ADDHT ADDED TO
C  BEGINNING ELEVATION.
C
      IF (IBUG.LT.2) GO TO 350
      ELRE = ELEV1 + ADDHT/1000
      CALL NTER26(ELRE,SRE,PO(LESELV),PO(LESSTO),NSE,IFLAG,NTERP,IBUG)
      TSTADL = SRE - S1
      TSTPCT = 1.E+10
      IF (ABS(READLQ) .GE. 0.01) TSTPCT=ABS((READLQ-TSTADL)/READLQ)*100.
      ADDHTV = 0.0
      IF (PCT.GT.0.000) ADDHTV = ADDHTE/PCT
C
      WRITE(IODBUG,1630) NRAEV,ELEV1,ADDHT,ADDHTR,ADDHTE
 1630 FORMAT(5X,'> NRAEV',I2,
     .' AT ELEV. ',F7.2,' RAINEVAP HT = ',F7.3,
     .' RAINFALL AMT = ',F7.3,' EVAP HT = ',F7.3)
      WRITE(IODBUG,1620) TSTADL,READLQ,ADDHTV,AREA1,FACT
 1620 FORMAT(5X,'TSTADL = ',F8.0,' READLQ = ',F8.0,
     & ' UNREDUCED PE = ',F6.3,' AREA1=',F10.0,' FACT= ',F5.3)

C
C  MOVE CARRYOVER TO HOLDING AREA.
C
  350 CONTINUE
C      WRITE(IODBUG, '( ''W534= '', F10.3 )') W(534)
      CALL UMEMOV(W(LOCWS(I4)),W(LRECO),NUMCOV)
      GO TO 1000
C
C-----------------------------------------------------------------------
C  HERE WE'RE ON THE SECOND PASS. THE THINGS WE NEED TO DO HERE ARE:
C
C    1) COMPUTE AVERAGE AREA
C    2) COMPUTE VOLUME FROM NEW AREA
C    3) COMPARE WITH OLD FOR TOLERANCE CHECK
C    4) SET VALUES AND RESTORE CARRYOVER IF WE NEED TO REDO R/E.
C
  500 CONTINUE
C
C  IF NO METEO. INPUTS (I.E. ADDHT = 0.0) NO NEED TO CHECK ON LOOP REDO
C
      REDORE = .FALSE.
C      IF (ABS(ADDHT) .LT. 0.00001) GO TO 1000
CCC ** EV CHANGE ** TO EXIT IF READLQ (I.E. AREA1) = 0 AVOIDING
CCC POSSIBLE DIVIDE CHECKS
C      IF (READLQ.LT.0.01) GO TO 1000
CCC ** END CHANGE ***
C
C  COMPUTE AREA AT ENDING ELEVATION
C
      ELRE = ELEV2
      IF(HREA .GT. 1.0) ELRE=HREA
      CALL NTER26(ELRE,AREA2,W(LPTAEL),W(LPTARA),NSE,IFLAG,NTERP,IBUG)
C
      AREA = (AREA1 + AREA2) * 0.5
      IF (AREA.LT.0.1000) AREA=0.100
C
C  COMPUTE NEW ADD'L VOLUME
C
      READLN = AREA * ADDHT/1000
C
C  COMPUTE DIFFERENCE BETWEEN OLD VOLUME AND NEW
C
      PCTDIF =0.
      IF (ABS(READLQ) .GE. 0.01) PCTDIF = ABS((READLQ - READLN)/READLQ)
      READLQ = READLN
      W(LPTADL+NS2-1) = READLQ
C
C  SEE IF WE NEED TO REDO R/E LOOP
C
      IF (PCTDIF .GT. TOL) REDORE = .TRUE.
C
      IF (IBUG.GE.2) WRITE(IODBUG,1680) NRAEV,READLQ,PCTDIF,HREA,REDORE
     .       ,ELEV2
 1680 FORMAT(5X,'> NRAEV',I2,' ADDLVOL READLQ= ',F10.0/
     .7X,'PCT. DIFF. = ',F8.5,' TOLERANCE = ',F6.3,' RECOMPUTE VOLUME?',
     . L4,' ELEV. = ',F12.3)
C
C  RESTORE CARRYOVER IF WE NEED TO REDO R/E LOOP
C
C      WRITE(IODBUG, '( ''W534= '', F10.3 )') W(534)
      IF (REDORE) CALL UMEMOV(W(LRECO),W(LOCWS(I4)),NUMCOV)
C
C------------------------------------------------------------
C  THAT'S IT, WE'RE ALL FINISHED.
C
 1000 CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XU1626 ***')
      RETURN
      END
