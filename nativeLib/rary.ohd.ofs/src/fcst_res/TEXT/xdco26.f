C MEMBER XDCO26
C  (from old member FCXDCO26)
C
C DESC SET UP INFORMATION TO ASSIST IN SUPPLYING DEFAULT CARRYOVER
C DESC  FOR S/U'S NOT EXECUTED WITHIN A TIME-PERIOD.
C---------------------------------------------------------------------
      SUBROUTINE XDCO26(PO,W,LOCWS,IDPT)
C---------------------------------------------------------------------
C  SUBROUTINE TO SET FLAGS, INDICATORS AND OTHER VALUES TO ASSIST IN
C  SUPPLYING DEFAULT CARRYOVER FOR S/U'S THAT ARE NOT EXECUTED DURING A
C  TIME STEP.
C
C  SPACE WITHIN THE WORK ARRAY HAS ALREADY BEEN SET ASIDE FOR THIS INFO.
C
C---------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - AUGUST 1983
C----------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/fdbug'
      COMMON/FATLGK/IATL,C1,C2
C
      DIMENSION PO(1),W(1),LOCWS(1),IDPT(1),ITRIB(2)
C
      LOGICAL FOP7
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xdco26.f,v $
     . $',                                                             '
     .$Id: xdco26.f,v 1.6 2004/01/12 14:44:07 hsu Exp $
     . $' /
C    ===================================================================
C
      DATA BLANK/4H    /
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600) IBUG,NSUDEF
 1600 FORMAT('   *** ENTER XDCO26 *** IBUG & NSUDEF = ',2I5)
C
C---------------------------------------------------------------------
C  LOOP THROUGH ALL DEFINED SCHEMES AND UTILITIES.
C
C  ONLY CERTAIN S/U'S WILL SAVE CARRYOVER AND, HENCE, NEED DEFAULT
C  INSTRUCTIONS. THESE ARE:
C
C   SU#2 - SETQ
C   SU#3 - SETH
C   SU#5 - FILL & SPILL
C   SU#6 - SPILLWAY
C   SU#8 - STPOOLQ
C   SU#10 - MUNQ    - NO INFO NEEDS TO BE PASSED FOR DEFAULT
C   SU#11 - INDUCED SURCHARGE - NO DEFAULT INFO NEEDS TO BE PASSED
C   SU#12 - FLASHBDS
C   SU#13 - POWER GENERATION - NO DEFAULT INFO NEEDS TO BE PASSED
C   SU#14 - RULEADJ - NO INFO NEEDS TO BE PASSED FOR DEFAULT
C
      IF (NSUDEF .EQ. 0) GO TO 9999
      NADD = 1
C
      LOCPCU = LOCWS(5)
C
      DO 100 I=1,NSUDEF
      LOCSUN = LOCPTR + (I-1)*4 + 1
      ISUNUM = PO(LOCSUN)
      LOCPM = PO(LOCSUN+1)
      LOCDCO = LOCPCU + I - 1
      LOCTSP = W((I*3)-1)
C
C  GET THE BASE OF THE S/U
C
CC      CALL XBLV26(SUNUM,IBASE,LEVEL)
      IBASE=ISUNUM/10
C
C  GO TO PROPER LOCATION TO STORE DEFAULT INFO.
C
      IF(IBASE.LT.150) THEN
         IGO=IBASE-100
         GO TO (100,1020,1030,100,1050,1060,100,1080,100,
     .   1100,1110,1120,1130,100,100), IGO
      ELSE
         IGO=IBASE-150
         GO TO (1510,100,100,100,100,100,100,100,100,100,100,100), IGO
      ENDIF
C
C--------------------------------------
C  'SETQ'  -  NEED TO STORE NUMBER OF VALUES NEEDED FOR CARRYOVER
C
 1020 CONTINUE
      W(LOCDCO) = 0.01
      IWHICH = PO(LOCPM)
      IF (IWHICH .LE. 0) GO TO 100
      W(LOCDCO) = PO(LOCPM+1)
C
      IF (IBUG.GE.2) WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
 1620 FORMAT('   FOR S/U NO.',I5,' WORK LOCATION AND VALUE IS :',I4,
     .       F12.3)
C
      GO TO 100
C
C------------------------------------
C  'SETH' - NEED TO STORE NUMBER OF VALUES NEEDED FOR CARRYOVER
C
 1030 CONTINUE
      W(LOCDCO) = 0.01
      IWHICH = PO(LOCPM)
      IF (IWHICH .LE. 0) GO TO 100
      W(LOCDCO) = PO(LOCPM+1)
      IF (IBUG.GE.2) WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      GO TO 100
C
C-----------------------------------------
C  'FILLSPILL' - NEED TO GET DEFAULT NON-SPILLWAY DISCHARGE, AND TO
C                INDICATE IF NORMAL DISCHARGE IS FOUND IN TIME SERIES.
C
 1050 CONTINUE
      LOCTS = PO(LOCSUN+2)
      W(LOCDCO) = PO(LOCPM)
      IF (PO(LOCTS).EQ.BLANK.AND.PO(LOCTS+1).EQ.BLANK) GO TO 155
      W(LOCDCO) = -W(LOCDCO)
  155 CONTINUE
      IF (IBUG.GE.2) WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      GO TO 100
C
C-----------------------------------------------
C  'SPILLWAY' ROUTING - ONLY INFO HELD IN I-TH POSITION OF W ARRAY IS
C             THE POINTER TO THE THREE PIECES OF INFO NEEDED FOR DEFAULT
C             CARRY SAVE.
C             THE THREE PIECES OF INFO ARE:
C              1) WHICH (IF ANY) TIME SERIES SUPPLY DATA,
C              2) HOW MAX GENQ IS SUPPLIED (CONSTANT OR CURVE GENERATED.
C              3) WHAT THE CONSTANT SLUICEQ IS.
C
 1060 CONTINUE
      LOCSPI = LOCPCU + NSUDEF + NADD - 1
      W(LOCDCO) = LOCSPI + 0.01
      NADD = NADD + 3
C
C  IF ALL PARMS FOR THIS SCHEME WERE DEFINED ELSEWHERE, GO THERE.
C
      IF (PO(LOCPM).LT.0.00) LOCPM = -PO(LOCPM)
C
C  ITYPE INDICATES IF NON-GATED (0) OR GATED (1).
C
      ITYPE = PO(LOCPM)
C
C  NOW NEED TO GET TO INFO TO TELL US IF MAX GENQ IS A CONSTANT OR
C  COMPUTED FROM A CURVE.
C
      IADD = 4
      IF (PO(LOCPM+3).GT.0.0) IADD = 2*PO(LOCPM+3) + 4
      LOCNHV = LOCPM + IADD + ITYPE + 1
      NHVAL = PO(LOCNHV)
      IADD = 1
      IF (NHVAL.GT.0) IADD = 2*NHVAL + 4
      IF (NHVAL.LT.0) IADD = 4
      QMX = -999.0
      LOCQMX = LOCNHV + IADD
      IF (NHVAL.EQ.0) QMX = PO(LOCQMX)
C
C  NOW GET CONSTANT SLUICE DISCHARGE
C
      LOCSLQ = LOCQMX
      IF (NHVAL.EQ.0) LOCSLQ = LOCSLQ + 1
      SLQ = PO(LOCSLQ)
C
C  NOW LOOK FOR TS IDS.
C
      ITS = 0
      IF (IDPT(LOCTSP).GT.0) ITS = ITS + 1
      IF (IDPT(LOCTSP+1).GT.0) ITS = ITS + 2
C
C  NOW STORE INFO
C
      W(LOCSPI) = ITS + 0.01
      W(LOCSPI+1) = QMX
      W(LOCSPI+2) = SLQ
C
      IF (IBUG.LT.2) GO TO 100
      WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      LCEND = LOCSPI+2
      WRITE(IODBUG,1621) (W(L),L=LOCSPI,LCEND)
 1621 FORMAT(' ADD''L VALUES ARE:',/(8F10.3))
      GO TO 100
C
C---------------------------------------------------------
C  'STPOOLQ' - NEED TO STORE SEVEN ADD'L VALUES.
C         1. NO. OF GAGES FOR THIS DEFINITION.
C         2. LOCATION OF LAG/K PARMS FOR FIRST GAGE.
C         3. RATING CURVE ID (MAY BE BLANK - 2 WORDS NEEDED).
C         5. LOCATION OF LAG/K PARMS FOR SECOND GAGE. (IF 2 GAGES)
C         6. RATING CURVE ID FOR SECOND GAGE (MAY BE BLANK - 2 WORDS)
C
 1080 CONTINUE
      LOCSTQ = LOCPCU + NSUDEF + NADD - 1
      W(LOCDCO) = LOCSTQ + 0.01
ccc      IF (IBUG.GE.2) WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      NADD = NADD + 7
C
      NGAGES = PO(LOCPM)
      W(LOCSTQ) = PO(LOCPM)
C
C  SET UP TRIBUTARY CONTROL INDICATOR IF USED
C  = 0, D/S FLOW CONDITION CONTROL, =1, TRIBUTARY CONTROL
      ITRIB(1)=0
      ITRIB(2)=0
      IF(NGAGES.GT.2) THEN
         NGAGES=NGAGES/100
         DUM=PO(LOCPM)-NGAGES*100
         ITRIB(1)=DUM/10
         ITRIB(2)=DUM-ITRIB(1)*10
      ENDIF
C
      IADD = 2
      IF (PO(LOCPM+1).GT.0.05) IADD = 2 + NTIM24
      LOCNXT = LOCPM + IADD
C
C  LOOP THROUGH PO ARRAY TO GET INFO FOR (UP TO TWO) GAGES
C
      DO 188 K=1,NGAGES
      W(LOCSTQ+(K-1)*3+2) = PO(LOCNXT+1)
      W(LOCSTQ+(K-1)*3+3) = PO(LOCNXT+2)
      NRELD = PO(LOCNXT+3)
      LOCNXT = LOCNXT + 3
C
      DO 181 J=1,NRELD
      LOCNXT = LOCNXT + 1
      LOCNXT = LOCNXT + PO(LOCNXT)
  181 CONTINUE
C
      DO 183 J=1,2
      LOCNXT = LOCNXT + 1
      NELN = PO(LOCNXT)
      IF (NELN.EQ.0) GO TO 183
      LOCNXT = LOCNXT + 2*NELN
  183 CONTINUE
      LOCNXT = LOCNXT + 1
C
      IADD = 0
      IF (K.EQ.2) GO TO 184
      IADD = 1
      IF (PO(LOCNXT).GT.0.05) IADD = 2*PO(LOCNXT) + 2
  184 CONTINUE
      LOCNXT = LOCNXT + IADD
C
      W(LOCSTQ+(K-1)*3+1) = LOCNXT
      NLAGK = PO(LOCNXT)
      LOCNXT = LOCNXT + 1
      DO 187 M=1,NLAGK
C
C  DETERMINE NO. OF VALUES USED BY LAG/K IN PO ARRAY
C
      NUMLAG = PO(LOCNXT+15)
      LOCKA = PO(LOCNXT+17) + LOCNXT - 1
      IATL = 1
      IF(PO(LOCNXT-1 + 11) .GT. 0.0)IATL = 0
      IF (.NOT.FOP7(PO(LOCKA),PO(LOCKA+1)) .OR. IATL.EQ.0) GO TO 186
C
      NVAL7 = PO(LOCNXT+NUMLAG)
      NVAL27 = PO(LOCNXT+NUMLAG+1+2*NVAL7)
C
      NUMLAG = NUMLAG + 2 + 2*NVAL7 + 2*NVAL27
  186 CONTINUE
      LOCNXT = LOCNXT + NUMLAG
  187 CONTINUE
  188 CONTINUE
C
      IF (IBUG.LT.2) GO TO 100
      WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      LCEND=LOCSTQ
      WRITE(IODBUG,1622)
 1622 FORMAT(10X,'    IG ITRIB  LOC-LK-G1  RC-ID')
      DO IG=1,NGAGES
      LCST = LCEND+1
      LCEND = LCST+IG*2
      WRITE(IODBUG,1623) IG,ITRIB(IG),W(LCST),(W(L),L=LCEND-1,LCEND)
 1623 FORMAT(10X,I6,I6,F110.0,2X,2A4)
      ENDDO
      GO TO 100
C
C---------------------------------------------------------
C  'MINH' - NO ADD'L INFO NEEDED
C
 1100 CONTINUE
      GO TO 100
C
C---------------------------------------------------------
C  'INDSRCHGE' - NO ADD'L INFO NEEDED
C
 1110 CONTINUE
      GO TO 100
C
C---------------------------------------------------------
C  'FLASHBDS' - ONLY INFO HELD IN I-TH POSITION IS LOCATION OF ADD'L
C               INFO. NEED FOUR OTHER VALUES:
C                   1.  COMBINATION OF SMALL BOARDS AND/OR GATES,
C                   2.  NON-TIME-SERIES VALUE FOR MAX GENERATION Q,
C                   3.  NON TIME-SERIES VALUE FOR SLUICE DISCHARGE, AND
C                   4.  INDICATOR FOR USE OF TIME-SERIES TO GET VALUES
C                       2 AND 3.
C
 1120 CONTINUE
C
      LOCFBD = LOCPCU + NSUDEF + NADD - 1
      W(LOCDCO) = LOCFBD + 0.01
      NADD = NADD + 4
C
C  SET INDICATOR FOR COMB. OF SMALL BOARDS AND/OR GATES.
C
      NSMALL = PO(LOCPM+1)
      ISM = (NSMALL-1)/(NSMALL+1) + 1
C
C  NOW LOCATE GATE SWITCH
C
      LOCNLR = LOCPM + 7
      NRT = PO(LOCNLR)
      LOCSM = LOCNLR + 2*NRT + 1
      LOCGAT = LOCSM + ISM*(2*PO(LOCSM+5) + 6)
      IGATE = 2*PO(LOCGAT)
C
      ISG = ISM + IGATE
C
C  NOW GET MAX GEN AND SLUICE VALUES
C
      IADD = 2
      IF (IGATE.EQ.2) IADD = 2*PO(LOCGAT+5) + 7
      LOCHD = LOCGAT + IADD
      NHVAL = PO(LOCHD)
      IADD = 1
      IF (NHVAL.GT.0) IADD = 2*NHVAL + 4
      IF (NHVAL.LT.0) IADD = 4
C
      LOCQMX = LOCHD + IADD
      QGMX = -999.0
      IF (NHVAL.EQ.0) QGMX = PO(LOCQMX)
C
C  SLUICE Q
C
      LOCSLQ = LOCQMX
      IF (NHVAL.EQ.0) LOCSLQ = LOCSLQ + 1
      SLQ = PO(LOCSLQ)
C
C  NOW SET TIME-SERIES INDICATOR
C
      ITAB = 0
      DO 225 J=1,2
      IF (IDPT(LOCTSP+2+J).EQ.0) GO TO 225
C
      ITAB = ITAB + 10**(2-J)
  225 CONTINUE
C
C  NOW STORE ALL INFO
C
      W(LOCFBD) = ISG + 0.01
      W(LOCFBD+1) = QGMX
      W(LOCFBD+2) = SLQ
      W(LOCFBD+3) = ITAB + 0.01
C
      IF (IBUG.LT.2) GO TO 100
      WRITE(IODBUG,1620) ISUNUM,LOCDCO,W(LOCDCO)
      LCEND = LOCFBD+3
      WRITE(IODBUG,1621) (W(L),L=LOCFBD,LCEND)
      GO TO 100
C
C-----------------------------------------------------------
C  'POWERGEN' - NO ADD'L INFO NEEDED
C
 1130 CONTINUE
      GO TO 100
C
C------------------------------------------------------
C  'RULEADJ' - NO ADD'L INFO NEEDED HERE.
C
 1510 CONTINUE
      GO TO 100
C
  100 CONTINUE
C
 9999 CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XDCO26 ***')
      RETURN
      END
