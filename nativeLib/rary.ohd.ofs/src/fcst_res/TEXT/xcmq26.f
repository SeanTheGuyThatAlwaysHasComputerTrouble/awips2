C MEMBER XCMQ26
C  (from old member FCXCMQ26)
C
C @PROCESS LVL(77)
C DESC COMPUTE ELEVATION VS MAX (TOTAL OR GENERATION) DISCHARGE CURVE
C----------------------------------------------------------------------
C                             LAST UPDATE: 02/22/94.10:23:58 BY $WC30KH
C
      SUBROUTINE XCMQ26(PO,W,LOCMQ,SPEL,SPQ,NQE,HD,HQ,NHQ,RCNM,CONV)
C---------------------------------------------------------------------
C  SUBROUTINE TO COMPUTE THE ELEVATION VS. MAXIMUM (EITHER TOTAL OR
C  GENERATION) DISCHARGE CURVE FROM ITS COMPONENT PIECES. THIS IS
C  AN ITERATIVE PROCEDURE, WITH A VALUE FOR EACH ELEVATION ASSIGNED
C  WHEN EITHER THE CONVERGENCE CRITERION OR THE MAX ITERATION (15) HAS
C  BEEN EXCEEDED.
C---------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - AUGUST 1983
C---------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/fratng'
      INCLUDE 'common/genq26'
      INCLUDE 'common/fdbug'
C
       DIMENSION W(1),PO(*),SPEL(1),SPQ(1),HD(1),HQ(1),RCNM(1),CYO(4)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xcmq26.f,v $
     . $',                                                             '
     .$Id: xcmq26.f,v 1.1 1995/09/17 19:06:25 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XCMQ26 ***')
C
C  SET UP NEEDED CONSTANT VARIABLES AND POINTERS
C
      NTRP = 0
C
C  SET INITIAL GENERATION Q ESTIMATE AS THE FIRST ELEMENT IN THE
C  HEAD VS Q ARRAY.
C
      QGEN = HQ(1)
C
C  SET DUMMY VARIABLES FOR CALL TO FSTGQ
C
      ISTGQ = 2
      ITSPOS = 1
      NVALS = 1
      TSDELT = PO(7)
      DO 10 I=1,4
      CYO(I) = 0.0
   10 CONTINUE
      KSTHR = TSDELT
C
C-------------------------------------------------
C  NOW CREATE A MAXIMUM Q FOR EACH ELEVATION IN THE ELEV. VS. STORAGE
C  CURVE.
C
      DO 1000 I=1,NSE
      ITERS = 0
      LOCQ = LOCMQ + I - 1
C
      POOLEL = PO(LESELV+I-1)
      TSPQ = 0.0
C
C  IF NO SPILLWAY CURVE ENTERED, THIS IS A MAX. GENERATION CURVE.
C   JUST ADD THE DEFAULT OF 0.0 TO THE ESTIMATED MAX.
C
      IF (NQE.EQ.0) GO TO 100
C
C  OTHERWISE, GET THE SPILLWAY DISCHARGE FOR THE ELEVATION.
C
      CALL NTER26(POOLEL,TSPQ,SPEL,SPQ,NQE,IFLAG,NTRP,IBUG)
C
  100 CONTINUE
C
C--------------------
C  NOW COMPUTE THE GENERATION Q TO CONVERGENCE
C   (OR PAST ALLOWED NO. OF ITERATIONS)
C  SLUICE DISCHARGE IS ADDED TO GET PROPER TAILWATER HEIGHT. (WILL
C  BE SET TO 0.00 IN CALLING ROUTINE IF NOT USED)
C
  150 CONTINUE
      QMAX = TSPQ + QGEN + SLUICE
C
C  GET THE STAGE FOR THIS DISCHARGE. FSTGQ IS FORCED TO THE LINEAR
C  TRANSFORMATION BY HAVING ALL ZEROS FOR CARRYOVER.
C
      CALL FGETRC(RCNM,IERRC)
      FLSAVE=FRLOOP
      FRLOOP=-999.0
      CALL FSTGQ(RCNM,ISTGQ,ITSPOS,NVALS,TSDELT,QMAX,TWEL,IX,X,X1,X2,
     .           X3,X4,IX1,X5,IX2,CYO,JULDAY,KSTHR,IX3,IX4,IX5)
      FRLOOP=FLSAVE
C
C  GET TOTAL ELEVATION
C
      TOTEL = GZERO + TWEL
C
C  COMPUTE HEAD (DIFFERENCE BETWEEN POOL ELEVATION AND TAILWATER ELEV.)
C
      HEAD = POOLEL - TOTEL
C
C  COMPUTE THE MAX GENERATION DISCHARGE FOR THIS HEAD.
C
      CALL NTER26(HEAD,HEADQ,HD,HQ,NHQ,IFLAG,NTRP,IBUG)
C
C  GET FRACTIONAL DIFFERENCE BETWEEN THE OLD ESTIMATE AND THE ALLOWED.
C
      PCTERR = ABS((QGEN-HEADQ)/QGEN)
C
C  IF EITHER THE ERROR IS WITHIN TOLERANCE OR WE'VE EXCEEDED THE ALLOWED
C  NUMBER OF ITERATIONS, WE HAVE THE MAXQ FOR THIS ELEVATION.
C
      ITERS = ITERS + 1
      IF (PCTERR.LE.CONV.OR.ITERS.GT.15) GO TO 900
C
C  SET THE NEW ESTIMATE TO THE OLD PLUS HALF THE DIFFERENCE BETWEEN THE
C  OLD AND THE NEW.
C
      QGEN = QGEN + 0.5*(HEADQ-QGEN)
      GO TO 150
C
C--------------------------------
C  WE'VE REACHED THE MAXQ FOR THIS ELEVATION, SO STORE IT IN THE W ARRAY
C
  900 CONTINUE
      W(LOCQ) = QMAX
 1000 CONTINUE
C
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XCMQ26 ***')
      RETURN
      END
