C MODULE EX26
C
C  DESC EXECUTION ROUTINE FOR 'RES-SNGL' - SINGLE RESERVOIR OPERATION 26
C-----------------------------------------------------------------------
C
C
      SUBROUTINE EX26(PO,CO,D,IDPT,W)
C
C-----------------------------------------------------------------------
C  SUBROUTINE FOR EXECUTING THE 'RES-SNGL' OPERATION - #26 - THE SINGLE
C  RESERVOIR OPERATION.
C
C      PO   - ARRAY HOLDING PARAMETERS FOR THIS OPERATION AS DEFINED IN
C             PIN26 ROUTINE.
C      CO   - CARRYOVER FOR THE VARIOUS SCHEMES AND UTILITIES DEFINED
C             IN THIS OPERATION DEFINITION.
C      D    - ARRAY HOLDING TIME-SERIES DATA FOR THE OPERATION.
C      IDPT - ARRAY HOLDING STARTING LOCATIONS OF ALL TIME-SERIES USED
C             IN THIS OPERATION. THE ORDER OF THE LOCATION VALUES IS SET
C             BY THE ORDER OF DEFINITION OF THE S/U'S (EXCEPT FOR THE
C             REQUIRED AND OPTIONAL GENERAL TIME SERIES WHICH WILL BE
C             THE FIRST SIX VALUES IN THE ARRAY.)
C      W    - WORK ARRAY FOR VARIOUS TASKS IN THE OPERATION. THE AMOUNT
C             OF SPACE NEEDED IS DETERMINED AT PIN TIME. ONE OF THE
C             ROUTINES IN THE EXECUTION PHASE WILL GIVE OUT THE WORK
C             SPACE AND NOTE THE LOCATION FOR PROGRAM USE.
C-----------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - OCTOBER 1983
C-----------------------------------------------------------------------
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/xco26'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/where'
       COMMON/NWRN26/NWFRAC
C
      REAL*8 SNAME
      DIMENSION PO(*),CO(*),D(*),IDPT(*),W(*),LOCWS(5),LOCOWS(13)
C ADDITIONS FOR MAINTENANCE 242
      DIMENSION ERRD(1000),LOCERR(1000)
      DIMENSION AUNIT(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/ex26.f,v $
     . $',                                                             '
     .$Id: ex26.f,v 1.6 2005/02/22 13:52:17 hsu Exp $
     . $' /
C    ===================================================================
C
      DATA BLANK/4H    /,PELV/4HPELV/
      DATA AUNIT/4H FT.,4H  M./
C
      DATA SNAME/8HRES-SNGL/,NUMOP/26/
C EJV CHANGE FOR MAINTENANCE 290
C MUST INITIALIZE COUNTER OF NUMBER OF WARNINGS TO ZERO
C FOR FRAC26
      NWFRAC=0
C END CHANGE
C
C-------------------------------------------
C  FIRST SET DEBUG LEVEL
C
      IBUG = 0
      CALL FPRBUG(SNAME,1,NUMOP,IPBUG)
      IF (ITRACE .GT. 0) IBUG = 1
      IF (IPBUG  .GT. 0) IBUG = 2
ccc	ibug=2
      IF (IBUG.GE.1) WRITE(IODBUG,1698) ISEG
 1698 FORMAT('    *** ENTER EX26 *** -- ',2A4)
C
C  INITIALIZE VARIOUS VARIABLES FOR LATER USE IN ALL SUBSEQUENT ROUTINES
C
      NUM = 0
      CALL XNIT26(PO)
C
C  DEBUG OUTPUT OF INFLOW TIME-SERIES (BOTH INST. AND MEAN)
C
      LOBSA = NRUN
      IOFF = IDOFST * NTIM24
      IF (IBUG.GE.2) WRITE(IODBUG,1610) (D(IDPT(1)+IOFF+I-1),I=1,NUM)
 1610 FORMAT(/'   ** INST. INFLOW TIME-SERIES :'//,(8F10.1))
      IF (IBUG.GE.2) WRITE(IODBUG,1620) (D(IDPT(2)+IOFF+I-1),I=1,NUM)
 1620 FORMAT(/'   ** MEAN INFLOW TIME-SERIES :'//,(8F10.1))
C
C  NEXT SET UP POINTERS FOR CROSS REFERENCE OF S/U DEFINITION BY
C  S/U BASE NUMBER AND LEVEL.
C
ccc      CALL XSPT26(PO)
C
C  SET UP LOCATIONS FOR ALL THE NEEDED WORK SPACE
C   LOCWS IS ARRAY HOLDING POINTERS FOR REQUIRED WORK SPACE (NEEDED FOR
C    ANY COMBINATION OF S/U'S.)
C   LOCOWS IS ARRAY HOLDING POINTERS FOR OPTIONAL WORK SPACE
C    NECESSITATED BY DEFINITON OF VARIOUS S/U'S.
C
      CALL XDOL26(PO,CO,D,W,IDPT,LOCWS,LOCOWS)
C
C-----------------------------------------------------------------
C
C EV CHANGE 4/15/86 MAINTENANCE ITEM=242
C TO CHANGE ANY OBSEVED ELEVATIONS TO MISSING IF BELOW LOWEST
C   ELEVEATION DEFINED.  ONLY CHANGED TEMPORARILY, IE., SET
C   TO MISSING FOR THIS OPERATION BUT SET BACK TO ORIGINAL
C   OBS BEFORE EXITING.
C
C VARIABLES USED
C ELVMIN - LOWEST ELEV DEFINED
C LOCIDP - POINTER TO IDPTR ARRAY FOR POOL ELEV TIME SERIES
C LOCDEL - POINTER TO D ARRAY FOR POOL ELEV TS
C NERRD  - NUMBER OF ERRONOUS POOL OBS THAT WERE CHANGED
C ERRD   - ARRAY CONTAINING ORIGINAL ERRONUS POOL OBS
C LOCERR - ARRAY OF POINTERS TO LOCATION IN D ARRAY FOR EACH ERRD
C
C
C FIRST DETERMINE LOWSEST ELEV
      LOCPEL=PO(10)+1
      ELVMIN=PO(LOCPEL)
C
C GO THRU TIME SERIES IN PO ARRAY TO SEE IF PELV DEFINED
C   IF NOT SKIP OUT OF THIS LOGIC
C   IF SO, THEN THE SEQUENCE NUMBER OF THIS TIME SERIES
C   IS THE POINTER NUMBER FOR IDPT ARRAY
C
      NERRD=0
C      NUMTS=PO(PO(11))
      IPO11=PO(11)
      NUMTS=PO(IPO11)
      LOCTS=PO(11)+1
      DO 1100 I=1,NUMTS
      IF (PO(LOCTS).EQ.BLANK.AND.PO(LOCTS+1).EQ.BLANK) GO TO 1000
      LOCIDP=I
      IF (PO(LOCTS+2).EQ.PELV) GO TO 1200
C  THIS TS IS DEFINED BUT IS NOT PELV SO LOOP TO NEXT TS
      LOCTS=LOCTS+5
      GO TO 1100
C  THIS TS IS NOT DEFINED SO LOOP TO NEXT TS
 1000 CONTINUE
      LOCTS=LOCTS+2
 1100 CONTINUE
C  PELV NOT DEFINED
      GO TO 1400
C  PELV FOUND. FIND LOCATION IN D ARRAY JUST BEFORE THIS TS (IE., -1)
 1200 CONTINUE
      IDTEL = PO(LOCTS+3)
      NPEL = NUM*MINODT/IDTEL
      IOFFEL = IDOFST*24/IDTEL
      LOCDEL=IDPT(LOCIDP)+IOFFEL-1
C
C  LOOP THRU THIS TIME SERIES AND CHECK IF ANY BELOW ELVMIN
C IF SO THEN
C 1. INCREMENT NERRD
C 2. STORE OBS IN ERRD
C 3. STORE D LOCATION IN LOCERR
C 4. SET OBS TO MSNG IN D ARRAY
C
      DO 1300 I=1,NPEL
      LOCDEL=LOCDEL+1
      IF (IFMSNG(D(LOCDEL)).EQ.1) GO TO 1300
      IF (D(LOCDEL).GE.ELVMIN) GO TO 1300
C OBS IS BELOW
      NERRD=NERRD+1
      ERRD(NERRD)=D(LOCDEL)
      LOCERR(NERRD)=LOCDEL
      D(LOCDEL)=-999.0
1300  CONTINUE
      IF (NERRD.LE.0) GO TO 1323
      IF (METRIC.EQ.1) GO TO 345
C
C  MUST CONVERT TO ENGLISH UNITS (FEET)
C
      CALL FCONVT(4HM   ,4HL   ,IENGUN,XMULT,XADD,IERX)
      ELVMIN=ELVMIN*XMULT
C
 345  WRITE(IPR,810) NERRD,ELVMIN,AUNIT(METRIC+1)
      CALL WARN
810   FORMAT(/10X,'**WARNING**',I3,' OBSERVED POOL ELEVATIONS WERE',
     1 ' BELOW MINIMUM ELEVATION OF',F7.1,A4
     2 /10X,'THESE OBSERVATIONS WILL BE IGNORED.')
C DEBUG
1323  CONTINUE
C      WRITE(IODBUG, '( ''LOCIDP = '', I5  )') LOCIDP
      IF (IBUG.GE.2) WRITE(IODBUG,1630)
     1 (D(IDPT(LOCIDP)+IOFFEL+I-1),I=1,NPEL)
 1630 FORMAT(/'   ** OBSERVED POOL ELEVAT TIME-SERIES :'//,(8F10.2))
C
1400  CONTINUE
C-------------------------------------------------------------------
C  THE FOLLOWING CHANGE MADE ON 12/14/90 -- M624
C      CALL XSPT26(PO)
C      CALL XDOL26(PO,CO,D,W,IDPT,LOCWS,LOCOWS)
C  END OF CHANGE OF 12/14/90
C
C  SET UP DEFAULT CARRYOVER INFORMATION (INFO NEEDED TO STORE PROPER
C  CARRYOVER IF THE S/U IS NOT EXECUTED WITHIN A TIME PERIOD.)
C
      CALL XDCO26(PO,W,LOCWS,IDPT)
      IF (IBUG.GE.2) WRITE(IODBUG,1650) (CO(I),I=1,NUMCOV)
 1650 FORMAT(/'   ** CARRYOVER VALUES AT START OF RUN :'//,(8F10.2))
C
C  EXECUTE ANY PRE-COMPUTATION LOOP UTILITIES
C
      ELEV1 = CO(5)
      CALL XPRE26(PO,CO,W,D,IDPT,LOCWS,LOCOWS,LOBSA)
C
C  CALL COMPUTATIONAL LOOP SUPERVISOR (ACTUAL SIMULATION OCCURS WITHIN
C  CONTROL OF THAT ROUTINE.)
C
      CALL XQT26(PO,CO,D,W,IDPT,LOCWS,LOCOWS,LOBSA)
C
C----------------------------------------------------------------
C EV CHANGE TO MAINTENACE 242  (CONT)
C
C SEE IF ANY POOL OBS WERE CHANGED
C IF SO RESTORE THEM TO BE ORIGINAL VALUES
C
      IF (NERRD.EQ.0) GO TO 2000
      DO 1900 I=1,NERRD
      D(LOCERR(I))=ERRD(I)
1900  CONTINUE
      IF (IBUG.GE.2) WRITE(IODBUG,1640)
     1 (D(IDPT(LOCIDP)+IOFFEL+I-1),I=1,NPEL)
 1640 FORMAT(/'   ** POOL ELEVAT TS RESTORED :'//,(8F10.2))
2000  CONTINUE
C
C-------------------------------------------------------------------
C  THAT'S IT. SIMPLE,HUH?
C
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT EX26 ***')
ccc	ibug=0
      RETURN
      END
