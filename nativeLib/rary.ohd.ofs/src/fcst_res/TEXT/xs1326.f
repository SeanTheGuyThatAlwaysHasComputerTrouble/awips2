C MEMBER XS1326
C  (from old member FCXS1326)
C
      SUBROUTINE XS1326(SUNUM,PO,W,LOCWS,LOCOWS,IDPT)
C---------------------------------------------------------------------
C  SUBROUTINE TO PICK UP PARM, TIME-SERIES AND CARRYOVER FOR THE POWER
C  GENERATION SCHEME (SU#13) AND TO CALL THE COMPUTATIONAL ROUTINE FOR
C  DETERMINING END OF PERIOD DISCHARGE AND POOL ELEVATION.
C---------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - SEPT 1983
C---------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/genq26'
      INCLUDE 'common/cnvr26'
      INCLUDE 'common/rulc26'
      INCLUDE 'common/xqin26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/fprog'
C
      DIMENSION PO(*),W(*),IDPT(*),LOCWS(*),LOCOWS(*),QOMEAN(30),
     .          DATMIN(30),DATEUP(30),DATELR(30)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xs1326.f,v $
     . $',                                                             '
     .$Id: xs1326.f,v 1.3 1999/01/19 17:43:05 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XS1326 ***')
C
      IPOWER=IPOWER+1
C
C------------------------------------------------------------
C  GET LOCATIONS OF PARM, TS, AND CO INFO
C
      CALL XPTR26(SUNUM,PO,IORD,IBASE,LEVEL,LOCPM,LOCTS,LOCCO)
C
C  SET EXECUTION POINTER AND FLAG
C
      LOCEX = IORD*3
      W(LOCEX) = 1.01
C
C  SET LOCATION OF CARRYOVER OFFSET.
C
      IOFFCO = LOCWS(4) + LOCCO - 2
C
C  SET LOCATION OF TRACES OF MEAN DISCHARGE AND STORAGES IN WORK ARRAY.
C
      LOCMTR = LOCWS(2) + NDD*NTIM24
      LOCSTR = LOCMTR + 2*NDD*NTIM24
C     IF (IBUG.GE.2) WRITE(IODBUG,1610) LOCMTR,LOCSTR,NDD,NDD,NTIM24
C1610 FORMAT('    *--> MEAN TRACE LOCN = ',I5,'  STORAGE TRACE LOCN = '
C    .,I5,' NDD = ',I5,E12.3,' NTIM24 = ',I5)
C
C  SET LOCATION OF SUMMED INFLOWS CREATED IN INFLOW SUMMATION UTILITY.
C
      LOCSUM = LOCOWS(3)
C
C  SET LOCATION OF CARRYOVER FOR THIS SCHEME.
C
      LOCQMB = IOFFCO + 1
      JOPT = 1
C
C-----------------------------------------------------------------
C  NOW GET PARMS DEFINED FOR THIS SCHEME
C
C  ALL THESE PARAMETERS ARE DEFINED IN SUBROUTINE QGEN26
C
      IOFFPM = LOCPM - 1
C
      JTIMRL = PO(IOFFPM+1)
C
C  USE 1ST PERIOD TIME OF HYDROLOGIC DAY TO BRING POOL BACK TO RULECURVE
      JTIMRL=-999
      IF(JTIMRL.LT.0) JTIMRL=KHRBGN
C
C  SET LOCATION FOR DAILY DIST'N FUNCTION.
C
      LOCD24 = IOFFPM + 2
      LOCNXT = LOCD24 + NTIM24
C
C  SEE IF WEEKLY DISTRIBUTION IS BEING USED
C
      JDARUL = PO(LOCNXT)
      IADD = 1
      IF (JDARUL.EQ.-999) GO TO 50
C
C  SET LOCATION OF WEEKLY DIST'N FUNCTION.
C
      LOCDWK = LOCNXT + 1
      IADD = IADD + 7
C
C  SET MINIMUM DAILY MEAN FLOW (WILL BE -999.0 IF NOT BEING USED)
C
   50 CONTINUE
      LOCNXT = LOCNXT + IADD
      QMNDAY = PO(LOCNXT)
C  THE FOLLOWING CHANGE MADE ON 7/14/89
C     IF (QMNDAY .GE. 0.00) QMNDAY = QMNDAY*NTIM24
C  END OF CHANGE OF 7/14/89
      LOCNXT = LOCNXT + 1
C
C  SET MINIMUM WEEKLY MEAN FLOW (WILL BE -999.0 IF NOT BEING USED)
C
      QMNWEK = PO(LOCNXT)
C  THE FOLLOWING CHANGE MADE ON 7/14/89
C     IF (QMNWEK .GE. 0.00) QMNWEK = QMNWEK*NTIM24
C  END OF CHANGE OF 7/14/89
      LOCNXT = LOCNXT + 1
C
C  SET MINIMUM INSTANTANEOUS VALUES HERE. CAN BE EITHER A SINGLE VALUE,
C  NOT USED, OR A DATE VARYING RELATION.
C
      NDATMN = PO(LOCNXT)
      OUTMIN = 0.000
      IF (NDATMN.GT.1) OUTMIN = -999.0
      IF (NDATMN.EQ.1) OUTMIN = PO(LOCNXT+1)
      DATMIN(1) = -999.0
      IADD = 1
      IF (NDATMN .EQ. 1) IADD = 2
      IF (NDATMN.LE.1) GO TO 100
C
C  SET RELATION LOCATIONS
C
      DO 75 I=1,NDATMN
      DATMIN(I) = PO(LOCNXT+I)
   75 CONTINUE
C
C  SET LOCATION OF MINIMUM FLOWS
C
      LOCQMN = LOCNXT + NDATMN + 1
      IADD = 2*NDATMN + 1
C
C  SET UPPER ELEVATION RESTRICTION. THIS CAN BE UNUSED, USED AS A
C  CONSTANT, OR USED AS A DATED RELATION.
C
  100 CONTINUE
C EJV MOD
      LOCSMX = LOCOWS(11) + NDD*NTIM24
      LOCSMN = LOCOWS(11) + 2*NDD*NTIM24
C END EJV
      LOCNXT = LOCNXT + IADD
      NELVUP = PO(LOCNXT)
      ELVUPR = -999.0
      IF (NELVUP.GT.1) GO TO 150
C
C  UPPER ELEVATION IS CONSTANT.
C
      ELVUPR = PO(LOCNXT+1)
      DATEUP(1) = -999.0
      IADD = 2
      GO TO 200
C
C  FILL DATES AND SET POINTER FOR ELEVATIONS.
C
  150 CONTINUE
      DO 175 I=1,NELVUP
      DATEUP(I) = PO(LOCNXT+I)
  175 CONTINUE
C
      LOCELU = LOCNXT + NELVUP + 1
      LOCSMX = LOCOWS(11) + NDD*NTIM24
      IADD = 2*NELVUP + 1
C
C  SET LOWER ELEVATION RESTRICTION. THE USE IS IDENTICAL TO THE UPPER
C  ELEVATION LIMITATIONS.
C
  200 CONTINUE
      LOCNXT = LOCNXT + IADD
      NELVLR = PO(LOCNXT)
      ELVLWR = -999.0
      IF (NELVLR.GT.1) GO TO 250
C
C  LOWER ELEVATION IS CONSTANT.
C
      ELVLWR = PO(LOCNXT+1)
      DATELR(1) = -999.0
      IADD = 2
      GO TO 300
C
C  FILL DATES AND SET POINTER FOR ELEVATIONS.
C
  250 CONTINUE
      DO 275 I=1,NELVLR
      DATELR(I) = PO(LOCNXT+I)
  275 CONTINUE
C
      LOCELR = LOCNXT + NELVLR + 1
      LOCSMN = LOCOWS(11) + 2*NDD*NTIM24
      IADD = 2*NELVLR + 1
C
C  GET MAXIMUM DOWNSTREAM ALLOWABLE DISCHARGE
C
  300 CONTINUE
      LOCNXT = LOCNXT + IADD
      QGENDS = PO(LOCNXT)
C  THE FOLLOWING CHANGE MADE ON 7/14/89
C     IF (QGENDS .GE. 0.00) QGENDS = QGENDS*NTIM24
C  END OF CHANGE OF 7/14/89
      LOCNXT = LOCNXT + 1
C
C  GET MAXIMUM CONSTANT DISCHARGE ALLOWED FROM DAM.
C
      QGENMX = PO(LOCNXT)
C  THE FOLLOWING CHANGE MADE ON 7/14/89
C     IF (QGENMX .GE. 0.00) QGENMX = QGENMX*NTIM24
C  END OF CHANGE OF 7/14/89
      IF (QGENDS.GT.QGENMX .OR. QGENDS.EQ.-999.0) QGENDS = QGENMX
      LOCNXT = LOCNXT + 1
C
C  NEXT LOOK FOR A MAXIMUM DISCHARGE VS. ELEVATION RELATION
C
      IWHICH = PO(LOCNXT)
      LOCNXT = LOCNXT + 1
      NELVGN = 0
      IMQTYP = 0
      IADD = 0
      IF (IWHICH.EQ.0) GO TO 500
C
C  EITHER GET THE DIRECTLY INPUT CURVE OR COMPUTE IT.
C
      LOCFMQ = LOCNXT
      CALL XFMQ26(SUNUM,PO,LOCFMQ,W,LOCOWS,IMQTYP,LOCMQ,LOKELV,NELVGN)
C
      LOCMQ2 = LOCMQ + NELVGN
      LOCCRV = PO(LOCNXT)
      IADD = 1
      IF (LOCCRV.LT.0.AND.IWHICH.LT.0) GO TO 500
      IF (IWHICH.GT.0) GO TO 400
C
      IADD = 2*LOCCRV + 1
      GO TO 500
C
C  MUST ADD UP ALL THE SPACES USED FOR DEFINING THE COMPONENTS OF THE
C  ELEV. VS. MAXQ CURVE.
C
  400 CONTINUE
      IADD = 2*LOCCRV + 4
C
C  GET RULE CURVE DEFINITION
C
  500 CONTINUE
      LOCNXT = LOCNXT + IADD
      CALL XFRU26(PO,LOCNXT,W,LOCOWS)
C
C  MUST FILL STORAGES CORRESPONDING TO THE ELEVATIONS OF THE RULE CURVE
C  'TIME-SERIES'.
C
      LOCR = LOCOWS(2)
      LOCRST = LOCOWS(11)
      ADJRUL = AGBDEV
      IF (FCST .OR. IFCST.EQ.1) ADJRUL = AVGDEV
C$      IF (IFIRST.EQ.0) W(LOCRST) = -999.0
C$      IFIRST = 1
C
C  GO COMPUTE DISCHARGE
C
      IF (IMQTYP.EQ.2) GO TO 1100
C  THE FOLLOWING CHANGES MADE ON 8/29/89
      CALL QGEN26(QOMEAN,W(LPTQIM),W(LOCSUM),W(LOCQMB),W(LOCMTR),
     .          W(LOCMTR),W(LOCMTR),W(LOCSTR),W(LOCR),W(LOCRST),DATEUP,
     .          PO(LOCELU),DATELR,PO(LOCELR),W(LOCSMX),W(LOCSMN),
     .          PO(LOCMQ),PO(LOCMQ2),DATMIN,W(LOCQMN),PO(LOCD24),
     .          PO(LOCDWK),PO(LESSTO),PO(LESELV),LEVEL)
      GO TO 5000
C
 1100 CONTINUE
      CALL QGEN26(QOMEAN,W(LPTQIM),W(LOCSUM),W(LOCQMB),W(LOCMTR),
     .          W(LOCMTR),W(LOCMTR),W(LOCSTR),W(LOCR),W(LOCRST),DATEUP,
     .          PO(LOCELU),DATELR,PO(LOCELR),W(LOCSMX),W(LOCSMN),
     .          PO(LOKELV),W(LOCMQ),DATMIN,W(LOCQMN),PO(LOCD24),
     .          PO(LOCDWK),PO(LESSTO),PO(LESELV),LEVEL)
C
C  UPDATE THE CARRYOVER.
C
 5000 CONTINUE
C     IF (IBUG .LT. 2) GO TO 5010
C     IF (.NOT.ADJRUN) GO TO 5010
C     IPDIF = NS2-LOBSTO
C     IF (IPDIF .LT. -1) GO TO 5010
C     IWS = 1
C     IWE = LOCOWS(2) - 1
C     DO 5005 IK = IWS,IWE,10
C     IKE = IK+9
C     WRITE(IODBUG,1695) IK,(W(IM),IM=IK,IKE)
C1695 FORMAT(' NO.',I4,' - ',10F11.3)
C5005 CONTINUE
C
C  INDICATE (TO QGEN26) THAT WE USED QGEN26 FOR THIS PERIOD
C
 5010 CONTINUE
      IENTER(LEVEL) = 1
      IF (NTIM24.EQ.1) GO TO 5060
      DO 5050 I=2,NTIM24
      W(IOFFCO+I-1) = W(IOFFCO+I)
 5050 CONTINUE
 5060 CONTINUE
      W(IOFFCO+NTIM24) = QOM
C
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('   *** EXIT XS1326 ***')
      RETURN
      END
