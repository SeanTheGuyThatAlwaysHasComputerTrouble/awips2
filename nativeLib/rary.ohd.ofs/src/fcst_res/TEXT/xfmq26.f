C MEMBER XFMQ26
C  (from old member FCXFMQ26)
C
C DESC GENERATE THE ELEV VS. MAX (TOTAL OR GENERATION) DISCHARGE CURVE
C---------------------------------------------------------------------
      SUBROUTINE XFMQ26(SUNUM,PO,LOCST,W,LOCOWS,IMQTYP,LOCMQ,LOKELV,
     .                  NMQVAL)
C---------------------------------------------------------------------
C  SUBROUTINE TO GENERATE THE ELEVATION VS. MAXIMUM DISCHARGE (EITHER
C  TOTAL OR GENERATION) CURVE. THE CURVE CAN BE OBTAINED IN ONE OF
C  THREE WAYS:
C   1) CURVE WAS DEFINED DIRECTLY AT PIN TIME,
C   2) THERE ARE NO TAILWATER EFFECTS ON DISCHARGE, SO DISCHARGES ARE
C      JUST THE SPILLWAY RELEASES AT THE ELEVATIONS PLUS THE CONSTANT
C      NORMAL DISCHARGE,
C   3) THERE ARE TAILWATER EFFECTS AND AN ITERATIVE PROCEDURE MUST BE
C      USED TO GENERATE THE CURVE.
C
C  THE LAST TWO METHODS PUT THE GENERATED CURVE IN THE WORK ARRAY, WHILE
C  THE FIRST METHOD JUST USES THE LOCATION IN THE PO ARRAY.
C----------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/fdbug'
C
      DIMENSION PO(1),W(1),LOCOWS(1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xfmq26.f,v $
     . $',                                                             '
     .$Id: xfmq26.f,v 1.2 1999/04/23 16:53:47 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XFMQ26 ***')
C
C  GET PARM, TS, AND CARRYOVER POINTERS FOR THIS UTILITY
C
      CALL XPTR26(SUNUM,PO,IORD,IBASE,LEVEL,LOCPM,LOCTS,LOCCO)
C
C  IF EITHER 'FILLSPILL' OR 'SPILLWAY', WE NEED TO COMPUTE THE CURVE
C  WITH TAILWATER EFFECTS.
C
      IF (IBASE.EQ.105.OR.IBASE.EQ.106) GO TO 30
C
C  THE FIRST PARM VALUE INDICATES WHAT TYPE OF DEFINITON (AND COMPUTA-
C  TION) IS TO FOLLOW.
C
      LSTART = LOCST
      IWHICH = PO(LSTART)
      LSTART = LSTART + 1
C
      IF (IWHICH) 10,20,30
C
C-------------------------------------------------------
C  CURVE HAS BEEN ENTERED DIRECTLY
C
   10 CONTINUE
      IMQTYP = 1
      LOCMQ = LSTART + 1
      NMQVAL = PO(LSTART)
      IF (NMQVAL.GT.0) GO TO 9900
C
C  REFERENCE TO ORIGINAL DEFINITION LOCATION MADE IF VALUE IS < 0.
C
      LOCORG = -PO(LSTART)
      NMQVAL = PO(LOCORG)
      LOCMQ = LOCORG + 1
      GO TO 9900
C
C----------------------------------------------------------------
C  CURVE NOT DIRECTLY INPUT. NO TAILWATER EFFECTS FOR THIS DEFINITION.
C
   20 CONTINUE
      IMQTYP = 2
      ISUNUM = IBASE*10 + LEVEL
      LOCMQ = LOCOWS(7)
C
C  COMPUTE MAXQ CURVE BY ADDING THE NORMAL MAX TO THE SPILLWAY RELEASE
C  AT EACH OF THE ELEVATIONS ON THE ELEVATION VS. STORAGE CURVE.
C  IF NO SPILLWAY RATING WAS ENTERED, MAX AT EACH ELEVATION IS THE
C  CONSTANT MAX.
C
      IF (IBASE.EQ.157 .OR. IBASE.EQ.109) QNORM = PO(LSTART)
      LOCSPW = LSTART + 1
      IF (IBASE.NE.157 .AND. IBASE.NE.109) LOCSPW = LSTART
      IF (PO(LOCSPW).LT.0.0) LOCSPW = -PO(LOCSPW) + IOFPRM
      NQE = PO(LOCSPW)
      NMQVAL = NSE
      LOCSPE = LOCSPW + 1
      LOCSPQ = LOCSPE + NQE
      IF (NQE .GT. 0) NMQVAL = NQE
      LOKELV = LESELV
      IF (NQE .GT. 0) LOKELV = LOCSPE
C
C  IF THE LAST TIME WE NEEDED THIS CURVE IT WAS DEFINED BY THIS S/U,
C  THE VALUES ARE ALREADY IN 'W'.
C
      IF (ISUNUM.EQ.MRLOC(2)) GO TO 9900
      MRLOC(2) = ISUNUM
      NTRP = 0
      IF (IBASE.NE.157 .AND. IBASE.NE.109) QNORM = PO(LOCSPQ+NQE)
C
C  IF THERE IS A SPILLWAY CURVE, USE THE ELEVATIONS FROM IT. OTHERWISE
C  USE THE ELEVATIONS FROM THE ELEVATION-STORAGE CURVE.
C
C
      DO 25 I=1,NMQVAL
      WTQ = 0.0
      IF (NQE.EQ.0) GO TO 27
C
C  INTERPOLATE TO GET SPILLWAY DISCHARGE AT ELEVATION.
C
      CALL NTER26(PO(LOKELV+I-1),WTQ,PO(LOCSPE),PO(LOCSPQ),NQE,IFLAG,
     . NTRP,IBUG)
C
   27 CONTINUE
      W(LOCMQ+I-1) = WTQ + QNORM
C
   25 CONTINUE
C
      IF (IBUG.GE.2) WRITE(IODBUG,1610) (PO(LOKELV+I-1),I=1,NMQVAL)
      IF (IBUG.GE.2) WRITE(IODBUG,1611) (W(LOCMQ+I-1),I=1,NMQVAL)
 1610 FORMAT(/'   ** ELEVATION VS. MAX DISCHARGE CURVE :'//,(6F12.3))
 1611 FORMAT((6F12.3))
C
      GO TO 9000
C
C---------------------------------------------------------------------
C  CURVE NOT INPUT DIRECTLY. NEED TO COMPUTE CURVE ACCOUNTING FOR
C  TAILWATER EFFECTS.
C
   30 CONTINUE
C
C  SET ALL POINTER INFORMATION FOR SPILLWAY , HEAD VS Q, AND RATING
C  CURVE INFO.
C
C  DEPENDING ON THE S/U USING THIS ROUTINE WE MAY HAVE TO ALTER THE STAR
C  LOCATION OR GET OTHER VARIABLES.
C
      LOCMQ = LOCOWS(7)
      NMQVAL = NSE
      IMQTYP = 2
      LOKELV = LESELV
C
C  IF WE LAST COMPUTED THIS CURVE IN THIS SUBROUTINE, JUST RETURN.
C
      ISUNUM = IBASE*10 + LEVEL
      IF (ISUNUM.EQ.MRLOC(2)) GO TO 9900
      MRLOC(2) = ISUNUM
C
C  GET SPILLWAY RATING POINTER INFO.
C
      LOCSPW = LSTART
C
C  IF POWERGEN IS USING THIS ROUTINE, WE DON'T LOOK FOR A SPILLWAY CURVE
C
      NQE = 0
      JUMP = 0
      IF (IBASE.EQ.113) GO TO 35
C
      IF (PO(LOCSPW).LT.0.0) LOCSPW = -PO(LOCSPW) + IOFPRM
      NQE = PO(LOCSPW)
      LOCSPE = LOCSPW + 1
      LOCSPQ = LOCSPE + NQE
C
      JUMP = 1
      IF (LOCSPW.EQ.LOCST+1) JUMP = 2*NQE + 1
C
C  NEED TO GET INTERP SWITCH IF 'FILLSPILL' OR 'SPILLWAY' CALLED THIS
C  ROUTINE AND SKIP ONE IF IT IS A GATED SPILLWAY.
C
      IF (IBASE.NE.105.AND.IBASE.NE.106) GO TO 35
      NTERPQ = PO(LOCSPW+JUMP)
      JUMP = JUMP + 1
      IF (IUNC.EQ.0) JUMP = JUMP + 1
C
   35 CONTINUE
      LOCHDQ = LOCSPW + JUMP
C
C  GET HEAD VS. DISCHARGE POINTER INFO.
C
      IF (PO(LOCHDQ).LT.0.0) LOCHDQ = -PO(LOCHDQ) + IOFPRM
      NHQ = PO(LOCHDQ)
      LOCHD = LOCHDQ + 1
      LOCHQ = LOCHD + NHQ
      JUMP2 = 1
      IF (LOCHDQ.EQ.LOCSPW+JUMP) JUMP2 = 2*NHQ + 1
C
C  SET RATING CURVE POINTER
C
      LOCRC = LOCSPW + JUMP + JUMP2
C
C  THE CONVERGENCE CRITERION IS AFTER THE RATING CURVE ID.
C
      CONV = PO(LOCRC+2)
C
C  SET SLUICE DISCHARGE IF 'FILLSPILL', 'SPILLWAY' OR 'MINQ' ARE USING
C  THIS ROUTINE.
C
      SLUICE = 0.00
      IF (IBASE.EQ.105.OR.IBASE.EQ.106) SLUICE = PO(LOCRC+3)
C
C  GENERATE THE CURVE USING AN ITERATIVE PROCESS
C
      CALL XCMQ26(PO,W,LOCMQ,PO(LOCSPE),PO(LOCSPQ),NQE,PO(LOCHD),
     .            PO(LOCHQ),NHQ,PO(LOCRC),CONV)
C
      IF (IBUG.GE.2) WRITE(IODBUG,1610) (PO(LOKELV+I-1),I=1,NMQVAL)
      IF (IBUG.GE.2) WRITE(IODBUG,1611) (W(LOCMQ+I-1),I=1,NMQVAL)
C
C
C----------------------------------------------------------------------
C
 9000 CONTINUE
 9900 CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XFMQ26 ***')
      RETURN
      END
