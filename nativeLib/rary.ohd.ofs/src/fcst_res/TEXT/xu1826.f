C MEMBER XU1826
C  (from old member FCXU1826)
C
C @PROCESS LVL(77)
      SUBROUTINE XU1826(PO,W,D,CO,LOCWS,LOCOWS,IDPT,LOBSA)
C---------------------------------------------------------------------
C                             LAST UPDATE: 01/12/95.08:21:52 BY $WC30KH
C
C  SUBROUTINE FOR ADJUSTING INSTANTANEOUS AND MEAN INFLOWS BASED ON
C  'OBSERVED' DAILY INFLOW VOLUMES COMPUTED FROM OBSERVED DISCHARGES AND
C  POOL ELEVATIONS. IT USES A SLIGHTLY MODIFIED VERSION OF FAJMDQ, THE
C  HEART OF THE NWSRFS 5.0 'ADJUST' OPERATION.
C---------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - OCTOBER 1983
C---------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/xqin26'
      INCLUDE 'common/xre26'
      INCLUDE 'common/fprog'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/ionum'
C
      DIMENSION PO(*),W(*),D(*),CO(*),LOCWS(*),LOCOWS(*),IDPT(*),
     .          QIMT(31),IERD(31),REX(31)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xu1826.f,v $
     . $',                                                             '
     .$Id: xu1826.f,v 1.6 2005/04/28 14:38:35 hsu Exp $
     . $' /
C    ===================================================================
C
C
C---------------------------------------------------------------------
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XU1826 ***')
      IOFF = IDOFST * NTIM24
      LBFQI = LOCOWS(1)
C
C  SET VALUES FOR USE IN 'IGNORETS' MOD USE CHECKS.
C
      IPTYPE = 4
      IMTYPE = 2
      ISUTYP = 4
      NDAY= NUM/NTIM24
C
C  GET POINTERS FOR THIS UTILITY
C
      SUNUM = 1551.01
      CALL XPTR26(SUNUM,PO,IORD,IBASE,LEVEL,LOCPM,LOCTS,LOCCO)
C
      LOCEX = IORD*3
      IOFF = IDOFST * NTIM24
      LTQI = IDPT(1)+IOFF
      LTQIM = IDPT(2)+IOFF
      LBFQI = LOCOWS(1)
      LBFQIM = LBFQI + NDD*NTIM24
C
C  SET POINTERS FOR TIME-SERIES DATA
C
      LOC1TS = W(LOCEX-1)
      LTSQ = IDPT(LOC1TS) + IDOFST
      LTSPOO = IDPT(LOC1TS+1)
      LTSBFQ = IDPT(LOC1TS+2)
C
C  NO PARMS ARE NEEDED. THE ONLY CARRYOVER SPECIFIC TO THIS UTILITY
C  IS THE ELEVATION AT THE BEGINNING OF THE PREVIOUS DAY.
C
C      ELB1 = W(LOCWS(4)+LOCCO-1)
      ELB1 = CO(4)
C
C  NEED TO GET TIME INTERVAL OF ELEVATION TIME-SERIES (TS#2)
C
      LOCPOO = LOCTS + 5
      IPOODT = PO(LOCPOO+3)
      NTSPOO = NUM*MINODT/IPOODT
      LTSPOO = LTSPOO + IDOFST*24/IPOODT
      IF (IBUG.GE.2) WRITE(IODBUG,1610) (D(LTSPOO+I-1),I=1,NTSPOO)
 1610 FORMAT(/'   ** OBSERVED ELEVATIONS :'//,(8F10.3))
C
C  RECONFIGURE THE INFLOW WORK SPACE TIME-SERIES HERE
C
      IF (.NOT.DORAIN) GO TO 140
      CALL XREV26(PO,W,IDPT,LOCOWS)
      ELEV0=CO(5)
      DO 130 NS2=1,NUM 
      ELEV1=D(LTSPOO+NS2-1)
      IF (ELEV1.LT.-998.9) ELEV1=ELEV0
      CALL XU1626(PO,W,D,LOCWS,LOCOWS)
      ELEV0=ELEV1
  130 CONTINUE
      CALL XRIN26(CO,W,D,LOCOWS,IDPT)
  140 CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,1603) (W(LPTADL+I-1),I=1,LOBSA)
 1603 FORMAT(' EQUIVALENT INFLOW FROM DIRECT RAINEVAP:'/(1X,8F10.1))
      DO 1030 I=1,NDAY
      SUM = 0.0
      DO 1035 J=1,NTIM24
      IJ=(I-1)*NTIM24+J
1035  SUM = SUM+W(LPTADL+IJ-1)
      REX(I)= SUM/NTIM24
C      WRITE(IODBUG, '( '' IDAY= '', I10 )') I
C      WRITE(IODBUG, '( '' SUM= '', F10.1 )') SUM
 1030 CONTINUE
C
C--------------------------------------------------
C  THE FIRST THING TO BE DONE IS TO FILL IN ANY MISSING POOL ELEVATIONS
C  BY INTERPOLATION.
C
      LOBSH = 0
      NMISS = 0
      LOCWK = LOCOWS(4)
C
      DO 100 I= 1,NTSPOO
      VAL = D(LTSPOO+I-1)
      W(LOCWK+I-1) = VAL
C
      JULX = I*MINODT + (IDA-1)*24
      IF (IFMSNG(VAL).EQ.0 .AND. IFGNOR(IPTYPE,JULX,ISUTYP).EQ.0)
     .  GO TO 30
C
C  INCREMENT THE MISSING VALUE COUNTER TO LET US KNOW HOW MANY VALUES
C  NEED TO BE FILLED IN.
C
      NMISS = NMISS + 1
      GO TO 100
C
C  IF ANY MISSING VALUES HAVE PRECEEDED THIS OBSERVATION, GO BACK AND
C  FILL THOSE VALUES IN.
C
   30 CONTINUE
      IF (NMISS.GT.0) GO TO 70
C
C  SET THE LOCATION OF THE LAST OBSERVATION
C
      LOBSH = I
      GO TO 100
C
C  WE'VE FOUND A VALUE AFTER SOME VALUES WERE MISSING. DO A STRAIGHT
C  LINE INTERPOLATION BETWEEN THE END POINTS AND FILL IN THE GAPS.
C
   70 CONTINUE
      STVAL = D(LTSPOO+LOBSH-1)
      IF (LOBSH.EQ.0) STVAL = CO(4)
      DIFF = D(LTSPOO+I-1) - STVAL
C
C  DISTRIBUTE THE DIFFERENCE OVER NMISS+1 PERIODS.
C
      PDDIFF = DIFF/(NMISS+1)
C
C  APPLY THE PERIOD DIFFERENCE TO EACH MISSING PERIOD
C
      IPD1 = LOBSH + 1
      IPDE = I - 1
      DO 80 J=IPD1,IPDE
      STVAL = STVAL + PDDIFF
      W(LOCWK+J-1) = STVAL
   80 CONTINUE
C
C  SET THIS PERIOD AS THE LAST OBSERVED ONE, AND RESET THE MISSING
C  COUNTER TO ZERO.
C
      LOBSH = I
      NMISS = 0
  100 CONTINUE
      IF (IBUG.GE.2) WRITE(IODBUG,1620) (W(LOCWK+I-1),I=1,NTSPOO)
 1620 FORMAT(/'   ** FILLED ELEVATION TIME-SERIES :'//,(8F10.3))
C
      IF (LOBSH.LT.NTIM24) THEN
        LAOBS=0
        GO TO 550
      ENDIF
C
C---------------------------------------------------------
C  NOW HAVE ALL ELEVATIONS FILLED IN, TIME TO COMPUTE THE DAILY INFLOW
C  VOLUMES
C
      CALL NTER26(ELB1,SB1,PO(LESELV),PO(LESSTO),NSE,IFLAG,NTERP,IBUG)
C
C  THE INFLOWS ARE ONLY COMPUTED USING ELEVATIONS AND DISCHARGES
C  OCCURRING AT THE END OF THE DAY
C
      IVDAY = 24/IPOODT
      DO 200 I=1,NUM
      IF (MOD(I,NTIM24).NE.0) GO TO 200
C
      IDAY = I/NTIM24
C
C  SET POSITION IN ELEVATION ARRAY TO PICK OFF.
C
      IPOS = IDAY*IVDAY
      ELB2 = W(LOCWK+IPOS-1)
      CALL NTER26(ELB2,SB2,PO(LESELV),PO(LESSTO),NSE,IFLAG,NTERP,IBUG)
C
C  SET THE MEAN INFLOW TO MISSING. WILL BE CHANGED IF DATA VALUE IS
C  FOUND.
C
      QM = D(LTSQ+IDAY-1)
      QIMT(IDAY) = -999.0
      JX = I*MINODT + (IDA-1)*24
      IF (IFMSNG(QM).EQ.1.OR.IFMSNG(ELB2).EQ.1.OR.I.GT.NRUN) GO TO 190
      IF(IFGNOR(IPTYPE,JX,ISUTYP).EQ.1.OR.IFGNOR(IMTYPE,JX,ISUTYP).EQ.1)
     .  GO TO 190
C
C USE CONT. EQUATION I-O = DS/DT
C     
C      WRITE(IODBUG, '( '' SB1 = '', F10.1 )') SB1
C      WRITE(IODBUG, '( '' SB2 = '', F10.1 )') SB2
      DV = (SB2-SB1)/NTIM24
      QIMT(IDAY) = (SB2-SB1)/NTIM24 + QM - REX(IDAY)
C	WRITE(IODBUG, '( ''IDAY= '', i3, '' REX= '', F10.1, '' QIMT= '', 
C     &	F10.1, '' QM= '', F10.1,  '' DV= '', F10.1 )') 
C     & IDAY, REX(IDAY), QIMT(IDAY), QM, DV
C
      IF (QIMT(IDAY) .GE. 0.00) GO TO 190
      WRITE(IPR,611) IDAY
  611 FORMAT(/11X,'**WARNING** NEGATIVE MEAN DAILY INFLOW',
     .' COMPUTED USING OBSERVED POOL AND DAILY DISCH. ',/23X,
     .'FOR DAY NO. ',I2,
     .'; NO ADJUST POSSIBLE, SET TO SIMULATED INSTANTANEOUS INFLOW')
      QIMT(IDAY) = -999.0
      CALL WARN
C
  190 CONTINUE
      SB1 = SB2
  200 CONTINUE
      IF (IBUG.GE.1) 
     .WRITE(IODBUG,1630) (QIMT(I),I=1,NDAY)
 1630 FORMAT(/'   ** MEAN DAILY COMPUTED INFLOWS :'//,(8F10.1))
C
C     DETERMINE THE LAST OBSERVED DATA FOR BACK INFLOW ADJUSTMENT
C     NOTICE THAT ADJUSTMENT WAS BASED ON MEAN DAILY FLOW
C
         
         LDAY= LOBSH/NTIM24
      IDAY = 0
      LOBSIN = 0
      DO 255 I=LDAY,1,-1
         IF(QIMT(I).GE.0.0) THEN
   	   IDAY=I
	   GO TO 256
	 ENDIF
 255     CONTINUE
 256     LOBSIN= IDAY*NTIM24
C
C  TRANSFER TIME-SERIES INTO WORK SPACE
C
      LOCQIT = IDPT(1) + IDOFST*NTIM24
      DO 300 I=1,NUM
      W(LBFQI+I-1) = D(LOCQIT+I-1)
  300 CONTINUE
C
C  WE NOW HAVE THE MEAN DAILY INFLOWS, SO WE CAN COMPUTE THE 'ADJUSTED'
C  INSTANTANEOUS INFLOWS.
C
C      LADAY = NUM/NTIM24
      LAOBS = MIN( LOBSH, LOBSIN)
      LADAY = LAOBS/NTIM24
      TOLRNS = 0.025
      IF( LADAY.LE.0) go to 550
C
      CALL XADI26(W(LBFQI),W(LOCWK),QIMT,1,LADAY,1,NUM,TOLRNS,CO(1),
     .            IORDN,MINODT,MINODT,24,D,0,MINODT,IERD)
C
C  COMPUTE THE 'ADJUSTED' PERIOD MEANS NOW.
C
      W(LBFQIM) = (CO(1) + W(LBFQI))/2.0
C
      DO 500 I=2,NUM
      W(LBFQIM+I-1) = (W(LBFQI+I-2) + W(LBFQI+I-1))/2.0
  500 CONTINUE
C
  550 CONTINUE

      IF (LAOBS.LT.3) THEN
        CALL UMEMOV(D(LTQI),W(LBFQI),NUM)
C        CALL UMEMOV(D(LTQIM),W(LBFQIM),NUM)
        DO 560 I=1,NUM
  560        W(LBFQIM+I-1) = D(LTQIM+I-1)*NTIM24
      ENDIF
C
      IF (IBUG.GE.2) THEN
      WRITE(IODBUG,1625) (D(LTSQ+I-1),I=1,NDAY)
 1625 FORMAT(/'   ** OBSERVED DAILY MEAN DISCHARGES :'//,(8F10.1))
        WRITE(IODBUG,1640) (W(LBFQI+I-1),I=1,NUM)
 1640 FORMAT(/'   ** INST. ADJUSTED INFLOWS :'//,(8F10.1))
        WRITE(IODBUG,1650) (W(LBFQIM+I-1),I=1,NUM)
 1650 FORMAT(/'   ** MEAN ADJUSTED INFLOWS :'//,(8F10.1))
      ENDIF
C
C  INDICATE NEED FOR LATER TIME-SERIES STORAGE OF ADJUSTED
C  INFLOWS.
C
      IF (LTSBFQ.EQ.0) GO TO 1000
C
      BFSAVQ = .TRUE.
C
C  RESET BACKFLOW Q LOCATION IN D USING OFFSET INFO AND TS TIME INT.
C
      LOCBFQ = LOCPOO + 5
      IBFQDT = PO(LOCBFQ+3)
      LTSBFQ = LTSBFQ + IDOFST*24/IBFQDT
      CALL UMEMOV(W(LBFQI),D(LTSBFQ),NUM)
C
 1000 CONTINUE
C
C  IF WE ARE USING 'MINQ', 'POWERGEN', OR 'SUMINF', TRANSFER THE ADJUSTE
C  INFLOWS TO THE WORK SPACE FOR THOSE S/U'S.
C
      IF (LOCOWS(13) .LE. 0) GO TO 9000
C
      CALL UMEMOV(W(LBFQI),W(LPTQI),NUM)
      CALL UMEMOV(W(LBFQIM),W(LPTQIM),NUM)
C
 9000 CONTINUE
      LOBSA = LAOBS
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XU1826 ***')
      RETURN
      END
