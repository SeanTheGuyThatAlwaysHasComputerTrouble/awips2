C MODULE QGEN26
C
      SUBROUTINE QGEN26(QOMEAN,QIMHYD,SQIM,QOMBAC,QOMSIM,
     & QOMOBS,QOMHYD,STOHYD,RULEL,RULSTO,DATEUP,
     & ELEVUP,DATELR,ELEVLR,STOMAX,STOMIN,
     & ELVGEN,GENMXQ,DATMIN,QMIN,FRACMD,
     & FRACDA,STOR,ELEV,LEVEL)
C
C THIS REGULATION SCHEME COMPUTES THE GENERATION DISCHARGE ROM A
C HYDROELECTRIC DAM.  THE GENERATION DISCHARGE IS AFFECTED BY THE
C INFLOW, RULE CURVE ELEVATIONS, MAXIMUM GENERATION OF DAM AND
C DOWNSTREAM DAMS, MINIMUM OUTFLOW REQUIREMENTS, DIURNAL VARIATION OF
C POWER REQUIREMENTS, AND DAILY VARIATION OF POWER NEEDS DURING THE
C WEEK.
C   GENERATION DISCHARGES ARE COMPUTED UNDER NORMAL CONDITIONS BY
C BRINGING THE POOL ELEVATION BACK TO THE RULE CURVE EITHER ONCE A
C DAY AT A SPECIFIED TIME (JTIMRL) OR ONCE A WEEK ON A SPECIFIED DAY
C (JDARUL) AT TIME (JTIMRL).  IF HEAVY INFLOWS ARE FORECAST, THE POOL
C IS DRAWN DOWN IN ADVANCE WITH HEAVY GENERATION DISCHARGES IF THE
C MINIMUM DRAWDOWN ELEVATION, ELVLWR, PERMITS.  ELVLWR CAN BE A
C SPECIFIED VALUE OR THE RULE CURVE ELEVATION MINUS A SPECIFIED AMOUNT.
C ELVLWR CAN VARY WITH THE JULIAN DATE.  SINCE MANY RESERVOIRS CLOSELY
C FOLLOW THE RULE CURVE, A SMALL DEVIATION FROM THE RULE CURVE FOR
C ELVLWR CAN BE USED TO CAUSE THIS TYPE OF OPERATION EVEN WITH HEAVY
C INFLOWS.
C   AN UPPER LIMITING ELEVATION, ELVUPR, IS USED TO RESTRICT THE UPPER
C POOL ELEVATION.  ELVUPR CAN BE A SPECIFIED AMOUNT OR RULE CURVE
C ELEVATION PLUS A SPECIFIED AMOUNT AND CAN VARY WITH THE JULIAN DATE.
C   MINIMUM OUTFLOW CAN BE REQUIRED FOR A WEEK, QMNWEK, A DAY, QMNDAY,
C OR INSTANTANEOUS, OUTMIN.  INSTANTANEOUS REQUIRED OUTFLOW CAN VARY
C WITH JULIAN DATE.
C   MAXIMUM GENERATION OUTFLOW CAN VARY WITH THE POOL ELEVATION BUT A
C NORMAL MAXIMUM VALUE, QGENMX, MUST BE ENTERED.  THE NORMAL MAXIMUM
C VALUE IS USED FOR MOST COMPUTATIONS EVEN THOUGH A JULIAN DATE VS
C MAXIMUM GENERATION DISCHARGE RELATION MIGHT BE USED FOR A FINAL CHECK.
C   DIURNAL VARIATION OF POWER DISCHARGE IS ACCOMPLISHED WITH A RELATION
C OF TIME AT END OF TIME INTERVAL VS FRACTION OF DAILY VOLUME TO PUT
C IN THE TIME INTERVAL.  IF THE MINIMUM OUTFLOW IS USED FOR A TIME
C INTERVAL UNDER LOW FLOW CONDITIONS, THE FRACTION SHOULD BE ZERO FOR
C THAT TIME INTERVAL.  DAILY VOLUME  FOR A VARIATION DURING THE WEEK
C IS OBTAINED FROM FRACTIONS OF THE WEEKLY VOLUME FOR EACH DAY.
C SIMILAR TO TIME INTERVAL FRACTIONS, A DAILY FRACTION SHOULD BE ZERO
C IF MINIMUM OUTFLOW IS USED FOR THE DAY UNDER LOW WATER CONDITIONS.
C THIS IS THE SITUATION ON SATURDAY AND SUNDAY FOR MANY DAMS.
C   WHEN A DOWNSTREAM DAM CAN PASS LESS WATER THROUGH TURBINES, THE
C POWER COMPANY WILL USUALLY RESTRICT OUTFLOW TO THE LOWER VALUE AT
C THE DOWNSTREAM DAM.  THIS IS ACCOMPLISHED BY USING THE DOWNSTREAM DAM
C GENERATION CAPACITY OUTFLOW, QGENDS, AS THE LIMITING OUTFLOW FROM
C THE UPSTREAM DAM WHEN POSSIBLE.  IF THIS RESTRICTION IS NOT
C APPLICABLE, QGENDS IS MADE EQUAL TO QGENMX.
C   COMPUTATIONS OF OUTFLOWS FOR THE REMAINDER OF THE HYDROGRAPH
C ARRAY, QOMHYD, ARE MADE WHEN QGEN26 IS FIRST ENTERED OR IS ENTERED
C AGAIN AFTER THE PROGRAM HAS BEEN IN OTHER SUBROUTINES FOR ONE OR MORE
C TIME INTERVALS.  WHEN AVAILABLE, PROPOSED OUTFLOWS ARE USED BUT MAY
C HAVE TO BE CHANGED TO MISSING IF PROPOSED OUTFLOWS CAUSE EXCESSIVELY
C HIGH OR LOW POOL ELEVATIONS.
C   OBSERVED AND PROPOSED 24-HR. MEAN OUTFLOWS MUST BE CONVERTED TO
C TIME INTERVAL VALUES AND PUT IN THE QOMHYD ARRAY PRIOR TO ENTRY INTO
C THIS SUBROUTINE FOR THE ADJUSTED RUN.
C FOR THE ADJUSTED RUN PRIOR TO RUN TIME, POOL STORAGES PASSED TO
C THIS SUBROUTINE MAY BE OBSERVED, COMPUTED FROM OBSERVED MEAN OUTFLOWS
C AND ADJUSTED MEAN INFLOWS, ADJUSTED FROM SIMULATED AND OBSERVED VALUES
C OR MISSING.  POOL ELEVATIONS WILL BE OBSERVED OR MISSING.  MEAN OUT-
C FLOWS MAY BE OBSERVED OR COMPUTED FROM ADJUSTED MEAN INFLOWS AND
C OBSERVED OR ADJUSTED STORAGES.  MEAN OUTFLOWS FOR THE TIME INTERVAL,
C POOL STORAGE, POOL ELEVATION, AND INSTANTANEOUS OUTFLOW AT THE END OF
C THE TIME INTERVAL ARE PASSED TO THIS SUBROUTINE IN THE VARIABLES QOM,
C S2, ELEV2, AND QO2, RESPECTIVELY.  MISSING VALUES ARE PASSED AS -999.0
C
C THIS SUBROUTINE WAS ORIGINALLY PROGRAMMED BY
C   WILLIAM E. FOX--CONSULTING HYDROLOGIST
C   MAY, 1982
C
C  REVISION NO.1 BY W.E. FOX  JULY 1989
C SUBROUTINE QGEN26 IS IN
C
C VARIABLES PASSED TO OR FROM THIS SUBROUTINE ARE DEFINED AS FOLLOWS:
C     ADJSTO -- APPROXIMATE STORAGE ADJUSTMENT CORRESPONDING TO ADJRUL.
C       COMPUTED ON FIRST ENTRY IN QGEN26.
C     ADJRUL -- AVERAGE DEVIATION OF OBSERVED FROM RULE CURVE ELEVATIONS
C       AS COMPUTED IN ARUL26.  AVERAGE DEVIATION AT BEGINNING OF FIRST
C       TIME INTERVAL WILL BE USED FOR SIMULATED RUN.  ADJRUL WILL BE
C       -999.0 FOR BOTH RUNS IF ARUL26 IS NOT USED.
C       -999.0 FOR BOTH RUNS IF ARUL26 IS NOT USED.
C     BGNSTO -- STORAGE AT BEGINNING OF FIRST TIME INTERVAL.  WILL BE
C       PASSED IN THE VARIABLE S1 FOR THE FIRST TIME INTERVAL.  THIS
C       IS THE ONLY TIME BGNSTO WILL BE USED.
C     DATELR -- JULIAN DATES FOR DATE VS  LOWER LIMITING ELEVATION
C       RELATION.  RESTRICTIONS  ON USE ARE DESCRIBED UNDER DATEUP.
C      DATELR(1) MUST BE -999.0 IF RELATION IS NOT USED.
C     DATEUP --  JULIAN DATES FOR DATE VS UPPER LIMITING ELEVATIONS
C       WHEN ELEVATIONS OR DEVIATIONS FROM RULE CURVE ELEVATIONS VARY
C       WITH DATE.  RELATION IS NOT USED WHEN THE ELEVATION IS CONSTANT
C       OR ELEVATIONS ARE THE SAME AS RULE CURVE OR RULE CURVE PLUS A
C       CONSTANT DEVIATION.  DATEUP(1) MUST BE -999.0 WHEN THE RELATION
C       IS NOT USED.
C     DATMIN -- JULIAN DATES FOR DATE VS MINIMUM DISCHARGE RELATION.
C       DATMIN(1) MUST BE -999.0 IF RELATION IS NOT USED.
C     ELEV -- ELEVATIONS CORRSPONDING TO STOR VALUES.
C     ELEV2 --  ELEVATION AT END OF THIS TIME INTERVAL.
C     ELVGEN -- ELEVATIONS FOR ELEVATION VS MAXIMUM GENERATION DISCHARGE
C       RELATION.
C     ELVUPR --  UPPER LIMITING ELEVATION.  MUST BE -999.0 IF DATEUP(1)
C       IS NOT EQUAL TO -999.0 OR IF ELVUPR IS VARIABLE AND THE SAME AS
C       RULE CURVE ELEVATIONS.  RULE CURVE ELEVATIONS PLUS A CONSTANT
C       DEVIATION WILL BE DEFINED AS (-999.0+DEVIATION).
C     ELEVUP --  UPPER LIMITING ELEVATIONS CORRESPONDING TO DATEUP
C       VALUES.  RULE CURVE PLUS DEVIATIONS ARE DEFINED AS
C       (-999.0+DEVIATION).
C      NELVUP -- NO. OF PAIRS OF DATEUP AND ELEVUP VALUES.
C     ELVLWR -- LOWER LIMITING ELEVATION.  MUST BE -999.0 IF SAME AS
C       RULE CURVE OR IF DATELR(1).NE.-999.0.  RULE CURVE ELEVATIONS
C       PLUS A CONSTANT DEVIATION ARE DEFINED AS (-999.0)DEVIATION).
C     ELEVLR -- LOWER LIMITING ELEVATIONS CORRESPONDING TO DATELR
C       VALUES.  RULE CURVE PLUS DEVIATIONS ARE DEFINED AS
C       (-999.0+DEVIATION).
C     EMXSTO -- ESTIMATED MAXIMUM POOL STORAGE COMPUTED IN SUMN26 WITH
C       SPECIFIED CONSTANT DISCHARGE (USUALLY QGENMX).
C     FCST -- LOGICAL VARIABLE.  IF TRUE, THE TIME INTERVAL IS IN
C       THE FORECAST PERIOD (AFTER RUN TIME).
C     FRAC24 -- FRACTIONS OF WEEKLY VOLUME TO USE FOR EACH 24-HR PERIOD
C       ENDING AT JTIMRL.  WILL BE COMPUTED WHEN FIRST ENTERING QGEN26.
C     FRACDA -- FRACTIONS OF WEEKLY VOLUME TO USE FOR EACH DAY (NEAREST
C       24-HR PERIOD FROM MIDNIGHT  TO MIDNIGHT OF HYDROLOGIC DAY) WHEN
C       WEEKLY RETURN TO RULE CURVE IS USED.  THE DAY OF THE WEEK IS THE
C       POSITION NO. IN THE 7-POSITION FRACDA ARRAY.  POSITION 1 IS
C       SUNDAY,ETC.  FRACDA(1) MUST BE -999.0 IF ARRAY IS NOT USED.
C     FRACMD -- FRACTION  FOR EACH TIME INTERVAL OF 24-HR OUTFLOW VOLUME
C       IN 24-HR PERIOD NEAREST TO MIDNINGT TO MIDNIGHT OF HYDROLOGIC
C       DAY.  LAST VALUE MUST CORRESPOND WITH TIME INTERVAL WHOSE END
C       (MIDNIT) IS NEAREST TO MIDNIGHT OF HYDROLOGIC DAY.
C     FRACRL -- FRACTIONS OF 24-HR OUTFLOW VOLUME FOR EACH TIME INTERVAL
C       IN 24-HR PERIOD ENDING AT TIME OF DAY (JTIMRL) WHEN POOL IS
C       BROUGHT BACK TO RULE CURVE.  LAST VALUE MUST BE FOR TIME INTER-
C       VAL ENDING AT JTIMRL.  VALUES ARE DEFINED ON FIRST ENTRY INTO
C       QGEN26.
C     GENMXQ -- MAXIMUM GENERATION DISCHARGES CORRESPONDING TO ELVGEN
C       VALUES.  RELATION WILL NOT BE APPLICABLE IF WATER IS DISCHARGING
C       THROUGH ANY OPENINGS OTHER THAN THE GENEATION PENSTOCKS.
C     IENTER -- INDICATOR FOR ENTRY INTO QGEN26.  MUST BE -999 PRIOR
C       TO FIRST ENTRY INTO QGEN26 AND MUST BE RSET TO -999 WHEN PRO-
C       GRAM GOES FROM QGEN26 TO OTHER SUBROUTINES FOR ONE OR MORE TIME
C       INTERVALS.  IENTER IS SET TO NS2 AT END OF FIRST ENTRY (OR
C       REENTER AFTER PROGRAM HAS BEEN IN OTHER SUBROUTINES).
C     IFCST -- SIMULATED (IFCST=0) OR ADJUSTED RUN (IFCST=1).
C     IPOWER -- =1 TO INDICATE FIRST TIME INTO POWERGEN SCHEME
C     JDARUL -- DAY OF WEEK WHEN POOL IS BROUGHT BACK TO RULE CURVE
C       (SUN. = 1, ETC.).  VALUE OF -999   INDICATES POOL IS BROUGHT
C       BACK TO RULE CURVE AT JTIMRL EACH DAY.
C     JDAWEK -- DAY OF WEEK AT END OF THIS TIME INTERVAL
C       (SUNDAY = 1, MONDAY = 2, ETC.).
C     JTIMRL -- NEAREST END OF TIME INTERVAL TO TIME OF DAY WHEN
C       POOL IS BROUGHT BACK TO RULE CURVE.
C     JULDAY -- JULIAN DATE AT END OF THIS TIME INTERVAL (NS2).
C     KHRBGN -- BEGINNING HOUR OF HYDROLOGIC DAY
C     LOBST -- POSITION IN THE STORAGE ARRAY OF THE LAST OBSERVED
C       STORAGE OR LAST STORAGE COMPUTED FROM ADJUSTED MEAN INFLOW,
C       OBSERVED MEAN OUTFLOW AND BEGINNING OBSERVED STORAGE.  LOBST
C       IS ALSO THE POSITION IN THE MEAN OUTFLOW ARRAY OF THE LAST
C       CONSECUTIVE OBSERVED OR COMPUTED MEAN OUTFLOW (FROM OBSERVED
C       STORAGES AND ADJUSTED MEAN INFLOWS).  LOBST WILL BE FURNISHED
C       BY THE SUPERVISORY EXECUTION ROUTINE.
C     LPROP -- POSITION IN OUTFLOW ARRAY OF THE LAST PROPOSED OUTFLOW
C       (OR LAST OUTFLOW COMPUTED FROM ANOTHER SUBROUTINE OR LAST
C       OBSERVED OUTFLOW BEYOND CONSECUTIVE OBSERVED OUTFLOWS).  COMPUT-
C       -ED WHEN QGEN26 IS FIRST ENTERED.
C     MIDNIT -- TIME INTERVAL VALUE NEAREST TO MIDNIGHT OF HYDROLOGIC
C       DAY.
C     NDATMN -- NO. OF PAIRS OF DATMIN AND QMIN VALUES.
C     NELVLR -- NO. OF PAIRS OF DATELR AND ELEVLR VALUES.
C     NELVGN -- NO. OF PAIRS OF ELVGEN AND GENMXQ VALUES. (0 IF CURVE
C               NOT USED.)
C     NEMXST -- ARRAY POSITION OF ESTIMATED MAXIMUM POOL STORAGE.
C     NRUN -- POSITION IN ARRAYS AT RUN TIME.
C     NS2 -- POSITION IN ARRAYS (INFLOW, OUTFLOW, STORAGE) AT END
C       OF THIS TIME INTERVAL.
C     NSE -- NO. OF PAIRS OF STOR AND ELEV VALUES.
C     NTERP -- ARITHMETIC INTERPOLATION (NTERP=0) OR LOGARITHMIC (NTERP=
C       1) OF ELEV VS STOR RELATION.
C     NTIM24 -- NO. OF TIME INTERVALS IN 24 HRS.  ALSO, THE NO. OF
C       FRACMD AND FRACRL VALUES.
C     NUM -- NUMBER OF VALUES IN EACH OF THE INFLOW, OUTFLOW,
C       STORAGE, AND ELEVATION ARRAYS.
C     NDAYRN -- NO. OF DAYS IN THE YEAR FOR YEAR AT END OF THIS
C       TIME INTERVAL (POSITION NS2).
C     QGENDS -- MAXIMUM GENERATION DISCHARGE AT DOWNSTREAM DAM.  SET
C       EQUAL TO QGENMX IF EQUAL TO OR GREATER  THAN QGENMX OR IF POWER
C       COMPANY DOESN'T CONSIDER THIS FACTOR.
C     OUTMIN -- MINIMUM INSTANTANEOUS DISCHARGE.  MUST BE -999.0 IF IT
C       VARIES WITH SEASON.
C     QADJST -- WORKING ARRAY USED IN QGEN26 TO ADJUST DAILY
C       VOLUMES DUE TO COMPUTED OUTFLOWS BEING LESS THAN
C       MINIMUM REQUIRED FOR SOME DAYS.
C     QGENMX -- NORMAL MAXIMUM GEMERATIOM DISCHARGE.  THIS VALUE MUST BE
C       ENTERED EVEN IF AN ELEVATION VS MAXIMUM GENERATION DISCHARGE
C       RELATION IS USED FOR MORE REFINED VALUES.
C     QIMHYD -- HYDROGRAPH ARRAY OF MEAN INFLOWS.
C     QMIN -- MINIMUM DISCHARGES CORRESPONDING TO DATMIN VALUES.
C     QMNWEK -- MINIMUM AVERAGE DISCHARGE FOR WEEK.  MUST BE -999.0 IF
C       NOT USED.
C     QMNDAY -- MIMIMUM AVERAGE DISCHARGE FOR DAY.  MUST BE -999.0 IF
C       NOT USED.
C     QO2 -- COMPUTED OR OBSERVED OUTFLOW AT END OF TIME INTERVAL.
C     QOMBAC -- ARRAY OF BACK OUTFLOWS FOR NTIM24 TIME INTERVALS PRIOR
C       TO FIRST TIME INTERVAL IN OUTFLOW ARRAYS.
C     QOMEAN -- ARRAY OF 24-HR MEAN OUTFLOWS.  ONLY THE FIRST POSITION
C       IS USED IN THIS SUBROUTINE.
C     QOMSIM -- HYDROGRAPH ARRAY OF SIMULATED VALUES.
C     QOMOBS -- ARRAY OF OBSERVED MEAN OUTFLOWS.
C     QOMHYD -- HYDROGRAPH ARRAY OF  MEAN OUTFLOWS.  VALUES WILL BE
C       SIMULATED FOR SIMULATED RUN AND ADJUSTED FOR ADJUSTED RUN.
C     QOM -- MEAN OUTFLOW FOR THIS TIME INTERVAL.
C     RULEL --  HYDROGRAPH ARRAY OF RULE CURVE ELEVATIONS COMPUTED IN
C      ERUL26 PRIOR TO FIRST ENTRY INTO QGEN26.
C     RULSTO -- ARRAY OF POOL STORAGES CORRESPONDING TO RULE CURVE
C       ELEVATIONS.  COMPUTED ON FIRST ENTRY INTO QGEN26.  RULSTO(1)
C       MUST BE -999.0 PRIOR TO FIRST ENTRY.
C     S2 -- POOL STORAGE AT END OF THIS TIME INTERVAL.
C     SQIM -- ARRAY OF CUMULATIVE MEAN INFLOWS COMPUTED IN SUMN26.
C     STOHYD --  HYDROGRAPH ARRAY OF EITHER SIMULATED OR ADJUSTED
C       STORAGES.
C     STOLWR -- LOWER LIMITING POOL STORAGE COMPUTED IN FIRST ENTRY INTO
C       QGEN26.  WILL BE SET TO -999.0 IF NOT A CONSTANT VALUE.
C     STOMAX -- HYDROGRAPH ARRAY OF UPPER LIMITING STORAGE VALUES WHEN
C       VALUE IS NOT CONSTANT.  VALUE OF STOMAX(1) MUST BE -999.0 PRIOR
C       TO FIRST ENTRY IN  QGEN26 WHEN VALUES WILL BE COMPUTED.
C     STOMIN -- HYDROGRAPH ARRAY  OF LOWER LIMITING STORAGES WHEN VALUE
C       IS NOT CONSTANT.  STOMIN(1) MUST BE -999.0 PRIOR TO FIRST ENTRY
C       INTO QGEN26 WHEN VALUES WILL BE COMPUTED.
C     STOR -- STORAGES FOR ELEVATION VS STORAGE RELATION..
C     STOUPER -- UPPER LIMITING POOL STORAGE COMPUTED IN FIRST ENTRY
C       INTO QGEN26.  WILL BE SET TO -999.0 IF NOT A CONSTANT VALUE.
C
C THIS SUBROUTINE WILL COMPUTE INSTANTANEOUS AND MEAN OUTFLOWS, POOL
C STORAGES, AND ELEVATIONS FOR THE TIME INTERVAL.  NO OBSERVED VALUES
C EXCEPT BEGINNING STORAGE WILL BE USED IN THE SIMULATED RUN.  ALL
C OBSERVED VALUES AND ADJUSTED STORAGES WILL BE USED IN THE ADJUSTED RUN
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/resv26'
      INCLUDE 'common/cnvr26'
      INCLUDE 'common/genq26'
      INCLUDE 'common/exg26'
      INCLUDE 'common/dste26'
      INCLUDE 'common/rulc26'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/errdat'
C
      DIMENSION QOMEAN(*), QIMHYD(*),SQIM(*),QOMBAC(*),QOMOBS(*),
     $QOMSIM(*),QOMHYD(*),STOHYD(*),RULEL(*),RULSTO(*),
     $DATEUP(*),ELEVUP(*),DATELR(*),ELEVLR(*),STOMAX(*),STOMIN(*),
     $ELVGEN(*),GENMXQ(*),DATMIN(*),QMIN(*),FRACMD(*),FRACRL(24),
     $FRACDA(*),FRAC24(24),STOR(*),ELEV(*),QADJST(7)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/qgen26.f,v $
     . $',                                                             '
     .$Id: qgen26.f,v 1.4 1999/01/19 17:20:18 page Exp $
     . $' /
C    ===================================================================
C
C
      IF(NS2.EQ.1) BGNSTO=S1
C
C WRITE TRACE AND DEBUG IF REQUIRED.
C
      IF(IBUG-1)50,10,20
   10 WRITE(IODBUG,30)
      GO TO 50
   20 WRITE(IODBUG,30)
   30 FORMAT(1H0,10X,17H** QGEN26 ENTERED)
      WRITE(IODBUG,40) IFCST,FCST,NRUN,NUM,NDAYRN,JULDAY,KHRBGN,
     $ JDAWEK,JTIMRL,JDARUL,IENTER(LEVEL),LOBSTO,LPROP,
     $ QO2,QOM,S1,S2,STOUPR,STOLWR,EMXSTO,NEMXST,
     $ ADJSTO,QGENMX,QGENDS,QMNWEK,QMNDAY,OUTMIN,
     $ ELEV2,ADJRUL,ELVUPR,ELVLWR,MIDNIT,NTERP,IBUG
   40 FORMAT(1H0,' IFCST,FCST,NRUN,NUM,NDAYRN,JULDAY,KHRBGN,',
     $ 'JDAWEK,JTIMRL,JDARUL,IENTER,LOBST,LPROP'/1X,I6,L5,11I6,
     & /1H0,' QO2,QOM,S1,S2,STORMX,STORMN,EMXSTO,NEMXST'/1X,7F10.0,I5,
     $ /1H0,' ADJSTO,QGENMX,QGENDS,QMNWEK,QMNDAY,OUTMIN'/1X6F10.0,
     & /1H0,' ,ELEV2,ADJRUL,ELVUPR,ELVLWR,MIDNI,NTERP,IBUG'/
     $1X,4F10.3,3I6)
C
C COMPUTE NO. OF HRS. IN TIME INTERVAL.
C
   50 NHRS=24/NTIM24
      HRS=NHRS
      TIM24=NTIM24
      QOMIN=OUTMIN
C
C CHECK IF THIS IS THE FIRST ENTRY INTO QGEN26.  RULE CURVE STORAGE
C (RULSTO(1)) AT THE END OF THE FIRST TIME INTERVAL WILL BE USED
C FOR THE CHECK.  IENTER CANNNOT BE USED SINCE IT WILL BE RESET TO
C -999 FOR REENTRY WHEN THE PROGRAM GOES FROM QGEN25 TO OTHER
C SUBROUTINES FOR ONE OR MORE TIME INTERVALS BEFORE REENTRY.
C
C$      IF(RULSTO(1).NE.-999.0) GO TO 281
      IF(IPOWER.NE.1) GO TO 200
C
C THE FOLLOWING STATEMENTS  BEFORE STATEMENT 280 ARE FOR THE FIRST ENTRY
C INTO QGEN26.  RULE CURVE STORAGES WILL BE COMPUTED IN DO LOOP 60.
C
      DO 60 I=1,NUM
      ELVRUL=RULEL(I)
      CALL NTER26(ELVRUL,STORUL,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
   60 RULSTO(I)=STORUL
C
C COMPUTE AN APPROXIMATE RULE CURVE STORAGE ADJUSTMENT (ADJSTO) CORRES-
C PONDING TO RULE CURVE ELEVATION ADJUSTMENT (ADJRUL) BY AVERAGING
C VALUES COMPUTED AT RULEL(NS2) AND RULEL(NUM).  NS2 IS THE ARRAY POSI-
C TION AT THE END OF THIS TIME INTERVAL AND NUM IS THE ARRAY POSITION
C AT THE END OF THE LAST TIME INTERVAL.
C
      IF(ADJRUL.EQ.-999.0.OR.ADJRUL.EQ.0.) GO TO 70
      ELV1=RULEL(NS2)+ADJRUL
      ELV2=RULEL(NUM)+ADJRUL
      CALL NTER26(ELV1,ST1,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      CALL NTER26(ELV2,ST2,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      ADJSTO=(ST1+ST2)*0.5-(RULSTO(NS2)+RULSTO(NUM))*0.5
      GO TO 80
   70 ADJSTO=0.
C
C SINCE SOME RESERVOIRS REPORT NEGATIVE ELEVATIONS (DISTANCE BELOW
C SPILLWAY CREST), THE UPPER LIMITING ELEVATION (ELVUPR) AND THE LOWER
C LIMITING ELEVATION (ELVLWR) WILL BE CHECKED AGAINST -500.0 TO
C SEE IF ELEVATIONS VARY (LT.-500.0) OR ARE CONSTANT (GT.-500.0)..
C
   80 IF(ELVUPR.GT.-500.0.AND.ELVLWR.GT.-500.0) GO TO 180
C
C FOR FOLLOWING STATEMENTS, UPPER OR LOWER LIMITING ELEVATIONS VARY
C WITH DATE.  COMPUTE STOMAX AND STOMIN ARRAYS.
C
      JTIME=NHRS
      JDATE=JULDAY
      DO 170 J=1,NUM
      JTIME=JTIME+NHRS
      IF(JTIME.LE.24) GO TO 90
      JTIME=JTIME-24
      JDATE=JDATE+1
      IF(JDATE.GT.NDAYRN) JDATE=1
   90 DATE=JDATE
      IF(DATEUP(1).NE.-999.0) GO TO 110
      IF(ELVUPR.GT.-500.0) GO TO 130
      IF(ELVUPR.NE.-999.0) GO TO 100
      STOMAX(J)=RULSTO(J)+ADJSTO
      GO TO 130
  100 ELEVMX=ELVUPR
      GO TO 120
  110 CALL TERP26(DATE,ELEVMX,DATEUP,ELEVUP,NELVUP,IFLAG,IBUG)
  120 IF(ELEVMX.LT.-500.0) ELEVMX=ELEVMX+999.0+RULEL(J)
      CALL NTER26(ELEVMX,STORMX,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      STOMAX(J)=STORMX+ADJSTO
  130 IF(DATELR(1).NE.-999.0) GO TO 150
      IF(ELVLWR.GT.-500.0) GO TO 170
      IF(ELVLWR.NE.-999.0) GO TO 140
      STOMIN(J)=RULSTO(J)+ADJSTO
      GO TO 170
  140 ELEVMN=ELVLWR
      GO TO 160
  150 CALL TERP26(DATE,ELEVMN,DATELR,ELEVLR,NELVLR,IFLAG,IBUG)
  160 IF(ELEVMN.LT.-500.0) ELEVMN=ELEVMN+999.0+RULEL(J)
      CALL NTER26(ELEVMN,STORMN,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      STOMIN(J)=STORMN+ADJSTO
  170 CONTINUE
C
C SET UPPER (STOUPR) AND LOWER LIMITING ELEVATIONS (STOLWR) EQUAL TO
C -999.0 IF NOT CONSTANT AND COMPUTE IF CONSTANT.  FOR CONSTANT ELEVA-
C TION, ELVUPR AND ELVLWR WILL BE TESTED AGAINST -500.0 TO TAKE CARE OF
C ANY POSSIBLE NEGATIVE ELEVATIONS (DISTANCES MEASURED DOWN FROM
C SPILLWAY CREST).
C
  180 STOUPR=-999.0
      STOLWR=-999.0
      IF(ELVUPR.LT.-500.0) GO TO 190
      CALL NTER26(ELVUPR,STOUPR,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      STOUPR=STOUPR+ADJSTO
  190 IF(ELVLWR.LT.-500.0) GO TO 200
      CALL NTER26(ELVLWR,STOLWR,ELEV,STOR,NSE,IFLAG,NTERP,IBUG)
      STOLWR=STOLWR+ADJSTO
C
C DETERMINE FRACTIONS (FRACRL) OF 24-HR. VOLUME FOR TIME INTERVALS IN
C 24-HR PERIOD ENDING AT TIME OF DAY (JTIMRL) WHEN POOL IS BROUGHT BACK
C TO RULE CURVE ELEVATION.
C
  200 JADD=(JTIMRL-MIDNIT)/NHRS
      IF(JADD.LT.0) JADD=(JTIMRL+24-MIDNIT)/NHRS
      DO 210 I=1,NTIM24
      J=I+JADD
      IF(J.GT.NTIM24) J=J-NTIM24
  210 FRACRL(I)=FRACMD(J)
C
C DETERMINE  FRACTIONS (FRAC24) OF WEEKLY VOLUME FOR EACH 24-HR PERIOD
C ENDING AT JTIMRL IF WEEKLY CYCLE IS USED.
C
      IF(JDARUL.EQ.-999) GO TO 240
C$     JTEST=NTIM24-JADD
      DO 230 I=1,7
      II=I
      SUMWT=0.
      DO 220 J=1,NTIM24
      II=I
C$     IF(J.LE.JTEST)II=II-1
      IF(II.EQ.0) II=7
  220 SUMWT=SUMWT+FRACDA(II)*FRACRL(J)
  230 FRAC24(I)=SUMWT
CR1  240 LOBST=0
CR1      LPROP=0
  240 IF(IFCST.EQ.0) GO TO 280
C
C FOLLOWING STATEMENTS PRIOR TO 280 APPLY ONLY TO THE ADJUSTED RUN.
C COMPUTE THE ARRAY POSITION OF THE LAST PROPOSED MEAN OUTFLOW
C  (OR OUTFLOW COMPUTED FOR THE PREVIOUS TIME INTERVAL IN ANOTHER
C SUBROUTINE).  PROPOSED OUTFLOWS MUST BE PUT IN THE HYDROGRAPH OUTFLOW
C ARRAY (QOMHYD) PRIOR TO FIRST ENTRY INTO QGEN26.  LOBST IS THE LAST
C CONSECUTIVE OBSERVED MEAN OUTFLOW OR THE LAST MEAN OUTFLOW COMPUTED
C FROM OBSERVED STORAGES AND ADJUSTED MEAN INFLOWS.
C
      LOBST=LOBSTO
      LPROP=LOBST
      JBGN=LOBST+1
C
C  FOLLOWING STATEMENTS ARE COMMENTED OUT TEMPORARILY BECAUSE
C  PROPOSED OUTFLOW CAN NOT BE ENTERED 6/18/96 BY KSH
C$      DO 270 I=JBGN,NUM
C$  270 IF(QOMHYD(I).NE.-999.0) LPROP=I
C
C FOLLOWING STATEMENTS ARE FOR BOTH THE FIRST AND SUBSEQUENT ENTRIES
C INTO QGEN26.  SET STORAGE VALUES FOR LIMITING UPPER (STORMX) AND
C LOWER (STORMN) ELEVATIONS FOR THIS TIME INTERVAL (ARRAY POSITION NS2).
C COMPUTE MINIMUM OUTFLOW IF IT VARIES WITH JULIAN DATE.  DECREASE
C JULIAN DATE BY 1 IF LEAP YEAR AND PAST FEB 28.
C
      GO TO 281
C
C SET LOBST AND LPROP TO ZERO FOR THE SIMULATED RUN.
C
  280 LOBST=0
      LPROP=0
  281 STORMX=STOUPR
      IF(STORMX.EQ.-999.0) STORMX=STOMAX(NS2)
      STORMN=STOLWR
      IF(STORMN.EQ.-999.0) STORMN=STOMIN(NS2)
      IF(OUTMIN.NE.-999.0) GO TO 290
      DATE=JULDAY
      IF(NDAYRN.GT.365.AND.JULDAY.GT.59) DATE=DATE-1
      CALL TERP26(DATE,QOUTMN,DATMIN,QMIN,NDATMN,IFLAG,IBUG)
      GO TO 300
  290 QOUTMN=OUTMIN
C
C SET VALUES OF BEGINNING, S1,AND ENDING STORAGE, S2, AVERAGE INFLOW,
C QIM, AND AVERAGE OUTFLOW, QOM.
C
  300 IF(NS2.GT.1) GO TO 310
      S1=BGNSTO
      GO TO 320
  310 S1=STOHYD(NS2-1)
  320 S2=STOHYD(NS2)
      QOM=QOMHYD(NS2)
      QIM=QIMHYD(NS2)
      IF(IFCST.EQ.0) GO TO 330
      IF(FCST) GO TO 330
      OBSQO2=QO2
C
C USE FUNCTION OBSV26 TO CHECK FOR A VALUE OF STORAGE AT THE END OF THE
C TIME INTERVAL.  THE TIME INTERVAL IS PRIOR TO OR AT RUN TIME.
C
      IGO=OBSV26(S2,IBUG)
      IF(IGO.EQ.1) GO TO 900
C
C WHEN IGO IS 1, THE POOL STORAGE IS OBSERVED; COMPUTED FROM OBSERVED
C MEAN OUTFLOWS AND ADJUSTED MEAN INFLOWS; OR ADJUSTED BETWEEN OBSERVED
C VALUES USING SIMULATED AND OBSERVED VALUES.
C WHEN IGO IS 0, THE STORAGE IS MISSING.  IF THE MEAN
C OUTFLOW IS OBSERVED BUT THE STORAGE AT THE END OF THE TIME INTERVAL IS
C MISSING, THE ENDING STORAGE WILL BE COMPUTED IN STATEMENT 861
C FROM THE OBSERVED MEAN OUTFLOW, THE ADJUSTED MEAN INFLOW, AND THE
C COMPUTED STORAGE AT THE BEGINNING OF THE TIME INTERVAL.
C
      IF(QOM.EQ.-999.0) GO TO 330
      GO TO 861
C
C WHEN THE ARRAY POSITION AT END OF THIS TIME INTERVAL (NS2) IS EQUAL TO
C (LOBST+1), MEAN OUTFLOWS WILL BE COMPUTED (OR PROPOSED VALUES WILL BE
C USED) FOR THE REMAINDER OF THE HYDROGRAPH OR UNTIL IT IS CERTAIN THAT
C THE PROGRAM WILL GO TO ANOTHER SUBROUTONE.  IF NS2 IS GREATER THAN
C (LOBST+1) WHEN QGEN26 IS FIRST ENTERED   (OR ENTERED AGAIN AFTER
C BEING IN OTHER SUBROUTINES), COMPUTATIONS WILL START AT NS2.  IENTER
C MUST BE SET TO -999 BY THE SUPERVISORY PROGRAM PRIOR TO FIRST ENTRY
C INTO QGEN26 AND MUST BE RESET TO -999 WHEN THE PROGRAM GOES TO ANOTHER
C SUBROUTINE FOR ONE OR MORE PERIODS.
C
  330 IF(NS2.EQ.(LOBST+1)) GO TO 340
      IF(IENTER(LEVEL).EQ.-999.AND.NS2.GE.(LOBST+1)) GO TO 340
      IF(QOM.EQ.-999.0) GO TO 340
      GO TO 830
C
C THE PROGRAM GOES TO STATEMENT  830 TO COMPUTE STORAGE AND ELEVATION FO
C THIS TIME INTERVAL WHEN OUTFLOW HAS BEEN PREVIOUSLY COMPUTED.  FOLLOW-
C ING STATEMENTS BEFORE 830 COMPUTE OUTFLOWS FOR HYDROGRAPH ARRAY.  COM-
C PUTE BEGINNING ARRAY POSITION (JBGN) FOR COMPUTATIONS.
C
  340 IF(NS2.GE.(LPROP+1)) GO TO 370
      JBGN=LOBST+1
      IF(LOBST.EQ.LPROP) GO TO 380
      JEND=LPROP+1
      DO 350 I=JBGN,JEND
      JJ=I
      IF(QOMHYD(I).EQ.-999.0) GO TO 360
  350 CONTINUE
  360 JBGN=JJ
      GO TO 380
  370 JBGN=NS2
  380 IF(JBGN.GT.1) GO TO 390
      STOBGN=BGNSTO
      SQIMBG=0.
      GO TO 400
  390 STOBGN=STOHYD(JBGN-1)
      SQIMBG=SQIM(JBGN-1)
C
C COMPUTE PEAK MEAN INFLOW (PEAKQI) PAST JBGN AND SET TEST OUTFLOW
C (FLOUT) TO 0.  FLOUT WILL BE THE GENERATION OUTFLOW REQUIRED TO KEEP
C UPPER LIMITING STORAGE FROM BEING EXCEEDED.  FLOUT WILL BE SET TO
C QGENMX IF LESS THAN MAXIMUM GENERATION DISCHARGE.
C
  400 CONTINUE
C     IF (IBUG.GE.2) WRITE(IODBUG,1650) JBGN,JEND,LOBST,LPROP
C1650 FORMAT('  *--> JBGN JEND LOBST LPROP',/6X,2I5,I7,I6)
      PEAKQI=QIMHYD(JBGN)
      JSTRT=JBGN+1
      DO 410 I=JSTRT,NUM
      QI=QIMHYD(I)
      IF(QI.LE.PEAKQI) GO TO 410
      PEAKQI=QI
  410 CONTINUE
      FLOUT=0.
CR1 DEFINE NCHANG FOR FUTURE USE
      NCHANG=-999
C
C CHECK IF PEAKQI IS LESS THAN QGENMX AND IF UPPER LIMITING STORAGE
C WOULD NOT BE EXCEEDED AT NUM POSITION WITH NO OUTFLOW.  GO TO
C STATEMENT 490 TO COMPUTE OUTFLOWS BY DAILY OR WEEKLY CYCLE IF EITHER
C CHECK IS CORRECT.
C
      IF(PEAKQI.LT.QGENMX) GO TO 490
      STORLM=STOUPR
      IF(STORLM.EQ.-999.0) STORLM=STOMAX(NUM)
      IF((STORLM-STOBGN).GE.(SQIM(NUM)-SQIMBG)) GO TO 490
C
C CHECK IF POSITION (NEMXST) OF MAXIMUM ESTIMATED STORAGE (EMXSTO) COM-
C PUTED IN SUMN26 IS PRIOR TO JBGN AND IF EMXSTO IS LESS THAN LIMITING
C STORAGE (STORLM) AT NEMXST.  IF EITHER CHECK IS TRUE, GO TO STATEMENT
C 440 TO START COMPUTATIONS OF OUTFLOW REQUIRED TO KEEP FROM EXCEEDING
C STORLM.
C
      IF(NEMXST.LE.JBGN) GO TO 440
      STORLM=STOUPR
      IF(STORLM.EQ.-999.0)STORLM=STOMAX(NEMXST)
      IF(EMXSTO.LT.STORLM) GO TO 440
C
C FOR THE FOLLOWING STATEMENTS THROUGH DO LOOP 430 THE POOL WILL EQUAL
C OR EXCEED THE UPPER LIMITIMG STORAGE EVEN IF FULL GENERATION IS MAIN-
C TAINED.  SET OUTFLOWS TO MAXIMUM GENERATION PAST NEMXST  (EXCEPT FOR
C PROPOSED OUTFLOWS) UNTIL INFLOW IS LESS THAN MAXIMUM GENERATION
C OUTFLOW.  PROGRAM WILL RETURN TO QGEN26 FROM OTHER SUBROUTINES TO
C COMPUTE FURTHER OUTFLOWS.
C
      DO 430 I=JBGN,NUM
      IF(I.LT.NEMXST) GO TO 420
      IF(QIMHYD(I).GE.QGENMX) GO TO 420
      GO TO 830
  420 IF(QOMHYD(I).NE.-999.0.AND.I.LE.LPROP) GO TO 430
      QOMHYD(I)=QGENMX
  430 CONTINUE
      GO TO 830
C
C FOLLOWING STATEMENTS BEFORE 490 ESTIMATE  OUTFLOW (FLOUT) REQUIRED TO
C KEEP FROM EXCEEDING UPPER LIMITING STORAGE.  MAKE FIRST ESTIMATE IN
C STATEMENT 440 AND REFINE IN DO LOOP 460.
C
C  THE FOLLOWING CHANGES MADE ON 9/15/89
C  440 FLOUT=(QOMHYD(JBGN)+PEAKQI)*0.5
  440  FLOUT=000
      DO 460 I=1,5
      SS1=STOBGN
      SMAX=SS1
      DO 450 J=JBGN,NUM
      QI=QIMHYD(J)
      SS2=SS1+QI-FLOUT
      IF(SS2.LE.SMAX) GO TO 450
      SMAX=SS2
      NSMAX=J
  450 SS1=SS2
C
C CPMPUTE UPPER LIMITING STORAGE STORLM AT POSITION NSMAX.
C
      STORLM=STOUPR
      IF(STORLM.EQ.-999.0) STORLM=STOMAX(NSMAX)
      PRDS=NSMAX-JBGN+1
      FLOUTB=FLOUT
  460 FLOUT=FLOUTB+(SMAX-STORLM)/PRDS
C
C WRITE DEBUG IF REQUIRED.
C
      IF(IBUG.NE.2) GO TO 480
      WRITE(IODBUG,470) FLOUTB,FLOUT
  470 FORMAT(1H0,106HLAST TWO ITERATED VALUES OF OUTFLOW REQUIRED TO KEE
     $P POOL FROM EXCEEDING UPPER LIMITING POOL ELEVATION ARE,2F12.3)
C
C CHECK IF FLOUT.GT.QGENMX.  IF SO, SET TO QGENMX.  CHECK IF FLOUT IS
C BETWEEN QGENDS AND QGENMX.  IF SO, USE QGENDS FOR OUTFLOW UNTIL QGENMX
C IS REQUIRED TO KEEP FROM EXCEEDING UPPER LIMITING POOL ELEVATION.
C
  480 IF(FLOUT.GT.QGENMX) FLOUT=QGENMX
      IF(FLOUT.LT.0.) FLOUT =0.
CR1      NCHANG=-999
      IF(QGENDS.EQ.QGENMX) GO TO 490
      IF(.NOT.(FLOUT.GT.QGENDS.AND. FLOUT.LT.QGENMX)) GO TO 490
C
C COMPUTE ARRAY POSITION (NCHANG) WHERE OUTFLOW CHANGES FROM QGENDS TO
C QGENMX ASSUMING CONSTANT INFLOW.  THE DISTRIBUTION OF INFLOWS MIGHT
C CAUSE UPPER LIMITING ELEVATION TO BE EXCEEDED BEFORE NCHANG BUT THIS
C WILL BE CHECKED WHEN STORAGES ARE COMPUTED.
C
      ANSMAX=NSMAX
      AJBGN=JBGN
      NCHANG=((ANSMAX-AJBGN+1)*FLOUT+AJBGN*QGENDS-QGENDS-ANSMAX*QGENMX)/
     $(QGENDS-QGENMX)
C
C FOLLOWING STATEMENTS TO 830 COMPUTE OUTFLOWS FROM JBGN THROUGH NUM BY
C BRINGING POOL TO RULE CURVE ELEVATION EITHER DAILY (JDARUL=-999) OR
C WEEKLY (JDARUL=1 TO 7).  MEAN OUTFLOWS FOR DAILY  OR WEEKLY PERIOD
C WILL NOT BE ALLOWED TO DROP BELOW FLOUT (OUTFLOW REQUIRED TO KEEP
C FROM EXCEEDING UPPER LIMITING POOL ELEVATION) UNLESS POOL DROPS BE-
C LOW LOWER LIMIT AND OUTFLOW WILL NOT BE ALLOWED TO DROP BELOW MINIMUM
C REQUIREMENTS.  COMPUTE JULIAN DATE (JULBGN) AND TIME OF DAY (KTIMBG)
C AT POSITION (JBGN) AND COMPUTE ARRAY POSITIONS AT END OF FIRST DAILY
C (KEND) AND WEEKLY PERIOD (JEND).
C
  490 JADD=(JBGN-NS2)/NTIM24
      JADHRS=(JBGN-NS2-JADD*NTIM24)*NHRS
      LDAWEK=JDAWEK+JADD+(KHRBGN+NHRS+JADHRS-1)/24
  491 IF(LDAWEK.LE.7) GO TO 492
      LDAWEK=LDAWEK-7
      GO TO 491
  492 JULBGN=JULDAY+JADD+(KHRBGN+JADHRS-1)/24
      IF(JULBGN.GT.NDAYRN) JULBGN=JULBGN-NDAYRN
      KTIMBG=KHRBGN+NHRS+JADHRS
      IF(KTIMBG.GT.24) KTIMBG=KTIMBG-24
      JADD=(JTIMRL-KTIMBG)/NHRS+(JDARUL-LDAWEK)*NTIM24
      IF(JADD.LT.0) JADD=JADD+7*NTIM24
      JEND=JBGN+JADD
C
C SAVE THE COMPUTED VALUE OF THE ARRAY POSITION (JEND) AT THE END OF THE
C WEEKLY PERIOD IN JENDWK SINCE THIS VALUE MIGHT EXCEED NUM AND WILL BE
C NEEDED LATER.
C
      JENDWK=JEND
      IF(JEND.GT.NUM) JEND=NUM
C
C COMPUTE ARRAY POSITION (KEND) AT END OF FIRST DAILY PERIOD AND SAVE
C COMPUTED VALUE IN KEND24.
C
      KADD=(JTIMRL-KTIMBG)/NHRS
      IF(KADD.LT.0) KADD=KADD+NTIM24
      KEND=JBGN+KADD
      KEND24=(KEND/NTIM24)*NTIM24
      KEND=KEND24
c      KEND24=KEND
      IF(KEND.GT.NUM) KEND=NUM
C
C SET BEGINNING VALUES FOR LATER USE.  JULIAN DATE WILL BE USED IF OUT-
C FLOW MINIMUM VARIES WITH DATE.  JULIAN WILL BE REDUCED BY 1 IF PAST
C FEB. 28 AND IF A LEAP YEAR SINCE JULIAN DATE FOR RELATION WOULD BE
C BASED ON NON-LEAP YEAR.  JULIAN WILL BE SET TO -999 IF NOT USED SO
C THAT IT WILL BE OBVIOUS THAT IT WAS NOT USED.
C
      JULIAN=-999
      IF(OUTMIN.NE.-999.0) GO TO 500
      JULIAN=JULBGN
      IF(NDAYRN.GT.365.AND.JULIAN.GT.59) JULIAN=JULIAN-1
  500 STOR1=STOBGN
      BGNSUM=SQIMBG
      KTIME=KTIMBG
      KSTART=JBGN
      IF(JDARUL.NE.-999) GO TO 640
C
C STATEMENTS PRIOR TO 640 WILL BE FOR OPERATION WHERE POOL ELEVATION IS
C BROUGHT BACK TO RULE CURVE AT TIME ,JTIMRL, EACH DAY.  COMPUTE SUMS
C OF INFLOW AND OUTFLOW FOR DAILY CYCLE IN SUBROUTINE SUMO26.  MEAN OUT-
C FLOW WILL BE CHECKED AGAINST FLOUT AND MINIMUM DAILY OUTFLOW (QMNDAY).
C ESTIMATES OF OUTFLOW WILL BE CARRIED THROUGHT KEND24 WHEN KEND24 IS
C GREATER THAN NUM.  FLOUT IS MEAN OUTFLOW REQUIRED TO KEEP FROM
C EXCEEDING UPPER LIMITING ELEVATION.
C
  510 CALL SUMO26(KSTART,KEND,KEND24,JDARUL,SUMOUT,STOR1,FLOUT,QMNDAY,
     $QMNWEK,RULSTO,ADJSTO,SQIM,QIMHYD,BGNSUM,IBUG)
C
CR1  CHECK ON LIMITING SUMOUT TO QGENMX*PRDS
C CHECK ON LIMITING OUTFLOW TO QGENDS THROUGH  NCHANG.  TO BE ON CONSER-
C VATIVE SIDE, NCHANG IS CHECKED AGAINST KEND24.
C
      PRDS=KEND24-KSTART+1
      VMX=QGENMX*PRDS
      IF(SUMOUT.GT.VMX) SUMOUT=VMX
      IF(NCHANG.EQ.-999) GO TO 520
      IF(SUMOUT.GT.(QGENDS*PRDS)) SUMOUT=QGENDS*PRDS
      IF(KEND24.GT.NCHANG) SUMOUT=QGENMX*PRDS
  520 IF(OUTMIN.NE.-999.0) GO TO 540
C
C COMPUTE MINIMUM FLOW FROM SEASONAL RELATION.  COMPUTE JULIAN DATE
C FOR RELATION.
C
      KTIME=(KEND24-KSTART)*NHRS+KTIME
      IF(KTIME.LE.24) GO TO 530
      KTIME=KTIME-24
      JULIAN=JULIAN+1
  530 IF(JULIAN.LE.NDAYRN) GO TO 531
      JULIAN = 1
      DATE=JULIAN
      GO TO 532
C
C IF JULIAN IS GREATER THAN 59 AND IT IS A LEAP YEAR, DATE WILL BE
C DECREASE BY 1 SINCE THE RELATION IS BASED ON A NON-LEAP YEAR.
C
  531 DATE=JULIAN
      IF(NDAYRN.EQ.366.AND.JULIAN.GT.59) DATE=DATE-1
  532 CALL TERP26(DATE,QOMIN,DATMIN,QMIN,NDATMN,IFLAG,IBUG)
      GO TO 550
  540 QOMIN=OUTMIN
  550 QOMEAN(1)=SUMOUT/PRDS
      IF(QOMEAN(1).LT.QOMIN) QOMEAN(1)=QOMIN
      NPRDS=KEND24-KSTART+1
      IF(NPRDS.EQ.NTIM24) GO TO 600
C
C KSTART IS NOT AT THE BEGINNING OF THE 24-HR PERIOD AND MEAN DISCHARGE
C FOR 24-HR PERIOD (QOMEAN) MUST BE ADJUSTED BY EXTENDING TO THE
C ENTIRE 24-HR PERIOD.  OUTFLOWS ARE IN THE BACK ARRAY (QOMBAC) WHEN
C THE COMPUTED ARRAY POSITION (LBGN) IS LESS THAN 1.
C
      VOL=QOMEAN(1)*PRDS
      LBGN=KEND24-NTIM24+1
      IF(LBGN.GT.0) GO TO 570
      LBAC=NTIM24+LBGN
  560 VOL=VOL+QOMBAC(LBAC)
      LBAC=LBAC+1
      IF(LBAC.LE.NTIM24) GO TO 560
      LBGN=1
  570 LEND=KSTART-1
      IF(LEND.EQ.0) GO TO 590
      DO 580 L=LBGN,LEND
  580 VOL=VOL+QOMHYD(L)
  590 QOMEAN(1)=VOL/TIM24
C
C COMPUTE BEGINNING AND END POSITIONS IN FRACRL ARRAY AND THEN CALL
C CONV26 TO CONVERT MEAN OUTFLOW (QOMEAN) FOR 24 HRS. TO TIME INTERVAL
C VALUES.
C
  600 LSTART=NTIM24-KEND24+KSTART
      JOBS=0
      NQMEAN=1
      JULSTR=JULIAN
      NDAYR=NDAYRN
      IF(IFCST.EQ.1) GO TO 601
      CALL CONV26(QOMEAN,DATMIN,QMIN,QOMBAC,QOMOBS,QOMHYD,
     $QOMHYD,FRACRL)
      GO TO 602
  601 CALL CONV26(QOMEAN,DATMIN,QMIN,QOMBAC,QOMOBS,QOMSIM,
     $QOMHYD,FRACRL)
C
C CALL CKST26 TO COMPUTE STORAGES FROM KSTART THROUGH KEND AND CHECK
C THAT STORAGES DO NOT EXCEED UPPER OR DROP BELOW LOWER LIMITS.  ALSO,
C CKST26 COMPUTES NEW  24-HR VOLUME.
C
  602 CALL CKST26(NRUN,KSTART,KEND,VOLUME,STOR1,QGENMX,QOMIN,STOUPR,
     $STOLWR,STOMAX,STOMIN,QIMHYD,QOMOBS,QOMHYD,IBUG,FCST)
C
C WRITE DEBUG IF REQUIRED.
C
      IF(IBUG.NE.2) GO TO 630
      WRITE(IODBUG,610) JTIMRL
  610 FORMAT(1H0,38H POOL IS BROUGHT BACK TO RULE CURVE AT,I6, 9H EACH D
     $AY)
      WRITE(IODBUG,620) JBGN,KSTART,KEND,KEND24,NUM,KTIMBG,KTIME,JULIAN,
     $QOMIN,STOR1,SUMOUT,VOLUME,KSTART,KEND,(QOMHYD(K),K=KSTART,KEND)
  620 FORMAT(1H0,' JBGN,KSTART,KEND,KEND24,NUM,KTIMBG,KTIME,JULIAN,',
     $ 'QOMIN,STOR1,SUMOUT,VOLUME'/1X,8I6,4F10.0,
     & /1X,' (QOMHYD(K),K=',I5,1H,I5,1H),/(1X,8F10.0))
  630 IF(KEND.EQ.NUM) GO TO 830
C
C COMPUTE BEGINNING AND ENDING ARRAY POSITION FOR NEXT DAILY
C COMPUTATION.
C
      KSTART=KEND+1
      KEND=KSTART+NTIM24-1
      KEND24=(KEND/NTIM24)*NTIM24
      KEND=KEND24
c      KEND24=KEND
      IF(KEND.GT.NUM) KEND=NUM
      BGNSUM=SQIM(KSTART-1)
      GO TO 510
C
C START COMPUTATIONS FOR WEEKLY CYCLE.  LDAWEK IS THE DAY OF WEEK
C AND LTIME IS THE TIME OF DAY AT THE BEGINNING OF THE FIRST TIME
C INTERVAL (JBGN) IN THIS 24-HR. OR PARTIAL 24-HR TIME PERIOD.  KDAWEK
C IS THE DAY OF WEEK AT THE END OF THIS 24-HR OR PARTIAL 24-HR PERIOD.
C
  640 LTIME=KTIMBG-NHRS
      IF(LTIME.LE.0) LDAWEK=LDAWEK-1
      IF(LDAWEK.EQ.0) LDAWEK=LDAWEK+7
      IF(LTIME.LE.0) LTIME=LTIME+24
      KDAWEK=JDARUL-(JENDWK-JBGN)/NTIM24
      IF(KDAWEK.LE.0) KDAWEK=KDAWEK+7
      JDIF=JENDWK-JBGN
      KTEST=NTIM24-(JDIF-JDIF/NTIM24*NTIM24)-1
      VOLUME=0.
      JSTART=JBGN
C
C ESTIMATES OF INFLOW AND OUTFLOW WILL BE CARRIED THROUGH JENDWK WHEN
C JENDWK IS GREATER THAN JEND.  PROGRAM WILL RETURN TO 650 FOR
C ADDITIONAL WEEKLY CYCLES.
C
  650 CALL SUMO26(JSTART,JEND,JENDWK,JDARUL,SUMOUT,STOR1,FLOUT,QMNDAY,
     $QMNWEK,RULSTO,ADJSTO,SQIM,QIMHYD,BGNSUM,IBUG)
CR1  LIMIT SUMOUT TO QGENMX*PRDS PRDS IS NO OF TIME INTERVALS IN FULL
CR1  OR PARTIAL WEEK
      PRDS=JDIF+1
      VMX=QGENMX*PRDS
      IF(SUMOUT.GT.VMX) SUMOUT=VMX
C
C FOLLOWING STATEMENTS COMPUTE CORRECTIONS TO DAILY DISTRIBUTED VOLUMES
C DUE TO MINIMUM OUTFLOW BEING HIGHER THAN THAT COMPUTED (USUALLY
C WEEKEND DAYS).
C
      VOLUM=0.
      KPOS=KEND24-NTIM24
      NSUM=0
      NDAWEK=KDAWEK-1
      PRDBGN=KEND24-KSTART+1
      PRDEND=JENDWK-JEND
      DO 656 J=1,7
      QADJST(J)=0.
      NDAWEK=NDAWEK+1
C
      IF(NDAWEK.GT.7) NDAWEK=1
      IF(OUTMIN.NE.-999.0) GO TO 653
      JUL=JULIAN+1
      IF(JUL.LE.NDAYRN) GO TO 651
      JUL=1
      DATE=JUL
      GO TO 652
  651 DATE=JUL
      IF(NDAYRN.EQ.366.AND.JUL.GT.59) DATE=DATE-1
  652 CALL TERP26(DATE,QOMIN,DATMIN,QMIN,NDATMN,IFLAG,IBUG)
      GO TO 654
  653 QOMIN=OUTMIN
  654 KPOS=KPOS+NTIM24
      IF(KPOS.GT.JENDWK) GO TO 657
      ADD=(QOMIN-FRAC24(NDAWEK)*SUMOUT/TIM24)*TIM24
      IF(QMNDAY.GT.QOMIN) ADD=(QMNDAY-FRAC24(NDAWEK)*SUMOUT/TIM24)*TIM24
      IF(ADD.LE.0.) GO TO 656
      IF(J.EQ.1) ADD=ADD*PRDBGN/TIM24
      IF(KPOS.GT.JEND) ADD=ADD*PRDEND/TIM24
      VOLUM=VOLUM+ADD
      IF(J.GT.1) GO TO 655
      NSUM=NSUM+KEND24-KSTART+1
      GO TO 656
  655 NSUM=NSUM+NTIM24
      IF(KPOS.GT.JEND) NSUM=NSUM+JEND-JENDWK
  656 CONTINUE
C
C  COMPUTE CORRECTION FOR EACH DAY AND PUT IN QADJST ARRAY.
C
  657 IF(VOLUM.EQ.0.) GO TO 659
      KPOS=KEND24-NTIM24
      NDAWEK=KDAWEK-1
      NSUM=JEND-JSTART+1-NSUM
      IF(NSUM.EQ.0) GO TO 659
      SUM=NSUM
      DO 658 J=1,7
      NDAWEK=NDAWEK+1
C
      IF(NDAWEK.GT.7) NDAWEK=1
      KPOS=KPOS+NTIM24
      IF(KPOS.GT.JENDWK) GO TO 659
      ADD=QOMIN-FRAC24(NDAWEK)*SUMOUT/TIM24
      IF(QMNDAY.GT.QOMIN) ADD=QMNDAY-FRAC24(NDAWEK)*SUMOUT/TIM24
      IF(ADD.GE.0.) GO TO 658
      QADJST(J)=VOLUM*TIM24/SUM
      IF(J.EQ.1) QADJST(J)=VOLUM*PRDBGN/SUM
      IF(KPOS.GT.JEND) QADJST(J)=VOLUM*PRDEND/SUM
  658 CONTINUE
  659 KSUM=1
C
C CHECK IF PERIOD FROM JSTART TO JENDWK IS A FULL WEEK.
C
      JFULWK=(JDIF+1)-7*NTIM24
      IF(JFULWK.EQ.0) GO TO 680
C
C SUM OF WEIGHTS MUST BE COMPUTED FOR THE PERIOD SINCE IT IS NOT A FULL
C WEEK.
C
      K=KTEST
      SUMWT=0.
CR1 LDAWEK WILL BE THE DAY OF THE WEEK AT THE END OF THE 24HR PEROIOD
CR1 ENDING AT THE TIME OF THE DAY (JTIMRL) WHEN THE POOL WAS BROUGHT
CR1 BACK TO RULE CURVE
      LDAWEK=KDAWEK
      DO 660 J=JSTART,JENDWK
      K=K+1
      IF(K.GT.NTIM24) LDAWEK=LDAWEK+1
      IF(K.GT.NTIM24) K=1
      IF(LDAWEK.GT.7) LDAWEK=1
  660 SUMWT=SUMWT+FRACRL(K)*FRAC24(LDAWEK)
C
C COMPUTE 24-HR (OR PART OF 24-HR ) VOLUME FROM KSTART TO KEND24.
C
  661 IF(SUMWT.LT.0.00001) GO TO 671
      DO 670 K=KSTART,KEND24
      KK=NTIM24-KEND24+K
  670 VOLUME=VOLUME+(FRACRL(KK)*FRAC24(KDAWEK)/SUMWT*SUMOUT)
C
C ADJUST FOR MINIMUM OUTFLOW GREATER THAN COMPUTED OUTFLOWS ON SOME
C DAYS.
C
      IF(VOLUM.GT.0.) VOLUME=VOLUME-QADJST(KSUM)
      GO TO 690
  671 QMN=SUMOUT/(JENDWK-JSTART+1)
      VOLUME=VOLUME+QMN*(KEND24-KSTART+1)
      GO TO 690
C
C COMPUTATIONAL PERIOD IS A FULL WEEK.   IN FOLLOWING STATEMENT 24-HR
C VOLUME FOR THE NEXT 24 HRS. IS COMPUTED FROM DAILY FRACTION OF WEEKLY
C VOLUME.
C
  680 VOLUME=VOLUME+FRAC24(KDAWEK)*SUMOUT
C
C ADJUST FOR MINIMUM OUTFLOW GREATER THAN COMPUTED ON SOME DAYS.
C
      IF(VOLUM.GT.0.) VOLUME=VOLUME-QADJST(KSUM)
  690 IF(OUTMIN.NE.-999.0) GO TO 710
C
C COMPUTE JULIAN DATE (JULIAN) FOR USE IN DATE VS MINIMUM OUTFLOW RELA-
C TION.  FOLLOWING STATENENTS DUPLICATE THOSE FOR DAILY CYCLE BUT
C REPEATING THEM CLARIFIES THE PROGRAM.
C
      KTIME=(KEND24-KSTART)*NHRS+KTIME
      IF(KTIME.LE.24) GO TO 700
      KTIME=KTIME-24
      JULIAN=JULIAN+1
  700 IF(JULIAN.LE.NDAYRN) GO TO 701
      JULIAN=1
      DATE=JULIAN
      GO TO 702
  701 DATE=JULIAN
      IF(NDAYRN.EQ.366.AND.JULIAN.GT.59) DATE=DATE-1
  702 CALL TERP26(DATE,QOMIN,DATMIN,QMIN,NDATMN,IFLAG,IBUG)
      GO TO 720
  710 QOMIN=OUTMIN
C
C SAVE COMPUTED VOLUME IN VOLSAV.  CHECK ON LIMITING OUTFLOW TO QGENDS
C THROUGH NCHANG.
C
  720 VOLSAV=VOLUME
      PRDS=KEND24-KSTART+1
      IF(NCHANG.EQ.-999) GO TO 730
      IF(VOLUME.GT.(QGENDS*PRDS)) VOLUME=QGENDS*PRDS
      IF(KEND24.GT.NCHANG) VOLUME=QGENMX*PRDS
  730 QOMEAN(1)=VOLUME/PRDS
      IF(QOMEAN(1).LT.QMNDAY) QOMEAN(1)=QMNDAY
      IF(QOMEAN(1).GT.QGENMX) QOMEAN(1)=QGENMX
      IF(QOMEAN(1).LT.QOMIN) QOMEAN(1)=QOMIN
      NPRDS=KEND24-KSTART+1
      IF(NPRDS.EQ.NTIM24) GO TO 780
C
C KSTART IS NOT AT THE FIRST OF THE 24-HR PERIOD FOR QOMEAN AND QOMEAN
C MUST BE ADJUSTED TO THE  ENTIRE 24-HR PERIOD.
C
      VOL=QOMEAN(1)*PRDS
      LBGN=KEND24-NTIM24+1
      IF(LBGN.GT.0) GO TO 750
      LBAC=NTIM24+LBGN
  740 VOL=VOL+QOMBAC(LBAC)
      LBAC=LBAC+1
      IF(LBAC.LE.NTIM24) GO TO 740
      LBGN=1
  750 LEND=KSTART-1
      IF(LEND.EQ.0) GO TO 770
      DO 760 L=LBGN,LEND
  760 VOL=VOL+QOMHYD(L)
  770 QOMEAN(1)=VOL/TIM24
C
C COMPUTE BEGINNING POSITION (LSTART) IN FRACRL AND CALL CONV26 TO
C CONVERT VOLUME TO TIME INTERVAL MEAN OUTFLOWS.
C
  780 LSTART=NTIM24-KEND24+KSTART
C
C JOBS OF 0 INDICATES 24-HR MEAN OUTFLOW (QOMEAN) IS COMPUTED NOT
C OBSERVED. FRACRL IS THE SAME AS FRALTN IN CONV26.
C
      JOBS=0
      NQMEAN=1
      JULSTR=JULIAN
      NDAYR=NDAYRN
      IF(IFCST.EQ.1) GO TO 781
      CALL CONV26(QOMEAN,DATMIN,QMIN,QOMBAC,QOMOBS,QOMHYD,
     $QOMHYD,FRACRL)
      GO TO 782
  781 CALL CONV26(QOMEAN,DATMIN,QMIN,QOMBAC,QOMOBS,QOMSIM,
     $QOMHYD,FRACRL)
C
C CALL CKST26 TO COMPUTE STORAGES FROM KSTART THROUGH KEND AND CHECK
C STORAGES AGAINST UPPER AND LOWER LIMITING VALUES.  ALSO, A NEW VOLUME
C IS COMPUTED IN CKST26.
C
  782 CALL CKST26(NRUN,KSTART,KEND,VOLUME,STOR1,QGENMX,QOMIN,STOUPR,
     $STOLWR,STOMAX,STOMIN,QIMHYD,QOMOBS,QOMHYD,IBUG,FCST)
C
C WRITE DEBUG IF REQUIRED.
C
      IF(IBUG.NE.2) GO TO 810
      WRITE(IODBUG,790) JTIMRL,JDARUL
  790 FORMAT(1H0,43H POOL IS BROUGHT BACK TO RULE CURVE AT TIME,I6,14H O
     $N DAY NUMBER,I6)
      WRITE(IODBUG,800) JDAWEK,KDAWEK,LDAWEK,JBGN,JSTART,JEND,JENDWK,
     $KSTART,KEND,KEND24,NUM,KTIMBG,KTIME,FLOUT,QMNWEK,QMNDAY,QOMIN,
     $STOR1,VOLSAV,VOLUME,KSTART,KEND,(QOMHYD(K),K=KSTART,KEND)
  800 FORMAT(1H0,' JDAWEK,KDAWEK,LDAWEK,JBGN,JSTART,JEND,JENDWK,',
     $ 'KSTART,KEND,KEND24,NUM,KTIMBG,KTIME'/1X,13I6,
     $ /1X,' FLOUT,QMNWEK,QMNDAY,QOMIN,STOR1,VOLSAV,VOLUME',/1X,7F10.0,
     $ /1X,' (QOMHYD(K),K=',I5,1H,,I5,1H),/(1X,8F10.0))
  810 IF(KEND.EQ.NUM) GO TO 830
      IF(KEND.EQ.JENDWK) GO TO 820
C
C SET VARIABLES FOR NEXT DAILY COMPUTATION OF WEEKLY CYCLE.  DIFFERENCE
C BETWEEN OLD AND NEW VOLUME WILL BE ADDED TO VOLUME FOR THIS NEXT DAY.
C
      VOLUME=VOLSAV-VOLUME
      KSUM=KSUM+1
      KSTART=KEND+1
      KEND=KSTART+NTIM24-1
      KEND24=(KEND/NTIM24)*NTIM24
      KEND=KEND24
c      KEND24=KEND
      IF(KEND.GT.JEND) KEND=JEND
      KDAWEK=KDAWEK+1
      IF(KDAWEK.GT.7) KDAWEK=1
CR1 WHEN NOT A FULL WEEK, GO TO 661
      IF(JFULWK.NE.0) GO TO 661
      GO TO 680
C
C SET VARIABLES FOR NEXT WEEKLY CUCLE.
C
  820 KDAWEK=JDARUL+1
      LDAWEK=JDARUL
      LTIME=JTIMRL
      IF(KDAWEK.GT.7) KDAWEK=1
      JSTART=JENDWK+1
      JEND=JSTART+7*NTIM24-1
      JENDWK=JEND
      IF(JEND.GT.NUM) JEND=NUM
      JDIF=JENDWK-JSTART
CR1 SET VARIABLE FOR THE 1ST DAILY COMPUTATION OF THE WEEKLY CYCLE
      KSTART=JSTART
      KEND=KSTART+NTIM24-1
      KEND24=(KEND/NTIM24)*NTIM24
      KEND=KEND24
c      KEND24=KEND
      IF(KEND.GT.NUM) KEND=NUM
      KTEST=0
      VOLUME=0.
      BGNSUM=SQIM(JSTART-1)
      GO TO 650
C
C FOLLOWING STATEMENTS COMPUTE STORAGES AND ELEVATIONS FOR THIS TIME
C INTERVAL AND CHECK AGAINST LIMITING STORAGES.  PROPOSED OUTFLOWS WILL
C BE CHANGED IF STORAGES ARE OUTSIDE LIMITING VALUES EXCEPT FOR REQUIRED
C MINIMUM OUTFLOW (QOUTMN).  CHECKS WILL BE MADE AGAINST MAXIMUM GENERA-
C TION OUTFLOW IF IT VARIES WITH ELEVATION.  FOLLOWING STATEMENTS ARE
C FOR TIME INTERVALS PAST LAST OBSERVED STORAGE (OR LAST STORAGE
C COMPUTED FROM OBSERVED MEAN OUTFLOW AND ADJUSTED MEAN INFLOW) IF AN
C ADJUSTED RUN.  ICHANG OF 0 INDICATES NO CHANGE IN MEAN OUTFLOW (QOM)
C WHILE ICHANG OF 1 INDICATES A CHANGE WILL BE MADE.
C CHANGE WILL BE MADE.
C
  830 QOM=QOMHYD(NS2)
      ICHANG=0
      S2=S1+QIM-QOM
      IF(S2.LE.STORMX) GO TO 840
      S2=STORMX
      QOM=S1+QIM-S2
      ICHANG=1
  840 CALL NTER26(S2,ELEV2,STOR,ELEV,NSE,IFLAG,NTERP,IBUG)
      IF(NELVGN.LE.0) GO TO 850
C
C FOLLOWING STATEMENT COMPUTES MAXIMUM GENERATION DISCHARGE WHEN IT IS A
C FUNCTION OF ELEVATION.
C
      CALL TERP26(ELEV2,QGENMX,ELVGEN,GENMXQ,NELVGN,IFLAG,IBUG)
  850 IF(QOM.LE.QGENMX) GO TO 860
      QOM=QGENMX
      ICHANG=1
      S2=S1+QIM-QOM
      GO TO 870
  860 CONTINUE
C
C DO NOT REDUCE OUTFLOW IF FLOODING IS EXPECTED EVEN IF POOL ELEVATION
C DROPS TO BELOW STORMN TEMPORARILY PRIOR TO NEMXST
      STORLM=STOUPR
      IF(STORLM.EQ.-999.0)STORLM=STOMAX(NEMXST)
      IF(EMXSTO.LT.STORLM .AND. NS2.LE.NEMXST) GO TO 870
      IF(S2.GE.STORMN) GO TO 870
      S2=STORMN
      QOM=S1+QIM-S2
C      QO2=QI2
C      IF(QO2.GT.QGENMX) QO2=QGENMX
      ICHANG=1
      IF(QOM.GE.QOUTMN) GO TO 870
      QOM=QOUTMN
  861 S2=S1+QIM-QOM
 870  CONTINUE
C
C  CODES BETW STATEMENTS 870-900 ARE COMMENTED OUT TEMPORARILY BECAUSE
C  PROPOSED OUTFLOW CAN NOT BE ENTERED 6/18/96 BY KSH
C
C SINCE OBSERVED OUTFLOWS MIGHT OCCUR PAST LAST OBSERVED STORAGE WITH
C PRIOR MISSING VALUES, A CHECK FOR OBSERVED OUTFLOW MUST BE MADE IF
C THE ARRAY POSITION FOR THIS TIME INTERVAL (NS2) IS PRIOR TO OR EQUAL
C TO RUN TIME (NRUN) AND THIS IS AN ADJUSTED RUN.
C$  870 IF(IFCST.EQ.0) GO TO 900
C$      IF(FCST) GO TO 880
C$     IF(QOMOBS(NS2).EQ.-999.0) GO TO 900
C$     QOM=QOMOBS(NS2)
C$      GO TO 900
C
C CHECK IF PROPOSED OUTFLOWS MIGHT HAVE BEEN CHANGED.  CALL WARN IF THEY
C HAVE BEEN CHANGED.
C
C$  880 IF(NS2.GT.LPROP) GO TO 900
C$      IF(ICHANG.EQ.0) GO TO 900
C$      WRITE(IPR,890) QOMHYD(NS2),NS2,QOM
C$  890 FORMAT(1H0,39H**WARN** A POSSIBLE PROPOSED OUTFLOW OF,F12.3,18H AT
C$     $ ARRAY POSITION,I6,20H HAS BEEN CHANGED TO,F12.3/ 1X,112HIF ABSOLU
C$     $TELY CERTAIN OF NO CHANGE IN PROPOSED OUTFLOWS, THESE VALUES SHOUL
C$     $D BE ENTERED WITH A SPECIAL INDICATOR/41H AND COMPUTATIONS WILL BE
C$     $ MADE IN PREQ26.)
C$      CALL WARN
C
C WHEN MEAN OUTFLOW (QOM) AND STORAGE AT END OF TIME INTERVAL (S2) ARE
C OBSERVED OR COMPUTED FROM OBSERVED VALUES, THE
C PROGRAM COMES TO 900 FROM THE FIRST PART OF THE SUBROUTINE AFTER
C USING FUNCTION OBSV26.
C
  900 QOMHYD(NS2)=QOM
      STOHYD(NS2)=S2
C      IF(QO2.EQ.-999.0) QO2=QOM
      IF(IFCST.EQ.0) GO TO 910
      IF(FCST) GO TO 910
      IF(OBSQO2.NE.-999.0) QO2=OBSQO2
      IF(ELEV2.NE.-999.0) GO TO 920
  910 CALL NTER26(S2,ELEV2,STOR,ELEV,NSE,IFLAG,NTERP,IBUG)
cc      QO2=QOM*2.0-QO1
      QO2=QOM
      IF(QO2.GT.QGENMX) THEN
        QO2=QGENMX
        GO TO 915
      ENDIF
      IF(QO2.GE.QOMIN) GO TO 920
      QO2=QOMIN
cc 915  QOM=0.5*(QO1+QO2)
 915  QOM=QO2
      S2=S1+QIM-QOM
      CALL NTER26(S2,ELEV2,STOR,ELEV,NSE,IFLAG,NTERP,IBUG)
C
C WRITE TRACE AND DEBUG IF REQUIRED.
C
  920 IF(IBUG-1)1160,1140,930
  930 WRITE(IODBUG,940)
  940 FORMAT(1H0,55H VALUES OF VARIABLE AT THE END OF QGEN26 ARE AS FOLL
     $OWS)
      WRITE(IODBUG,40) IFCST,FCST,NRUN,NUM,NDAYRN,JULDAY,KHRBGN,
     $ JDAWEK,JTIMRL,JDARUL,IENTER(LEVEL),LOBST,LPROP,
     $ QO2,QOM,S1,S2,STORMX,STORMN,EMXSTO,NEMXST,
     $ ADJSTO,QGENMX,QGENDS,QMNWEK,QMNDAY,OUTMIN,
     $ ELEV2,ADJRUL,ELVUPR,ELVLWR,MIDNIT,NTERP,IBUG
      WRITE(IODBUG,970) (QOMHYD(I),I=1,NS2)
      WRITE(IODBUG,951) (STOHYD(I),I=1,NS2)
  970 FORMAT (1H0,' COMPUTED MEAN OUTFLOW (QOMHYD) AND STORAGE',
     & ' (STOHYD):'/(1X,8F10.0))
      IF(IPOWER.NE.1) GO TO 1140
      WRITE(IODBUG,950) (QIMHYD(I),I=1,NUM)
      WRITE(IODBUG,951) (SQIM(I),I=1,NUM)
  950 FORMAT(1H0,' MEAN INFLOW (QIMHYD) AND SUMMATIONS OF',
     $ ' INFLOWS (SQIM):'/(1X,8F10.0))
  951 FORMAT(1X,8F10.0)
      IF(IFCST.EQ.1) WRITE(IODBUG,960)(QOMOBS(I),I=1,NRUN)
  960 FORMAT(1H0,37H  VALUES OF MEAN OBSERVED OUTFLOW ARE/(1X,8F10.0))
      WRITE(IODBUG,980) (RULEL(I),I=1,NUM)
      WRITE(IODBUG,951) (RULSTO(I),I=1,NUM)
  980 FORMAT(1H0,' RULE CURVE ELEVATIONS (RULEL) AND STORAGES',
     & ' (RULSTO):'/(1X,8F10.3))
      IF(DATEUP(1).NE.-999.0) THEN
        WRITE(IODBUG,990) (DATEUP(I),I=1,NELVUP)
        WRITE(IODBUG,1001) (ELEVUP(I),I=1,NELVUP)
      ENDIF
      IF(ELVUPR.LT.-500.0 .OR. DATEUP(1).NE.-999.0)
     & WRITE(IODBUG,1020) (STOMAX(I),I=1,NUM)
  990 FORMAT(1H0,' DATE (DATEUP) AND UPPER LIMITING ELEVATION',
     & ' (ELEVUP):'/(1X,8F8.0))
 1020 FORMAT(1H0,' PERIOD UPPER STORAGE LIMIT (STOMAX):'/(1X,8F10.0))
      IF(DATELR(1).NE.-999.0) THEN
        WRITE(IODBUG,1000) (DATELR(I),I=1,NELVLR)
        WRITE(IODBUG,1001) (ELEVLR(I),I=1,NELVLR)
      ENDIF
      IF(ELVLWR.LT.-500.0 .OR. DATELR(1).NE.-999.0)
     & WRITE(IODBUG,1050) (STOMIN(I),I=1,NUM)
 1000 FORMAT(1H0,' DATE (DATELR) AND LOWER LIMITING ELEVATION',
     & ' (ELEVLR):'/(1X,8F8.0))
 1001 FORMAT(1X,8F8.3)
 1050 FORMAT(1H0,' PERIOD LOWER STORAGE LIMIT (STOMIN):'/(1X,8F10.0))
      IF(NELVGN.GT.0.0) THEN
        WRITE(IODBUG,1070) (ELVGEN(I),I=1,NELVGN)
        WRITE(IODBUG,951) (GENMXQ(I),I=1,NELVGN) 
      ENDIF
 1070 FORMAT(1H0,' ELEVATION (ELEVGN) AND MAXIMUM GENERATION ',
     $ ' DISCHARGE (GENMXQ):'/(1X,8F10.3))
      IF(DATMIN(1).NE.-999.0) THEN
         WRITE(IODBUG,1080) (DATMIN(I),I=1,NDATMN)
         WRITE(IODBUG,951) (QMIN(I),I=1,NDATMN)
      ENDIF
 1080 FORMAT(1H0,' DATE (DATMIN) AND REQUIRED MINIMUM OUTFLOW (QMIN):',
     & /(1X,8F10.0))
      WRITE(IODBUG,1090) MIDNIT,(FRACMD(I),I=1,NTIM24)
      WRITE(IODBUG,1090) JTIMRL,(FRACRL(I),I=1,NTIM24)
 1090 FORMAT(1H0,'PERIOD FRACTIONS OF 24-HR VOLUME WITH',
     & ' LAST PERIOD ENDING AT ',I2,' HOUR:'/(1X,8F6.3))
      IF(JDARUL.EQ.-999) GO TO 1140
      WRITE(IODBUG,1100)(I,FRACDA(I),I=1,7)
 1100 FORMAT(1H0,' DAILY FRACTION OF WEEKLY VOLUME FOR MIDNIGHT TO',
     & ' MIDNIGHT:'/(1X,7(I2,F6.3,2X)))
      WRITE(IODBUG,1110) JTIMRL,(I,FRAC24(I),I=1,7)
 1110 FORMAT(1H0,'DAILY FRACTION OF WEEKLY VOLUME WHEN POOL IS BROUGHT',
     $ ' BACK TO RULE CURVE AT ',I2,' HOUR:'/(1X,7(I2,F6.3,2X)))
 1140 WRITE(IODBUG,1150)
 1150 FORMAT(1H0,10X,17H** LEAVING QGEN26)
 1160 RETURN
      END

