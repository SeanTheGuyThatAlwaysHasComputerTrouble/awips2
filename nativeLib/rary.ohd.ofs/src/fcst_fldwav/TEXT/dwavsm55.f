       SUBROUTINE DWAVSM55(PO,CO,Z,ST1,LTST1,T1,LTT1,STT,LTSTT,QTC,
     . LTQTC,STC,LTSTC,QL,LTQL,QLJ,LTQLJ,POLH,LTPOLH,ITWT,LTITWT,
     . STN,LTSTN,ST0,QT0,QLI,MIXF,KU,NB,QJ,YJ,NJUN,NQCM,ITRMX,NSITR,
     . MINIT,STYPE,ICT,QU,YD,YU,QC,YC,QDI,YDI,VU,VC,VD,NGS,LROUT,KRTYP,
     . KRT1,KRTN,GZ,YII,TII,QD,NGAGE,NQL,QLLT,KD,KRCH,NFAILD,SQW,SQS1,
     . SQS2,SQO,DTHDB,NUMLAD,LAD,HFDD,TDO,KSP,KS1,KSN,LRMIX,TYPK,YPK,
     . TQPK,QPK,PLTIM,QMX,YMX,DDX,LQ1,LQN,KFTR,KLPI,MUD1,UW1,VIS1,SHR1,
     . POWR1,IWF1,X,HS,MRV,EPQJ,NFAILO,VPK,JT,CCO,ISTRT,TO,QSTR,LTQSR,
     . TIDE,WTLV,HLVPK,DTMAP,FYPK,FQPK,FTYPK,FTQPK,FVPK,FHLVPK,NPO,
     . NPD,JSIZE,IHRCO,IOPNMAP,INOW,MXINBD,K1,K2,K3,K4,K5,K6,K7,K8,K9,
     . K10,K11,K12,K14,K15,K16,K19,K20,K21,K22,K23,K24,K28,K30)

C      THIS SUBROUTINE HANDLES COMPUTATIONS PRODUCING A SIMULATED RUN
C
C  NFT=0, HFDD=FAILURE WATER ELEV.; NFT=1, HFDD=FAILURE TIME
C       NFAILD=0      NO DAM
C             =1      BEFORE ROUTING (INCLUDE WARM UP)
C             =2      ANTICIPATED FAILURE
C             =3      ACTUAL FAILURE
C
      COMMON/FCARY/IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON/LEV55/NLEV,DHLV,NPOND,DTHLV,IDTHLV
      COMMON/M155/NU,JN,JJ,KIT,G,DT,TT,TIMF,F1
      COMMON/M655/KTIME,DTHYD,J1
      COMMON/M3055/EPSY,EPSQ,EPSQJ,THETA,XFACT
      COMMON/M3255/IOBS,KTERM,KPL,JNK,TEH
      COMMON/M3455/KXP,ICD,ITMAX,KWARM
      COMMON/M3655/TFCST
CC      COMMON/M3755/NINIT
      COMMON/M3855/CONS,QSUMIM,QSUMIT,QSUMOM,QSUMOT,JJKT
CC      COMMON/M3955/NCOH,NSAVE,DNLABL
      COMMON/SS55/NCS,A,B,DB,R,DR,AT,BT,P,DP,ZH
      COMMON/NPC55/NP,NPST,NPEND
      COMMON/DQDT55/DQDTN
      COMMON/IT55/ITER
      COMMON/TPL55/DTHPLT
      COMMON/FLP55/KFLP
      COMMON/MIXX55/MIXFLO,DFR,FRC
      COMMON/METR55/METRIC
      COMMON/PRES55/KPRES
      COMMON/TDBG55/TDBG1,TDBG2,JNKDBG,JDBG1,JDBG2,LDBG1,LDBG2,MCMDBG
cc      COMMON/MXVAL55/MXNB,MXNGAG,MXNCM1,MXNCML,MXNQL,MXINBD,MXRCH,MXMGAT
cc     *            ,MXNXLV,MXROUT,MXNBT
      COMMON/VS55/MUD,IWF,SHR,VIS,UW,PB,SIMUD
      COMMON/TKEP55/DTHII,MDT,NDT,DTHS,TFH1
      COMMON/IONUM/IN,IPR,IPU
        COMMON/NETWK55/NET
      COMMON/FNOPR/NOPROT
cc      COMMON/FLDMAP55/NMAP,FILANIM,FILNAM,MPTIM

      INCLUDE 'common/fdbug'
      INCLUDE 'common/ofs55'
      INCLUDE 'common/opfil55'
      INCLUDE 'common/fldmap55'
C
      DIMENSION PO(*),CO(*),Z(*),ST1(*),LTST1(*),T1(*),LTT1(*),QTC(*)
      DIMENSION LTQTC(*),STC(*),LTSTC(*),QL(*),LTQL(*),TII(*),QLI(*)
      DIMENSION MIXF(K1),KU(K1),NB(K1),QD(K2,K1),QJ(K1),QT0(K28),CCO(*)
      DIMENSION POLH(*),LTPOLH(*),ITWT(*),LTITWT(*),QSTR(*),LTQSR(*)
      DIMENSION QU(K2,K1),YD(K2,K1),YJ(K1),YU(K2,K1),NJUN(K1),ST0(K28)
      DIMENSION NQCM(K1),QC(K2,K1),YC(K2,K1),ITRMX(K1),QDI(K2,K1)
      DIMENSION YDI(K2,K1),YII(K2,K1),NGAGE(K1),NGS(K4,K1)
      DIMENSION NSITR(K1),PLTIM(*),QLJ(*),LTQLJ(*),TO(*),STN(*),TIDE(*)
      DIMENSION VU(K2,K1),VC(K2,K1),VD(K2,K1),FVPK(K2,K1)
      DIMENSION STYPE(K12),NFAILO(K16,K1),WTLV(K22),HLVPK(K22)
      DIMENSION LROUT(K1),KRTYP(K5,K1),KRT1(K5,K1),KRTN(K5,K1)
      DIMENSION GZ(K4,K1),JT(K1),ICT(K2),KRCH(K2,K1),FHLVPK(K22)
      DIMENSION NQL(K1),QLLT(K1),KD(K1),NFAILD(K16,K1)
      DIMENSION SQW(2,K16,K1),SQS1(2,K16,K1),SQS2(2,K16,K1)
      DIMENSION SQO(2,K16,K1),TDO(K16,K1),LRMIX(K5,K1),DDX(K2,K1)
      DIMENSION DTHDB(K16,K1),NUMLAD(K1),LAD(K16,K1),HFDD(K16,K1)
      DIMENSION KSP(K2,K5,K1),KS1(K2,K5,K1),KSN(K2,K5,K1),KFTR(K1)
      DIMENSION TYPK(K2,K1),YPK(K2,K1),TQPK(K2,K1),QPK(K2,K1),VPK(K2,K1)
      DIMENSION QMX(K2,K1),YMX(K2,K1),MRV(K1),EPQJ(K1),DTMAP(K30)
      DIMENSION KLPI(K1),LQ1(K10,K1),LQN(K10,K1),X(K2,K1),HS(K9,K2,K1)
      DIMENSION MUD1(K1),UW1(K1),VIS1(K1),SHR1(K1),POWR1(K1),IWF1(K1)
      DIMENSION FYPK(K2,K1),FQPK(K2,K1),FTYPK(K2,K1),FTQPK(K2,K1)
      CHARACTER*8 SNAME
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fldwav/RCS/dwavsm55.f,v $
     . $',                                                             '
     .$Id: dwavsm55.f,v 1.9 2004/09/24 20:52:29 jgofus Exp $
     . $' /
C    ===================================================================
C
      CHARACTER*4 H,Q,V
      DATA H,Q,V/'H   ', 'Q   ','V   '   /
CC      WRITE(IPR,11110)
      DATA SNAME/ 'DWAVSM55'/
C
      CALL FPRBUG(SNAME,1,55,IBUG)
11110 FORMAT(/1X,'** ENTER DWAVSM (ACTUAL ROUTING BEGINS) **')

      ICO=1
      JHRCO=(ICDAY(ICO)-1)*24+ICHOUR(ICO)

      VMUD=0.0
        DO 50 JJ=1,JN+NET
      IF(KLPI(JJ).NE.0) THEN
      MIXFLO=0
      MIXF(JJ)=0
      END IF
50    CONTINUE
51    JNKS=JNK
      DTHS1=DTHS
      TU=0.
      TU2=0.
      ISTOP=0
      DQDTN=0.0
      NITT=0
      NFDUM=0
      NUMTIM=0
      DTHDB1=999
      IF(MXINBD.GT.0) DTHDB1=DTHDB(1,1)

      DO 2 IJT=1,JN
      JT(IJT)=0
    2 CONTINUE

      IF(JDBG1.LE.0) JDBG1=1
      IF(JDBG2.LE.0) JDBG2=JN
      DO 116 J=1,JN+NET
      NRT=LROUT(J)
      DO 113 L=1,NRT
  113 LRMIX(L,J)=1
      NUM=NUMLAD(J)
      IF(NUM.EQ.0) GO TO 116
      DO 114 L=1,NUM
      TDO(L,J)=0.0
      NFAILO(L,J)=NFAILD(L,J)
      IF(NFAILD(L,J).GE.1) NFDUM=1
      IF(NFAILD(L,J).EQ.0) GO TO 114
      IF(DTHDB1.GT.DTHDB(L,J)) DTHDB1=DTHDB(L,J)
  114 CONTINUE
      DO 115 L=1,NUM
      I=LAD(L,J)
      Y1=YDI(I,J)+0.001
      Y2=HFDD(L,J)
      TSP=DTHDB(L,J)
      IF (DTHII.EQ.0.0 .AND. Y1.GT.Y2) DTHS=TSP
      IF (KWARM.EQ.0 .AND. Y1.GT.Y2) NFAILD(L,J)=3
      NFAILO(L,J)=NFAILD(L,J)
  115 CONTINUE
  116 CONTINUE
      IF(NFDUM.NE.0) GO TO 118
C      IF(DTHPLT.LE.DTHII) DTHPLT=DTHII
      GO TO 1006
  118 IF(NFDUM.LE.0) GO TO 1006
      IF(DTHPLT.LE.DTHDB1) DTHPLT=DTHDB1
 1006 K=1
      TII(K)=DTHPLT
 1011 K=K+1
      IF(K.GT.K3) THEN
        TEH=TII(K3)
        K=K3
        TII(K)=TII(K-1)+DTHPLT
        GO TO 1012
      ENDIF
      TII(K)=TII(K-1)+DTHPLT
      IF(TII(K).GE.TEH) GO TO 1012
      GO TO 1011
 1012 DO 1070 J=1,JN+NET
      NSITR(J) = 0
      ITRMX(J)=0
      N=NB(J)
      DO 1070 I=1,N
cc      if(j.eq.2) print*, i,t1(8931)
      YD(I,J)=YDI(I,J)
      QD(I,J)=QDI(I,J)
      YPK(I,J)=0.0
      TYPK(I,J)=0.
      QPK(I,J)=0.0
      TQPK(I,J)=0.
      VPK(I,J)=0.
      FQPK(I,J)=0.0
      FTQPK(I,J)=0.
      FVPK(I,J)=0.
      Y=YD(I,J)
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     . PO(LOBSS),J,I,Y,PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      VD(I,J)=QD(I,J)/A
      VU(I,J)=VD(I,J)
      VC(I,J)=VD(I,J)
      QU(I,J)=QD(I,J)
      YU(I,J)=YD(I,J)
      QC(I,J)=QD(I,J)
      YC(I,J)=YD(I,J)
      YMX(I,J)=YU(I,J)
      QMX(I,J)=QU(I,J)
      IF(NGAGE(J).EQ.0) GO TO 1070
      NG=NGAGE(J)
      DO 1013 L=1,NG
        IF(I.EQ.NGS(L,J)) THEN
          LJ=LCAT21(L,J,NGAGE)
          ST0(LJ)=YDI(I,J)
          QT0(LJ)=QDI(I,J)
          GO TO 1070
        ENDIF
 1013 CONTINUE
 1070 CONTINUE
      QSUMIM=0.
      QSUMIT=0.
      QSUMOM=0.
      QSUMOT=0.
      VOLSUM=0.

      KIT=1
      KTIME=1
      KOUT=1
      F1I=F1
      ITMAXJ = 10
      JJK=0
      JJKT=0
      TT=0.
      TIMF=3600.
      DTH=DTHS1
      DT=DTH*TIMF
      DTHNEW=DTH
      TFMN=10000.
      TPK1=0.0
      KAUTO=0
      IDT=0
      NDPS = 0
      IIT = ISTRT
      IF (JNK.GE.4) WRITE(IPR,1475)
 1475 FORMAT (//2X,'INITIAL CONDITIONS AS READ IN')
      KPRINT=1
      KSIT=0
      F1=F1I
      DO 961 J=1,JN+NET
      NRT=LROUT(J)
      DO 961 L=1,NRT
      LRT=L
      IRTYP=KRTYP(L,J)
      IF(IRTYP.EQ.1) GO TO 961
      IRT1=KRT1(L,J)
      IRTN=KRTN(L,J)
      IF(MIXF(J).GE.2) CALL MIXI55(PO,JNK,J,LRT,IRT1,IRTN,YU,QU,
     * HS,PO(LOAS),Z(LZIFR),KSP,KS1,KSN,LRMIX,Z(LZYCR),KRCH,
     * DFR,FRC,K1,K2,K5,K9)
  961 CONTINUE
      GO TO 1067

C     KIT =    1          INITIAL STATE FROM STEADY FLOW COMPUTATIONS
C         <=   KWARM+1    WARM UP FOR TT=0.0
C         >    KWARM+1    ROUTING FOR TT>0.0
  965 KIT=KIT+1
      IF (KIT.LE.(KWARM+1)) THEN
        TT=0.0
        DTH=DTHS
        GOTO 966
      ENDIF
      TU2=TU2+DTHS
      TU=TT+DTH
      IF(TU.LT.(TU2-DTHS)) TU2=TU2-DTHS
      KSIT=0
      F1=F1I
      KMIX=1
      IF(MIXFLO.GE.2) KMIX=0
1985  TT=TT+DTH
      IF(KIT.LE.KWARM+1) TT=0.
      DT=DTH*TIMF
cc      if(tt.ge.tii(k3-1)) then
cc        print *, tt, tii(k3-1),dth
cc        print *, (yd(ijk,1), ijk=1,21)
cc        print *, (qd(ijk,1), ijk=1,21)
cc        print *, (yu(ijk,1), ijk=1,21)
cc        print *, (qu(ijk,1), ijk=1,21)
cc        jnk=119
cc      endif
cc      IF(TT.GT.TEH) GO TO 1740
  966 IF (KWARM.EQ.0) GOTO 967
      IF (KIT.EQ.2.AND.JNK.GE.4) WRITE(IPR,1085)
 1085 FORMAT (//2X,92HINITIAL CONDITIONS IMPROVED BY SOLVING UNSTEADY FL
     1OW EQUATIONS WITH BOUNDARIES HELD CONSTANT)

  967 IF(KIT.LE.KWARM) GOTO 1120
        IF (KSIT.NE.0.OR.NUMTIM.GT.K24.OR.NFGRF.EQ.1) GO TO 1183
        NUMTIM=NUMTIM+1
        IF(NUMTIM.LE.K24) THEN
          IF(KWARM.EQ.0.AND.KIT.EQ.2) NUMTIM=NUMTIM+1
          PLTIM(NUMTIM)=TT
          DO 1984 JRVR=1,JN+NET
          NJF=NB(JRVR)
          IF(METRIC.EQ.1) THEN
            DO 1983 IJF=1,NJF
            QD(IJF,JRVR)=QD(IJF,JRVR)/35.32
            YD(IJF,JRVR)=YD(IJF,JRVR)/3.281
 1983     CONTINUE
          ENDIF
          IF(NFGRF.EQ.0) THEN
            WRITE(JFQ) (QD(IJF,JRVR),IJF=1,NJF)
            WRITE(JFH) (YD(IJF,JRVR),IJF=1,NJF)
          ENDIF
          IF(NFGRF.EQ.2) THEN
            WRITE(JFQFCST,2500) (QD(IJF,JRVR),IJF=1,NJF)
 2500       FORMAT(5000F12.3$)
            WRITE(JFHFCST,2500) (YD(IJF,JRVR),IJF=1,NJF)
            WRITE(JFVEL,2500)   (VD(IJF,JRVR),IJF=1,NJF)
          ENDIF
          IF(METRIC.EQ.1) THEN
            DO 1982 IJF=1,NJF
            QD(IJF,JRVR)=QD(IJF,JRVR)*35.32
            YD(IJF,JRVR)=YD(IJF,JRVR)*3.281
 1982       CONTINUE
          ENDIF
 1984     CONTINUE
          IF(NFGRF.EQ.2) THEN
            WRITE(JFQFCST,*)
            WRITE(JFHFCST,*)
            WRITE(JFVEL,*)
          ENDIF
        ENDIF
1183  CONTINUE

C jgg changed following call signature for MR 1954
      IF(NMAP.GT.0.AND.DTMAP(1).GE.1.0) CALL WRTMAP55(PO,
     .   NB,PO(LOMPRV),PO(LOXLAT),PO(LOXLON),YD,HS,
     .   PO(LOBS),PO(LOBSS),X,WTLV,PO(LONJFM),PO(LONIFM),
     .   PO(LONJTO),PO(LONITO),NQL,LQ1,LQN,PO(LOMPLC),
     .   Z(LZJCK),Z(LZIMAP),MRV,NJUN,PO(LONSTR),
     .   PO(LONST),PO(LOSTON),PO(LOGZO),DTMAP,DTH,
     .   IOPNMAP,K1,K2,K9,K10,K14,K22,K27,K30)

      IF(TT.GT.TEH) GO TO 1740

C-------- ROUTING EACH RIVER SEPARATELY DURING RELAXATION --------
C         INCLUDING NETWORK RIVERS
 1120 DO 1300 J=1,JN+NET
      NBJ=NB(J)
      IF (IWF1(J).EQ.1 .AND. KRCH(1,J).LT.10) IWF1(J)=2
      IF (IWF1(J).EQ.1 .AND. KRCH(1,J).GE.10) IWF1(J)=3
      IF (IWF1(J).GE.2 .AND. TT.LE.0.0000001) GOTO 1300
      JJ=J
      MUD=MUD1(J)
      UW=UW1(J)
      VIS=VIS1(J)
      SHR=SHR1(J)
      IWF=IWF1(J)
      POWR=POWR1(J)
      IF (POWR.GE.0.01) PB=1.0/POWR
      ITRMX(J)=0
      IF (JT(J).EQ.0.AND.JJK.GT.0.AND.J.GT.1) GO TO 1300
      IF(JN-1) 1180,1180,1130
 1130 IF (J-2) 1140,1170,1170
 1140 DO 1160 J2=2,JN
      N=NB(J2)
      IF(JJK.GT.0) GO TO 1160
      QJ(J2)=0.0
      IF(KU(J2).EQ.0) QJ(J2)=-QU(1,J2)
      IF(KD(J2).EQ.0) QJ(J2)=QU(N,J2)
 1160 CONTINUE
      GO TO 1180
 1170 MJ=MRV(J)
      NJUNCT=NJUN(J)
      IF (J.LE.JN) YJ(J)=0.5*(YU(NJUNCT,MJ)+YU(NJUNCT+1,MJ))
 1180 N=NB(J)
      NCML=ABS(NQCM(J))
      IF(NCML.EQ.0) NCML=NCS
      NRT=LROUT(J)
        IF (J.GT.JN) NRT=1
      IF(LDBG1.LE.0) LDBG1=1
      IF(LDBG2.LE.0) LDBG2=NRT
C ESTIMATED Q AT BOTH ENDS OF NETWORK RIVERS, QJ=D/S YJ=U/S
      IF (NET.LE.0) GOTO 1186
      IF (JJK.GT.0) GOTO 1186
      DO 1185 J2=JN+1,JN+NET
        N=NB(J2)
      QJ(J2)=QD(N,J2)
        YJ(J2)=QD(1,J2)
 1185 CONTINUE
C------------  MULTIPLE ROUTING FOR RIVER J  ----------------
 1186 DO 2186 L=1,NRT
      LRT=L
      IRTYP=KRTYP(L,J)
      IRT1=KRT1(L,J)
      IRTN=KRTN(L,J)
           IF (J.GT.JN) THEN
           IRTYP=0
           IRT1=1
           IRTN=NB(J)
           ENDIF
      IF (IWF.GE.2) IRTN=IWF
      IF(IRTYP.LE.1) GOTO 2182

      IF(IRTYP.LT.4) THEN
      WRITE(IPR,*) 'DIFFUSION, M-C, L-P, ROUTINGS ARE NOT READY NOW'
      STOP

      ELSE IF(IRTYP.EQ.4) THEN
      CALL POOL55(PO,CO,J,QU,QD,YU,YD,KRCH,IRT1,ST1,LTST1,T1,LTT1,
     $          K1,K2,K7,K8,K9,K15,K16,K19,K20,K21)
      GOTO 2186

      ELSE IF(IRTYP.EQ.5) THEN
      LG1=LZD
      LG2=LZD+4*K2
      KUE=KU(J)
      KDE=KD(J)
      IRTNT=IRTN
      IF(IRTN.LT.NBJ) THEN
        KDE=4
        IRTNT=IRTN+1
      ENDIF
      CALL EXPT55(PO,CO,Z,QL,LTQL,T1,LTT1,ST1,LTST1,POLH,LTPOLH,ITWT,
     . LTITWT,J,QU,QD,YU,YD,IRT1,IRTNT,Z(LZC),Z(LZXX),Z(LZKSP),
     . Z(LG1),Z(LG2),PO(LCEXPP),Z(LZEXPR),HS,PO(LOBS),
     . PO(LOBSS),PO(LOAS),PO(LOASS),PO(LCDDX),NCML,NQCM(J),KUE,KDE,
     . NQL,PO(LOFKEC),KRCH,QDI,YDI,Z(LZYUMN),PO(LOSLFI),K1,K2,K3,
     . K6,K7,K8,K9,K10,K15,K16,K19,K20,K21,2,PO(LOX),PO(LOXLOS),
     . PO(LOQLOS),PO(LOALOS),QDI(1,J))
      GOTO 2186
      ENDIF

 2182 IF(MIXF(J).GE.2) GO TO 2185
      KS1(1,L,J)=IRT1
      KSN(1,L,J)=IRTN
      KSP(1,L,J)=0
      IF(MIXF(J).EQ.1) KSP(1,L,J)=1
 2185 CALL SOLVE55(PO,CO,Z,ST1,LTST1,T1,LTT1,STN,LTSTN,POLH,LTPOLH,
     . ITWT,LTITWT,QLJ,LTQLJ,QL,LTQL,STC,LTSTC,QTC,LTQTC,QSTR,LTQSR,
     . NCML,Z(LZXX),KU,NB,YJ,NJUN,ITRMX,ICT,YC,QDI,Z(LZYUMN),HS,
     . QD,PO(LCDDX),NQL,KD,KRCH,KSP,KS1,KSN,LRMIX,Z(LZICTR),LRT,QU,YD,
     . YU,QC,IRT1,IRTN,ISTOP,KMIX,KSIT,MIXF,NBJ,NITT,DTH,NFAILD,HFDD,
     . YDI,NFAILO,TIDE,NPD,ISTRT,IHRCO,JHRCO,JSIZE,ICO,K1,K2,K4,K5,K6,
     . K7,K8,K9,K10,K14,K15,K16,K19,K20,K21,K28)
      IF(ISTOP.EQ.1) GO TO 1941
      IF(ICT(1).LE.0) GO TO 2186
      GO TO 1985
 2186 CONTINUE

        NUM=NUMLAD(J)
        IF(NUM.EQ.0) GO TO 1087
        DO 1086 L=1,NUM
          NFAILO(L,J)=NFAILD(L,J)
 1086   CONTINUE
 1087 CONTINUE
      NSITR(J) = NSITR(J) + ITRMX(J)
 1300 CONTINUE
C---- ALL RIVERS (JN+NET) FINISHED, START RELAXATION CHECK ------
      IF(JN-1) 1370,1370,1310
 1310 KT=0
      IF (JNK.GT.9.AND.JJK.EQ.0.AND.TT.GT.0.0) WRITE(IPR,*)
      IF (JNK.GT.9.AND.JJK.EQ.0) WRITE(IPR,1320)
 1320 FORMAT (2X,'RELX ITR',4X,'JRIVER',
     112X,3HERQ,11X,4HQOLD,11X,4HQNEW,1X,'NEWTON ITRMX')
      JT(1)=0
      DO 1350 J2=2,JN+NET
      J2TO=MRV(J2)
      I2TO=NJUN(J2)
      EPSQJ=AMIN1(EPQJ(J2),EPQJ(J2TO))
cc      EPSQJ=EPQJ(J2)
      N=NB(J2)
      QJO=QJ(J2)
        QJO2=YJ(J2)
      JT(J2)=0
      QQQU=0.0
      IF(KU(J2).EQ.0) QQQU=-QU(1,J2)
      IF(KD(J2).EQ.0) QQQU=QU(N,J2)
      ERQ=QJ(J2)-QQQU
        IF (J2.GT.JN) THEN
          ERQ1=ABS(YJ(J2)-QU(1,J2))
          ERQ2=ABS(QJ(J2)-QU(N,J2))
        ERQ=AMAX1(ERQ1,ERQ2)
          ENDIF
      IF(ABS(ERQ).GT.EPSQJ) KT=1
      IF(ABS(ERQ).GT.EPSQJ) JT(J2)=1
      QJ(J2)=THETA*QQQU+(1.-THETA)*QJO
        IF (J2.GT.JN) THEN
          QJ(J2)=THETA*QU(N,J2)+(1.-THETA)*QJO
          YJ(J2)=THETA*QU(1,J2)+(1.-THETA)*QJO2
        ENDIF
      IF(JNK.GT.9) WRITE(IPR,1340)JJK,J2,ERQ,QQQU,QJO,ITRMX(J2)
 1340 FORMAT(2I10,3F15.0,I10)
 1350 CONTINUE
      JJK=JJK+1
      IF(KT) 1370,1370,1360
 1360 IF(JJK-ITMAXJ)1120,1120,1370
C--------------  ONE STEP ROUTING FINISHED HERE ----------------------
C
 1370 JJKT=JJKT+JJK-1
      JJK = 0
      DO 1380 J=1,JN+NET
      N=NB(J)
      DO 1380 I=1,N
      Y=YU(I,J)
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     . PO(LOBSS),J,I,Y,PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      VU(I,J)=QU(I,J)/A
      IF (MUD.EQ.1 .AND. I.GT.IWF) VU(I,J)=0.0
 1380 CONTINUE
CC      IIT = TT*60. + ISTRT + 0.5
CC      IF (IIT.NE.IICSAV) GO TO 1389
CC      IF (NINIT.LT.5) GO TO 1385
CC      DO 1382 NIN = 3,NINIT
CC      NIN1 = NIN - 1
CC      MINIT(NIN1) = MINIT(NIN)
CC      DO 1381 J = 1,JN+NET
CC      N = NB(J)
CC      DO 1381 I = 1,N
CC      YINIT(NIN1,I,J)=YINIT(NIN,I,J)
CC 1381 CONTINUE
CC 1382 CONTINUE
CC      NINIT = 4
CC 1385 NINIT = NINIT + 1
CC      MINIT(NINIT) = IICSAV
CC      DO 1387 J = 1, JN+NET
CC      N = NB(J)
CC      DO 1387 I = 1, N
CC      YINIT(NINIT,I,J)=YU(I,J)
CC 1387 CONTINUE

 1389 IF(KIT.LE.KWARM) GO TO 1421
C FLOW SUMMATION AND VOLUME COMPUTATION
      DO 1394 J=1,JN
      QLLT(J)=0.
      IF(NQL(J).EQ.0) GO TO 1394
      NQLM=NQL(J)
      TX=TT
      LT1=LTT1(J)
      CALL INTERP55(T1(LT1),NU,TX,IT1,IT2,TINP)
      DO 1392 L=1,NQLM
      DX=0.
      L1=LQ1(L,J)
      LN=LQN(L,J)-1
      DO 1388 K=L1,LN
      DX=DX+DDX(K,J)
 1388 CONTINUE
      LJ=LCAT21(L,J,NQL)
      LQL=LTQL(LJ)-1
      IF(TX.GE.T1(LT1)) THEN
        QLC=QL(IT1+LQL)+(QL(IT2+LQL)-QL(IT1+LQL))*TINP
      ELSE
        QLC=QLI(LJ)+(QL(IT1+LQL)-QLI(LJ))*TX/T1(LT1)
      ENDIF
      QLLT(J)=QLLT(J)+QLC*DX
 1392 continue
 1394 CONTINUE
      DO 1396 J=1,JN
      N1=NB(J)-1
      DO 1395 I=1,N1
        IF(KRCH(I,J).GE.10.AND.KRCH(I,J).LE.30) GO TO 1395
        I1=I+1
        CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     .   PO(LOBSS),J,I,YU(I,J),PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
        ATU1=AT
        CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     .   PO(LOBSS),J,I1,YU(I1,J),PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
        ATU2=AT
        CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS)
     .   ,PO(LOBSS),J,I,YD(I,J),PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
        ATD1=AT
        CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     .   PO(LOBSS),J,I1,YD(I1,J),PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
        ATD2=AT
        DA=0.5*(ATU1-ATD1+ATU2-ATD2)
        YUA=0.5*(YU(I,J)+YU(I1,J))
        YDA=0.5*(YD(I,J)+YD(I1,J))
        CALL SINC55(YUA,J,I,I1,NCS,HS,PO(LOSNC),SCU,DSCU,
     .   PO(LOSNM),SMU,DSMU,K1,K2,K9)
        CALL SINC55(YDA,J,I,I1,NCS,HS,PO(LOSNC),SCD,DSCD,
     .   PO(LOSNM),SMD,DSMD,K1,K2,K9)
        SINA=0.5*(SCU+SCD)
        VOLSUM=VOLSUM+(DA*DDX(I,J)*SINA)
 1395 CONTINUE
 1396 CONTINUE

      IF(JN-1) 1390,1390,1400
 1390 QSUMIT=0.
      QSUMOT=0.
      GO TO 1420
 1400 DO 1410 J2=2,JN
      N=NB(J2)
      QAN=0.5*(QU(N,J2)+QD(N,J2))
      QA1=0.5*(QU(1,J2)+QD(1,J2))
      QSUMIT=QSUMIT+(QA1+QLLT(J2))*DT
 1410 QSUMOT=QSUMOT+QAN*DT
1420  N=NB(1)
      QAN=0.5*(QU(N,1)+QD(N,1))
      QA1=0.5*(QU(1,1)+QD(1,1))
      QSUMIM=QSUMIM+(QA1+QLLT(1))*DT
      QSUMOM=QSUMOM+QAN*DT
      CONS=(QSUMIM+QSUMIT-QSUMOM-VOLSUM)/(QSUMIM+QSUMIT)*100.
 1421 JNK=JNKS
c-------------------------
c  determine forecast time
      IHRFCS=ISTRT+TT
cc      write(ipr,999) tt,inow,istrt,ihrfcs
cc 999  format(3x,'tt=',f10.3,'  inow istrt ihrfcs=',3i10)
c-------------------------
C  DETERMINE PEAK ELEV, DISCHARGE, AND VELOCITY FOR ALL RIVERS
      DO 1450 J=1,JN+NET
      N=NB(J)
      DO 1450 I=1,N
      IF(YPK(I,J).LT.YU(I,J)) THEN
        YPK(I,J)=YU(I,J)
        TYPK(I,J)=TT
      END IF
      IF(QPK(I,J).LT.QU(I,J)) THEN
        QPK(I,J)=QU(I,J)
        TQPK(I,J)=TT
      END IF
      IF(VPK(I,J).LT.VU(I,J)) VPK(I,J)=VU(I,J)

c----------------------------------------------------------------------
c  determine peak infor during forecast period
c----------------------------------------------------------------------
      IF(IHRFCS.GT.INOW) THEN
        IF(FYPK(I,J).LT.YU(I,J)) THEN
          FYPK(I,J)=YU(I,J)
          FTYPK(I,J)=TT
        END IF
        IF(FQPK(I,J).LT.QU(I,J)) THEN
          FQPK(I,J)=QU(I,J)
          FTQPK(I,J)=TT
        END IF
        IF(FVPK(I,J).LT.VU(I,J)) FVPK(I,J)=VU(I,J)
      ENDIF
 1450 CONTINUE
 1067 CALL OUTPUT55(PO,TII,QTC,LTQTC,STC,LTSTC,NB,PO(LONPT),NQCM,ITRMX,
     . QU,YD,YU,PO(LOX),YDI,VU,VD,NGS,HS,QD,DDX,NGAGE,Z(LZQLSM),
     . KRCH,Z(LZBBP),Z(LZYBP),SQW,SQS1,SQS2,SQO,Z(LZQBCH),Z(LZQOTP),
     . Z(LZQOTR),NUMLAD,LAD,PO(LONCM1),KPRINT,DTH,MRV,TO,PO(LONSTR),
     . QSTR,LTQSR,PO(LCKTYP),PO(LONST),PO(LOGZO),NPO,KOUT,K1,K2,K3,K4,
     . K7,K8,K9,K14,K16)

      IF(KIT.EQ.1.AND.KWARM.GT.0) GOTO 965
      IF(KIT.LE.KWARM) GO TO 5035
C------------------------------------------------------------------
C THIS PART IS FOR TEMP. USE TO CHECK SOMETHING AFTER ONE TIME STEP
C------------------------------------------------------------------
      ISC=0
      IRIV=1
      IF (ISC.EQ.0) GOTO 6667
      HPP=YU(ISC,IRIV)
      QPP=QU(ISC,IRIV)
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),
     $   PO(LOBSS),IRIV,ISC,HPP,PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      YPP=A/B
      VPP=QPP/A
      FRP=VPP/((32.25*YPP)**0.5)
      WRITE(IPR,6666) TT,HPP,QPP,FRP
6666  FORMAT(1X,2F10.2,F10.1,F10.3)
6667  CONTINUE

C----------   CHECK IF DAM (BRIDGE, LEVEE) FAILS AND TFMN  ------------
      NUMMAX=0
      NUMCK=1
      NUMFA=0
      DO 1673 J=1,JN+NET
      NUM=NUMLAD(J)
      IF (NUM.GT.NUMMAX) THEN
        NUMMAX=NUM
        NUMCK=J
      ENDIF
      IF(NUM.EQ.0) GO TO 1673
      DO 1672 L=1,NUM
      SQW(2,L,J)=SQW(1,L,J)
      SQS1(2,L,J)=SQS1(1,L,J)
      SQS2(2,L,J)=SQS2(1,L,J)
      SQO(2,L,J)=SQO(1,L,J)
      NF=NFAILD(L,J)
      TSP=DTHDB(L,J)
      IF(NF.EQ.3) GO TO 1671
C  NFT=0, HFDD=FAILURE WATER ELEV.; NFT=1, HFDD=FAILURE TIME
      NFT=0
      IF(HFDD(L,J).LT.-0.01) NFT=1
      I1=LAD(L,J)
      Y=YU(I1,J)
      YA=YU(I1,J)+2.0*(YU(I1,J)-YD(I1,J))
      HF=ABS(HFDD(L,J))

      IF(TT.LE.0.00001) THEN
        Y=YDI(I1,J)
        YA=YDI(I1,J)
        IF(NFT.EQ.0.AND.ABS(YA-HF).LT.0.00001) NFAILD(L,J)=2
      ENDIF
      IF(NFT.EQ.0) THEN
        IF(YA.GE.HF) NFAILD(L,J)=2
        IF(Y.GE.HF) NFAILD(L,J)=3
      ELSE
        IF(TT.GE.HF) NFAILD(L,J)=2
        IF(TT.GT.HF) NFAILD(L,J)=3
      ENDIF
      NFAILO(L,J)=NFAILD(L,J)
      TDO(L,J)=TT
      NF=NFAILD(L,J)
 1671 IF(NF.GE.2) NUMFA=1
      IF(NF.GE.2.AND.TSP.LT.TFMN) TFMN=TSP
      IF(NF.EQ.3.AND.TPK1.EQ.0.0) TPK1=TT+1.1*TFH1
 1672 CONTINUE
 1673 CONTINUE
CC       IF(JN.EQ.1 .AND. NUM.EQ.1 .AND. NF.EQ.3) KAUTO=1
      IF(NUMMAX.EQ.1 .AND. NF.EQ.3) KAUTO=1
      IF (KIT.LE.(KWARM+1)) GOTO 1823
      IF(NLEV.EQ.0) GO TO 1823
      CALL LEVQ55(Z,NB,PO(LZYU),DDX,PO(LOHWLV),PO(LOWCLV),PO(LCIFLV),
     * PO(LCTFL0),PO(LOTFLV),PO(LOBLMX),PO(LOHFLV),PO(LOHLMN),PO(LCHLV),
     * PO(LCBLV),PO(LOHPLV),PO(LODPLV),PO(LONJFM),PO(LONIFM),PO(LONJTO),
     * PO(LONITO),Z(LZQLV),Z(LZQPND),PO(LOHPND),WTLV,K1,K2,K22)
c -----------------
c  determine the peak elevationin all ponds
      DO 1820 L=1,NLEV
        IF(WTLV(L).GT.HLVPK(L)) HLVPK(L)=WTLV(L)
        IF(WTLV(L).GT.FHLVPK(L).AND.IHRFCS.GT.INOW) HLVPK(L)=WTLV(L)
 1820 CONTINUE
c -----------------
      IF(NLEV.GT.0 .AND. IDTHLV.NE.1 .AND. NUMFA.EQ.0) THEN
        TFMN=10000.0
        GO TO 1823
        ENDIF
      IF(DTHLV.LE.TFMN .AND. DTHLV.GE.0.000001 .AND. IDTHLV.EQ.1)
     $ TFMN=DTHLV
 1823 CONTINUE

C-------------------  KALMAN FILTER SWITCH  ----------------------------
C   (QC,YC)=Y(j-1|j-1)  (QU,YU)=Y(j|j-1)
C   When exit from the filter  (QU,YU)=Y(j|j)     --- Updated for t(j)
C                              (QC,YC)=Y(j-1|j-1) --- Updated for t(j-1)
C-----------------------------------------------------------------------
       KALMAN=0
       DO 4900 J=1,JN
       IF (KFTR(J).EQ.1) KALMAN=1
 4900 CONTINUE
       IF (KALMAN.EQ.0) GOTO 5000
       IF (ABS(TT-TII(KTIME-1)).GT.0.001) GOTO 5000
       KP=0
       KT=0
       DTFT=DTHYD*3600.0
       DO 4920 J=1,JN
       IF (J.GE.2) KT=KT+4*2*NB(J-1)*KFTR(J-1)
       IF (J.GE.2) KP=KP+4*NB(J-1)**2*KFTR(J-1)
       IF (KFTR(J).EQ.0) GOTO 4920
       NSEC=NB(J)
       NOBS=NGAGE(J)
      CALL MJIN55(PO,J,KTIME-1,NSEC,NOBS,YU,QU,YDI,QDI,K1,K2,K3,K4,K9,
     . F1,DTFT,PO(LCY1FT),PO(LCY2FT),PO(LCPFT+KP),PO(LCQFT),PO(LCRFT),
     . PO(LCHFT),PO(LCZFT),PO(LCCFT),PO(LCDFT),PO(LCEFT),PO(LCVFT),
     . PO(LCAKFT),STT,LTSTT,PO(LONGS),K7,K8,PO(LOX),PO(LCTFT+KT),NGAGE,
     . K16)
4920   CONTINUE
       IF(JNK.GT.9) WRITE(IPR,4925) TII(KTIME-1)
 4925  FORMAT('  KALMAN FILTER IS ON FOR TIME ',F10.3)
      DO 4940 J=1,JN
      DO 4940 I=1,NB(J)
      YDI(I,J)=YU(I,J)
      QDI(I,J)=QU(I,J)
4940  CONTINUE
C-------   WAVE FRONT TRACKING FOR MUD FLOW  (IWF1>1)   --------------
5000  DO 5030 J=1,JN
      IF (MUD1(J).EQ.0 .OR. IWF1(J).LT.2) GOTO 5030
      IF (KIT.LE.KWARM+1) GOTO 5030
      NMUD=IWF1(J)
      IF(NMUD.EQ.NB(J)) GOTO 5030
      VMUD=VMUD+0.5*(QU(NMUD,J)+QD(NMUD,J))*DT
      YMUD=YU(NMUD,J)-HS(1,NMUD,J)
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),
     $ J,NMUD,YU(NMUD,J),PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      AMUD1=A
      RMUD=A/B
      UMUD=QU(NMUD,J)/A
      AK=YMUD/RMUD
      DX1=XFACT*ABS(X(NMUD,J)-X(NMUD+1,J))
      SF1=(HS(1,NMUD,J)-HS(1,NMUD+1,J))/DX1
      SF2=SF1
        IF (NMUD.LT.NB(J)-1) THEN
        DX2=XFACT*ABS(X(NMUD+1,J)-X(NMUD+2,J))
        SF2=(HS(1,NMUD+1,J)-HS(1,NMUD+2,J))/DX2
        ENDIF
      SF12=0.5*(SF1+SF2)
      RMOV=SHR/UW/SF12
      YMOV=AK*RMOV
      IF (YMUD.LE.YMOV) GOTO 5030
      YMOVC=0.3*YMOV+0.7*YMUD
      HMOV=HS(1,NMUD+1,J)+YMOVC
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),
     $ J,NMUD+1,HMOV,PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      AMUD2=A
      VMOV=0.5*(AMUD1+AMUD2)*DX1
            AKMUD=VMUD/VMOV
            IF (AKMUD.LT.1.0) GOTO 5030
            NMUD=NMUD+1
            IWF1(J)=NMUD
            YU(NMUD,J)=HS(1,NMUD,J)+YMOVC
            QU(NMUD,J)=UMUD*AMUD2/AK
            VMUD=(VMUD-VMOV)*1.0
5030  CONTINUE
C PORE PRESSURE FRONT TRACKING FOR DEBRIS FLOW (MUD>2)
      IF (MUD.LE.1) GOTO 5033
      IF (KIT.LE.KWARM+1) GOTO 5033
      DO 5032 I=NB(1),MUD,-1
      DQ=(QU(I,1)-QDI(I,1))/QDI(I,1)
      IF (DQ.LE.0.5) GOTO 5032
      MUDD=I
      IF (MUDD.GT.(MUD+1)) MUDD=MUD+1
      IF (MUDD.GT.NB(1)) MUDD=NB(1)
      MUD=MUDD
      MUD1(1)=MUDD
      GOTO 5033
5032  CONTINUE
5033  CONTINUE
C------------  DETERMINNING TIME STEP (DTHNEW) FOR NEXT RUN   ----------
      CALL TSTEP55(DTHNEW,DTH,TFMN,TU,TU2,PO(LODTIN),PO(LOTDTN),TPK1,
     $  LAD(1,1),NB(1),KAUTO,QD,QU,DTHS1,NUMCK,K1,K2)
5035  CONTINUE
C--------------    PRAPARING INITIAL VALUES FOR NEXT RUN     -----------
      SMN=1.0
      IF(KFLP.EQ.0) GO TO 5077
      J=1
      N=NB(J)
      I1=N-1
      I2=N
      Y=(YD(I1,J)+YU(I1,J)+YD(I2,J)+YU(I2,J))/4.
      CALL SINC55(Y,J,I1,I2,NCS,HS,PO(LOSNC),SC,DSC,PO(LOSNM),SMN,
     * DSM,K1,K2,K9)
 5077 DQDTN=0.5*SMN*(QD(N-1,1)+QD(N,1)-QU(N-1,1)-QU(N,1))/DT
      FRAC=DTHNEW/DTH
      DO 1721 J = 1, JN+NET
      N=NB(J)
      DO 1720 I=1,N
      YDIFF=YU(I,J)-YD(I,J)
      DY=(YU(I,J)-YD(I,J))*0.5*FRAC
      DQ=(QU(I,J)-QD(I,J))*0.5*FRAC
      YP=YU(I,J)+DY
      QP=QU(I,J)+DQ
      YC(I,J)=YD(I,J)
      YD(I,J)=YU(I,J)
      YU(I,J)=YP
      QC(I,J)=QD(I,J)
      QD(I,J)=QU(I,J)
      QU(I,J)=QP
      YII(I,J)=DY
      IF(QD(I,J).GT.QMX(I,J)) QMX(I,J)=QD(I,J)
      IF(YD(I,J).GT.YMX(I,J)) YMX(I,J)=YD(I,J)
      CALL CHKCAV55(I,J,YU(I,J),YDIFF,PO(LCHCAV),PO(LCIFCV),NCS,
     . K9,K2,K1)
      IF(MIXF(J).LE.1) GO TO 1720
      QU(I,J)=QD(I,J)
      YU(I,J)=YD(I,J)
 1720 CONTINUE
 1721 CONTINUE
C ----------------------------------------------------------------------
C           SAVE CARRYOVER VALUES
C
cc      WRITE(6,9991) IFILLC,NCSTOR,ICO,KIT,KWARM
cc 9991 FORMAT(/'IFILLC NCSTOR ICO KIT KWARM ='/1H ,I6,I7,I4,I4,I6)

      IF(IFILLC*NCSTOR.EQ.0) GO TO 1725
      IF(KIT.GT.1.AND.KIT.LT.KWARM) GO TO 965
      IF(ICO.GT.NCSTOR) GO TO 1725
      IHRCO=ISTRT+TT
cc      print *, tt,ihrco,jhrco
      IF(JHRCO.NE.IHRCO) GO TO 1725
      CALL SAVC55(PO,CCO,CCO,QL,LTQL,POLH,LTPOLH,ITWT,LTITWT,T1,LTT1,
     . YD,QD,NB,KRCH,DDX,NQL,LQ1,LQN,NUMLAD,LAD,PO(LOCTW),K1,K2,K10,K16)
cc      WRITE(6,9998)JHRCO,IHRCO,ISTRT,TT,ICO,ICDAY(ICO),ICHOUR(ICO),JSIZE
cc 9998 FORMAT(//'     JHRCO     IHRCO     ISTRT   TT       ICO     ICDAY
cc     *   ICHOUR   K4='/1H ,3I10,F5.0,3I10,I5)

      CALL FCWTCO(ICDAY(ICO),ICHOUR(ICO),CCO,JSIZE)
      ICO=ICO+1
      JHRCO=(ICDAY(ICO)-1)*24+ICHOUR(ICO)
C
 1725 CONTINUE
      DTH=DTHNEW
      GO TO 965
C-----------------   ROUTING TIME UP HERE   ----------------------------
 1740 ITT=(TT-DTH)/DTHPLT
      KTIME=ITT+1
      IF(NPST.LE.0) NPST=1
      IF(NPEND.LE.0.OR.NPEND.GE.KTIME) NPEND=KTIME

      QSUMIM=QSUMIM/1000.
      QSUMIT=QSUMIT/1000.
      QSUMOM=QSUMOM/1000.
      QSUMOT=QSUMOT/1000.
      VOLSUM=VOLSUM/1000.

      IF(JNK.GE.0) THEN
        IF(METRIC.EQ.0) WRITE(IPR,1890)
 1890 FORMAT(///8X,22HTOTAL INFLOW (1000 CF),8X,23HTOTAL OUTFLOW (1000 C
     2F),8X,12HTOTAL VOLUME,4X,16HCONTINUITY ERROR / 10X,5HRIVER,4X,11HT
     3RIBUTARIES,10X,5HRIVER,4X,11HTRIBUTARIES,7X,17HCHANGE(1000 CUFT),
     46X,9H(PERCENT))
        IF(METRIC.EQ.1) THEN
          WRITE(IPR,1891)
 1891 FORMAT(///8X,22HTOTAL INFLOW (1000 CM),8X,23HTOTAL OUTFLOW (1000 C
     2M),8X,12HTOTAL VOLUME,4X,16HCONTINUITY ERROR / 10X,5HRIVER,4X,11HT
     3RIBUTARIES,10X,5HRIVER,4X,11HTRIBUTARIES,7X,17HCHANGE(1000 CU-M),
     46X,9H(PERCENT))
          QSUMIM=QSUMIM/35.32
          QSUMIT=QSUMIT/35.32
          QSUMOM=QSUMOM/35.32
          QSUMOT=QSUMOT/35.32
          VOLSUM=VOLSUM/35.32
        ENDIF
        WRITE(IPR,2150) QSUMIM,QSUMIT,QSUMOM,QSUMOT,VOLSUM,CONS
      QBASE=QDI(1,1)
      SBASE=QBASE*TEH*3600.0/1000.0
      QLOSS1=-(QSUMIM-QSUMOM)*100.0/(QSUMIM+0.00001)
      QLOSS2=-(QSUMIM-QSUMOM)*100.0/(QSUMIM-SBASE+0.00001)
      WRITE(IPR,1909) QLOSS1,QLOSS2
1909  FORMAT(/51H TOTAL VOLUME/ACTIVE VOLUME CHANGE (%) OF RIVER 1 = ,
     $ 2F10.2)
      ENDIF
      IF (JN.GT.1.AND.JNK.GE.0) WRITE(IPR,1910 ) JJKT
 1910 FORMAT (/27H    TRIBUTARY ITERATIONS = ,I8)
      IF (JNK.GE.0) WRITE(IPR,1915 ) JN,(NSITR(J),J = 1, JN)
 1915 FORMAT (/33H    TOTAL ITERATIONS FOR EACH OF ,I2,8H RIVERS./
     1           4X,5I8/)
 1941 IF(NFGRF.EQ.0.AND.NUMTIM.GT.K24) THEN
          NUMTIM=K24
          WRITE(IPR,1986) K24
 1986     FORMAT(//4X,'MAXIMUM NO. OF TIME STEP EXCEEDED FOR GRAPHICS P'
     .    ,'OTTING (',I4,').  HYDROGRAPHS IN FLDGRF WILL BE TRUNCATED.')
      ENDIF
      IF(TT.GT.TEH) THEN
        TT=TEH
        KTIME=KTIME-1
      ENDIF
      IF(JNK.GE.0) WRITE(IPR,1920) TT,KTIME,NUMTIM
 1920 FORMAT(/4X,'TOTAL TIME=',F10.2,2X,'TOTAL NO. OF TIME STEPS: KTIME=
     .',I5,'  NUMTIM=',I5//)
 2150 FORMAT(4F15.2,6X,2F15.2)
      CALL SUMARY55(PO,QTC,LTQTC,QTC,LTSTC,TII,NB,PO(LOX),NGS,HS,
     . PO(LONBT),PO(LCNN),NGAGE,TYPK,YPK,TQPK,QPK,VPK,1,
     . K1,K2,K3,K4,K7,K8,K9,K23)
      CALL SUMARY55(PO,QTC,LTQTC,QTC,LTSTC,TII,NB,PO(LOX),NGS,HS,
     . PO(LONBT),PO(LCNN),NGAGE,FTYPK,FYPK,FTQPK,FQPK,FVPK,2,
     . K1,K2,K3,K4,K7,K8,K9,K23)
CC      WRITE(IPR,11111)
11111 FORMAT(/,1X,'** EXIT DWAVSM **')

      IF(IFILLC.EQ.1) THEN
        CALL SAVC55(PO,CO,CO,QL,LTQL,POLH,LTPOLH,ITWT,LTITWT,T1,LTT1,YD,
     .   QD,NB,KRCH,DDX,NQL,LQ1,LQN,NUMLAD,LAD,PO(LOCTW),K1,K2,K10,K16)
      ENDIF

      IF (NFGRF.EQ.1) GOTO 9999
      IF(NFGRF.EQ.0) THEN
        WRITE(JFTIM) (PLTIM(I),I=1,NUMTIM)
        IF(ITYDS.EQ.0.OR.ITYDS.EQ.3) WRITE(JFDS) ITYDS,NUMTIM
      ENDIF
      IF(NFGRF.EQ.2) THEN
        DO 2070 I=1,NUMTIM
          WRITE(JFTIME,2150) PLTIM(I)
 2070   CONTINUE
        IF(ITYDS.EQ.0.OR.ITYDS.EQ.3) WRITE(JFDSBD,2175) ITYDS,NUMTIM+1
 2175   FORMAT(2I12)
      ENDIF
      DO 6000 J=1,JN
      NJF=NB(J)
      IF(METRIC.EQ.1) THEN
        DO 2000 IJF=1,NJF
        QD(IJF,J)=QD(IJF,J)/35.32
        YD(IJF,J)=YD(IJF,J)/3.281
 2000 CONTINUE
      ENDIF
      IF(NFGRF.EQ.0) THEN
        WRITE(JFQ) (QD(IJF,J),IJF=1,NJF)
        WRITE(JFH) (YD(IJF,J),IJF=1,NJF)
      ENDIF
      IF(NFGRF.EQ.2) THEN
        WRITE(JFQFCST,2500) (QD(IJF,J),IJF=1,NJF)
        WRITE(JFHFCST,2500) (YD(IJF,J),IJF=1,NJF)
        WRITE(JFVEL,2500)   (VD(IJF,J),IJF=1,NJF)
      ENDIF
      IF(METRIC.EQ.1) THEN
        DO 2001 IJF=1,NJF
        QD(IJF,J)=QD(IJF,J)*35.32
        YD(IJF,J)=YD(IJF,J)*3.281
 2001   CONTINUE
      ENDIF
 6000 CONTINUE
      IF(NFGRF.EQ.2) THEN
        WRITE(JFQFCST,*)
        WRITE(JFHFCST,*)
        WRITE(JFVEL,*)
      ENDIF
 9999 RETURN
      END

