      SUBROUTINE BRECH55(PO,KL,I,J,TT,QU,YU,ZBCH,YBMIN,BBD,TFH,
     1 HDD,NFAILD,TFDB,TFDBO,QW,DQWU,DQWD,SQW,YB,BO,QT,BREXP,IORF,
     2 HSPD,CSD,CPIP,HFDD,K1,K2,K9,K16)
C
C  THIS SUBROUTINE PERFORMS DAM/BRIDGE BRECH SIMULATION
C  IT DETERMINES THE BREACH FLOW
C  IT ALSO REDUCES TURBINE FLOW WHEN THE BREACH IS BIG ENOUGH
C
      COMMON/SS55/NCS,A,B,DB,R,DR,AT,BT,P,DP,ZH
      COMMON/M3255/IOBS,KTERM,KPL,JNK,TEH
      COMMON/IONUM/IN,IPR,IPU

      INCLUDE 'common/fdbug'
      INCLUDE 'common/ofs55'

      DIMENSION PO(*),QU(K2,K1),YU(K2,K1),ZBCH(K16,K1),YBMIN(K16,K1)
      DIMENSION BBD(K16,K1),TFH(K16,K1),HDD(K16,K1),HFDD(K16,K1)
      DIMENSION NFAILD(K16,K1),TFDB(K16,K1),TFDBO(K16,K1)
      DIMENSION BREXP(K16,K1),IORF(K16,K1),SQW(2,K16,K1)
      DIMENSION HSPD(K16,K1),CSD(K16,K1),CPIP(K16,K1)
      CHARACTER*8 SNAME
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fldwav/RCS/brech55.f,v $
     . $',                                                             '
     .$Id: brech55.f,v 1.2 2000/12/18 21:48:22 jgofus Exp $
     . $' /
C    ===================================================================
C

      DATA SNAME/ 'BRECH55 ' /
C
      CALL FPRBUG(SNAME,1,55,IBUG)
CC      IF(JNK.GE.111) WRITE(IODBUG,11110)
CC11110 FORMAT(1X,'** ENTER BRECH **')

CC      CALL PRLOCS

      EX=BREXP(KL,J)
      NFSP=0
      IF(CSD(KL,J).LT.-0.01) NFSP=1
C  NFSP=0, NO SPILLWAY FAILURE; NFSP=1, W/SPILLWAY FAILURE
      HSP=HSPD(KL,J)
      YB=0.0
      BO=0.0
      SUB=SQW(2,KL,J)
      DSUBU=0.
      DSUBD=0.
      NF=NFAILD(KL,J)
      BD=BBD(KL,J)
CCC      ZB=ZBCH(KL,J)
      HCP=CPIP(KL,J)
      YBM=YBMIN(KL,J)
      HD=HDD(KL,J)
      YB=HD 
      IF (CSD(KL,J).LT.-0.01) YB=HSPD(KL,J)
      IF(ABS(HCP).GT.0.01) YB=HCP
      HF=ABS(HFDD(KL,J))
      IF(TT.LE.0.0001) TFDB(KL,J)=0.0
      IF(TT.LE.0.0001.AND.ABS(HCP).GT.0.01) IORF(KL,J)=0
      IF(TT.LE.0.0001.AND.ABS(HCP).LT.0.01) IORF(KL,J)=1
C    IORF(KL,J)=0  FLOW COMPUTED FROM RECTANGULAR ORIFICE (PIPE)
C    IORF(KL,J)=1  FLOW FROM BROAD-CRESTED WEIR (OPEN BREACH)
      QW=0.
      DQWD=0.
      DQWU=0.
      IF(TFH(KL,J).LT.0.001) GO TO 30
      Y=YU(I,J)
      IL=I+1
      YY=YU(IL,J)
      YTM=Y
      IF(Y.LT.YY) Y=YY
      IF(YTM.LT.YY) YY=YTM
      IF(ABS(Y-YY).LT.0.000001) GO TO 30
      IF(NF.NE.3) GO TO 30
      TFDB(KL,J)=TT-TFDBO(KL,J)
      TR=(TFDB(KL,J)/TFH(KL,J))**EX
CC      WRITE(IODBUG,9999) KL,TR,TFDBO(KL,J),TFDB(KL,J),TFH(KL,J),EX
CC 9999 FORMAT(5X,'<<< KL,TR,TFDBO,TFDB,TFH,EX=',I2,5F10.4)
      IF(HCP.LE.1.01) GO TO 20
C  PIPING FAILURE
      DORL=HCP-YBM
      DORU=HF-HCP
      DPPI=DORL
      IF(DORU.GT.DORL) DPPI=DORU
      DOR=DPPI*TR
      UPT=HCP+DOR
      YB=HCP-DOR
      IF(DOR.GT.DORL) YB=YBM
      IF(DOR.GT.DORU) UPT=HF
      DRR=UPT-YB
      IF(DORL.LT.DORU.AND.DOR.GT.DORL) HCP=YBM+DRR/2.
      IF(YY.GT.YB+DRR) GO TO 21
      IF(Y.LT.YB+1.5*DRR) IORF(KL,J)=1
      GO TO 21
C  OVERTOPPING FAILURE
   20 IF(NFSP.EQ.0) YB=HD-(HD-YBM)*TR
      IF(NFSP.EQ.1) YB=HSP-(HSP-YBM)*TR
   21 IF(YB.LE.YBM) YB=YBM
      TFHH=0.25*TFH(KL,J)
      IF(TFDB(KL,J).GT.TFHH.AND.TT.GT.0.) THEN
        QT=QT*(1.0-(TFDB(KL,J)-TFHH)/TFHH)
CC        QTNEW=QT*(1.0-(TFDB(KL,J)-TFHH)/TFHH)
CC        WRITE(IODBUG,9997) TT,QT,QTNEW,Y,HF,YY
CC 9997   FORMAT(10X,'TT QT QTNEW Y HF YY = ',F10.5,6F12.3)
CC        QT=QTNEW
      ENDIF
      IF(QT.LT.0.0) QT=0.0
      IF(Y.LE.YB) GO TO 30
      IS=I
      IF(I.EQ.1) IS=1
      CALL SECT55(PO(LCPR),PO(LOAS),PO(LOBS),PO(LOHS),PO(LOASS),
     * PO(LOBSS),J,IS,Y,PO(LCHCAV),PO(LCIFCV),K1,K2,K9)
      V=QU(I,J)/A
      VCOR=1.+0.023*V*V/(Y-YB)
      IF(V.GT.20.0) VCOR=1.+0.023*400./(Y-YB)
      IF(VCOR.GT.2.) VCOR=2.0
      BO=BD*TR
      IF(BO.GT.BD) BO=BD
      IF(BO.LT.0.01) BO=0.01
CC      IF(TFH(KL,J).LT.0.017) BO=BD
      IF(IORF(KL,J).EQ.0) GO TO 28
C  COFR= DISCHARGE COEFF FOR RETANGULAR WEIR
C  COFV= DISCHARGE COEFF FOR V-NOTCH WEIR
      COFR=3.10
      COFV=2.45
      HU=Y-YB
      HD=YY-YB          
      SUB=SQW(2,KL,J)
      DSUBU=0.
      DSUBD=0.
      IF(HD.LE.0.01.OR.HU.LE.0.01) GO TO 127
      IF(HD.LT.0.67*HU) GO TO 127
      DUMY=1.0-27.8*(HD/HU-0.67)**3
      IF(DUMY.GT.SQW(2,KL,J)) GO TO 127
      SUB=DUMY
      DSUBU=-27.8*3*(HD/HU-0.67)**2*(-HD/HU**2)
      DSUBD=-27.8*3*(HD/HU-0.67)**2/HU
  127 C1=COFR*BO*VCOR
      C2=COFV*ZBCH(KL,J)*VCOR
      QW=C1*SUB*HU**1.5+C2*SUB*HU**2.5
      RAT=HU/1.5
CC      WRITE(IODBUG,9998) TT,QW,HU,RAT,SUB,C1,C2
CC 9998 FORMAT(2X,'<<<<< TT QW HU HD RAT SUB C1 C2=',F10.3,F12.3,6F10.4)
      DQWU=C1*(SUB*1.5*HU**0.5+HU**1.5*DSUBU)+C2*(SUB*2.5*HU**1.5+
     1HU**2.5*DSUBU)
      DQWD=(C1*HU**1.5+C2*HU**2.5)*DSUBD
      GO TO 30
   28 FBO=Y-HCP
      IF(YY.GT.YB+DRR) FBO=Y-YY
      AOR=BO*DRR+ZBCH(KL,J)*DRR*DRR
      CDOR=0.6*8.02*AOR
      QW=CDOR*FBO**0.5
      DQWU=0.5*CDOR/FBO**0.5
      IF(YY.GT.YB+DRR) DQWD=-0.5*CDOR/FBO**0.5
      IF(YY.LE.YB+DRR) DQWD=0.
   30 CONTINUE
      NFAILD(KL,J)=NF
      SQW(1,KL,J)=SUB
CC      IF(JNK.GE.111) WRITE(IODBUG,11111)
11111 FORMAT(1X,'** EXIT BRECH **')
      RETURN
      END

