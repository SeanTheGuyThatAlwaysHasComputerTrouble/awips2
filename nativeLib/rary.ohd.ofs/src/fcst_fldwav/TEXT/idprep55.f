      SUBROUTINE IDPREP55(PO,X,NB,DDX,AS,BS,BSL,BSR,GZ,HS,KD,KU,WF,ASS,
     * ATF,BSS,STN,LTSTN,STT,LTSTT,ST1,LTST1,POLH,LTPOLH,T1,LTT1,QL,
     * LTQL,NGAGE,GZ1,GZN,YQD,QYQD,TO,COFW,VWIND,WINAGL,HCAV,IFCV,STM,
     * KRCH,NQL,LQ1,LQN,GZPL,NUMLAD,LAD,POLTAR,QLI,PLTI,XNOS,TIDE,
     * DTHPLT,KSTG,NLOCK,NPO,DTOUT,K1,K2,K4,K6,K9,K10,K16)
C
C      THIS SUBROUTINE PREPARES DATA FOR DYNAMIC WAVE CALCULATIONS
C
      COMMON/M155/NU,JN,JJ,KIT,G,DT,TT,TIMF,F1
      COMMON/M655/KTIME,DTHYD,J1
      COMMON/M3055/EPSY,EPSQ,EPSQJ,THETA,XFACT
      COMMON/M3255/IOBS,KTERM,KPL,JNK,TEH
      COMMON/M3455/KXP,ICD,ITMAX,KWARM
      COMMON/M3655/TFCST
      COMMON/M3755/NINIT
      COMMON/M3855/CONS,QSUMIM,QSUMIT,QSUMOM,QSUMOT,JJKT
      COMMON/M3955/NCOH,NSAVE,DNLABL
      COMMON/SS55/NCS,A,B,DB,R,DR,AT,BT,P,DP,ZH
      COMMON/METR55/METRIC
      COMMON/NYQDC55/NYQD
      COMMON/IDOS55/IDOS,IFCST
      COMMON/IONUM/IN,IPR,IPU
      COMMON/NETWK55/NET


      INCLUDE 'common/opfil55'
      INCLUDE 'common/fdbug'
C
      DIMENSION PO(*),STN(*),STT(*),LTSTT(*),ST1(*),LTST1(*)
      DIMENSION POLH(*),LTPOLH(*),T1(*),LTT1(*),QLI(*),PLTI(*),TO(*)
      DIMENSION QL(*),LTQL(*),X(K2,K1),KD(K1),COFW(K1),VWIND(K1)
      DIMENSION NB(K1),DDX(K2,K1),KU(K1),HS(K9,K2,K1),AS(K9,K2,K1)
      DIMENSION BS(K9,K2,K1),HCAV(K9,K2,K1),IFCV(K9,K2,K1),GZ(K4,K1)
      DIMENSION WF(K1),ASS(K9,K2,K1),ATF(K1),BSS(K9,K2,K1),GZ1(K1)
      DIMENSION GZN(K1),NGAGE(K1),YQD(K6,K1),QYQD(K6,K1),WINAGL(K1)
      DIMENSION NQL(K1),LQ1(K10,K1),LQN(K10,K1),NUMLAD(K1),LAD(K16,K1)
      DIMENSION GZPL(K16,K1),POLTAR(K16,K1),XNOS(*),TIDE(*)
      DIMENSION STM(K1),KRCH(K2,K1),STTNAM(2),BSL(K9,K2,K1)
      DIMENSION BSR(K9,K2,K1)
      CHARACTER*8 SNAME
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fldwav/RCS/idprep55.f,v $
     . $',                                                             '
     .$Id: idprep55.f,v 1.6 2004/02/02 21:49:53 jgofus Exp $
     . $' /
C    ===================================================================
C

      DATA SNAME/ 'IDPREP55' /

      CALL FPRBUG(SNAME,1,55,IBUG)
C
C
      TT=0.
      NUU=NU
      IF(NU.EQ.0) NUU=TEH/DTHPLT+1.01
C
C.......................................................................
C        CONVERT OBSERVED STAGES TO WATER SURFACE ELEVATIONS
C
      IF(IOBS.EQ.0.OR.KPL.EQ.2.OR.KSTG.EQ.1) GO TO 100
      DO 1999 J = 1, JN
      NGAG=NGAGE(J)
      IF(NGAG.LE.0) GO TO 1999
      L1J=LCAT21(1,J,NGAGE)-1
      IF(IBUG.GE.1) WRITE(IODBUG,8000) J
 8000 FORMAT(/30X,'OBSERVED WATER SURFACE ELEVATIONS FOR RIVER NO.',I4)
      DO 1997 L = 1,NGAG
        LIJ=LTSTT(L+L1J)-1
        DO 1996 K=1,NU
          IK=IFMSNG(STT(LIJ+K))
          IF(IK.NE.1) STT(K+LIJ)=STT(K+LIJ)+GZ(L,J)
 1996   CONTINUE
        IF(IBUG.EQ.1) THEN
          WRITE(IODBUG,7000) (STT(LIJ+K),K=1,NUU)
 7000     FORMAT(1H ,10X,10F10.2)
          WRITE(IODBUG,7010)
 7010     FORMAT(/)
        ENDIF
 1997 CONTINUE
 1999 CONTINUE
C.......................................................................
C        FIND THE COS OF THE ANGLE AT CONFLUENCE OF EACH TRIB
C
  100 IF(JN-1) 19,19,17
   17 DO 18 J=2,JN
      ATF(J)=COS(ATF(J)/57.295)
   18 CONTINUE
C.......................................................................
C        CONVERT UPSTREAM BOUNDARY STAGES TO WATER SURFACE ELEVATIONS
C
   19 CONTINUE
      IF(IOBS.LT.0) GO TO 209
      DO 208 J=1,JN-NET
      IF(KU(J).NE.1) GO TO 208
      KJ=LTST1(J)-1
      IF(IBUG.EQ.1) WRITE(IODBUG,8010) J
 8010 FORMAT(/30X,'WATER SURFACE ELEVATIONS AT THE UPSTREAM BOUNDARY OF
     1RIVER NO.',I4)
      DO 207 K=1,NU
      ST1(K+KJ)=ST1(K+KJ)+GZ1(J)
  207 CONTINUE
      IF(IBUG.GE.1) THEN
        WRITE(IODBUG,7000) (ST1(KJ+K),K=1,NU)
        WRITE(IODBUG,7010)
      ENDIF
C=============
C        CONVERT MINIMUM STAGE TO MINIMUM WATER SURFACE ELEVATION
C
      STM(J)=STM(J)+GZ1(J)
      IF(IBUG.GE.1) WRITE(IODBUG,8015) STM(J)
 8015   FORMAT(/30X,'MINIMUM WATER SURFACE ELEVATION ON RIVER',I3,
     .              ' IS',F10.2)
  208 CONTINUE
C.......................................................................
C        CONVERT DOWNSTREAM BOUNDARY STAGES TO WATER SURFACE ELEVATIONS
C
  209 DO 220 J=1,JN-NET
      IF(KD(J).EQ.0.AND.J.GT.1) GO TO 220
      IF(KD(J)-2) 210,213,213

  210 IF(IBUG.EQ.1) WRITE(IODBUG,8020)
 8020 FORMAT(/30X,'WATER SURFACE ELEVATIONS AT THE DOWNSTREAM BOUNDARY')
      KJ=LTSTN-1
      DO 212 K=1,NU
       IK=IFMSNG(STT(K+KJ))
       IF(IK.NE.1) STN(K+KJ)=STN(K+KJ)+GZN(J)
       IF(KD(J).EQ.0) XNOS(K)=XNOS(K)+GZN(J)
  212 CONTINUE
      IF(IBUG.GE.1) THEN
        WRITE(IODBUG,7000) (STN(K+KJ),K=1,NU)
        WRITE(IODBUG,7010)
        IF(KD(1).EQ.0) THEN
          WRITE(IODBUG,8021)
 8021     FORMAT(1H0,30X,'NOS TIDE AT THE DOWNSTREAM BOUNDARY')
          WRITE(IODBUG,7000) (XNOS(K),K=1,NU)
          WRITE(IODBUG,7010)
        ENDIF
      ENDIF
C==========
  213 IF(KD(J).NE.3) GO TO 220
      IF(IDOS.GE.3) GO TO 220
      IF(IBUG.EQ.1) WRITE(IODBUG,8025)
 8025 FORMAT(/30X,'WATER SURFACE ELEVATIONS IN DOWNSTREAM RATING CURVE')
      DO 214 K=1,NYQD
      YQD(K,J)=YQD(K,J)+GZN(J)
  214 CONTINUE
      IF(IBUG.GE.1) THEN
        WRITE(IODBUG,7000) (YQD(K,J),K=1,NYQD)
        WRITE(IODBUG,7010)
      ENDIF
  220 CONTINUE
C.......................................................................
CC      DO 217 J=1,JN
CC      N=NB(J)
CC      DO 216 I=1,N
CC      ASS(1,I,J)=0.
CC      HCAV(1,I,J)=0.
CC      IFCV(1,I,J)=0
CC      DO 215 K=2,NCS
CC      KL=K-1
CC      AS(K,I,J)=AS(KL,I,J)+0.5*(BS(K,I,J)+BS(KL,I,J))*(HS(K,I,J)-
CC     * HS(KL,I,J))
CC      ASS(K,I,J)=ASS(KL,I,J)+0.5*(BSS(K,I,J)+BSS(KL,I,J))*(HS(K,I,J)-
CC     * HS(KL,I,J))
CC      HCAV(K,I,J)=0.
CC      IFCV(K,I,J)=0
CC      IF(K.GT.2) THEN
CC        KL2=K-2
CC        DHCV=HS(K,I,J)-HS(KL2,I,J)
CC        IF(BSS(KL,I,J).GT.BSS(K,I,J).AND.DHCV.LE.1.0)
CC     .     HCAV(K,I,J)=HS(K,I,J)
CC      ENDIF
CC  215 CONTINUE
CC  216 CONTINUE
CC  217 CONTINUE
C.......................................................................
C        WIND COEFFICIENT
C
      DO 34 J=1,JN
      NBJM=NB(J)-1
      WF(J)=COFW(J)*ABS(VWIND(J))*VWIND(J)*COS(WINAGL(J)/57.295)
C========
C        DISTANCE INTERVAL IN FEET
C
      DO 33 I=1,NBJM
      DDX(I,J)=ABS(X(I+1,J)-X(I,J))*XFACT
      IF(DDX(I,J).LE.0.) DDX(I,J)=0.01
   33 CONTINUE
      DDX(NBJM+1,J)=DDX(NBJM,J)
   34 CONTINUE
C.......................................................................
C        COMPUTE THE INPUT TIME ARRAY

      DO 5000 J=1,JN
      IF(DTHYD.GT.0.00001) THEN
        IJ=LTT1(J)-1
        T1(IJ+1)=0.
        IF(IDOS.GE.3) T1(IJ+1)=DTHYD
        DO 4995 I=2,NU
        T1(IJ+I)=T1(IJ+I-1)+DTHYD
 4995   CONTINUE
      ENDIF
 5000 CONTINUE
C.......................................................................
C        COMPUTE THE OUTPUT TIME ARRAY

      DO 5100 K=1,NPO
      TO(K)=DTOUT*K
 5100 CONTINUE
C

C.......................................................................
C        CONVERT LATERAL FLOW UNITS FROM CFS TO CFS/(REACH LENGTH)
C
      DO 41 J=1,JN
      IF(NQL(J).LE.0) GO TO 41
      NQ=NQL(J)
      IJ=LCAT21(1,J,NQL)-1
      IF(IBUG.EQ.1) WRITE(IODBUG,8080) J
 8080 FORMAT(/30X,'LATERAL FLOW PER REACH LENGTH FOR RIVER NO.',I3)
      DO 500 I=1,NQ
CC      IF(J.EQ.1.AND.QLNAM(1,I).EQ.DUMM) GO TO 500
      KIJ=LTQL(I+IJ)-1
      L1=LQ1(I,J)
      LN=LQN(I,J)
      DX=ABS(X(LN,J)-X(L1,J))*5280.
      QLI(I+IJ)=QLI(I+IJ)/DX
      DO 400 K=1,NU
  400 QL(KIJ+K)=QL(KIJ+K)/DX
      IF(IBUG.GE.1) THEN
        WRITE(IODBUG,7010)
        WRITE(IODBUG,7020) (QL(K+KIJ),K=1,NU)
 7020   FORMAT(1H ,10X,10F10.5)
      ENDIF
  500 CONTINUE
      IF(IBUG.EQ.1) WRITE(IODBUG,510) J
  510 FORMAT(/30X,'INITIAL LATERAL FLOW PER REACH LENGTH FOR RIVER NO.',
     1 I3)
      IF(IBUG.GE.1)WRITE(IODBUG,7020) (QLI(I+IJ),I=1,NQ)
   41 CONTINUE
C.......................................................................
C        DETERMINE THE PROPER POOL ELEVATIONS
C
      IF(NLOCK.EQ.0) GO TO 75
      LOCK=0
      LONAM=PO(367)
      DO 70 J=1,JN
      NUM=NUMLAD(J)
      IF(NUM.EQ.0) GO TO 70
      IF(IBUG.EQ.1) WRITE(IODBUG,8085) J
 8085 FORMAT(1H0,30X,29HPOOL ELEVATIONS FOR RIVER NO.,I3)
      LLJ=LCAT21(1,J,NUMLAD)-1
      DO 65 L=1,NUM
      IJ=LAD(L,J)
      IF(KRCH(IJ,J).NE.28) GO TO 65
      LOCK=LOCK+1
      LOPT=LTPOLH(LOCK)-1
      NWRN=0
      NWRN2=0
      PLMAX=POLTAR(L,J)+3.
      STTNAM(1)=PO(LONAM)
      STTNAM(2)=PO(LONAM+1)
      LONAM=LONAM+3
C
C         ALLOW INTERPOLATION OF TARGET POOL ELEVATIONS
C
      POOL1=POLH(1+LOPT)
      IF(POOL1.LT.0.0001.AND.PLTI(LOCK).GT.0.0001) POOL1=PLTI(LOCK)-
     .  GZPL(L,J)
      KK1=1
      KK2=1
      DO 51 K=2,NU
      IF(POLH(LOPT+K).LE.0.0001) GO TO 51
      POOL2=POLH(LOPT+K)
      KK2=K
      IF(POOL1.LT.0.0001) POOL1=POOL2
      RATIO=(POOL2-POOL1)/(KK2-KK1)
      GO TO 53
   51 CONTINUE
      KST=2
      IF(KK2.EQ.1) THEN
        CONST=POOL1+GZPL(L,J)
        KST=1
        IF(POOL1.LE.0.0001) THEN
          CONST=POLTAR(L,J)
        ELSE
          IF(CONST.LT.HS(1,IJ,J)) NWRN=NU
        ENDIF
        DO 52 K=KST,NU
        POLH(K+LOPT)=CONST
   52   CONTINUE
        GO TO 62
      ENDIF
   53 DO 60 K=1,NU
      IF(POLH(LOPT+K).LE.0.001) THEN
        POLH(LOPT+K)=(K-KK1)*RATIO+POOL1+GZPL(L,J)
      ELSE
        IF(K.EQ.1) THEN
          POLH(LOPT+K)=POLH(LOPT+K)+GZPL(L,J)
          GO TO 60
        ENDIF
        POOL1=POOL2
        KK1=KK2
        POLH(LOPT+K)=POLH(LOPT+K)+GZPL(L,J)
        KK3=KK2+1
        DO 54 KK=KK3,NU
        IF(POLH(LOPT+KK).LT.0.0001) GO TO 54
        POOL2=POLH(LOPT+KK)
        KK2=KK
        RATIO=(POOL2-POOL1)/(KK2-KK1)
        GO TO 56
   54   CONTINUE
        IF(KK2.LT.KK3) THEN
          POOL2=POOL1
          KK2=NU
          RATIO=0.
        ENDIF
      ENDIF
   56 IF(POLH(LOPT+K).LE.HS(1,IJ,J)) THEN
        NWRN=NWRN+1
        POLH(LOPT+K)=POLTAR(L,J)
      ENDIF
      IF(POLH(LOPT+K).GT.PLMAX) THEN
        NWRN2=NWRN2+1
        POLH(LOPT+K)=POLTAR(L,J)
      ENDIF
   60 CONTINUE
   62 IF(JNK.GE.1.AND.IBUG.EQ.1)WRITE(IODBUG,7000)(POLH(LOPT+K),K=1,NU)
      IF(PLTI(LOCK).LT.0.001) PLTI(LOCK)=POLH(1+LOPT)
      IF(NWRN.GT.0) THEN
      WRITE(IPR,8075) STTNAM,J,NWRN,HS(1,IJ,J),POLTAR(L,J)
 8075 FORMAT(//10X,'**WARNING** AT DAM (',2A4,') ON RIVER NO. ',I2,
     .' THE POOL ELEVATION TIME SERIES HAD ',I3,' VALUES WHICH FELL BELO
     .W'/22X,'THE CHANNEL BOTTOM (',F10.2,').  THESE VALUES ARE CONSIDER
     .ED MISSING AND THE POOL ELEVATION'/22X,'IS SET EQUAL TO THE TARGET
     . POOL ELEVATION (',F10.2,2H).)
      CALL WARN
      ENDIF
      IF(NWRN2.GT.0) THEN
      WRITE(IPR,8076) STTNAM,J,NWRN2,POLTAR(L,J)
 8076 FORMAT(//10X,'**WARNING** AT DAM (',2A4,') ON RIVER NO. ',I2,
     .' THE POOL ELEVATION TIME SERIES HAD ',I3,' VALUES WHICH EXCEEDED
     .REASONABLE POOL ELEVATIONS (TARGET POOL + 50 FT).'/22X,'THESE VALU
     .ES ARE CONSIDERED MISSING AND THE POOL ELEVATION'/22X,'IS SET EQUA
     .L TO THE TARGET POOL ELEVATION (',F10.2,2H).)
      CALL WARN
      ENDIF
   65 CONTINUE
      IF(LOCK.EQ.0) GO TO 70
      IF(JNK.GE.1.AND.IBUG.EQ.1) WRITE(IODBUG,8090) J
 8090 FORMAT(/30X,37HINITIAL POOL ELEVATIONS FOR RIVER NO.,I3)
      IF(JNK.GE.1.AND.IBUG.EQ.1)WRITE(IODBUG,7000)
     .   (PLTI(I),I=1,NLOCK)
   70 CONTINUE

   75 IF(KD(1).EQ.0) CALL BLNDTD21(XNOS,STN(LTSTN),TIDE,NU)

C.......................................................................
C  WRITE THE APPROPIATE INFORMATION TO BE DISPLAYED USING FLDGRF
      IF(NFGRF.EQ.1) GOTO 6000
      IF(METRIC.EQ.1) THEN
         IF(KD(1).EQ.1.OR.KD(1).EQ.3) GZN(1)=GZN(1)/3.281
         LSTN=LTSTN-1
         DO 4990 I=1,NU
         IF(KD(1).EQ.1) STN(I+LSTN)=STN(I+LSTN)/3.281
         IF(KD(1).EQ.2) STN(I+LSTN)=STN(I+LSTN)/35.32
 4990    CONTINUE
         DO 5002 J=1,JN
         IF(KU(J).EQ.1) GZ1(J)=GZ1(J)/3.281
         LST1=LTST1(J)-1
         DO 5001 I=1,NU
         IF(KU(J).EQ.1) ST1(I+LST1)=ST1(I+LST1)/3.281
         IF(KU(J).EQ.2) ST1(I+LST1)=ST1(I+LST1)/35.32
 5001    CONTINUE
 5002    CONTINUE
         IF(NYQD.GT.0.AND.KD(1).EQ.3) THEN
           DO 5003 I=1,NYQD
           YQD(I,1)=YQD(I,1)/3.281
           QYQD(I,1)=QYQD(I,1)/35.32
 5003      CONTINUE
         ENDIF
      ENDIF
CC      IF(JRIVR.NE.1) GO TO 5005
      GOTO (5010,5020,5030,5005,5005,5005,5005), KD(1)
 5005 ITYDS=0
      IF(NFGRF.EQ.0) WRITE(JFDS) ITYDS
      IF(NFGRF.EQ.2) WRITE(JFDSBD,5500) ITYDS
      GO TO 5050
 5010 ITYDS=2
      GO TO 5025
 5020 ITYDS=4
 5025 GZERO=0.
      IF(KD(1).LE.1) GZERO=GZN(1)
      LT1=LTT1(1)
      LSTN=LTSTN-1
      IF(NFGRF.EQ.0) THEN
        WRITE(JFDS) ITYDS, NU, GZERO
cc        LT1=LTT1(1)
cc        LSTN=LTSTN-1
        WRITE(JFDS) (T1(I+LT1),I=1,NU)
        WRITE(JFDS) (STN(I+LSTN),I=1,NU)
      ENDIF
      IF(NFGRF.EQ.2) THEN
        WRITE(JFDSBD,5505) ITYDS,NU,GZERO
        DO 2035 K=1,NU
          WRITE(JFDSBD,5510) T1(K+LT1),STN(K+LSTN)
 2035   CONTINUE
      ENDIF
CC      WRITE(JFDS) (STN(I,1),I=1,NU)
CC      WRITE(IPR,9992)
CC 9992 FORMAT(2X,'===== DOWNSTREAM WSELs')
CC      WRITE(IPR,9993) (STN(I,1),I=1,NU)
CC 9993 FORMAT(10F10.2)
      GO TO 5050
 5030 ITYDS=1
      IF(NFGRF.EQ.0) THEN
        WRITE(JFDS) ITYDS, NYQD, GZN(1)
        WRITE(JFDS) (QYQD(I,1),I=1,NYQD)
        WRITE(JFDS) (YQD(I,1),I=1,NYQD)
      ENDIF
      IF(NFGRF.EQ.2) THEN
        WRITE(JFDSBD,5505) ITYDS,NYQD,GZN(1)
        WRITE(JFDSBD,5510) (QYQD(I,1),I=1,NYQD)
        WRITE(JFDSBD,5510) (YQD(I,1),I=1,NYQD)
      ENDIF

 5050 DO 5060 J=1,JN
      ITYUS=0
      IF(KU(J).EQ.1) ITYUS=1
      GZERO=0.
      IF(KU(J).EQ.1) GZERO=GZ1(J)
      LT1=LTT1(J)-1
      LST1=LTST1(J)-1
      IF(NFGRF.EQ.0) THEN
        WRITE(JFUS) ITYUS,NU,GZERO
        WRITE(JFUS) (T1(I+LT1),I=1,NU)
        WRITE(JFUS) (ST1(I+LST1),I=1,NU)
      ENDIF
      IF(NFGRF.EQ.2) THEN
        WRITE(JFUSBD,5505) ITYUS,NU,GZERO
        DO 5052 K=1,NU
          WRITE(JFUSBD,5510) T1(K+LT1),ST1(K+LST1)
 5052   CONTINUE
      ENDIF
 5060 CONTINUE

      IF(METRIC.EQ.1) THEN
         IF(KD(1).EQ.1.OR.KD(1).EQ.3) GZN(1)=GZN(1)*3.281
         LSTN=LTSTN-1
         DO 5055 I=1,NU
         IF(KD(1).EQ.1) STN(I+LSTN)=STN(I+LSTN)*3.281
         IF(KD(1).EQ.2) STN(I+LSTN)=STN(I+LSTN)*35.32
 5055    CONTINUE
         DO 5062 J=1,JN
         IF(KU(J).EQ.1) GZ1(J)=GZ1(J)*3.281
         LST1=LTST1(J)-1
         DO 5061 I=1,NU
         IF(KU(J).EQ.1) ST1(I+LST1)=ST1(I+LST1)*3.281
         IF(KU(J).EQ.2) ST1(I+LST1)=ST1(I+LST1)*35.32
 5061    CONTINUE
 5062    CONTINUE
         IF(NYQD.GT.0.AND.KD(1).EQ.3) THEN
           DO 5063 I=1,NYQD
           YQD(I,1)=YQD(I,1)*3.281
           QYQD(I,1)=QYQD(I,1)*35.32
 5063      CONTINUE
         ENDIF
      ENDIF

      IF(NFGRF.EQ.2) THEN
c ...................
cc      CALL OPNCRS55(IOPNERR)
cc      IF(IOPNERR.EQ.1) GO TO 999

c ... write cross section info
        DO 2010 J=1,JN
          N=NB(J)
          DO 2000 I=1,N
cc            WRITE(JFCRS,3000) J,I
            WRITE(JFCRS,3010) (HS(K,I,J),K=1,NCS)
            WRITE(JFCRS,3010) (BS(K,I,J),K=1,NCS)
            WRITE(JFCRS,3010) (BSS(K,I,J),K=1,NCS)
            IF(KFLP.GT.0) THEN
              WRITE(JFCRS,3010) (BSL(K,I,J),K=1,NCS)
              WRITE(JFCRS,3010) (BSR(K,I,J),K=1,NCS)
            ENDIF
 2000     CONTINUE
 2010   CONTINUE
      ENDIF

 3000 FORMAT(2I5,F12.3)
 3005 FORMAT(F12.3,1X,A1)
 3010 FORMAT(100F12.3)


 5500 FORMAT(10I10)
 5505 FORMAT(2I10,F10.2)
 5510 FORMAT(100F12.3)
 6000 IF(ITRACE.EQ.1) WRITE(IODBUG,9000) SNAME
 9000 FORMAT(1H0,2H**,1X,2A4,8H EXITED.)
      RETURN
      END
