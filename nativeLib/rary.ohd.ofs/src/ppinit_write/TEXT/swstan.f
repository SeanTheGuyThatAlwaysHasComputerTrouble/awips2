C MODULE SWSTAN
C-----------------------------------------------------------------------
C
C  ROUTINE TO WRITE STATION PARAMETERS.
C
      SUBROUTINE SWSTAN (IVSTAN,UNSD,
     *   STAID,STATE,NBRSTA,DESCRP,STAELV,STALOC,STACOR,
     *   ICSTAN,NGPS,GPS,IPARM,
     *   IPPP24,IPPPVR,ITPPVR,IPCHAR,
     *   IPTM24,IPTAVR,ITTAVR,IPTF24,TF24FE,
     *   IPEA24,
     *   NSRCCD,SRCCD,NSRCID,SRCID,
     *   NGOESN,GOESN,NCDASN,CDASN,
     *   NUGPA,
     *   LARRAY,ARRAY,IPTR,DISP,
     *   IWRITE,NPOS,ISTAT)
C
      CHARACTER*4 DISP
C
      DIMENSION ARRAY(LARRAY)
C      
      INCLUDE 'scommon/dimstan'
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_write/RCS/swstan.f,v $
     . $',                                                             '
     .$Id: swstan.f,v 1.2 1998/04/07 18:37:35 page Exp $
     . $' /
C    ===================================================================
C
C
C
C  SET TRACE LEVEL
      LTRACE=ISTRC('STAN')
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,220)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('STAN')
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,230) IVSTAN,UNSD,LARRAY,DISP
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,240) STAID,STATE,NBRSTA,DESCRP
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,250) NGPS,(GPS(I),I=1,NGPS)
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,260) NSRCCD,(SRCCD(I),I=1,NSRCCD)
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,270) NGOESN,(GOESN(I),I=1,NGOESN)
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,280) NCDASN,(CDASN(I),I=1,NCDASN)
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,290) ICSTAN,NUGPA
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C
      IF (IWRITE.EQ.-1) GO TO 200
C      
      IPCPN=0
      ITEMP=0
      IPE=0
C
C  CHECK IF STATION IS NEW
      IF (DISP.EQ.'NEW') THEN
C     SET INDICATORS SO ALLOCATE SPACE FOR ALL PARAMETERS
         IPCPN=1
         ITEMP=1
         IPE=1
         GO TO 30
         ENDIF
C
C  CHECK WHICH DATA GROUPS DEFINED
      IF (NGPS.GT.0) THEN
         DO 20 I=1,NGPS
            IF (GPS(I).EQ.'????'.OR.GPS(I).EQ.'PCPN') IPCPN=1
            IF (GPS(I).EQ.'????'.OR.GPS(I).EQ.'TEMP') ITEMP=1
            IF (GPS(I).EQ.'????'.OR.GPS(I).EQ.'PE') IPE=1
20          CONTINUE
         ENDIF
C
C  CHECK FOR SUFFICIENT SPACE IN PARAMETER ARRAY
30    MINLEN=19+
     *       NGPS*2+
     *       IPCPN*5+
     *       ITEMP*5+
     *       IPE+
     *       NSRCCD*(2+NSRCID)+
     *       NGOESN+1+
     *       NCDASN+1
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) ' MINLEN=',MINLEN
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (MINLEN.GT.LARRAY) THEN
         WRITE (LP,300) LARRAY,MINLEN
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 205
         ENDIF
C
      NPOS=0
C
C  STORE PARAMETER ARRAY VERSION NUMBER
      NPOS=NPOS+1
      ARRAY(NPOS)=IVSTAN+.01
C
C  STORE STATION IDENTIFIER
      NCHAR=4
      NWORDS=LEN(STAID)/NCHAR
      NCHK=2
      IF (NWORDS.NE.NCHK) THEN
         WRITE (LP,305) 'STAID',NWORDS,NCHK,STAID
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 205
         ENDIF
      DO 35 I=1,NWORDS
         NPOS=NPOS+1
         N=(I-1)*NCHAR+1
         CALL SUBSTR (STAID(N:N),1,4,ARRAY(NPOS),1)
35       CONTINUE         
C
C  STORE USER SPECIFIED STATION NUMBER
      NPOS=NPOS+1
      ARRAY(NPOS)=NBRSTA+.01
C
C  STORE DESCRIPTIVE INFORMATION
      NCHAR=4
      NWORDS=LEN(DESCRP)/NCHAR
      NCHK=5
      IF (NWORDS.NE.NCHK) THEN
         WRITE (LP,305) 'DESCRP',NWORDS,NCHK,STAID
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 205
         ENDIF
      DO 40 I=1,NWORDS
         NPOS=NPOS+1
         N=(I-1)*NCHAR+1
         CALL SUBSTR (DESCRP(N:N),1,NCHAR,ARRAY(NPOS),1)
40       CONTINUE
C
C  STORE ELEVATION
      NPOS=NPOS+1
      ARRAY(NPOS)=STAELV
C
C  STORE LATITUDE AND LONGITUDE
      DO 50 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=STALOC(I)
50       CONTINUE
C
C  STORE NWSRFS/HRAP COORDINATES
      DO 60 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=STACOR(I)
60       CONTINUE
C
C  STORE COMPLETE INDICATOR
      NPOS=NPOS+1
      ARRAY(NPOS)=ICSTAN+.01
C
C  STORE STATE IDENTIFIER
      NPOS=NPOS+1
      ARRAY(NPOS)=STATE
C
C  STORE GRID POINT ADDRESS
       NPOS=NPOS+1
       ARRAY(NPOS)=NUGPA
C
      NUNUSD=0
      IF (NUNUSD.GT.0) THEN
C     UNUSED POSITIONS
         DO 70 I=1,NUNUSD
            NPOS=NPOS+1
            ARRAY(NPOS)=UNSD
70          CONTINUE
         ENDIF
C
C  STORE NUMBER OF DATA GROUPS
      NPOS=NPOS+1
      ARRAY(NPOS)=NGPS+.01
C
      IF (NGPS.EQ.0) GO TO 120
C
C  STORE DATA GROUP CODES
      DO 80 I=1,NGPS
         NPOS=NPOS+1
         CALL SUBSTR (GPS(I),1,LEN(GPS(I)),ARRAY(NPOS),1)
80       CONTINUE
C
C  STORE RECORD LOCATION OF PARAMETRIC DATA
      DO 90 I=1,NGPS
         NPOS=NPOS+1
         ARRAY(NPOS)=IPARM(I)+.01
         IF (IPARM(I).EQ.0) THEN
            WRITE (LP,310) GPS(I),STAID
            CALL SUWRNS (LP,2,-1)
            ENDIF
90       CONTINUE
C
      IF (IPCPN.EQ.0) GO TO 100
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR 24-HR PCPN DATA
      NPOS=NPOS+1
      IF (IPPP24.GE.0) ARRAY(NPOS)=IPPP24+.01
      IF (IPPP24.LT.0) ARRAY(NPOS)=IPPP24-.01
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR <24-HR PCPN DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=IPPPVR+.01
C
C  STORE TIME INTERVAL OF <24-HR PCPN DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=ITPPVR+.01
C
C  STORE ARRAY LOCATION OF PRECIPITATION CHARACTERISTICS
      NPOS=NPOS+1
      ARRAY(NPOS)=IPCHAR+.01
C
100   IF (ITEMP.EQ.0) GO TO 110
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR MAX/MIN TEMP DATA
      NPOS=NPOS+1
      IF (IPTM24.GE.0) ARRAY(NPOS)=IPTM24+.01
      IF (IPTM24.LT.0) ARRAY(NPOS)=IPTM24-.01
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR INST TEMP DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=IPTAVR+.01
C
C  STORE TIME INTERVAL OF INST TEMP DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=ITTAVR+.01
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR FCST MAX/MIN TEMP DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=IPTF24+.01
C
C  STORE FE FACTOR FOR TEMP DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=TF24FE
C
110   IF (IPE.EQ.0) GO TO 120
C
C  STORE ARRAY LOCATION OF POINTERS IN PPDB FOR PE DATA
      NPOS=NPOS+1
      ARRAY(NPOS)=IPEA24+.01
C
C  STORE NUMBER OF DATA ENTRY SOURCE CODES
120   NPOS=NPOS+1
      ARRAY(NPOS)=NSRCCD+.01
C
      IF (NSRCCD.EQ.0) GO TO 150
C
C  STORE DATA ENTRY SOURCE CODES, NUMBER OF WORDS OF ADDITIONAL
C  INFORMATION AND ADDITIONAL INFORMATION
      DO 140 I=1,NSRCCD
         NPOS=NPOS+1
         CALL SUBSTR (SRCCD(I),1,LEN(SRCCD(I)),ARRAY(NPOS),1)
         NPOS=NPOS+1
         ARRAY(NPOS)=NSRCID+.01
         DO 130 J=1,NSRCID
            NPOS=NPOS+1
            CALL SUBSTR (SRCID(J,I),1,LEN(SRCID(J,I)),ARRAY(NPOS),1)
130         CONTINUE
140      CONTINUE
C
150   IF (IVSTAN.LT.2) GO TO 170
C
C  STORE NUMBER OF GOES DATA TYPES NOT TO BE TRANSFERRED
      NPOS=NPOS+1
      ARRAY(NPOS)=NGOESN+.01
C
      IF (NGOESN.EQ.0) GO TO 170
C
C  STORE GOES DATA TYPES NOT TO BE TRANSFERRED
      DO 160 I=1,NGOESN
         NPOS=NPOS+1
         ARRAY(NPOS)=GOESN(I)
160      CONTINUE
C
170   IF (IVSTAN.LT.3) GO TO 190
C
C  STORE NUMBER OF CDAS DATA TYPES NOT TO BE TRANSFERRED
      NPOS=NPOS+1
      ARRAY(NPOS)=NCDASN+.01
C
      IF (NCDASN.EQ.0) GO TO 190
C
C  STORE CDAS DATA TYPES NOT TO BE TRANSFERRED
      DO 180 I=1,NCDASN
         NPOS=NPOS+1
         ARRAY(NPOS)=CDASN(I)
180      CONTINUE
C
190   IF (IWRITE.EQ.0) GO TO 210
C
C  OPEN DATA BASE
200   CALL SUDOPN (1,'PPP ',IERR)
      IF (IERR.NE.0) THEN
         ISTAT=1
         GO TO 205
         ENDIF
C
C  WRITE PARAMETER RECORD
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) ' NPOS=',NPOS
         CALL SULINE (IOSDBG,1)
         ENDIF
      IPTR=0
      CALL WPPREC (STAID,'GENL',NPOS,ARRAY,IPTR,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPPST (STAID,'GENL',NPOS,IPTR,IERR)
         ISTAT=3
         ENDIF
C
      IF (LDEBUG.GT.0) CALL SUPDMP ('GENL','BOTH',0,NPOS,ARRAY,ARRAY)
C
205   IF (ISTAT.EQ.0) THEN
         IF (DISP.EQ.'NEW') THEN
            WRITE (LP,330) STAID
            CALL SULINE (LP,2)
            ENDIF
         IF (DISP.EQ.'OLD') THEN
            WRITE (LP,340) STAID
            CALL SULINE (LP,2)
            ENDIF
          CALL SUDWRT (1,'PPP ',IERR)
          ENDIF
      IF (ISTAT.GT.0) THEN
         WRITE (LP,350) STAID
         CALL SULINE (LP,2)
         ENDIF
C
210   IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,360) ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
220   FORMAT (' *** ENTER SWSTAN')
230   FORMAT (' IVSTAN=',I2,3X,'UNSD=',F7.2,3X,'LARRAY=',I5,3X,
     *   'DISP=',A4)
240   FORMAT (' STAID=',A,3X,'STATE=',A4,3X,'NBRSTA=',I5,3X,
     *   'DESCRP=',A)
250   FORMAT (' NGPS=',I2,3X,'GPS=',10(A4,1X))
260   FORMAT (' NSRCCD=',I2,3X,'SRC=',10(A4,1X))
270   FORMAT (' NGOESN=',I2,3X,'GOESN=',10(A4,1X))
280   FORMAT (' NCDASN=',I2,3X,'CDASN=',10(A4,1X))
290   FORMAT (' ICSTAN=',I2,3X,'NUGPA=',I5)
300   FORMAT ('0*** ERROR - IN SWSTAN - NOT ENOUGH SPACE IN PARAMETER ',
     *   'ARRAY: NUMBER OF WORDS IN PARAMETER ARRAY=',I5,3X,
     *   'NUMBER OF WORDS NEEDED=',I5)
305   FORMAT ('0*** ERROR - IN SWSTAN - NUMBER OF WORDS IN VARIABLE ',
     *   A,'(',I2,') IS NOT ',I2,' FOR STATION ',A,'.')
310   FORMAT ('0*** WARNING - IN SWSTAN - PARAMETER RECORD NUMBER ',
     *   'IS ZERO FOR DATA TYPE ',A4,' FOR STATION ',A,'.')
330   FORMAT ('0*** NOTE - GENL PARAMETERS SUCCESSFULLY WRITTEN ',
     *   'FOR STATION ',A,'.')
340   FORMAT ('0*** NOTE - GENL PARAMETERS SUCCESSFULLY UPDATED ',
     *   'FOR STATION ',A,'.')
350   FORMAT ('0*** NOTE - GENL PARAMETERS NOT ',
     *   'SUCCESSFULLY WRITTEN FOR STATION ',A,'.')
360   FORMAT (' *** EXIT SWSTAN : STATUS CODE=',I2)
C
      END
