C MODULE SWBASN
C----------------------------------------------------------------------
C
C  ROUTINE TO WRITE A BASIN PARAMETER RECORD.
C
      SUBROUTINE SWBASN (ARRAY,LARRAY,IVER,BASNID,DESCRP,FLAT,FLON,
     *   NBPTS,AREA,CAREA,ELEV,XC,YC,MAPFLG,MATFLG,PID,TID,PXID,
     *   NSEGS,IY,IXB,IXE,LFACTR,DISP,NSPACE,ISTAT)
C
      CHARACTER*4 DISP
      CHARACTER*8 BASNID,PID,PXID,TID
      CHARACTER*20 DESCRP
      DIMENSION ARRAY(LARRAY)
      DIMENSION FLAT(NBPTS),FLON(NBPTS)
      DIMENSION IY(NSEGS),IXB(NSEGS),IXE(NSEGS)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/suerrx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_write/RCS/swbasn.f,v $
     . $',                                                             '
     .$Id: swbasn.f,v 1.2 1999/07/07 11:26:50 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'ENTER SWBASN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('BASN')
C
      ISTAT=0
C
C  CHECK ARRAY SIZE
      MINLEN=24+(2*NBPTS)+(3*NSEGS)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'MINLEN=',MINLEN,'NBPTS=',NBPTS,
     *      'NSEGS=',NSEGS
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (MINLEN.GT.LARRAY) THEN
         WRITE (LP,100) LARRAY,MINLEN
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 60
         ENDIF
C
C  STORE PROGRAM VERSION NUMBER
      NPOS=1
      ARRAY(NPOS)=IVER+0.01
C
C  STORE BASIN IDENTIFIER
      DO 5 I=1,2
         NPOS=NPOS+1
         IPOS=(I-1)*4+1
         CALL SUBSTR (BASNID(IPOS:IPOS),1,4,ARRAY(NPOS),1)
5        CONTINUE
C
C  STORE BASIN DESCRIPTION
      DO 10 I=1,5
         NPOS=NPOS+1
         IPOS=(I-1)*4+1
         CALL SUBSTR (DESCRP(IPOS:IPOS),1,4,ARRAY(NPOS),1)
10       CONTINUE
C
C  STORE USER SPECIFIED BASIN ELEVATION
      NPOS=NPOS+1
      ARRAY(NPOS)=ELEV
C
C  STORE USER SPECIFIED BASIN AREA
      NPOS=NPOS+1
      ARRAY(NPOS)=AREA
C
C  STORE COMPUTED BASIN AREA
      NPOS=NPOS+1
      ARRAY(NPOS)=CAREA
C
C  STORE BASIN CENTROID
      NPOS=NPOS+1
      ARRAY(NPOS)=XC
      NPOS=NPOS+1
      ARRAY(NPOS)=YC
C
C  STORE IDENTIFIER OF MAP AREA THAT USES THIS BASIN
      DO 12 I=1,2
         NPOS=NPOS+1
         IPOS=(I-1)*4+1
         CALL SUBSTR (PID(IPOS:IPOS),1,4,ARRAY(NPOS),1)
12       CONTINUE         
C
C  STORE IDENTIFIER OF MAT AREA THAT USES THIS BASIN
      DO 14 I=1,2
         NPOS=NPOS+1
         IPOS=(I-1)*4+1
         CALL SUBSTR (TID(IPOS:IPOS),1,4,ARRAY(NPOS),1)
14       CONTINUE 
C
C  STORE INDICATOR IF MAP AREA DEFINITION CONSISTANT WITH BASIN
C  DEFINITION
      NPOS=NPOS+1
      ARRAY(NPOS)=MAPFLG+0.01
C
C  STORE INDICATOR IF MAT AREA DEFINITION CONSISTANT WITH BASIN
C  DEFINITION
      NPOS=NPOS+1
      ARRAY(NPOS)=MATFLG+0.01
C
C  STORE IDENTIFIER OF MAPX AREA THAT USES THIS BASIN
      DO 16 I=1,2
         NPOS=NPOS+1
         IPOS=(I-1)*4+1
         CALL SUBSTR (PXID(IPOS:IPOS),1,4,ARRAY(NPOS),1)
16       CONTINUE
C
C  STORE GRID SPACING FACTOR
      NPOS=NPOS+1
      ARRAY(NPOS)=LFACTR
C
C  STORE NUMBER OF BASIN BOUNDARY POINTS
      NPOS=NPOS+1
      ARRAY(NPOS)=NBPTS+0.01
C
C  STORE NUMBER OF LINE SEGMENTS
      NPOS=NPOS+1
      ARRAY(NPOS)=NSEGS+0.01
C
C  STORE BASIN BOUNDARY LATITUDE POINTS
      DO 20 I=1,NBPTS
         NPOS=NPOS+1
         ARRAY(NPOS)=FLAT(I)
20       CONTINUE
C
C  STORE BASIN BOUNDARY LONGITUDE POINTS
      DO 30 I=1,NBPTS
         NPOS=NPOS+1
         ARRAY(NPOS)=FLON(I)
30       CONTINUE
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'NSEGS=',NSEGS
         CALL SULINE (IOSDBG,1)
         DO 40 I=1,NSEGS
            WRITE (IOSDBG,'(1X,A,I4,4(1X,A,I4))')
     *         'I=',I,'IY(I)=',IY(I),'IXB(I)=',IXB(I),'IXE(I)=',IXE(I)
            CALL SULINE (IOSDBG,1)
40          CONTINUE
         ENDIF
C
C  STORE LINE SEGMENT INFORMATION IN ACTUAL REAL NUMBERS
      NPOS=NPOS+1
      CALL SFCONV (ARRAY(NPOS),IY,NSEGS)
      NPOS=NPOS+NSEGS
      CALL SFCONV (ARRAY(NPOS),IXB,NSEGS)
      NPOS=NPOS+NSEGS
      CALL SFCONV (ARRAY(NPOS),IXE,NSEGS)
      NPOS=NPOS+NSEGS
C
C  WRITE PARAMETER RECORD
      CALL SUDOPN (1,'PPP ',IERR)
      IPTR=0
      CALL WPPREC (BASNID,'BASN',NPOS,ARRAY,IPTR,IERR)
      IF (IERR.GT.0) THEN
         CALL SWPPST (BASNID,'BASN',NPOS,IPTR,IERR)
         WRITE (LP,130) ISTAT
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         ENDIF
      IF (ISTAT.EQ.0) THEN
         IF (LDEBUG.GT.0) THEN
            NWORDS=0
            CALL SUPDMP ('BASN','BOTH',NWORDS,NPOS,ARRAY,ARRAY)
            CALL SUPDMP ('BASN','INT ',NWORDS,NPOS,ARRAY,ARRAY)
            ENDIF
         IF (NSPACE.EQ.1) THEN
            WRITE (LP,*)
            CALL SULINE (LP,1)
            ENDIF
         IF (DISP.EQ.'NEW') THEN
            WRITE (LP,140) 'WRITTEN',BASNID
            CALL SULINE (LP,1)
            ENDIF
         IF (DISP.EQ.'OLD') THEN
            WRITE (LP,140) 'UPDATED',BASNID
            CALL SULINE (LP,1)
            ENDIF
         CALL SUDWRT (1,'PPP ',IERR)
         ELSE
            WRITE (LP,160) BASNID
            CALL SULINE (LP,1)
         ENDIF
C
60    IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'EXIT SWBASN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
100   FORMAT ('0*** ERROR - IN SWBASN - NOT ENOUGH SPACE IN PARAMETER ',
     *   'ARRAY: NUMBER OF WORDS IN PARAMETER ARRAY=',I5,3X,
     *   'NUMBER OF WORDS NEEDED=',I5)
130   FORMAT ('0*** ERROR - IN SWBASN - UNSUCCESSFUL CALL TO WPPREC : ',
     *   'STATUS CODE=',I3)
140   FORMAT (' *** NOTE - BASN PARAMETERS SUCCESSFULLY ',A,' '
     *   'FOR BASIN ',A,'.')
160   FORMAT ('0*** NOTE - BASN PARAMETERS NOT SUCCESSFULLY ',
     *   'WRITTEN FOR BASIN ',A,'.')
C
      END
