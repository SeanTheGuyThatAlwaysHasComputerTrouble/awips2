C MEMBER UIF26
C  (from old member FCUIF26)
C
C DESC INTERPRET, ANALYZE AND ENCODE IF-ENDIF BLOCKS IN RCL IN OP26
C
      SUBROUTINE UIF26(WORK,IUSEW,LEFTW,NRCOFF,IRC)
C
C  ARGS:
C   WORK  - ARRAY TO HOLD ENCODE RCL KEYWORDS AND SPECIFICATIONS
C  IUSEW  - NUMBER OF WORDS USED IN WORK
C  LEFTW  - NUMBER OF WORDS LEFT IN WORK
C  NRCOFF - OFFSET FROM START OF WORK FOR START OF RCL
C           (USED SO POINTERS CAN BE SET UP AS RELATIVE TO SECTION
C            STARTS).
C    IRC - RETURN CODE
C          =0, ALL IS OK
C          =1, ERROR OCCURRED,
C          =2, END OF INPUT FOR RCL MET IN THIS SECTION.
C
C.......................................................................
C
C  IF-ENDIF GROUPS MUST BE PAIRED PROPERLY AND ALLOWABLE
C   KEYWORDS MUST BE FOUND WHEN EXPECTED.
C
C..................................................................
C
C  JTOSTROWSKI - HRL - MARCH 1983
C................................................................
      INCLUDE 'common/fld26'
      INCLUDE 'common/err26'
      INCLUDE 'common/ifcl26'
C
      DIMENSION IFFGO(10),IFTGO(50,10),NTRLOC(10),LASTKY(10)
      DIMENSION KEYWDS(2,8),LKYWDS(8),WORK(1)
C
      LOGICAL IFTYPE(10),AFTELS(10)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/uif26.f,v $
     . $',                                                             '
     .$Id: uif26.f,v 1.1 1995/09/17 18:53:29 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA KEYIF,KYTHEN,KYELF,KEYDO,KYELSE,KYNDIF/4HIF  ,4HTHEN,4HELIF,
     .    4HDO  ,4HELSE,4HENDF/
      DATA CODEIF,CODEDO,CODELS,CODELF/10.01,5.01,12.01,13.01/
      DATA CODENF/19.01/
      DATA GOFLSE/-500.01/,TRUEGO/-1000.01/
C
      DATA KEYWDS/
     .            4HSET ,4H    ,4HDO  ,4H    ,
     .            4HIF  ,4H    ,4HTHEN,4H    ,
     .            4HELSE,4H    ,4HELSE,4HIF  ,
     .            4HENDI,4HF   ,4HENDR,4HCL  /
      DATA LKYWDS/1,1,1,1,1,2,2,2/
      DATA NKYWDS/8/
      DATA NDKEY/2/
C
      IRC = 0
      NSTACK = 0
C
      DO 20 I=1,10
20    NTRLOC(I) = 0
C
C  THE SUBROUTINE WILL LOOP TO HERE IF ANOTHER 'IF' IS FOUND
C  CHECK ON ARRAY SIZES FOR INCREMENTING STACK
C
  100 CONTINUE
      NSTACK = NSTACK+1
      IF (NSTACK.LE.10) GO TO 150
      CALL STER26(500,1)
C
  130 CONTINUE
C  NO MORE IF'S CAN BE STACKED, SCAN THROUGH UNTIL ALL IF'S HAVE BEEN
C  MATCHED WITH ENDIF'S
C  GET NEXT FIELD IN INPUT STREAM
C
      CALL UFLD26(0,IRF)
      IF (IRF.EQ.3) GO TO 9900
C
C  LOOK FOR 'ENDIF' OR 'IF'. KEEP LOOKING FOR ENDIF'S TO MATCH NO. OF
C  IF'S
C
      NWORD = (LEN-1)/4+1
      INAME = IKEY26(CHAR,NWORD,KEYWDS,LKYWDS,NKYWDS,NDKEY)
      IF (INAME.NE.3.OR.INAME.NE.7) GO TO 130
      IF (INAME.EQ.3) NSTACK = NSTACK+1
      IF (INAME.EQ.7) NSTACK = NSTACK-1
      IF (NSTACK.EQ.0) GO TO 9999
      GO TO 130
C
C  CAN STACK ANOTHER IF. SET CONDITIONS FOR BEGINNING OF IF-ENDIF PAIR
C
  150 CONTINUE
      AFTELS(NSTACK) = .FALSE.
      LASTKY(NSTACK) = KEYIF
C
C  PLACE CODE FOR 'IF' IN WORK
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CODEIF,501)
C
C  CALL ROUTINE TO ANALYZE THE IF CLAUSE. IT WILL STORE DUMMY POINTER TO
C  IF SECTION OF WORK ARRAY.
C
      NUMFLD = 0
      CALL MPAR26(WORK,IUSEW,LEFTW,NUMFLD,IRM)
      IF (IRM.GT.0) IRC = 1
C
C STORE POINTER TO DESTINATION
C  OF 'FALSE' TEST OF IF STATEMENT. STORE THE POSITION OF THIS POINTER S
C  IT CAN BE REFILLED LATER.
C
      CALL FLWK26(WORK,IUSEW,LEFTW,GOFLSE,501)
      IFFGO(NSTACK) = IUSEW
C
C  GET NEXT FIELD FOLLOWING IF CLAUSE
C
  300 CONTINUE
      CALL UFLD26(NUMFLD,IRF)
      IF (IRF.GT.0) GO TO 9900
C
      NUMFLD = 1
      NWORD = (LEN-1)/4 + 1
      IDEST = IKEY26(CHAR,NWORD,KEYWDS,LKYWDS,NKYWDS,NDKEY) + 1
C
      GO TO (400,500,600,700,800,900,1000,1100,1200) , IDEST
C------------------------------------------------------------------
C
C  NO VALID KEYWORD FOUND, SIGNAL ERROR AND DROP TO NEXT LINE
C
  400 CONTINUE
      CALL STER26(1,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C--------------------------------------------------------------------
C
C  'SET' FOUND. SHOULD NOT BE FOUND WITHIN IF GROUP
C
  500 CONTINUE
      CALL STER26(2,1)
      NUMFLD = 0
      IRC = 1
      GO TO 300
C----------------------------------------------------------------
C
C 'DO' FOUND. MUST COME AFTER THEN, DO, OR ELSE.
C
  600 CONTINUE
C
      LKEY = LASTKY(NSTACK)
      IF (LKEY.NE.KEYIF.AND.LKEY.NE.KYELF) GO TO 620
      CALL STER26(14,1)
      IRC = 1
      NUMFLD = 0
      LASTKY(NSTACK) = KEYDO
      GO TO 300
C
C  CALL UDO26 TO CHECK FOR VALID, DEFINED SCHEME/UTILITY NAME
C
  620 CONTINUE
C
C  FIRST PLACE A 'DO' CODE IN WORK ARRAY
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CODEDO,501)
C
      CALL UDO26(SUCODE,IRD)
      IF (IRD.GT.0) IRC = 1
C
C  PLACE THE S/U CODE IN WORK ARRAY
C
      CALL FLWK26(WORK,IUSEW,LEFTW,SUCODE,501)
C
C  SET LAST KEY AS 'DO', SPECIFY UFLD26 TO READ NEW LINE AND RETURN
C  TO LINE 300
C
      LASTKY(NSTACK) = KEYDO
      NUMFLD = 0
      GO TO 300
C-------------------------------------------------------------
C
C  'IF' FOUND. CAN ONLY COME AFTER A 'DO'
C
  700 CONTINUE
      LKEY = LASTKY(NSTACK)
      IF (LKEY.EQ.KEYDO) GO TO 720
C
      IF (LKEY.EQ.KEYIF.OR.LKEY.EQ.KYELF) CALL STER26(14,1)
      IF (LKEY.EQ.KYTHEN.OR.LKEY.EQ.KYELSE) CALL STER26(15,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C  EMBEDDED 'IF' FOUND. PROCESS IT ON THE NEXT NSTACK LEVEL
C
  720 CONTINUE
      GO TO 100
C--------------------------------------------------------------
C
C  'THEN' FOUND. MUST FOLLOW ELSEIF OR IF
C
  800 CONTINUE
      LKEY = LASTKY(NSTACK)
      IF (LKEY.EQ.KYELF.OR.LKEY.EQ.KEYIF) GO TO 820
C
      IF (AFTELS(NSTACK)) CALL STER26(23,1)
      IF (.NOT.AFTELS(NSTACK)) CALL STER26(22,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C  NO NEED TO STORE ANYTHING, JUST SET LASTKEY TO 'THEN'
C
  820 CONTINUE
      LASTKY(NSTACK) = KYTHEN
      NUMFLD = 1
      GO TO 300
C---------------------------------------------------------------------
C
C  'ELSE' FOUND. MUST FOLLOW A 'DO'. CANNOT BE ENTERED IF 'ELSE'
C  ALREADY FOUND IN THIS IF-ENDIF PAIR
C
  900 CONTINUE
      IF (.NOT.AFTELS(NSTACK)) GO TO 920
C
      CALL STER26(24,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C 'ELSE' MUST FOLLOW 'DO'
C
  920 CONTINUE
      IF (LASTKY(NSTACK).EQ.KEYDO) GO TO 930
C
      CALL STER26(25,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C  A NUMBER OF THINGS MUST BE DONE WHEN WE FIND AN ELSE
C   1. FILL IN CURRENT WORD IN WORK WITH AN IFTRUE MARKER (THIS WILL
C       BE FILLED WHEN WE HIT AN ENDIF.
C   2. FILL IN THE NEXT WORD IN WORK WITH CODE FOR 'ELSE',
C   3. RESET 'FALSE' TEST POINTER IN WORK WITH LOCATION OF 'ELSE',
C   4. MARK THAT 'ELSE' HAS BEEN FOUND.
C
  930 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,TRUEGO,501)
      NTRLOC(NSTACK) = NTRLOC(NSTACK) + 1
      IFTGO(NTRLOC(NSTACK),NSTACK) = IUSEW
      CALL FLWK26(WORK,IUSEW,LEFTW,CODELS,501)
      FPOS = - (IUSEW - NRCOFF + 0.01)
      CALL RFIL26(WORK,IFFGO(NSTACK),FPOS)
C
      AFTELS(NSTACK) = .TRUE.
      LASTKY(NSTACK) = KYELSE
      NUMFLD = 1
      GO TO 300
C---------------------------------------------------------------------
C
C  'ELSEIF' FOUND, CAN ONLY FOLLOW A 'DO' OCCURRING BEFORE 'ELSE'
C
 1000 CONTINUE
      IF (.NOT.AFTELS(NSTACK)) GO TO 1010
C
      CALL STER26(23,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C  SEE IF 'ELSEIF' FOLLOWS A 'DO'
C
 1010 CONTINUE
      IF (LASTKY(NSTACK).EQ.KEYDO) GO TO 1020
C
      CALL STER26(25,1)
      IRC = 1
      NUMFLD = 0
      GO TO 300
C
C  LEGIT SITUATION FOR 'ELSEIF', A NUMBER OF THINGS TO BE DONE HERE
C  SIMILAR TO WHEN AN 'ELSE' IS FOUND
C    1. PLACE A POINTER TO THE END OF THE IF GROUP AT THE END OF THE
C       LAST DO STATEMENT (THIS LOCATION WILL BE FILLED WITH THE PROPER
C       VALUE WHEN AN ENDIF IS FOUND),
C    2. STORE THE 'ELSEIF' CODE IN WORK,
C    3. RESET THE 'FALSE' TEST POINTER FROM THE PREVIOUS 'IF', OR
C        'ELSEIF' FOR THIS NSTACK,
C    4. CALL MPAR26 TO ANALYZE THE IF CLAUSE (FILLING IT WITH A DUMMY
C         POINTER),
C    5. SET A DUMMY POINTER FOR THE 'FALSE' TEST (TO BE FILLED WHEN THE
C        ELSEIF,ELSE, OR ENDIF ARE FOUND),
C
 1020 CONTINUE
      LASTKY(NSTACK) = KYELF
      CALL FLWK26(WORK,IUSEW,LEFTW,TRUEGO,501)
      NTRLOC(NSTACK) = NTRLOC(NSTACK) + 1
      IFTGO(NTRLOC(NSTACK),NSTACK) = IUSEW
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CODELF,501)
      FPOS = - (IUSEW - NRCOFF + 0.01)
      CALL RFIL26(WORK,IFFGO(NSTACK),FPOS)
      CALL MPAR26(WORK,IUSEW,LEFTW,NUMFLD,IRM)
      IF (IRM.GT.0) IRC = 1
      CALL FLWK26(WORK,IUSEW,LEFTW,GOFLSE,501)
      IFFGO(NSTACK) = IUSEW
      GO TO 300
C--------------------------------------------------------------------
C
C  'ENDIF' FOUND, CAN ONLY FOLLOW 'DO'
C
 1100 CONTINUE
      IF (LASTKY(NSTACK).EQ.KEYDO) GO TO 1110
C
      CALL STER26(26,1)
      IRC = 1
      NSTACK = NSTACK-1
      IF (NSTACK.EQ.0) GO TO 9999
      GO TO 300
C
C  RIGHT SITUATION FOR 'ENDIF'. RESET ALL IFTRUES TO THIS LOCATION,
C   SET IFFGO TO THIS LOCATION IF NO 'ELSE' ENTERED IN THIS BLOCK.
C
 1110 CONTINUE
C
C  STORE 'ENDIF' IN WORK
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CODENF,501)
C
C  RESET ALL 'IFTRUE' POINTERS TO THIS LOCATION FOR ALL IF-TRUE POINTERS
C  FOR THIS STACK LEVEL.
C
      NTRUGO = NTRLOC(NSTACK)
      IF (NTRUGO.LT.1) GO TO 1130
      DO 1120 I=1,NTRUGO
      TPOS = - (IUSEW - NRCOFF + 0.01)
      CALL RFIL26(WORK,IFTGO(I,NSTACK),TPOS)
 1120 CONTINUE
C
C  IF NO 'ELSE' HAS BEEN ENTERED IN THIS IF GROUP, RESET 'IFFALSE'
C  POINTER
C
 1130 CONTINUE
      IF (AFTELS(NSTACK)) GO TO 1140
      FPOS = - (IUSEW - NRCOFF + 0.01)
      CALL RFIL26(WORK,IFFGO(NSTACK),FPOS)
C
 1140 CONTINUE
C
C  REDUCE STACK, IF ANY MORE LEVELS REMAINING, CONTINUE PROCESSING
C
      NUMFLD = 0
      NSTACK = NSTACK-1
      IF (NSTACK.EQ.0) GO TO 9999
C
      GO TO 300
C------------------------------------------------------------------
C
C  AN 'ENDRCL' WAS READ. THAT'S A NO-NO, LEAVES OPEN IF-ENDIF PAIRS
C
 1200 CONTINUE
      CALL STER26(12,1)
      IRC = 2
      GO TO 9999
C-------------------------------------------------------------------
C
C  ERRORS FOUND IN CALL UFLD26
C
 9900 CONTINUE
      IF (IRF.EQ.1) CALL STER26(19,1)
      IF (IRF.EQ.2) CALL STER26(20,1)
      IF (IRF.EQ.3) CALL STER26(27,1)
      IF (IRF.EQ.4) CALL STER26(1,1)
      IRC = 1
      NUMFLD = 0
      IF (IRF.NE.3) GO TO 300
      GO TO 9999
C
 9999 CONTINUE
      RETURN
      END
