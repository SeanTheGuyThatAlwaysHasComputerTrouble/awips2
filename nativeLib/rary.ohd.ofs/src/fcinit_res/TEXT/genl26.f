C MEMBER GENL26
C  (from old member FCGENL26)
C
C DESC READS ALL INPUT FOR GENERAL SECTION OF OPERATION 26 PIN ROUTINE.
C
C                             LAST UPDATE: 08/14/95.14:52:30 BY $WC21DT
C
C---------------------------------------------------------------------
C
      SUBROUTINE GENL26(WORK,IUSEW,LEFTW,NPARG,NTSG,NCOG,OKGENL)
C
C----------------------------------------------------------------------
C  ARGS:
C     WORK - ARRAY TO HOLD ENCODE GENERAL INFORMATION
C    IUSEW - NO. OF WORDS ALREADY USED IN WORK ARRAY
C    LEFTW - NO. OF WORDS REMAINING IN WORK ARRAY
C    NPARG - NO. OF WORDS NEEDED TO HOLD GENERAL PARM INFO
C     NTSG - NO. OF WORDS NEEDED TO HOLD GENERATL TS INFO
C     NCOG - NO. OF WORDS NEEDED TO HOLD GENERAL CARRYOVER INFO
C   OKGENL - LOGICAL VARIABLE TELLING WHETHER ANY MISTAKES OCCURRED IN
C            GENERAL SECTION INPUT.
C
C-----------------------------------------------------------------------
C
C  JTOSTROWSKI - HRL - MARCH 1983
C----------------------------------------------------------------
      INCLUDE 'common/ionum'
      INCLUDE 'common/read26'
      INCLUDE 'common/fld26'
      INCLUDE 'common/err26'
      INCLUDE 'common/warn26'
      INCLUDE 'common/comn26'
      INCLUDE 'common/suin26'
C
      DIMENSION KEYWDS(3,10),LKEYWD(10),TITLE(5),LINE(20),IKYUNT(2,4),
     .LKYUNT(4),ENDG(2),UNITC(4),DIM(4),CONVT(4),WORK(1),IKYENG(4),
     . LKYENG(4),IG(6)
C
      LOGICAL OKGENL,PRINT1,PRINT2,USET
      EQUIVALENCE (CONVT(1),CONVL),(CONVT(2),CONVL3),(CONVT(3),CONVLT),
     .            (CONVT(4),CONVST)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/genl26.f,v $
     . $',                                                             '
     .$Id: genl26.f,v 1.2 1996/01/17 18:57:45 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA KEYWDS/
     .            4HTITL,4HE   ,4H    ,4HT   ,4H    ,4H    ,
     .            4HUNIT,4HS   ,4H    ,4HU   ,4H    ,4H    ,
     .            4HPARM,4HS   ,4H    ,4HP   ,4H    ,4H    ,
     .            4HTIME,4H-SER,4HIES ,4HTS  ,4H    ,4H    ,
     .            4HCARR,4HYOVE,4HR   ,4HCO  ,4H    ,4H    /
      DATA LKEYWD/2,1,2,1,2,1,3,1,3,1/
      DATA NKEYWD/10/
      DATA NDKEY/3/
      DATA BLANK/4H    /
      DATA ENDG/4HENDG,4HENL /
C
      DATA UNITC/4HM   ,4HCMSD,4HCMS ,4HCMSD/
      DATA DIM  /4HL   ,4HL3  ,4HL3/T,4HL3  /
C
C
      DATA IKYUNT/
     .            4HENGL,4HISH ,4HE   ,4H    ,
     .            4HMETR,4HIC  ,4HM   ,4H    /
      DATA LKYUNT/2,1,2,1/
      DATA NKYUNT/4/
      DATA NDUNT/2/
C
      DATA IKYENG/
     .            4HTIMD,4HT   ,
     .            4HACFT,4HA   /
      DATA LKYENG/1,1,1,1/
      DATA NKYENG/4/
      DATA NDENG/1/
C
C  INITIALIZE COUNTERS AND LOCAL VARIABLES
C
      OKGENL = .TRUE.
      USEDUP = .FALSE.
      USET = .FALSE.
      MINODT = 0
      NPARG = 0
      NTSG = 0
      NCOG = 0
      NUMERR = 0
      NUMWRN = 0
      NUMTS = 0
      PRINT1 = .FALSE.
      PRINT2 = .FALSE.
      OKELST = .FALSE.
      IERR = 0
C
C
C  SET SECTION VALUE TO INDICATE END OF INPUT FOR UFLD26.
C  SET DEFAULT ENGLISH/METRIC SWITCH TO ENGLISH, AND DEFAULT ENGLISH
C   STORAGE TYPE TO ACRE-FEET.
C  SET OFFSET FOR START OF INFO IN GENERAL SECTION
C
      ISECT = 1
      IMETEN = 0
      ESTOR = 0.01
      NGOFF = IUSEW
C
C  SET TITLE TO ALL BLANKS AS A DEFAULT
C
      DO 1 I=1,5
      TITLE(I) = BLANK
    1 CONTINUE
C
      DO 3 I =1,6
           IG(I) = 0
    3 CONTINUE
C
C  CHECK FOR INPUT OF 'GENERAL' KEYWORD, CAN'T PROCESS GENERAL INFO
C  UNLESS WE HAVE A 'GENERAL' KEYWORD.
C
      IF (LGENL.GT.0) GO TO 10
      WRITE(IPR,750)
  750 FORMAT('0**ERROR**'/16X,'NO ''GENERAL'' KEYWORD HAS BEEN ',
     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE GENERAL SUBSECTION'/16X,'OF THE ''RES-SNGL'' ',
     .'OPERATION.')
      OKGENL = .FALSE.
      CALL ERROR
      GO TO 9999
C
C  ALSO, AN 'ENDGENL' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT STREAM
C  FOR DEFINITION OF THIS OPERATION
C
   10 CONTINUE
      IF (NGENL.GT.0) GO TO 20
C
      WRITE(IPR,760)
  760 FORMAT('0**ERROR**'/16X,'NO ''ENDGENL'' KEYWORD HAS BEEN ',
     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE GENERAL SUBSECTION'/16X,'OF THE ''RES-SNGL'' '
     .,' OPERATION.')
      OKGENL = .FALSE.
      CALL ERROR
      GO TO 9999
C
   20 CONTINUE
C
C--------------------------------------------------------------------
C  NOW PROCESS INPUT UP TO 'ENDGENL', LOOKING FOR, IN ORDER, KEYWORDS
C  FOR TITLE, UNITS, PARMS, TIME-SERIES, AND CARRYOVER.
C
C  EACH OF THESE HAVE A PRIMARY AND ABBREVIATED KEYWORD.
C
C
C  RESERVED 5 WORDS FOR TITLE
C
      IUSEW = IUSEW + 5
      LEFTW = LEFTW - 5
C
      IGSTRT = LGENL+1
      NGEN2 = NGENL - 1
      CALL POSN26(MUNI26,IGSTRT)
      LAGENL = NGEN2 - 1
      NCARD = 0
C
  100 IF (NCARD .GE. LAGENL) GO TO 900
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  LOOK FOR MATCH OF PROPER KEYWORD
C
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,KEYWDS,LKEYWD,NKEYWD,NDKEY)
      IF (IDEST .GT. 0) GO TO 150
C
C  NO VALID KEYWORD FOUND
C
      CALL STER26(1,1)
      GO TO 100
C
C  NOW SEND TO CONTROL TO LOCATION TO PROCESS PROPER KEYWORD
C
  150 CONTINUE
      LOCPTS = 0
      GO TO (200,200,300,300,400,400,500,500,600,600) , IDEST
C----------------------------------------------------------
C  TITLE IS TO BE FOUND NOW. IF NOT, FOUND JUST SPOOL DEFAULT INTO
C   WORK ARRAY. IF FOUND, GET NEXT FIELD ON SAME CARD.
C
  200 CONTINUE
C
      IG(2) = IG(2) + 1
      IF (IG(2).GT.1) CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.EQ.1) GO TO 100
C
      DO 210 J=1,5
      TITLE(J) = CHAR(J)
  210 CONTINUE
      GO TO 100
C------------------------------------------------------------------
C  UNITS EXPECTED HERE. IF AT END OF INPUT FOR GENERAL SECTION, STORE
C  DEFAULT. IF 'UNITS' FOUND, GET NEXT FIELD ON CARD.
C
  300 CONTINUE
C
      IG(3) = IG(3) + 1
      IF(IG(3).GT.1) CALL STER26(39,1)
      IF (USET) CALL STRN26(102,1,KEYWDS(1,3),LKEYWD(3))
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.EQ.1) GO TO 320
C
C  LOOK FOR MATCH OF FIELD FOUND AGAINST ALLOWABLE UNITS SPECS
C
      NUMWD = (LEN-1)/4 + 1
      IVAL = IKEY26(CHAR,NUMWD,IKYUNT,LKYUNT,NKYUNT,NDUNT)
      IF (IVAL.EQ.0) GO TO 310
C
      IMETEN = (IVAL-1)/2
      GO TO 320
  310 CONTINUE
C
C  IF NO MATCH SIGNAL WARNING AND STORE DEFAULT UNITS
C
      CALL STWN26(1,1)
C
  320 CONTINUE
C
C  IF UNITS ARE ENGLISH, WE MUST LOOK TO FIND THE UNITS OF STORAGE.
C  THEY CAN BE EITHER 'TIMD' OR 'ACFT'. IF NEITHER IS ENTERED, THE
C  DEFAULT OF 'ACFT' WILL BE USED.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.EQ.1) GO TO 340
C
      NUMWD = (LEN-1)/4 + 1
      IVAL = IKEY26(CHAR,NUMWD,IKYENG,LKYENG,NKYENG,NDENG)
      IF (IVAL.EQ.0) GO TO 330
C
C  SET VALUE OF STORAGE TYPE
C
      ESTOR = ((IVAL-1)/2) - 1.01
      GO TO 340
C
C  NO MATCH FOUND FOR FIELD FOUND ON RECORD. WRITE WARNING AND USE
C  DEFAULT STORAGE TYPE.
C
  330 CONTINUE
      CALL STWN26(1,1)
C
  340 CONTINUE
C
C  STORE ENGLISH/METRIC SWITCH = 1 FOR METRIC,
C                              = 0 FOR ENGLISH/ACFT,
C                              =-1 FOR ENGLISH/TIMD.
C
      ENGMET = IMETEN + ESTOR
      IMETEN = ENGMET
      CALL FLWK26(WORK,IUSEW,LEFTW,ENGMET,501)
C
C  COMPUTE CONVERSION FACTORS BASED ON VALUE OF IMETEN
C
      DO 350 I=1,4
      CONVT(I) = 1.0
  350 CONTINUE
C
      IF (IMETEN.EQ.1) GO TO 380
C
C  FIRST THREE CONVERSIONS ARE DONE HERE FOR ENGLISH UNITS. THE FACTOR
C  FOR STORAGE MAY BE DEPENDENT ON THE OPERATION TIME INTERVAL, SO WE'LL
C  JUST WAIT UNTIL WE DETERMINE THE TIME INTERVAL (IN GTS26) TO COMPUTE
C  THE STORAGE CONVERSION FACTOR.
C
      DO 360 I=1,3
      CALL FCONVT(UNITC(I),DIM(I),UENG,CONVT(I),CONST,IERC)
  360 CONTINUE
C
C  AT THIS POINT, WE CAN FILL THE POINTERS AND LENGTHS OF THE PARM, TS,
C  CO INFO IN THE WORK SECTION. EVERYTHING WILL BE A DUMMY VALUE
C  AND WILL BE REFILLED LATER WHEN THE REAL VALUES CAN BE DETERMINED.
C
  380 CONTINUE
      GENST = IUSEW + 7.01
      DO 390 J=1,6
      CALL FLWK26(WORK,IUSEW,LEFTW,GENST,501)
  390 CONTINUE
C
  395 CONTINUE
      IF (LOCPTS.EQ.0) GO TO 100
      GO TO (410,510,610), LOCPTS
C
C--------------------------------------------------------------------
C  PARMS EXPECTED, IF NOT FOUND SIGNAL ERROR. IF FOUND, GO GET PARMS
C   NEEDED FOR OPERATION.
C
  400 CONTINUE
      IG(4) = IG(4) + 1
      IF (IG(4).GT.1) CALL STER26(39,1)
      IF (IG(3).GT.0) GO TO 410
          LOCPTS = 1
          USET = .TRUE.
          GO TO 340
C
  410 CONTINUE
C
C  SET POINTER FOR START OF GENERAL PARM INFO AND REFILL POSITION IN
C  WORK ARRAY WITH THIS VALUE.
C
      GPST = IUSEW + 1
      LOCGST = NGOFF + 7
      CALL RFIL26(WORK,LOCGST,GPST)
C
      CALL GPAR26(WORK,IUSEW,LEFTW,NPARG,LOCSTO)
C
C  NOW REFILL THE WORD IN WORK WITH THE NUMBER OF WORDS NEEDED TO STORE
C  THE GENERAL PARM INFO.
C
      GPAR = NPARG + 0.01
      LOCGPL = NGOFF + 8
      CALL RFIL26(WORK,LOCGPL,GPAR)
C
C  SET NO. OF PARMS ENTERED FOR USE IN SPECIFIC REFERBACKS.
C
      NPMENT = NPARG
C
      GO TO 100
C
C-----------------------------------------------------------------------
C  TIME-SERIES INFORMATION EXPECTED NEXT. IF NOT FOUND, SIGNAL ERROR.
C  IF FOUND, CALL ROUTINE TO INPUT ALL REQUIRED AND OPTIONAL TIME-SERIES
C
  500 CONTINUE
      IG(5) = IG(5) + 1
      IF (IG(5).GT.1) CALL STER26(39,1)
      IF (IG(3).GT.0) GO TO 510
          LOCPTS = 2
          USET = .TRUE.
          GO TO 340
C
  510 CONTINUE
C
C  SET POINTER FOR START OF TIME SERIES INFO AND REFILL POSITION IN WORK
C  WITH THIS VALUE
C
      LOCTST = NGOFF + 9
      TSSTRT = IUSEW + 1.01
      CALL RFIL26(WORK,LOCTST,TSSTRT)
C
      CALL GTS26(WORK,IUSEW,LEFTW,NTSG)
C
C  SET THE NUMBER OF WORDS NEEDED TO STORE THE TIME SERIES INFO
C
      GTS = NTSG + 0.01
      LOCGTS = NGOFF + 10
      CALL RFIL26(WORK,LOCGTS,GTS)
      GO TO 100
C
C------------------------------------------------------------------
C  ' CARRYOVER' EXPECTED HERE. IF NOT FOUND, SIGNAL ERROR. IF FOUND
C  CALL ROUTINE TO GET CARRYOVER VALUES FOR THE OPERATION
C
  600 CONTINUE
      IG(6) = IG(6) + 1
C
      IF (IG(4).GT.0) GO TO 605
      WRITE(IPR,606)
  606 FORMAT('0**ERROR** IN GENL26 NO PARMS DEFINED SO CANNOT',
     $ ' PROCESS CARRYOVER. MAY SEE MANY INVALID',
     $ ' KEYWORD ERRORS.')
      CALL ERROR
      OKGENL=.FALSE.
      GO TO 100
C
605   CONTINUE
      IF (IG(6).GT.1) CALL STER26(39,1)
      IF (IG(3).GT.0) GO TO 610
          LOCPTS = 3
          USET = .TRUE.
          GO TO 340
C
  610 CONTINUE
C
C  SET START OF CARRYOVER INFO IN WORK ARRAY
C
      LOCCO = IUSEW + 1
      COLOC = LOCCO + 0.01
      LOCCST = NGOFF + 11
      CALL RFIL26(WORK,LOCCST,COLOC)
C
      LWKCOS = 0
      CALL GCO26(WORK,IUSEW,LEFTW,NCOG,LWKCOS)
C
C  RESET THE NUMBER OF WORDS TO STORE CARRYOVER
C
      LOCCOL = NGOFF + 12
      GCO = NCOG + 0.01
      CALL RFIL26(WORK,LOCCOL,GCO)
C
      GO TO 100
C
C--------------------------------------------------------------
C  SUMMARY
C---------------------------------------------------------------
C  PM,TS AND CO ARE REQUIRED.
C
C
  900 CONTINUE
      DO 910 I =4,6
          IERN = 31 + I
          IF (IG(I).EQ.0) CALL STER26(IERN,1)
  910 CONTINUE
C
C  REFILL WORK ARRAY WITH TITLE
C
      DO 915 I =1,5
          LOCTLE = NGOFF + I
          CALL RFIL26(WORK,LOCTLE,TITLE(I))
  915 CONTINUE
C
C  NOW SET THE STORAGE CONVERSION FACTOR.
C  ALSO, CONVERT THE STORAGE VALUES HELD IN WORK ARRAY AND STORGE IN
C  /COMN26/ TO METRIC TIME INTERVAL MEAN DISCHARGES.
C
      DELTAT = MINODT
      IF (MINODT .GT. 0) CONVT(4) = DELTAT/24.
      IF (IMETEN.EQ.1) GO TO 920
C
      ISTOR = 0
      IF (IMETEN.EQ.0) ISTOR = 1
      CALL CNVT26(UNITC(4),DIM(4),UENG,CONVT(4),CONST,ISTOR,IERC)
C
C  IF ENGLISH STORAGE IS 'ACFT' WE MUST ADJUST THE CONVERSION FACTOR
C  TO THE TIME INTERVAL (I.E. - ACFT TO, SAY, 1/4 SMD OR 1/2 SMD.)
C
      IF (IMETEN.EQ.0) CONVT(4) = CONVT(4)*DELTAT/24.
C
C  NOW CONVERT STORAGES IN WORK ARRAY AND /COMN26/.
C
  920 CONTINUE
      IF (MINODT .LE. 0) CONVT(4) = 1.0
C
C  SET MINODT TO 6 HOURS IF THE MINODT COULD NOT BE DETERMINED.
C  (THIS IS DONE TO PREVENT ERRORS RESULTING FROM A ZERO MINODT)
C
      IF (MINODT .LE. 0) MINODT = 6
C
      IF (.NOT.OKELST) GO TO 1000
      DO 930 I=1,NSE
      WORK(LOCSTO+I-1) = WORK(LOCSTO+I-1)/CONVST
      STORGE(I) = STORGE(I)/CONVST
  930 CONTINUE
C
C  CONVERT THE STORAGE VALUES FROM CO HELD IN WORK ARRAY
C   (ONLY IF CARRYOVER WAS GOTTEN AND ALL WAS OK)
C
      IF (IG(6).GT.0 .AND. LWKCOS.GT.0)
     .  WORK(LWKCOS) = WORK(LWKCOS)/CONVST
C
C-------------------------------------------------------
C  DONE PROCESSING ALL INPUT FOR GENERAL SUBSECTION
C  PRINT ANY ERRORS IF THEY OCCURRED
C
 1000 CONTINUE
      IF (NUMERR.EQ.0.AND.NUMWRN.EQ.0) GO TO 9999
      IF (NUMERR.GT.0) OKGENL = .FALSE.
C
C  POSITION TO START OF GENERAL SECTION INPUT AND PRINT INPUT WITH
C  LINE NUMBERS.
C
      WRITE(IPR,770)
  770 FORMAT(1H1,' *** GENERAL SECTION INPUT FOR THIS OPERATION ',
     .'DEFINITION ***'//)
C
      IGSTRT = LGENL+1
      CALL POSN26(MUNI26,IGSTRT)
C
      NGEN2 = NGENL - 1
      DO 30 I=1,NGEN2
      READ(MUNI26,891) LINE
      WRITE(IPR,892) I,LINE
   30 CONTINUE
C
  891 FORMAT(20A4)
  892 FORMAT(1H ,'(',I3,')',1X,20A4)
      CALL WNOT26
      CALL EROT26
      GO TO 9999
C
C  ERROR FOUND IN READING THE NEXT FIELD, SET ERROR AND GET NEXT CARD
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER26(19,1)
      IF (IERF.EQ.2) CALL STER26(20,1)
      IF (IERF.EQ.3) CALL STER26(21,1)
      IF (IERF.EQ.4) CALL STER26(1,1)
      IF (IERF.NE.3) GO TO 100
      USEDUP = .TRUE.
      GO TO 1000
C
 9999 CONTINUE
      RETURN
      END
