C MODULE PM0426
C
      SUBROUTINE PM0426(WORK,IUSEW,LEFTW,NP04,
     .                  LENDSU,JDEST,IERR)
C---------------------------------------------------------------------
C  SUBROUTINE TO READ AND INTERPRET PARAMETER INPUT FOR S/U #04
C    RULE CURVE
C---------------------------------------------------------------------
C  JTOSTROWSKI - HRL - MARCH 1983
C----------------------------------------------------------------
C
      INCLUDE 'common/comn26'
C
C
      INCLUDE 'common/err26'
C
C
      INCLUDE 'common/fld26'
C
C
      INCLUDE 'common/mult26'
C
C
      INCLUDE 'common/rc26'
C
C
      INCLUDE 'common/read26'
C
C
      INCLUDE 'common/suid26'
C
C
      INCLUDE 'common/suin26'
C
C
      INCLUDE 'common/suky26'
C
C
      INCLUDE 'common/warn26'
C
      DIMENSION INPUT(2,4),LINPUT(4),VALUE(100),IP(4),
     . WORK(1)
      LOGICAL ENDFND,CRVOK,BLOK,ALLOK,QMOK,NEEDTM,TIMEOK
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/pm0426.f,v $
     . $',                                                             '
     .$Id: pm0426.f,v 1.3 1998/07/02 16:54:36 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA INPUT/4HCURV,4HE   ,4HRULE,4HTIME,4HBLEN,4HD   ,
     .           4HQMAX,4H    /
      DATA LINPUT/2,2,2,1/
      DATA NINPUT/4/
      DATA NDINPU/2/
C
      DATA RCCODE/1040.01/
C
C  INITIALIZE LOCAL VARIABLES AND COUNTERS
C
      NP04 = 0
      CRVOK = .FALSE.
c      QMOK = .FALSE.
      QMOK = .TRUE.
      BLOK = .TRUE.
      ALLOK = .TRUE.
      BLEND = 1.01
      NEEDTM = .FALSE.
      TIMEOK = .TRUE.
      RTIME = -999.0
      QMAX = -999.0
      CODERC = RCCODE + SULEVL
C
C  NOW PROCESS INPUT UP TO 'ENDP', LOOKING FOR 'CURVE'(REQUIRED),
C   'BLEND' (OPTIONAL - DEFAULT OF 1), AND 'QMAX' (REQUIRED).
C
C
      DO 3 I = 1,4
           IP(I) = 0
    3 CONTINUE
C
      IERR = 0
C
C  PARMS FOUND, LOOKING FOR ENDP
C
      LPOS = LSPEC + NCARD + 1
      LASTCD = LENDSU
      IBLOCK = 1
C
    5 IF (NCARD .LT. LASTCD) GO TO 8
           CALL STRN26(59,1,SUKYWD(1,7),3)
           IERR = 99
           GO TO 9
    8 NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0 ) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,SUKYWD,LSUKEY,NSUKEY,NDSUKY)
      IF (IDEST.EQ.0) GO TO 5
C
C  IDEST = 7 IS FOR ENDP
C
      IF (IDEST.EQ.7.OR.IDEST.EQ.8) GO TO 9
          CALL STRN26(59,1,SUKYWD(1,7),3)
          JDEST = IDEST
          IERR = 89
    9 LENDP = NCARD
C
C  ENDP CARD OR TS OR CO FOUND AT LENDP,
C  ALSO ERR RECOVERY IF NEITHER ONE OF THEM FOUND.
C
C
      IBLOCK = 2
      CALL POSN26(MUNI26,LPOS)
      NCARD = LPOS - LSPEC -1
C
   10 CONTINUE
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,INPUT,LINPUT,NINPUT,NDINPU)
      IF(IDEST .GT. 0) GO TO 50
      IF(NCARD .GE. LENDP) GO TO 900
C
C  NO VALID KEYWORD FOUND
C
      CALL STER26(1,1)
      ALLOK = .FALSE.
      GO TO 10
C
C  NOW SEND CONTROL TO PROPER LOCATION FOR PROCESSING EXPECTED INPUT
C
   50 CONTINUE
      GO TO (100,200,300,400) , IDEST
C
C-----------------------------------------------------------------------
C  'CURVE' REQUIRED.
C
  100 CONTINUE
      IP(1) = IP(1) + 1
      IF (IP(1).GT.1) CALL STER26(39,1)
C
C  READ FIRST FIELD AFTER 'CURVE'. IF IT'S NUMERIC, GET LIST OF NUMBERS
C   FOR DEFINING CURVE
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE 1ST
C  FIELD AFTER 'CURVE'.
C
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      ICTYPE = ITYPE
      IF (ICTYPE.GT.1) GO TO 160
C
C  REPOSITION TO READ FIRST FIELD AFTER 'CURVE'
C
      NEEDTM = .TRUE.
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC -1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE RULE CURVE
C
      NVAL=100
      CALL GLST26(1,1,X,VALUE,X,NVAL,CRVOK)
      IF (.NOT.CRVOK) GO TO 10
C
C  FOUR CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE CURVE,
C   3) THE DATES MUST BE BETWEEN 1 NAD 366, AND
C   4) THE DATES MUST BE IN ASCENDIONG ORDER.
C
      IF (MOD(NVAL,2).EQ.0) GO TO 120
C
      CALL STER26(40,1)
      GO TO 10
C
  120 CONTINUE
      NHALF = NVAL/2
      NSEC = NHALF + 1
C
C  SEE IF DATES ARE IN ASCENDING ORDER
C
      CALL ASCN26(VALUE,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DATES ARE BETWEEN 1 AND 366
C
      DO 140 I=1,NHALF
      VALUE(I) = VALUE(I)
      IF (1.0.LE.VALUE(I).AND.VALUE(I).LE.366.02) GO TO 140
C
      CALL STER26(64,1)
      GO TO 10
C
  140 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF CURVE WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 155 I=NSEC,NVAL
      VALUE(I) = VALUE(I)/CONVL
  155 CONTINUE
C
      CALL ELST26(VALUE(NSEC),NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
C
C  STORE CODE FOR RULECURVE IN /MULT26/
C
      NMDEF(1) = NMDEF(1) + 1
      DMCODE(NMDEF(1),1) = CODERC
C
      GO TO 195
C
C--------------------------------
C  FIRST FIELD AFTER 'CURVE' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
  160 CONTINUE
      NEEDTM = .FALSE.
      CALL MREF26(1,REFCDE,LOCWK,LOCCDE,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
  195 CONTINUE
      CRVOK = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------
C  'RULETIME' KEYWORD EXPECTED. IF FOUND, GET NEXT FIELD ON CARD
C   IF NOT FOUND, STORE VALUES IN WORK USING DEFAULT
C
  200 CONTINUE
C
      IP(2) = IP(2) + 1
      IF (IP(2).GT.1) CALL STER26(39,1)
      IF (NEEDTM) GO TO 210
C
C  'RULETIME' FOUND BUT NOT NEEDED. (I.E. - A REFERENCE TO 'CURVE' WAS
C   FOUND.)
C
      CALL STRN26(60,1,INPUT(1,2),2)
      GO TO 10
C
C  AN INTEGER VALUE ( OR A NULL FIELD) MUST FOLLOW
C
  210 CONTINUE
C
      TIMEOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 250
C
C  SPECIFICATION MUST BE INTEGER
C
      IF (ITYPE.EQ.0) GO TO 220
      CALL STER26(5,1)
      GO TO 10
C
  220 CONTINUE
C
C  RULETIME MUST BE .GE. ZERO
C
      IF (INTEGR.GE.0) GO TO 230
C
      CALL STER26(95,1)
      GO TO 10
C
C  TIME MUST BE MULTIPLE OF OPERATION TIME INTERVAL.
C
  230 CONTINUE
C$     IF (MOD(INTEGR,MINODT).EQ.0) GO TO 240
C
C$     CALL STER26(47,1)
C$     GO TO 10
C
C$ 240 CONTINUE
      RTIME = INTEGR + 0.01
C
C  EVERYTHING IS OK
C
  250 CONTINUE
      TIMEOK = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------
C  'BLEND' KEYWORD EXPECTED. IF FOUND, GET NEXT FIELD ON CARD
C   IF NOT FOUND, STORE VALUES IN WORK USING DEFAULT
C
  300 CONTINUE
C
      IP(3) = IP(3) + 1
      IF (IP(3).GT.1) CALL STER26(39,1)
C
C  AN INTEGER VALUE ( OR A NULL FIELD) MUST FOLLOW
C
      BLOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 350
C
      IF (ITYPE.EQ.0) GO TO 320
      CALL STER26(5,1)
      GO TO 10
C
  320 CONTINUE
C
C  BLEND MUST BE .GE. ZERO
C
      IF (INTEGR.GE.0) GO TO 330
C
      CALL STER26(95,1)
      GO TO 10
C
  330 CONTINUE
      BLEND = INTEGR + 0.01
C
C  EVERYTHING IS OK
C
  350 CONTINUE
      BLOK = .TRUE.
      GO TO 10
C
C----------------------------------------------------------------
C  'QMAX' FOUND. GET NEXT FIELD. MUST BE REAL VALUE AND .GT. ZERO
C
  400 CONTINUE
      IP(4) = IP(4) + 1
      IF (IP(4).GT.1) CALL STER26(39,1)
C
C  REAL VALUE MUST HAVE BEEN INPUT
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 415
C
      CALL STER26(4,1)
      GO TO 10
C
C  SEE IF VALUE IS POSITIVE
C
  415 CONTINUE
      IF (REAL.GT.0.00) GO TO 420
C
      CALL STER26(61,1)
      GO TO 10
C
C  STORE VALUE FOR LATER TRANSFER
C
  420 CONTINUE
      QMAX = REAL/CONVL3
      QMOK = .TRUE.
      GO TO 10
C
C--------------------------------------------------------------------
C  END OF INPUT. STORE VALUES IN WORK ARRAY IF EVERYTHING WAS ENTERED
C  WITHOUT ERROR.
C
  900 CONTINUE
C
      IF (IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
c      IF (IP(4).EQ.0) CALL STRN26(59,1,INPUT(1,4),LINPUT(4))
C
      IF (CRVOK.AND.TIMEOK.AND.BLOK.AND.QMOK.AND.ALLOK) GO TO 1010
      GO TO 9999
C
C  STORE IN WORK THE NUMBER OF PAIRS OF VALUES, THE CURVE VALUES,
C  THE BLEND VALUE, AND THE MAX DISCHARGE
C
 1010 CONTINUE
C
      IF (ICTYPE.GT.1) GO TO 1030
C
C  CURVE WAS DEFINED IN THIS SCHEME
C
      PAIR = NVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION FOR THIS RULE CURVE DEFINITION
C
      IPOWD(NMDEF(1),1) = NPMENT + NP04 + 1
      IWKWD(NMDEF(1),1) = IUSEW
C
C  STORE CURVE DEFINITION
C
      DO 1020 I=1,NVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,VALUE(I),501)
 1020 CONTINUE
C
C  STORE RULE CURVE TIME
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RTIME,501)
      NVAL = NVAL + 1
      GO TO 1050
C
C  STORE REFERENCE TO PREVIOUS DEFINITION IN WORK
C
 1030 CONTINUE
      CDELOC = - (LOCCDE + 0.01)
      NVAL = 0
      CALL FLWK26(WORK,IUSEW,LEFTW,CDELOC,501)
C
C
 1050 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,BLEND,501)
      CALL FLWK26(WORK,IUSEW,LEFTW,QMAX,501)
C
      NP04 = NVAL + 3
      GO TO 9999
C
C--------------------------------------------------------------
C  ERROR IN UFLD26
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER26(19,1)
      IF (IERF.EQ.2) CALL STER26(20,1)
      IF (IERF.EQ.3) CALL STER26(21,1)
      IF (IERF.EQ.4) CALL STER26( 1,1)
C
      IF (NCARD.GE.LASTCD) GO TO 9100
      IF (IBLOCK.EQ.1)  GO TO 5
      IF (IBLOCK.EQ.2)  GO TO 10
C
 9100 USEDUP = .TRUE.
C
 9999 CONTINUE
      RETURN
      END
