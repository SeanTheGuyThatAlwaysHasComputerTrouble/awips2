C MODULE STOR26
C-----------------------------------------------------------------------
C
C  TRANSFER PARAMETER INFORMAATION FROM A WORK ARRAY INTO THE PO
C  AND CO ARRAYS FOR THE RES-SNGL OPERATION.
C
      SUBROUTINE STOR26 (PO,CO,WORK,VERSNO,OKSTOR)
C
C  STOR26 TRANSFERS PARAMETER INFORMATION INPUT FOR THE RES-SNGL.
C  OPERATION FROM A TEMPORARY ARRAY INTO THE PO AND CO ARRAYS. PARAMETER
C  INPUT FOR THE RESERVOIR OPERATION IS IN A BLOCK STRUCTURE AND, HENCE,
C  THE TEMPORARY WORK ARRAY IS SO STRUCTURED. INFORMATION HAS BEEN PUT
C  INTO THE WORK ARRAY BY THREE PRECEEDING ROUTINES:
C
C   1) GENL26 - GENERAL PARAMETER, TIME-SERIES AND CARRYOVER INFORMATION
C   2) SPEC26 - PARAMETERS, TIME-SERIES AND CRRYOVER INFORMATION FOR THE
C               SCHEMES AND UTILITIES CHOSEN BY THE USER, AND
C   3)  RCL26 - INFORMATION CONCERNING THE RESERVOIR COMMAND LANGUAGE.
C
C  NOTE : THIS SUBROUTINE SHOULD NOT BE ENTERED UNLESS THE THREE INPUT
C         ROUTINES HAVE ENDED NORMALLY AND THERE IS ENOUGH SPACE AVAIL-
C         ABLE IN BOTH THE CO AND PO ARRAYS.
C
C..............................................................
C  ARGUMENT LIST DESCRIPTION
C
C    PO     - PORTION OF THE P ARRAY GIVEN TO THIS OPERATION (IN/OUT)
C    CO     - PORTION OF THE C ARRAY GIVEN TO THIS OPERATION (IN/OUT)
C    WORK   - TEMPORARY WORK ARRAY WHERE ALL INFORMATION WAS STORED
C             IN THE INPUT ROUTINES. (INPUT)
C    VERSNO - VERSION NUMBER OF THIS OOPERATION (INPUT)
C    IBUG   - DEBUG FLAG =1,ON; =0,OFF (INPUT)
C    OKSTOR - LOGICAL FLAG FOR NORAML EXECUTION (OUTPUT)
C
C......................................................................
C
C  DESCRIPTION OF PO ARRAY STRUCTURE IS PRESENTED IN CHAPTER
C  VIII.3.3.RES-SNGL OF THE NWSRFS USER'S MANUAL.
C.......................................................................
C
C  THE WORK ARRAY IS STRUCTURED IN THE FOLLOWING WAY:
C
C   POSITION       VARIABLE       DESCRIPTION
C   --------       --------       -----------
C       1          LOCGEN         POSITION IN WORK ARRAY OF START
C                                 OF GENERAL INFO.
C       2          LOCSPE         POSITION IN WORK ARRAY OF START
C                                 OF S/U INFO.
C       3          LOCRCL         POSITION IN WORK ARRAY OF START
C                                 OF RCL INFO.
C   LOCGEN         LOCPW          POINTER TO START OF PARAMETER
C                                 INFO FOR GENERAL SECTION
C   LOCGEN+1       LOCTSW         POINTER TO START OF TIME-SERIES
C                                 INFO FOR GENERAL SECTION
C   LOCGEN+2       LOCCOW         POINTER TO START OF CARRYOVER
C                                 INFO FOR GENERAL SECTION
C
C.......................................................................
C
C  JTOSTROWSKI - HRL - MARCH 1983
C................................................................
      DIMENSION PO(1),CO(1),WORK(1)
      LOGICAL OKSTOR
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/comn26'
      INCLUDE 'common/rc26'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/stor26.f,v $
     . $',                                                             '
     .$Id: stor26.f,v 1.2 2001/06/13 10:12:47 mgm Exp $
     . $' /
C    ===================================================================
C
C  TRACE WRITTEN HERE
C
      IF (ITRACE.GE.3) WRITE(IODBUG,*) 'ENTER STOR26'
C
C  INITIALIZE LOCAL COUNTERS
C
      OKSTOR = .TRUE.
C
C
C  SET LOCATIONS OF GENL, S/U AND RCL INFO IN THE WORK ARRAY
C  NOTE: S/U STANDS FOR SCHEME/UTILITY INFORMATION
C
      LOCGEN = WORK(1)
      LOCSPE = WORK(2)
      LOCRCL = WORK(3)
C
C  ESTABLISH THE NUMBER OF VALUES FOR:
C
C  NPARG  = NO. OF GENL PARM VALUES
C  NTSG   = NO. OF GENL TS INFO VALUES
C  NCOG   = NO. OF GENL CO INFO VALUES
C  NPARSU = NO. OF S/U PARM VALUES
C  NTSSU  = NO. OF S/U TS INFO VALUES
C  NTSPAC = NO. OF TS IDENTIFIERS (NON-BLANK AND BLANK) STORED
C  NCOSU  = NO. OF S/U CO VALUES
C  NSUIN  = NO. OF S/U'S DEFINED (TOTAL NO.)
C
      NPARG  = WORK(LOCGEN+7)
      NTSG   = WORK(LOCGEN+9)
      NCOG   = WORK(LOCGEN+11)
C
      NPARSU = WORK(LOCSPE+1)
      NTSSU  = WORK(LOCSPE+2)
      NTSPAC = WORK(LOCSPE+3)
      NCOSU  = WORK(LOCSPE+4)
C
      NSUIN  = WORK(LOCSPE)
C.......................................
C  FIRST ELEVEN VALUES OF PO ARRAY CAN BE SET DIRECTLY FROM INFO HELD IN
C  WORK ARRAY
C
C  VERSION NUMBER OF OPERATION
      PO(1) = VERSNO
C
C  OPERATION NAME
      DO 10 I=1,5
   10 PO(I+1) = WORK(LOCGEN+I-1)
C
C  OPERATION TIME INTERVAL
      PO(7) = MINODT + 0.01
C
C  UNITS USED FOR PARAMETER DEFINITION
      PO(8) = WORK(LOCGEN+5)
C
C  POINTER LOCATION IN PO ARRAY
      PO(9) = 20.01
C
C  PARAMETER START LOCATION IN PO ARRAY
      PO(10) = PO(9) + (NSUIN*4+1)
C
C  TIME-SERIES START LOCATION IN PO ARRAY
      PO(11) = PO(10) + (NPARG+NPARSU)
C
C  LOCATION OF START OF RCL STATEMENTS
      PO(12) = PO(11) + (NTSG+NTSSU) + 1
C
C  NUMBER OF CARRYOVER VALUES STORED FOR THIS DEFINITION
      PO(15) = NCOG + NCOSU
C
C.....................................................
C  TRANSFER THE GENERAL PARM, TS AND CO VALUES TO THE PO AND CO ARRAYS
C
C  FIRST, TRANSFER THE GENERAL PARMS TO THE PO ARRAY
C
      LOCPW = WORK(LOCGEN+6)
      LOCPP = PO(10)
      CALL UMEMOV (WORK(LOCPW),PO(LOCPP),NPARG)
C
C  NOW TRANSFER THE GENERAL TIME-SERIES INFO TO THE PO ARRAY
C  THE FIRST WORD HERE INDICATES HOW MANY TIME-SERIES ARE TO BE
C  SCANNED FOR EXISTENCE (BLANK OR VALID ID'S)
C
      LOCTSW = WORK(LOCGEN+8)
      LOCTSP = PO(11)
      PO(LOCTSP) = NTSPAC + 0.01
      LOCTSP = LOCTSP + 1
      CALL UMEMOV(WORK(LOCTSW),PO(LOCTSP),NTSG)
C......................................
C  FINALLY TRANSFER THE CARRYOVER VALUES TO THE CO ARRAY
C
      LOCCOW = WORK(LOCGEN+10)
      LOCCOG = 1.01
      CALL UMEMOV(WORK(LOCCOW),CO(LOCCOG),NCOG)
C.........................................
C  NOW COMPUTE THE NEXT AVAILABLE LOCATIONS IN THE PO AND CO ARRAYS FOR
C  STORING S/U INFORMATION
C
      NEXTP  = LOCPP + NPARG
      NEXTTS = LOCTSP + NTSG
      NEXTCO = LOCCOG + NCOG
C
C..................................................
C  WE'RE NOW FINISHED WITH THE GENERAL INFORMATION FOR THE RESERVOIR
C  OPERATION.
C
C  NOW WE START ON THE S/U INFORMATION
C  LOCSPE = START OF S/U INFO IN THE WORK ARRAY.
C  LOCSUN = LOCATION OF THE S/U CODE NUMBER IN THE WORK ARRAY
C  NSUIN  = TOTAL NO. OF S/U'S DEFINED
C
C
C............................................
C  FIRST STEP IS TO ESTABLISH POINTERS IN THE PO ARRAY
C  AND TO STORE THE PARMS, TS INFO AND CO FOR EACH S/U DEFINED.
C
C...............................................
C  SET THE FIRST AVAILABLE POINTER POSITION
      LOCPTR = PO(9) + 1
C
C  SET THE NUMBER OF S/U'S INPUT IN THE PO ARRAY
      PO(LOCPTR-1) = NSUIN + 0.01
C
C  CHECK IF ANY S/U DEFINED
      IF (NSUIN .EQ. 0) GO TO 400
C
C  LOOP THRU THE S/U PORTION OF THE WORK ARRAY AGAIN TO SET THE
C  POINTERS AND TO STORE THE INFO AT THE PROPER LOCATION.
      LOCSUN = 6
      DO 300 I=1,NSUIN
         NSU = WORK(LOCSPE+LOCSUN-1)
C     DETERMINE THE NUMBER OF PARMS, TS AND CO VALUES
         LOCPSP = WORK(LOCSPE+LOCSUN+1)
         NPAR = WORK(LOCSPE+LOCSUN+2)
         LOCTSP = WORK(LOCSPE+LOCSUN+3)
         NTS  = WORK(LOCSPE+LOCSUN+4)
         LOCCSP = WORK(LOCSPE+LOCSUN+5)
         NCO  = WORK(LOCSPE+LOCSUN+6)
         IF (IBUG.GE.1) WRITE (IODBUG,*) 'IN STOR26 - I=',I,
     *      ' NSU=',NSU,' LOCPSP=',LOCPSP,' NPAR=',NPAR,
     *      ' LOCTSP=',LOCTSP,' NTS=',NTS,' LOCCSP=',LOCCSP,' NCO=',NCO
         NLOCP  = NEXTP
         NLOCTS = NEXTTS
         NLOCCO = NEXTCO
C     SET POINTERS TO ZERO IF NO VALUES EXIST
         IF (NPAR.EQ.0) NLOCP = 0
         IF (NTS.EQ.0)  NLOCTS = 0
         IF (NCO.EQ.0)  NLOCCO = 0
C     STORE POINTERS
         PO(LOCPTR)   = NSU + 0.01
         NDUM=NSU/10
         IF (NDUM .EQ. 154) PO(LOCPTR)=NSU+0.11
         PO(LOCPTR+1) = NLOCP + 0.01
         PO(LOCPTR+2) = NLOCTS + 0.01
         PO(LOCPTR+3) = NLOCCO + 0.01
C     TRANSFER THE VALUES
         IF (NPAR.GT.0) THEN
            IF (IBUG.GE.1) THEN
               WRITE (IODBUG,*) 'IN STOR26 - ',
     *            '(WORK(N),N=LOCPSP,LOCPSP+NPAR)=',
     *             (WORK(N),N=LOCPSP,LOCPSP+NPAR)
               WRITE (IODBUG,*) 'IN STOR26 - NEXTP=',NEXTP
               ENDIF
            CALL UMEMOV (WORK(LOCPSP),PO(NEXTP),NPAR)
            ENDIF
         IF (NTS.GT.0) THEN
            IF (IBUG.GE.1) WRITE (IODBUG,*) 'IN STOR26 - NEXTTS=',NEXTTS
            CALL UMEMOV (WORK(LOCTSP),PO(NEXTTS),NTS)
            ENDIF
         IF (NCO.GT.0) THEN
            IF (IBUG.GE.1) WRITE (IODBUG,*) 'IN STOR26 - NEXTCO=',NEXTCO
            CALL UMEMOV (WORK(LOCCSP),CO(NEXTCO),NCO)
            ENDIF
C     SET NEXT AVAILABLE LOCATIONS TO STORE PARM, TS, AND CO INFO
         NEXTP  = NEXTP + NPAR
         NEXTTS = NEXTTS + NTS
         NEXTCO = NEXTCO + NCO
C     GET LOCATION OF NEXT S/U NUMBER AND NEXT POINTER LOCATION
         LOCSUN = WORK(LOCSPE+LOCSUN) - LOCSPE + 1
         LOCPTR = LOCPTR + 4
  300   CONTINUE
C
C  PROCESS RCL INFORMATION - FIND THE START IN THE WORK ARRAY
400   LOCRCW = LOCRCL
C
C  SET NUMBER OF WORDS TO STORE THE RCL STATEMENTS
      NRCLS = WORK(LOCRCW+2)
      IF (NRCLS.EQ.0) GO TO 500
C
C  STORE ENCODED RCL STATEMENTS
      LOCRCS = WORK(LOCRCW+1)
      LOCRCP = PO(12)
      CALL UMEMOV (WORK(LOCRCS),PO(LOCRCP),NRCLS)
C
C  GET COMPARISON VARIABLE INFORMATION
  500 LOCMPP = LOCRCP + NRCLS
      NCOMP = WORK(LOCRCW+4)
      IF (NCOMP.LE.1) LOCMPP = 0
      PO(13) = LOCMPP + 0.01
C
      IF (NCOMP.LE.1) GO TO 700
C
C  STORE COMPARISON VARIABLE INFO IF ANY HAS BEEN INPU
      LOCMPW = WORK(LOCRCW+3)
      CALL UMEMOV(WORK(LOCMPW),PO(LOCMPP),NCOMP)
C
C  STORE IF GROUP INFORMATION IF ANY HAS BEEN INPUT
700   LOCIFP = LOCRCP + NRCLS + NCOMP
      NIF = WORK(LOCRCW+6)
      IF (NIF.LE.1) LOCIFP = 0
      PO(14) = LOCIFP + 0.01
      IF (NIF.LE.1) GO TO 800
      LOCIFW = WORK(LOCRCW+5)
      CALL UMEMOV(WORK(LOCIFW),PO(LOCIFP),NIF)
C
C  STORE INFO ON RATING CURVES USED IN THE DEFINITION OF THE OPERATION.
C
  800 LOCNRC = 0
      IF (NUMRC .GT. 0) LOCNRC = LOCIFP + NIF
      PO(17) = LOCNRC + 0.01
C
      IF (NUMRC .LE. 0) GO TO 9000
C
C  STORE ALL RATING CURVE ID'S ENTERED IN DEFINITION
C  CURRENTLY RATING CURVES CAN BE USED IN THREE ALLOWABLE SITUATIONS.
C
      PO(LOCNRC) = NUMRC + 0.01
      LOCRC = LOCNRC + 1
      IF (IBUG.GE.1) WRITE(IODBUG,1688) RCID26
 1688 FORMAT(' IDS OF ALL STORED RATING CURVES:' / (2X,2A4,2X,2A4))
      DO 820 I=1,3
         IF (IBUG.GE.1) WRITE(IODBUG,1689) I,NRC26(I)
 1689 FORMAT(' FOR TYPE ',I2,' RC, NO. DEFINED = ',I2)
         IF (NRC26(I) .EQ. 0) GO TO 820
         NRSTO = NRC26(I)
         DO 810 J=1,NRSTO
            JST = (J-1)*2 + 1
            IF (IBUG.GE.1) WRITE( IODBUG,1690) RCID26(JST,I),
     *         RCID26(JST+1,I),LOCRC
 1690 FORMAT(' ID OF RC STORED = ',2A4,' LOC IN PO ARRAY =',I4)
            CALL UMEMOV (RCID26(JST,I),PO(LOCRC),2)
            LOCRC = LOCRC + 2
  810       CONTINUE
  820    CONTINUE
C
9000  IF (IBUG.GE.1) WRITE(IODBUG,1695)
     *   NPARG,NTSG,NCOG,NPARSU,NTSSU,NTSPAC,NCOSU
 1695 FORMAT(1X,'NPARG,NTSG,NCOG,NPARSU,NTSSU,NTSPAC,NCOSU=',7I10)
C
      IF (ITRACE.GE.3) WRITE(IODBUG,*) 'EXIT STOR26'
C
      RETURN
C
      END

