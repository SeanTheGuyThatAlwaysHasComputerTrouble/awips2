C MEMBER PM0926
C  (from old member FCPM0926)
C
      SUBROUTINE PM0926(WORK,IUSEW,LEFTW,NP09,
     .                  LENDSU,JDEST,IERR)
C---------------------------------------------------------------------
C  SUBROUTINE TO READ AND INTERPRET PARAMETER INPUT FOR S/U #09
C   MINIMIZE DISCHARGE SCHEME
C---------------------------------------------------------------------
C  JTOSTROWSKI - HRL - MARCH 1983
C----------------------------------------------------------------
C
      INCLUDE 'common/comn26'
C
C
      INCLUDE 'common/err26'
C
C
      INCLUDE 'common/fld26'
C
C
      INCLUDE 'common/mult26'
C
C
      INCLUDE 'common/rc26'
C
C
      INCLUDE 'common/read26'
C
C
      INCLUDE 'common/suid26'
C
C
      INCLUDE 'common/suin26'
C
C
      INCLUDE 'common/suky26'
C
C
      INCLUDE 'common/warn26'
C
      DIMENSION INPUT(2,21),LINPUT(21),QVAL(100),IP(21),IPREQ(7),OK(21),
     .HVAL(100),RVAL(100),QINC(2),LQINC(2),TTYPE(2,2),LTTYPE(2),WORK(1),
     . QMVAL(100)
      LOGICAL ENDFND,OK,ALLOK,GETQ,GOTLQ,GETRUL
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/pm0926.f,v $
     . $',                                                             '
     .$Id: pm0926.f,v 1.2 1996/07/12 13:18:52 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA INPUT/
     .            4HINCO,4HPT  ,4HHUPP,4HER  ,4HHLOW,4HER  ,
     .            4HTOL ,4H    ,4HELVS,4HQ   ,4HHEAD,4HVSQ ,
     .            4HTWCU,4HRVE ,4HCONV,4H    ,4HNORM,4HQ   ,
     .            4HINTE,4HRP  ,4HREPL,4HQ   ,4HNPER,4HR   ,
     .            4HINCQ,4H    ,4HFLOO,4HDQ  ,4HEVOP,4HT   ,
     .            4HNPER,4HF   ,4HTARG,4HETH ,4HCURV,4HE   ,
     .            4HRULE,4HTIME,4HLOWR,4HLIMQ,4HELVS,4HMAXQ/
      DATA LINPUT/2,2,2,1,2,2,2,1,2,2,2,2,1,2,2,2,2,2,2,2,2/
      DATA NINPUT/21/
      DATA NDINPU/2/
C
      DATA QINC/4HNO  ,4HYES /
      DATA LQINC/1,1/
      DATA NQINC/2/
C
      DATA TTYPE/4HLINE,4HAR  ,4HLOG ,4H    /
      DATA LTTYPE/2,1/
      DATA NTTYPE/2/
C
      DATA IPREQ/1,2,3,12,15,16,17/
C
      DATA RULE/4hRULE/
C
      DATA QMCODE/1090.01/
C
C  INITIALIZE LOCAL VARIABLES AND COUNTERS
C
      NP09 = 0
      OK(1) = .FALSE.
      OK(2) = .FALSE.
      OK(3) = .FALSE.
      OK(4) = .TRUE.
      OK(5) = .TRUE.
      OK(6) = .TRUE.
      OK(7) = .TRUE.
      OK(8) = .TRUE.
      OK(9) = .TRUE.
      OK(10) = .TRUE.
      OK(11) = .TRUE.
      OK(12) = .FALSE.
      OK(13) = .TRUE.
      OK(14) = .TRUE.
      OK(15) = .FALSE.
      OK(16) = .FALSE.
      OK(17) = .FALSE.
      OK(18) = .TRUE.
      OK(19) = .TRUE.
      OK(20) = .TRUE.
      OK(21) = .TRUE.
C
      GOTLQ = .FALSE.
      GETRUL = .FALSE.
      GETQ = .FALSE.
      ALLOK = .TRUE.
C
      TERP = 0.01
      FLOODQ = 0.00
      TOLRNS = 0.02
      CONVG = 0.02
      REPLQ = 2E31
      RTIME = -999.0
C
      NQVAL = 0
      NHVAL = 0
      NTVAL = 0
      NMQVAL = 0
C
      CODEMQ = QMCODE + SULEVL
C
      DO 3 I = 1,NINPUT
           IP(I) = 0
    3 CONTINUE
C
      IERR = 0
C
C  PARMS FOUND, LOOKING FOR ENDP
C
      LPOS = LSPEC + NCARD + 1
      LASTCD = LENDSU
      IBLOCK = 1
C
    5 IF (NCARD .LT. LASTCD) GO TO 8
           CALL STRN26(59,1,SUKYWD(1,7),3)
           IERR = 99
           GO TO 9
    8 NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0 ) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,SUKYWD,LSUKEY,NSUKEY,NDSUKY)
      IF (IDEST.EQ.0) GO TO 5
C
C  IDEST = 7 IS FOR ENDP
C
      IF (IDEST.EQ.7.OR.IDEST.EQ.8) GO TO 9
          CALL STRN26(59,1,SUKYWD(1,7),3)
          JDEST = IDEST
          IERR = 89
    9 LENDP = NCARD
C
C  ENDP CARD OR TS OR CO FOUND AT LENDP,
C  ALSO ERR RECOVERY IF NEITHER ONE OF THEM FOUND.
C
C
      IBLOCK = 2
      CALL POSN26(MUNI26,LPOS)
      NCARD = LPOS - LSPEC -1
C
   10 CONTINUE
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,INPUT,LINPUT,NINPUT,NDINPU)
      IF(IDEST .GT. 0) GO TO 50
      IF(NCARD .GE. LENDP) GO TO 5000
C
C  NO VALID KEYWORD FOUND
C
      CALL STER26(1,1)
      ALLOK = .FALSE.
      GO TO 10
C
C  NOW SEND CONTROL TO PROPER LOCATION FOR PROCESSING EXPECTED INPUT
C
   50 CONTINUE
      GO TO (100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,
     .       1400,1500,1600,1700,1800,1900,2000,2100) , IDEST
C
C---------------------------------------------------------------------
C  'INCOPT' FOUND. IT MUST BE FOLLOWED BY A 1 OR A 2.
C
  100 CONTINUE
      IP(1) = IP(1) + 1
      IF (IP(1).GT.1) CALL STER26(39,1)
C
C  LOOK FOR '1' OR '2'.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD MUST BE INTEGER
C
      IF (ITYPE.EQ.0) GO TO 120
C
      CALL STER26(5,1)
      GO TO 10
C
C  VALUE MUST BE EITHER 1 OR 2.
C
  120 CONTINUE
      IF (INTEGR.EQ.1.OR.INTEGR.EQ.2) GO TO 130
C
      CALL STER26(1,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
  130 CONTINUE
      OK(1) = .TRUE.
      OPTINC = INTEGR + 0.01
      GO TO 10
C
C---------------------------------------------------------------------
C  'HUPPER' FOUND. VALUE SPECIFIED MUST BE WITHIN THE ELEV. VS.
C   STORAGE CURVE.
C
  200 CONTINUE
      IP(2) = IP(2) + 1
      IF (IP(2).GT.1) CALL STER26(39,1)
C
C  NEXT FIELD MUST BE REAL POSITIVE VALUE, ALSO WITHIN ELVSSTOR CURVE.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 220
      CALL STER26(4,1)
      GO TO 10
C
  220 CONTINUE
      IF (REAL.GT.0.00) GO TO 230
      CALL STER26(61,1)
      GO TO 10
C
C  VALUE MUST BE WITHIN THE ELVSSTOR CURVE.
C
  230 CONTINUE
      UPRH = REAL/CONVL
      CALL ELST26(UPRH,1,IERS)
      IF (IERS.GT.0) GO TO 10
C
C EVERYTHING IS OK
C
  290 CONTINUE
      OK(2) = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'HLOWER' FOUND. VALUE MUST BE REAL, POSITIVE, AND WITHIN THE
C   ELEV. VS. STORAGE CURVE.
C
  300 CONTINUE
      IP(3) = IP(3) + 1
      IF (IP(3).GT.1) CALL STER26(39,1)
      IF (IP(2).EQ.0) CALL STRN26(99,1,INPUT(1,2),LINPUT(2))
C
C  LOWER ELEV. SPECIFICATION MUST BE REAL AND POSITIVE AND MUST BE
C  WITHIN THE ELEV. VS. STORAGE CURVE
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 320
      CALL STER26(4,1)
      GO TO 10
C
  320 CONTINUE
      IF (REAL.GT.0.00) GO TO 330
      CALL STER26(61,1)
      GO TO 10
C
C  VALUE MUST BE WITHIN STORAGE CURVE ELEVATION LIMITS
C
  330 CONTINUE
      HLOWR = REAL/CONVL
      CALL ELST26(HLOWR,1,IERC)
      IF (IERC.GT.0) GO TO 10
C
C  LOWER LIMIT MUST BE LESS THAN UPPER LIMIT
C
      IF (.NOT.OK(2)) GO TO 10
      IF (HLOWR.LT.UPRH) GO TO 390
C
      CALL STER26(74,1)
      GO TO 10
C
C  LOWER ELEVATION LIMIT INFORMATION IS OK
C
  390 CONTINUE
      OK(3) = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'TOL' FOUND. IF IT IS NOT FOUND IN THE INPUT STREAM,
C  USE THE DEFAULT (2%).
C
  400 CONTINUE
      IP(4) = IP(4) + 1
      IF (IP(4).GT.1) CALL STER26(39,1)
C
C  GET NEXT FIELD. ALLOWED FIELDS ARE THE NULL FIELD, OR A REAL POSITIVE
C  VALUE BETWEEN 0.01 AND 1.00
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 490
C
C  LOOKING FOR REAL, POSITIVE VALUE BETWEEN 0.01 AND 1.00
C
      IF (ITYPE.EQ.1) GO TO 420
      CALL STER26(4,1)
      GO TO 10
C
  420 CONTINUE
      IF (REAL.GE.0.001.AND.REAL.LE.1.00) GO TO 430
      CALL STER26(68,1)
      GO TO 10
C
C  SAVE THE VALUE AS ALL IS OK WITH 'TOL'
C
  430 CONTINUE
      TOLRNS = REAL
C
  490 CONTINUE
      OK(4) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'ELVSMAXQ' FOUND. IT'S THE ELEVATION VS. MAXIMUM
C   DISCHARGE CURVE. ONLY NEEDED IF THE 'ELVSQ' CURVE WAS NOT ENTERED.
C   ALSO NOT ALLOWED IF ANY COMPONENT FOR BUILDING THE CURVE WAS
C   ENTERED (I.E. - 'HEADVSQ', 'TWCURVE', 'CONV', OR 'NORMQ').
C
C *NOTE* - THIS WAS ADDED AFTER THE ORIGINAL SUBROUTINE WAS
C          WRITTEN, HENCE THE OUT-OF-SEQUENCE NUMBERING.
C          LOGICALLY IT BELONGS HERE AND THE ORDERING AND
C          NUMBERING SHOULD BE REDONE TO AVOID FUTURE CONFUSION.
C
 2100 CONTINUE
      IP(21) = IP(21) + 1
C
      IF (IP(5) .GT. 0) CALL STRN26(97,1,INPUT(1,5),LINPUT(5))
      IF (IP(6) .GT. 0) CALL STRN26(97,1,INPUT(1,6),LINPUT(6))
      IF (IP(7) .GT. 0) CALL STRN26(97,1,INPUT(1,7),LINPUT(7))
      IF (IP(8) .GT. 0) CALL STRN26(97,1,INPUT(1,8),LINPUT(8))
      IF (IP(9) .GT. 0) CALL STRN26(97,1,INPUT(1,9),LINPUT(9))
C
      IF (IP(21).GT.1) CALL STER26(39,1)
C
      OK(21) = .FALSE.
C
C GET LIST OF VALUES FOR DEFINING THE SPILLWAY RATING CURVE
C
      NQMVAL=100
      CALL GLST26(1,1,X,QMVAL,X,NQMVAL,OK(21))
      IF (.NOT.OK(21)) GO TO 10
C
C  FIVE CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE CURVE,
C   3) THE ELEVATIONS MUST BE IN ASCENDING ORDER,
C   4) THE DISCHARGES MUST BE IN ASCENDING ORDER,
C   5) THE DISCHARGES MUST BE POSITIVE.
C
      IF (MOD(NQMVAL,2).EQ.0) GO TO 2120
C
      CALL STER26(40,1)
      GO TO 10
C
 2120 CONTINUE
      NHALF = NQMVAL/2
      NSEC = NHALF + 1
C
C  SEE IF ELEVATIONS ARE IN ASCENDING ORDER
C
      CALL ASCN26(QMVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE IN ASCENDING ORDER
C
      CALL ASCN26(QMVAL(NSEC),NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE ALL POSITIVE
C
      DO 2140 I=NSEC,NQMVAL
      QMVAL(I) = QMVAL(I)/CONVLT
      IF (QMVAL(I).GE.0.00) GO TO 2140
C
      CALL STER26(95,1)
      GO TO 10
C
 2140 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF STORAGE CURVE WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 2155 I=1,NHALF
      QMVAL(I) = QMVAL(I)/CONVL
 2155 CONTINUE
C
      CALL ELST26(QMVAL,NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
 2195 CONTINUE
      OK(21) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'ELVSQ' FOUND. IT'S NEEDED TO DEFINE THE ELEVATION VS. MAXIMUM
C   DISCHARGE CURVE. ONLY ALLOWED IF 'ELVSMAXQ' WAS NOT ENTERED.
C
  500 CONTINUE
      IP(5) = IP(5) + 1
      IF (IP(21) .GT. 0) CALL STRN26(97,1,INPUT(1,21),LINPUT(21))
      IF (IP(5).GT.1) CALL STER26(39,1)
      OK(5) = .FALSE.
C
C  READ FIRST FIELD AFTER 'ELVSQ'. IF IT'S NUMERIC, GET LIST OF NUMBERS
C   FOR DEFINING CURVE
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'ELVSQ'.
C
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IQTYPE = ITYPE
      IF (IQTYPE.GT.1) GO TO 560
C
C  REPOSITION TO READ FIRST FIELD AFTER 'ELVSQ'
C
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC -1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE SPILLWAY RATING CURVE
C
      NQVAL=100
      CALL GLST26(1,1,X,QVAL,X,NQVAL,OK(5))
      IF (.NOT.OK(5)) GO TO 10
C
C  FIVE CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE CURVE,
C   3) THE ELEVATIONS MUST BE IN ASCENDING ORDER,
C   4) THE DISCHARGES MUST BE IN ASCENDING ORDER,
C   5) THE DISCHARGES MUST BE POSITIVE.
C
      IF (MOD(NQVAL,2).EQ.0) GO TO 520
C
      CALL STER26(40,1)
      GO TO 10
C
  520 CONTINUE
      NHALF = NQVAL/2
      NSEC = NHALF + 1
C
C  SEE IF ELEVATIONS ARE IN ASCENDING ORDER
C
      CALL ASCN26(QVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE IN ASCENDING ORDER
C
      CALL ASCN26(QVAL(NSEC),NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE ALL POSITIVE
C
      DO 540 I=NSEC,NQVAL
      QVAL(I) = QVAL(I)/CONVLT
      IF (QVAL(I).GE.0.00) GO TO 540
C
      CALL STER26(95,1)
      GO TO 10
C
  540 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF STORAGE CURVE WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 555 I=1,NHALF
      QVAL(I) = QVAL(I)/CONVL
  555 CONTINUE
C
      CALL ELST26(QVAL,NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
C
C  STORE CODE FOR SPILLWAY RATING IN /MULT26/
C
      NMDEF(2) = NMDEF(2) + 1
      DMCODE(NMDEF(2),2) = CODEMQ
C
      GO TO 595
C
C--------------------------------
C  FIRST FIELD AFTER 'ELVSQ' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
  560 CONTINUE
      CALL MREF26(2,REFCDQ,LOCWK,LOCCDQ,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
  595 CONTINUE
      OK(5) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'HEADVSQ' FOUND . ONLY ALLOWED IF 'NORMQ' AND 'ELVSMAXQ' WERE
C   NOT INPUT.
C
  600 CONTINUE
      IP(6) = IP(6) + 1
      IF (IP(9) .GT. 0) CALL STRN26(97,1,INPUT(1,9),LINPUT(9))
      IF (IP(21) .GT. 0) CALL STRN26(97,1,INPUT(1,21),LINPUT(21))
      IF (IP(6).GT.1) CALL STER26(39,1)
C
C  READ FIRST FIELD AFTER 'HEADVSQ'. IF IT'S NUMERIC, GET LIST OF NUMBER
C   FOR DEFINING CURVE
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'HEADVSQ'.
C
  610 CONTINUE
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IHTYPE = ITYPE
      IF (IHTYPE.GT.1) GO TO 670
C
C  REPOSITION TO READ FIRST FIELD AFTER 'HEADVSQ'
C
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC - 1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE HEAD VS. Q CURVE
C
      NHVAL=100
      CALL GLST26(1,1,X,HVAL,X,NHVAL,OK(6))
      IF (.NOT.OK(6)) GO TO 10
C
C  FIVE CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE HEAD VALUES MUST BE IN ASCENDING ORDER,
C   3) THE DISCHARGES MUST BE IN ASCENDING ORDER,
C   4) THE DISCHARGES AND HEAD VALUES MUST BE POSITIVE.
C
      IF (MOD(NHVAL,2).EQ.0) GO TO 630
C
      CALL STER26(40,1)
      GO TO 10
C
  630 CONTINUE
      NHALF = NHVAL/2
      NSEC = NHALF + 1
C
C  SEE IF HEAD VALUES ARE IN ASCENDING ORDER
C
      CALL ASCN26(HVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE IN ASCENDING ORDER
C
      CALL ASCN26(HVAL(NSEC),NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF ALL VALUES ARE ALL POSITIVE
C
      DO 650 I=1,NHVAL
      CONV = CONVL
      IF (I.GT.NHALF) CONV = CONVLT
      HVAL(I) = HVAL(I)/CONV
      IF (HVAL(I).GT.0.00) GO TO 650
C
      CALL STER26(61,1)
      GO TO 10
C
  650 CONTINUE
C
C  STORE CODE FOR HEAD VS DISCHARGE CURVE IN /MULT26/
C
      NMDEF(3) = NMDEF(3) + 1
      DMCODE(NMDEF(3),3) = CODEMQ
C
      GO TO 695
C
C--------------------------------
C  FIRST FIELD AFTER 'HEADVSQ' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
  670 CONTINUE
      CALL MREF26(3,REFCDH,LOCWK,LOCCDH,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
  695 CONTINUE
      OK(6) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'TWCURVE' FOUND . ONLY ALLOWED IF 'NORMQ' AND 'ELVSMAXQ' WERE
C   NOT ENTERED.
C
  700 CONTINUE
      IP(7) = IP(7) + 1
      IF (IP(9) .GT. 0) CALL STRN26(97,1,INPUT(1,9),LINPUT(9))
      IF (IP(21) .GT. 0) CALL STRN26(97,1,INPUT(1,21),LINPUT(21))
      IF (IP(7).GT.1) CALL STER26(39,1)
C
C  LOOK FOR RATING CURVE NAME
C
  710 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  SEE IF RATING CURVE HAS BEEN DEFINED WITHIN THE FORECAST SEGMENT
C
      CALL CHEKRC(CHAR,IERR)
      IF (IERR.GT.0) GO TO 10
C
C  SEE IF WE'VE ALREADY DEFINED A TAIL WATER RATING CURVE
C
      CALL CKRC26(1,CHAR,IERR)
      IF (IERR.GT.0) GO TO 10
C
C  CURVE IS REFERRED TO PROPERLY.
C
  795 CONTINUE
      OK(7) = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'CONV' FOUND. IF IT IS NOT FOUND IN THE INPUT STREAM,
C  USE THE DEFAULT (2%). ONLY ALLOWED IF 'NORMQ' AND 'ELVSMAXQ' WERE
C   NOT ENTERED.
C
  800 CONTINUE
      IP(8) = IP(8) + 1
      IF (IP(9) .GT. 0) CALL STRN26(97,1,INPUT(1,9),LINPUT(9))
      IF (IP(21) .GT. 0) CALL STRN26(97,1,INPUT(1,21),LINPUT(21))
      IF (IP(8).GT.1) CALL STER26(39,1)
C
C  GET NEXT FIELD. ALLOWED FIELDS ARE THE NULL FIELD, OR A REAL POSITIVE
C  VALUE BETWEEN 0.01 AND 1.00
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 890
C
C  LOOKING FOR REAL, POSITIVE VALUE BETWEEN 0.01 AND 1.00
C
      IF (ITYPE.EQ.1) GO TO 820
      CALL STER26(4,1)
      GO TO 10
C
  820 CONTINUE
      IF (REAL.GE.0.01.AND.REAL.LE.1.00) GO TO 830
      CALL STER26(68,1)
      GO TO 10
C
C  SAVE THE VALUE AS ALL IS OK WITH 'CONV'
C
  830 CONTINUE
      CONVG = REAL
C
  890 CONTINUE
      OK(8) = .TRUE.
      GO TO 10
C----------------------------------------------------------------------
C  'NORMQ' FOUND. ONLY ALLOWED IF NEITHER 'ELVSMAXQ' NOR 'HEADVSQ'
C   FOUND. IF NEEDED, GET A REAL POSITIVE VALUE.
C
  900 CONTINUE
      OK(9) = .FALSE.
      IP(9) = IP(9) + 1
      IF (IP(6).GT.0) CALL STRN26(97,1,INPUT(1,6),LINPUT(6))
      IF (IP(7).GT.0) CALL STRN26(97,1,INPUT(1,7),LINPUT(7))
      IF (IP(21) .GT. 0) CALL STRN26(97,1,INPUT(1,21),LINPUT(21))
      IF (IP(9).GT.1) CALL STER26(39,1)
C
C  READ NEXT FIELD ON CARD TO GET CONSTANT Q VALUE
C
  910 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD MUST BE REAL AND POSITIVE
C
      IF (ITYPE.LE.1) GO TO 920
C
      CALL STER26(4,1)
      GO TO 10
C
  920 CONTINUE
      IF (REAL.GE.0.0) GO TO 930
C
      CALL STER26(95,1)
      GO TO 10
C
C  CONSTANT Q IS OK. CONVERT IT TO METRIC VALUE
C
  930 CONTINUE
      QNORM = REAL/CONVLT
      OK(9) = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'INTERP' EXPECTED NEXT. IF NOT ENTERED USE DEFAULT.
C
 1000 CONTINUE
      IP(10) = IP(10) + 1
      IF (IP(10).GT.1) CALL STER26(39,1)
C
C  ALLOWED FIELDS AFTER 'INTERP' ARE A NULL FIELD, 'LINEAR' OR 'LOG'
C
 1010 CONTINUE
      OK(10) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 1090
C
      NUMWD = (LEN-1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,TTYPE,LTTYPE,NTTYPE,2)
      IF (IDEST.GT.0) GO TO 1020
      CALL STER26(1,1)
      GO TO 10
C
C  SET INTERPOLATION TYPE
C
 1020 CONTINUE
      TERP = IDEST - 1 + 0.01
C
C  EVERYTHING FOR INTERP IS OK
C
 1090 CONTINUE
      OK(10) = .TRUE.
      GO TO 10
C
C---------------------------------------------------------------------
C  'REPLQ' FOUND. USE DEFAULT OF MACHINE MAX IF NOT ENTERED.
C
 1100 CONTINUE
      IP(11) = IP(11) + 1
      IF (IP(11).GT.1) CALL STER26(39,1)
C
C  NEXT FIELD MUST BE REAL POSITIVE VALUE, CONVERTED TO METRIC.
C
 1110 CONTINUE
      OK(11) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 1120
      CALL STER26(4,1)
      GO TO 10
C
 1120 CONTINUE
      IF (REAL.GT.0.00) GO TO 1130
      CALL STER26(61,1)
      GO TO 10
C
C EVERYTHING IS OK
C
 1130 CONTINUE
      OK(11) = .TRUE.
      REPLQ = REAL/CONVLT
      GO TO 10
C
C------------------------------------------------------------------
C  'NPERR' FOUND. THE NUMBER OF PERIODS MUST BE A POSITIVE INTEGER.
C
 1200 CONTINUE
      IP(12) = IP(12) + 1
      IF (IP(12).GT.1) CALL STER26(39,1)
C
C  VALUE MUST BE A POSITIVE INTEGER.
C
 1210 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.EQ.0) GO TO 1220
      CALL STER26(5,1)
      GO TO 10
C
 1220 CONTINUE
      IF (INTEGR.GT.0) GO TO 1230
      CALL STER26(61,1)
      GO TO 10
C
C  PERIOD INFORMATION IS OK
C
 1230 CONTINUE
      PRISE = INTEGR + 0.01
      OK(12) = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'INCQ' FOUND. IF NOT ENTERED, USE DEFAULT OF 'NO' (0).
C
 1300 CONTINUE
      IP(13) = IP(13) + 1
      IF (IP(13).GT.1) CALL STER26(39,1)
C
C  ONLY VALUES ALLOWED ON LINE ARE 'YES' OR 'NO'.
C
 1310 CONTINUE
      OK(13) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  LOOK FOR 'NO'(0) OR 'YES'(1)
C
      IDEST = IKEY26(CHAR,1,QINC,LQINC,NQINC,1)
      IF (IDEST.GT.0) GO TO 1390
C
      CALL STER26(1,1)
      GO TO 10
C
C  INCREASE-TO-FLOOD OPTION IS OK.
C
 1390 CONTINUE
      QINOPT = 0.01
      IF (IDEST .EQ. 1) GO TO 1391
      QINOPT = 1.01
      GETQ = .TRUE.
 1391 CONTINUE
      OK(13) = .TRUE.
      GO TO 10
C
C----------------------------------------------------------------------
C  'FLOODQ' FOUND. ONLY NEEDED IF WE'RE USING THE INCREASE FLOW TO
C   FLOOD DISCHARGE OPTION (SPECIFIED BY 'INCQ')
C
 1400 CONTINUE
      OK(14) = .FALSE.
      IP(14) = IP(14) + 1
      IF (IP(14).GT.1) CALL STER26(39,1)
      IF (GETQ) GO TO 1420
            CALL STRN26(60,1,INPUT(1,14),LINPUT(14))
C
 1420 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  VALUE MUST BE REAL AND POSITIVE.
C
      IF (ITYPE.LE.1) GO TO 1430
C
      CALL STER26(4,1)
      GO TO 10
C
 1430 CONTINUE
      IF (REAL.GE.0.0) GO TO 1440
C
      CALL STER26(95,1)
      GO TO 10
C
C  FLOODQ IS OK. CONVERT IT TO METRIC VALUE
C
 1440 CONTINUE
      FLOODQ = REAL/CONVLT
      GO TO 1490
C
C  ALL IS OK WITH 'FLOODQ'
C
 1490 CONTINUE
      OK(14) = .TRUE.
      GO TO 10
C
C---------------------------------------------------------------------
C  'EVOPT' FOUND. IT MUST BE FOLLOWED BY A 1 OR A 2.
C
 1500 CONTINUE
      IP(15) = IP(15) + 1
      IF (IP(15).GT.1) CALL STER26(39,1)
C
C  LOOK FOR '1' OR '2'.
C
 1510 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD MUST BE INTEGER
C
      IF (ITYPE.EQ.0) GO TO 1520
C
      CALL STER26(5,1)
      GO TO 10
C
C  VALUE MUST BE EITHER 1 OR 2.
C
 1520 CONTINUE
      IF (INTEGR.EQ.1.OR.INTEGR.EQ.2) GO TO 1530
C
      CALL STER26(1,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1530 CONTINUE
      OK(15) = .TRUE.
      OPTEV = INTEGR + 0.01
      NEVOP = INTEGR
      GO TO 10
C
C------------------------------------------------------------------
C  'NPERF' FOUND. THE NUMBER OF PERIODS MUST BE A POSITIVE INTEGER.
C
 1600 CONTINUE
      IP(16) = IP(16) + 1
      IF (IP(16).GT.1) CALL STER26(39,1)
C
C  VALUE MUST BE A POSITIVE INTEGER.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.EQ.0) GO TO 1620
      CALL STER26(5,1)
      GO TO 10
C
 1620 CONTINUE
      IF (INTEGR.GT.0) GO TO 1630
      CALL STER26(61,1)
      GO TO 10
C
C  PERIOD INFORMATION IS OK
C
 1630 CONTINUE
      PFALL = INTEGR + 0.01
      OK(16) = .TRUE.
      GO TO 10
C
C---------------------------------------------------------------------
C  'HTARGET' FOUND. VALUE SPECIFIED MUST BE WITHIN THE ELEV. VS.
C   STORAGE CURVE, OR IT MUST BE 'RULE' FOR THE RULE CURVE VALUE.
C
 1700 CONTINUE
      IP(17) = IP(17) + 1
      IF (IP(17).GT.1) CALL STER26(39,1)
C
C  NEXT FIELD MUST BE REAL POSITIVE VALUE, ALSO WITHIN ELVSSTOR CURVE.
C  OR 'RULE'
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  IF FIELD IS CHARACTER, LOOK FOR THE WORD 'RULE'.
C
      IF (ITYPE.GT.1) GO TO 1750
C
 1720 CONTINUE
      IF (REAL.GT.0.00) GO TO 1730
      CALL STER26(61,1)
      GO TO 10
C
C  VALUE MUST BE WITHIN THE ELVSSTOR CURVE.
C
 1730 CONTINUE
      TARGET = REAL/CONVL
      CALL ELST26(TARGET,1,IERS)
      IF (IERS.EQ.0) GO TO 1790
      GO TO 10
C
C  CHARACTER FIELD FOUND. IT MUST BE 'RULE'
C
 1750 CONTINUE
C
       IF (IUSAME(CHAR,RULE,1).EQ.1) GO TO 1760
C
       CALL STRN26(59,1,RULE,1)
       GO TO 10
C
C  STORE ELEVATION AS -999.0 TO INDICATE RULE CURVE ELEVATION USAGE.
C
 1760 CONTINUE
      TARGET = -999.0
      GETRUL = .TRUE.
C
C EVERYTHING IS OK
C
 1790 CONTINUE
      OK(17) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'CURVE' FOUND. ONLY NEEDED IF 'HTARGET' IS SPECIFIED AS
C   THE RULE CURVE ELEVATION.
C
 1800 CONTINUE
      IP(18) = IP(18) + 1
      IF (IP(18).GT.1) CALL STER26(39,1)
      IF (GETRUL) GO TO 1820
           IF (IP(17).EQ.0) CALL STRN26(99,1,INPUT(1,17),LINPUT(17))
           IF (IP(17).GT.0) CALL STRN26(99,1,RULE,1)
           OK(18) = .FALSE.
           GO TO 10
C
C  READ FIRST FIELD AFTER 'CURVE'. IF IT'S NUMERIC, GET LIST OF NUMBERS
C   FOR DEFINING RULECURVE.
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'CURVE'.
C
C  IF THE CURVE IS NEEDED AND NOT FOUND, CALL IT AN ERROR.
C
 1820 CONTINUE
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      ICTYPE = ITYPE
      IF (ICTYPE.GT.1) GO TO 1860
C
C  REPOSITION TO READ FIRST FIELD AFTER 'CURVE'
C
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC - 1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE RULE CURVE.
C
      NRVAL=100
      CALL GLST26(1,1,X,RVAL,X,NRVAL,OK(18))
      IF (.NOT.OK(18)) GO TO 10
C
C  FOUR CHECKS MUST BE MADE ON THE RULECURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF RVALS ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE CURVE,
C   3) THE DATES MUST BE BETWEEN 1 AND 366, AND
C   4) THE DATES MUST BE IN ASCENDIONG ORDER.
C
      IF (MOD(NRVAL,2).EQ.0) GO TO 1830
C
      CALL STER26(40,1)
      GO TO 10
C
 1830 CONTINUE
      NHALF = NRVAL/2
      NSEC = NHALF + 1
C
C  SEE IF DATES ARE IN ASCENDING ORDER
C
      CALL ASCN26(RVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DATES ARE BETWEEN 1 AND 366
C
      DO 1840 I=1,NHALF
      IF (1.0.LE.RVAL(I).AND.RVAL(I).LE.366.02) GO TO 1840
C
      CALL STER26(64,1)
      GO TO 10
C
 1840 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF RULECURVE WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 1855 I=NSEC,NRVAL
      RVAL(I) = RVAL(I)/CONVL
 1855 CONTINUE
C
      CALL ELST26(RVAL(NSEC),NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
C
C  STORE CODE FOR RULE CURVE IN /MULT26/
C
      NMDEF(1) = NMDEF(1) + 1
      DMCODE(NMDEF(1),1) = CODEMQ
C
      GO TO 1895
C
C--------------------------------
C  FIRST FIELD AFTER 'CURVE' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
 1860 CONTINUE
      CALL MREF26(1,REFCDE,LOCWK,LOCCDE,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
 1895 CONTINUE
      OK(18) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------
C  'RULETIME' FOUND. ONLY ALLOWED IF 'CURVE' ENTERED AND DEFINED HERE.
C   IF NOT FOUND, STORE VALUES IN WORK USING DEFAULT
C
 1900 CONTINUE
C
      IP(19) = IP(19) + 1
      IF (IP(19).GT.1) CALL STER26(39,1)
      IF (GETRUL) GO TO 1910
C
C  'RULETIME' FOUND BUT NOT NEEDED. (I.E. - A REFERENCE TO 'CURVE' WAS
C   FOUND.)
C
      CALL STRN26(60,1,INPUT(1,19),2)
      GO TO 10
C
C  AN INTEGER VALUE ( OR A NULL FIELD) MUST FOLLOW
C
 1910 CONTINUE
C
      OK(19) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 1950
C
C  SPECIFICATION MUST BE INTEGER
C
      IF (ITYPE.EQ.0) GO TO 1920
      CALL STER26(5,1)
      GO TO 10
C
 1920 CONTINUE
C
C  RULETIME MUST BE .GE. ZERO
C
      IF (INTEGR.GE.0) GO TO 1930
C
      CALL STER26(95,1)
      GO TO 10
C
C  TIME MUST BE MULTIPLE OF OPERATION TIME INTERVAL.
C
 1930 CONTINUE
C$     IF (MOD(INTEGR,MINODT).EQ.0) GO TO 1940
C
C$     CALL STER26(47,1)
C$     GO TO 10
C
C$ 1940 CONTINUE
      RTIME = INTEGR + 0.01
C
C  EVERYTHING IS OK
C
 1950 CONTINUE
      OK(19) = .TRUE.
      GO TO 10
C
C----------------------------------------------------------------------
C  'LOWRLIMQ' FOUND. IT IS ONLY NEEDED IF EITHER 'INCQ' IS ON,
C   (VALUE IS 2), OR EVOPT = 2.
C
 2000 CONTINUE
      IP(20) = IP(20) + 1
      IF (IP(20).GT.1) CALL STER26(39,1)
      IF (GETQ.OR.NEVOP.EQ.2) GO TO 2020
           CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           OK(20) = .FALSE.
C
 2020 CONTINUE
      OK(20) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  VALUE MUST BE REAL AND POSITIVE, AND LESS THAN FLOODQ IF USED WITH
C  'INCQ' = YES.
C
      IF (ITYPE.LE.1) GO TO 2030
C
      CALL STER26(4,1)
      GO TO 10
C
 2030 CONTINUE
      IF (REAL.GE.0.0) GO TO 2040
C
      CALL STER26(61,1)
      GO TO 10
C
C  LOWRLIMQ IS OK. CONVERT IT TO METRIC VALUE
C
 2040 CONTINUE
      QLOWER = REAL/CONVLT
C
C  LAST CHECK. QLOWER MUST BE LESS THAN FLOODQ. (ONLY IF 'INCQ' = YES)
C
      IF (.NOT.GETQ) GO TO 2090
      IF (.NOT.OK(14)) GO TO 10
      IF (QLOWER.LT.FLOODQ) GO TO 2090
C
      CALL STER26(74,1)
      GO TO 10
C
C  ALL IS OK WITH 'LOWRLIMQ'
C
 2090 CONTINUE
      OK(20) = .TRUE.
      GOTLQ = .TRUE.
      GO TO 10
C
C--------------------------------------------------------------------
C  END OF INPUT. STORE VALUES IN WORK ARRAY IF EVERYTHING WAS ENTERED
C  WITHOUT ERROR.
C
 5000 CONTINUE
C
      DO 5005 I = 1,7
            NIP = IPREQ(I)
            IF (IP(NIP).EQ.0)
     .      CALL STRN26(59,1,INPUT(1,NIP),LINPUT(NIP))
 5005 CONTINUE
C
      IF (GETQ.AND.IP(14).EQ.0) CALL STRN26(59,1,INPUT(1,14),LINPUT(14))
      IF (GETRUL.AND.IP(18).EQ.0)
     .    CALL STRN26(59,1,INPUT(1,18),LINPUT(18))
      IF ((GETQ.OR.NEVOP.EQ.2).AND.IP(20).EQ.0)
     .    CALL STRN26(59,1,INPUT(1,20),LINPUT(20))
C
      DO 5007 I=1,NINPUT
      IF (.NOT.OK(I)) GO TO 9999
 5007 CONTINUE
      IF (ALLOK) GO TO 5010
C--------------------------------------------------------
C  STORE INCREASING OUTFLOW OPTION
C
 5010 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,OPTINC,501)
      NP09 = NP09 + 1
C
C----------------------------
C  STORE UPPER LIMITING ELEVATION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,UPRH,501)
      NP09 = NP09 + 1
C
C------------------------------
C  STORE LOWER LIMITING ELEVATION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,HLOWR,501)
      NP09 = NP09 + 1
C
C------------------------------
C  STORE CONVERGENCE CRITERION FOR COMPUTING THE MINIMUM FLOW
C
      CALL FLWK26(WORK,IUSEW,LEFTW,TOLRNS,501)
      NP09 = NP09 + 1
C
C-------------------------------------------
C  STORE INFORMATION ABOUT MAXIMUM DISCHARGE CURVE.
C  AT LEAST AN 'ELVSMAXQ' OR 'ELVSQ' CURVE MUST HAVE BEEN ENTERED.
C
      IF (IP(5).EQ.1 .OR. IP(21).EQ.1) GO TO 5020
C
      CALL STER26(98,1)
      GO TO 9999
C
C  CHECK THE COMBINATION ENTERED.
C
 5020 CONTINUE
      IF (IP(21) .EQ. 0) GO TO 5030
C
C  'ELVSMAXQ' ENTERED. STORE CODE (-1) INDICATING THIS AND STORE
C   CURVE.
C
      OPT = -1.01
      CALL FLWK26(WORK,IUSEW,LEFTW,OPT,501)
C
C  STORE CURVE (FIRST STORE NO. OF PAIRS OF VALUES IN CURVE).
C
      PAIRS = NQMVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIRS,501)
C
      DO 5025 I=1,NQMVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,QMVAL(I),501)
 5025 CONTINUE
      NP09 = NP09 + NQMVAL + 2
      GO TO 5400
C
C  IF CONSTANT Q WAS SPECIFIED, STORE A ZERO INDICATING THIS, THE VALUE
C  OF THE CONSTANT Q, AND EITHER THE SPILLWAY RATING OR THE REFERENCE TO
C  IT (THIS DEPENDS ON THE VALUE OF IQTYPE).
C
 5030 CONTINUE
      IF (IP(9).EQ.0) GO TO 5100
C
C  OPTION FOR 'NORMQ' IS 0
C
 5040 OPT = 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,OPT,501)
      CALL FLWK26(WORK,IUSEW,LEFTW,QNORM,501)
C
C  IF REFERENCE WAS MADE TO SPILLWAY RATING CURVE, STORE THE NEGATIVE
C  LOCATION. IF IT WAS DEFINED HERE STORE THE CURVE.
C
      IF (IQTYPE.GT.1) GO TO 5050
C
      PAIR = NQVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION OF THE DEFINITION OF THIS CURVE
C
      IPOWD(NMDEF(2),2) = NPMENT + NP09 + 3
      IWKWD(NMDEF(2),2) = IUSEW
C
C  STORE DEFINITION OF CURVE
C
      DO 5045 I=1,NQVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,QVAL(I),501)
 5045 CONTINUE
      NP09 = NP09 + NQVAL + 3
      GO TO 5400
C
C  STORE REFERENCE TO CURVE IN WORK ARRAY
C
 5050 CONTINUE
      CDQLOC = - (LOCCDQ+0.01)
      CALL FLWK26(WORK,IUSEW,LEFTW,CDQLOC,501)
      NP09 = NP09 + 3
      GO TO 5400
C
C-----------------------------
C  THE COMPONENTS OF THE ELEVATION VS. Q CURVE WERE ENTERED
C  STORE IN ORDER OF SPILLWAY CURVE, HEAD VS. Q CURVE,
C  TAILWATER VS. DISCHARGE CURVE, AND CONVERGENCE CRITERION.
C
 5100 CONTINUE
      IF (IP(5).EQ.1.AND.IP(6).EQ.1.AND.IP(7).EQ.1) GO TO 5110
      CALL STER26(98,1)
      GO TO 9999
C
C  STORE OPTION OF 1.0 IN WORK ARRAY
C
 5110 OPT = 1.01
      CALL FLWK26(WORK,IUSEW,LEFTW,OPT,501)
      NP09 = NP09 + 1
C
C  FOR ALL THREE CURVES, STORE VALUES IF DEFINED HERE, OR STORE
C  NEGATIVE LOCATION OF DEFINITION IF REFERENCED HERE.
C
C--------------------------------------------------
C  STORE THE SPILLWAY RATING CURVE
C
C  IF REFERENCE WAS MADE TO SPILLWAY RATING CURVE, STORE THE NEGATIVE
C  LOCATION. IF IT WAS DEFINED HERE STORE THE CURVE.
C
      IF (IQTYPE.GT.1) GO TO 5130
C
      PAIR = NQVAL/2 + 0.01
CCC ** EV CHANGE ** CHECK THAT NUMBER OF SPILLWAY PTS LE 2*NSE
      IF (NQVAL/4.GT.NSE) CALL STER26(121,1)
      IF (NQVAL/4.GT.NSE) GO TO 9999
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION OF THE DEFINITION OF THIS CURVE
C
      IPOWD(NMDEF(2),2) = NPMENT + NP09 + 1
      IWKWD(NMDEF(2),2) = IUSEW
C
C  STORE DEFINITION OF CURVE
C
      DO 5115 I=1,NQVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,QVAL(I),501)
 5115 CONTINUE
      NP09 = NP09 + NQVAL + 1
      GO TO 5200
C
C  STORE REFERENCE TO CURVE IN WORK ARRAY
C
 5130 CONTINUE
      CDQLOC = - (LOCCDQ+0.01)
      CALL FLWK26(WORK,IUSEW,LEFTW,CDQLOC,501)
      NP09 = NP09 + 1
C------------------------------------------------------------------
C  STORE INFORMATION FOR HEAD VS. DISCHARGE CURVE
C
 5200 CONTINUE
C
C  IF THE CURVE WAS REFERENCED TO ANOTHER S/U, JUST STORE THAT REFERENCE
C  LOCATION.
C
      IF (IHTYPE.GT.1) GO TO 5230
C
C  STORE DEFINITION OF THE HEAD VS. Q CURVE
C
      PAIR = NHVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION FOR THIS CURVE DEFINITION
C
      IPOWD(NMDEF(3),3) = NPMENT + NP09 + 1
      IWKWD(NMDEF(3),3) = IUSEW
C
C  STORE CURVE
C
      DO 5220 I=1,NHVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,HVAL(I),501)
 5220 CONTINUE
      NP09 = NP09 + NHVAL + 1
      GO TO 5300
C
C  STORE REFERENCE TO CURVE IN WORK ARRAY
C
 5230 CONTINUE
      CDHLOC = - (LOCCDH+0.01)
      CALL FLWK26(WORK,IUSEW,LEFTW,CDHLOC,501)
      NP09 = NP09 + 1
      GO TO 5300
C
C------------------------------------------------------------
C  STORE TAILWATER RATING CURVE NAME.
C
 5300 CONTINUE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RCID26(1,1),501)
      CALL FLWK26(WORK,IUSEW,LEFTW,RCID26(2,1),501)
      NP09 = NP09 + 2
C---------------------------------------
C  STORE CONVERGENCE CRITERION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CONVG,501)
      NP09 = NP09 + 1
C--------------------------------
C  STORE INTERPOLATION TYPE
C
 5400 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,TERP,501)
      NP09 = NP09 + 1
C-----------------------------------
C  STORE PEAK REPOSITIONING VALUE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,REPLQ,501)
      NP09 = NP09 + 1
C
C------------------------------------
C  STORE NUMBER OF PERIODS OVER WHICH TO INCREASE OUTFLOW
C
      CALL FLWK26(WORK,IUSEW,LEFTW,PRISE,501)
      NP09 = NP09 + 1
C-----------------------------------
C  STORE OPTION FOR INCREASING OUTFLOW TO FLOOD DISCHARGE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,QINOPT,501)
      NP09 = NP09 + 1
C------------------------------------
C  STORE FLOOD DISCHARGE IF INC. Q OPTION IS 2.
C
      IF (.NOT.GETQ) GO TO 5440
      CALL FLWK26(WORK,IUSEW,LEFTW,FLOODQ,501)
      NP09 = NP09 + 1
C---------------------------------------
C  STORE EVACUATION OPTION
C
 5440 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,OPTEV,501)
      NP09 = NP09 + 1
C------------------------------------------
C  STORE NUMBER OF PERIODS OVER WHICH TO DECREASE OUTFLOW
C
      CALL FLWK26(WORK,IUSEW,LEFTW,PFALL,501)
      NP09 = NP09 + 1
C---------------------------------------------
C  STORE TARGET ELEVATION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,TARGET,501)
      NP09 = NP09 + 1
C
C---------------------------------------------
C  IF RULE CURVE WAS DEFINED IN THIS ROUTINE, STORE THE ENTIRE CURVE,
C  OTHERWISE JUST STORE THE NEGATIVE LOCATION IN THE WORK ARRAY
C
      IF (GETRUL) GO TO 5445
C
C  STORE ZERO TO INDICATE NO RULE CURVE USED.
C
      CALL FLWK26(WORK,IUSEW,LEFTW,0.01,501)
      NP09 = NP09 + 1
      GO TO 5500
C
 5445 CONTINUE
      IF (ICTYPE.GT.1) GO TO 5460
C
C  CURVE WAS DEFINED IN THIS SCHEME
C
      PAIR = NRVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION FOR THIS RULE CURVE DEFINITION
C
      IPOWD(NMDEF(1),1) = NPMENT + NP09 + 1
      IWKWD(NMDEF(1),1) = IUSEW
C
C  STORE CURVE DEFINITION
C
      DO 5450 I=1,NRVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,RVAL(I),501)
 5450 CONTINUE
C
C  STORE RULETIME HERE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RTIME,501)
      NP09 = NP09 + 1
      GO TO 5470
C
C  STORE REFERENCE TO PREVIOUS DEFINITION IN WORK
C
 5460 CONTINUE
      CDELOC = - (LOCCDE+0.01)
      NRVAL = 0
      CALL FLWK26(WORK,IUSEW,LEFTW,CDELOC,501)
C
 5470 CONTINUE
      NP09 = NP09 + NRVAL + 1
C------------------------------------
C  STORE LOWER LIMITING DISCHARGE IF 'INCQ' = 2, OR 'EVOPT' = 2
C
 5500 CONTINUE
      IF (.NOT.GETQ.AND.NEVOP.NE.2) GO TO 9999
C
      CALL FLWK26(WORK,IUSEW,LEFTW,QLOWER,501)
      NP09 = NP09 + 1
      GO TO 9999
C
C--------------------------------------------------------------
C  ERROR IN UFLD26
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER26(19,1)
      IF (IERF.EQ.2) CALL STER26(20,1)
      IF (IERF.EQ.3) CALL STER26(21,1)
      IF (IERF.EQ.4) CALL STER26( 1,1)
C
      IF (NCARD.GE.LASTCD) GO TO 9100
      IF (IBLOCK.EQ.1)  GO TO 5
      IF (IBLOCK.EQ.2)  GO TO 10
C
 9100 USEDUP = .TRUE.
C
 9999 CONTINUE
      RETURN
      END
