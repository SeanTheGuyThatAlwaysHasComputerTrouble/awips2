C MODULE PM1126
C
      SUBROUTINE PM1126(WORK,IUSEW,LEFTW,NP11,
     .                  LENDSU,JDEST,IERR)
C---------------------------------------------------------------------
C  SUBROUTINE TO READ AND INTERPRET PARAMETER INPUT FOR S/U #11
C   INDUCED SURCHARGE SCHEME
C---------------------------------------------------------------------
C  K M KROUSE - HRL - JANUARY 1984
C----------------------------------------------------------------
C
      INCLUDE 'ufreex'
C
C
      INCLUDE 'common/comn26'
C
C
      INCLUDE 'common/err26'
C
C
      INCLUDE 'common/fld26'
C
C
      INCLUDE 'common/mult26'
C
C
      INCLUDE 'common/rc26'
C
C
      INCLUDE 'common/read26'
C
C
      INCLUDE 'common/suid26'
C
C
      INCLUDE 'common/suin26'
C
C
      INCLUDE 'common/suky26'
C
C
      INCLUDE 'common/warn26'
C
      DIMENSION INPUT(2,38),LINPUT(38),IP(38),IPREQ(7),OK(38),TVAL(3),
     . WORK(1),SCQI(25),SCEL(25),SCQO(625),GATEL(25),GATEO(25),
     . GATEQ(625),LISTOP(10),NEEDIT(8),NEEDVA(8,10),RVAL(100),VAL(100)
      DIMENSION IQEL(2,2),LIQEL(2)
C
      LOGICAL ENDFND,OK,ALLOK,NEEDIT,NEEDVA,LISTOP,GETRUL,GETTIM
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/pm1126.f,v $
     . $',                                                             '
     .$Id: pm1126.f,v 1.3 1998/07/02 19:36:56 page Exp $
     . $' /
C    ===================================================================
C
C SEQUENCE OF VARIABLES USED IN NEEDVA ARRAY
C  HTARGET1,DIFFQI1,REDUCE,QTARGET1,QTARGET2,DIFFQI2,DIFFQI3,
C  8TH VARIABLE FOR OPTIONS NEED GATE -- OPT. 1, 3, 5 & 9
C
      DATA NEEDVA/.TRUE.,6*.FALSE.,2*.TRUE.,7*.FALSE.,
     3    .FALSE.,.TRUE.,.TRUE.,.TRUE.,.TRUE.,.FALSE.,.TRUE.,.TRUE.,
     4    .FALSE.,.TRUE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,
     5    .TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.TRUE.,
     6    .TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,
     7    .FALSE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,.TRUE.,.FALSE.,
     8    .FALSE.,6*.TRUE.,.FALSE.,
     9    8*.TRUE.,7*.TRUE.,.FALSE./    
C
      DATA PLUS,RMINUS/1H+,1H-/
C
      DATA INPUT/
     .            4HHUPP,4HER  ,4HHCHE,4HCK  ,4HHLOW,4HER  ,
     .            4HCOMP,4HINQ ,4HSCQI,4H    ,4HSCEL,4H    ,
     .            4HSCQO,4H    ,4HCONV,4H    ,4HDTYP,4HE   ,
     .            4HDTAB,4HLE  ,4HHTAR,4HGET1,4HDIFF,4HQI1 ,
     .            4HREDU,4HCE  ,4HQTAR,4HGET1,4HQTAR,4HGET2,
     .            4HDIFF,4HQI2 ,4HDIFF,4HQI3 ,4HGATE,4HL   ,
     .            4HGATE,4HOPEN,4HGATE,4HQ   ,4HGATE,4HSET ,
     .            4HIOPT,4HND  ,4HCURV,4HE   ,4HRULE,4HTIME,
     .            4HHRSC,4HHECK,4HQCHE,4HCK  ,4HQDIF,4HF   ,
     .            4HHTAR,4HGET2,4HHTAR,4HGET3,4HREDU,4HCE1 ,
     .            4HREDU,4HCE2 ,4HQTAR,4HGET3,4HMINS,4HCQI ,
     .            4HHPRE,4HVQ  ,4HMINS,4HCQO ,4HQGEN,4HMAX ,
     .            4HPEAK,4HQO1 ,4HHEVA,4HCEND/
C
      DATA LINPUT/4*2,4*1,30*2/
      DATA NINPUT/38/
      DATA NDINPU/2/
      DATA RULE/4HRULE/
C
      DATA IQEL/4HFLOW,4H    ,4HELEV,4H    /
      DATA LIQEL/1,1/
      DATA NIQEL/2/
      DATA NDIQEL/2/
C
      DATA IPREQ/1,3,5,6,7,9,10/
C
      DATA QMCODE/1110.01/
C
C  INITIALIZE LOCAL VARIABLES AND COUNTERS
C
      NP11 = 0
      OK(1) = .FALSE.
      OK(2) = .TRUE.
      OK(3) = .FALSE.
      OK(4) = .TRUE.
      OK(5) = .FALSE.
      OK(6) = .FALSE.
      OK(7) = .FALSE.
      OK(8) = .TRUE.
      OK(9) = .FALSE.
      OK(10) = .FALSE.
      DO 22 I = 11,38
           OK(I) = .TRUE. 
 22   CONTINUE
C
      ALLOK = .TRUE.
      GETRUL=.FALSE.
      GETTIM=.FALSE.
      CONV = .02
      GSET = MINODT + .01
      COMP = MINODT + .01
      OPT = 1 + .01
      RTIME = -999.0 
C
      NGATEL = -999
      NGATEO = -999
      NGATEQ = -999
      HRSCH  = -999.0
      HCHECK = -9998.0
      QCHECK = -999.0
      QDIFF  = -999.0
      HTARG2 = -9998.0
      HTARG3 = -9998.0
      REDUC1 = -999.0
      REDUC2 = -999.0
      QTARG3 = -999.0
      SCQIMN = -999.0
      HPREVQ = -9998.0
      SCQOMN = -999.0
      QGENMX = -999.0
      PEAKQ1 = -999.0
      HEVACE = -9998.0
C
      DO 2 I=1,10
      LISTOP(I)= .FALSE.
      IF(I.GT.8)GO TO 2
      NEEDIT(I)= .FALSE.
 2    CONTINUE
C
C
      CODEMQ = QMCODE + SULEVL
C
      DO 3 I = 1,38
           IP(I) = 0
    3 CONTINUE
C
      IERR = 0
C
C  PARMS FOUND, LOOKING FOR ENDP
C
      LPOS = LSPEC + NCARD + 1
      LASTCD = LENDSU
      IBLOCK = 1
C
    5 IF (NCARD .LT. LASTCD) GO TO 8
           CALL STRN26(59,1,SUKYWD(1,7),3)
           IERR = 99
           GO TO 9
    8 NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0 ) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,SUKYWD,LSUKEY,NSUKEY,NDSUKY)
      IF (IDEST.EQ.0) GO TO 5
C
C  IDEST = 7 IS FOR ENDP
C
      IF (IDEST.EQ.7.OR.IDEST.EQ.8) GO TO 9
          CALL STRN26(59,1,SUKYWD(1,7),3)
          JDEST = IDEST
          IERR = 89
    9 LENDP = NCARD
C
C  ENDP CARD OR TS OR CO FOUND AT LENDP,
C  ALSO ERR RECOVERY IF NEITHER ONE OF THEM FOUND.
C
C
      IBLOCK = 2
      CALL POSN26(MUNI26,LPOS)
      NCARD = LPOS - LSPEC -1
C
   10 CONTINUE
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,INPUT,LINPUT,NINPUT,NDINPU)
      IF(IDEST .GT. 0) GO TO 50
      IF(NCARD .GE. LENDP) GO TO 5000
C
C  NO VALID KEYWORD FOUND
C
      CALL STER26(1,1)
      ALLOK = .FALSE.
      GO TO 10
C
C  NOW SEND CONTROL TO PROPER LOCATION FOR PROCESSING EXPECTED INPUT
C
   50 CONTINUE

      GO TO (100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,
     *   1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,
     *        2500,2600,2700,2800,2900,3000,3100,3200,3300,
     *             3400,3500,3600,3700,3800), IDEST
C
C-----------------------------------------------------------------------
C-------------------------------------------------------------------
C  'HUPPER' IS KEYWORD EXPECTED.
C
 100  CONTINUE
      IP(1)=IP(1) + 1
      IF(IP(1).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HUPPER,GETRUL,OK(1))
      GO TO 10      
C
C-----------------------------------------------------------------------
C  'HCHECK' IS NEXT. VALUE SPECIFIED MUST BE WITHIN THE ELEV. VS.
C   STORAGE CURVE, OR IT MUST BE 'RULE' FOR THE RULE CURVE VALUE.
C
 200  CONTINUE
      IP(2) = IP(2) + 1
      IF (IP(2).GT.1) CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HCHECK,GETRUL,OK(2))
      GO TO 10      
C
C-----------------------------------------------------------------------
C  'HLOWER' IS NEXT. VALUE SPECIFIED MUST BE WITHIN THE ELEV. VS.
C   STORAGE CURVE, OR IT MUST BE 'RULE' FOR THE RULE CURVE VALUE.
C
 300  CONTINUE
      IP(3) = IP(3) + 1
      IF (IP(3).GT.1) CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HLOWER,GETRUL,OK(3))
      GO TO 10      
C
C-----------------------------------------------------------------------
C  'COMPINQ' IS NEXT KEYWORD.  IF NOT FOUND, DEFAULT TO TIME INTERVAL
C   OF THE OPERATION.
C
 400  CONTINUE
      IP(4) = IP(4) + 1
      IF(IP(4).GT.1)CALL STER26(39,1)
      OK(4)=.FALSE.
C
C  LOOK FOR INTEGER VALUE OR NULL FIELD.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.1)GO TO 9000
      IF(IERF.EQ.1)GO TO 490
C
C  FIELD MUST BE INTEGER, .LE. TO THE TIME INTERVAL OF THE
C  OPERATION, AS WELL AS AN EVEN MULTIPLE OF IT.
C
      IF(ITYPE.EQ.0)GO TO 420
      CALL STER26(5,1)
      GO TO 10
C
 420  IF(INTEGR.LE.MINODT)GO TO 430
      CALL STER26(112,1)
      GO TO 10
C
 430  CONTINUE
      IF(MOD(MINODT,INTEGR).EQ.0) GO TO 450
      CALL STER26(47,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 450  CONTINUE
      COMP = INTEGR + .01
 490  OK(4) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'SCQI' IS NEXT.
C
 500  CONTINUE
      IP(5) = IP(5) + 1
      IF(IP(5).GT.1)CALL STER26(39,1)
C
C  GET LIST OF VALUES FOR INFLOWS IN SURCHARGE CURVE.
C
      NSCQI=25
      CALL GLST26(1,1,X,SCQI,X,NSCQI,OK(5))
      IF(.NOT.OK(5))GO TO 10
C
      CALL ASCN26(SCQI,NSCQI,0,IERA)
      IF(IERA.GT.0)GO TO 10
C
C  INFLOWS MUST BE REAL, POSITIVE AND ASCENDING.
C
      DO 520 I=1,NSCQI
      SCQI(I)=SCQI(I)/CONVLT
      IF(SCQI(I).GT.0.0)GO TO 520
C
      CALL STER26(61,1)
      GO TO 10
C
 520  CONTINUE
C
C  VALUES ARE OK
C
      OK(5) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'SCEL' IS NEXT.
C
 600  CONTINUE
      IP(6) = IP(6) + 1
      IF(IP(6).GT.1)CALL STER26(39,1)
C
C  GET LIST OF VALUES FOR ELEVATIONS IN SURCHARGE CURVE.
C
      NSCEL=25
      CALL GLST26(1,1,X,SCEL,X,NSCEL,OK(6))
      IF(.NOT.OK(6))GO TO 10
C
      CALL ASCN26(SCEL,NSCEL,0,IERA)
      IF(IERA.GT.0)GO TO 10
C
C  ELEVATIONS MUST BE REAL, POSITIVE AND ASCENDING.
C  THEY MUST ALSO BE WITHIN THE BOUNDS OF THE ELVSSTOR CURVE.
C
      DO 620 I=1,NSCEL
      SCEL(I)=SCEL(I)/CONVL
      IF(SCEL(I).GT.0.0)GO TO 620
C
      CALL STER26(61,1)
      GO TO 10
C
 620  CONTINUE
C
C  SEE IF WITHIN BOUNDS OF ELVSSTOR
C
      CALL ELST26(SCEL,NSCEL,IERST)
      IF(IERST.GT.0)GO TO 10
C
C  VALUES ARE OK
C
      OK(6) = .TRUE.
      GO TO 10
C
C-------------------------------------------------------------
C  'SCQO' IS NEXT.
C
 700  CONTINUE
      IP(7) = IP(7) + 1
      IF(IP(7).GT.1)CALL STER26(39,1)
      IF(IP(5).EQ.0)CALL STRN26(59,1,INPUT(1,5),LINPUT(5))
      IF(IP(6).EQ.0)CALL STRN26(59,1,INPUT(1,6),LINPUT(6))
C
C  GET LIST OF VALUES FOR DISCHARGES IN SURCHARGE CURVE.
C  THERE ARE 'NSCEL X NSCQI' VALUES OF DISCHARGE.
C
      NSCQO=625
      CALL GLST26(1,1,X,SCQO,X,NSCQO,OK(7))
      IF(.NOT.OK(7))GO TO 10
C
C  SEE IF EACH SET OF 'NSCEL' VALUES ARE ASCENDING. (THERE ARE
C  'NSCQI' SETS OF VALUES).
C
      K=1
      DO 740 I=1,NSCQI
      CALL ASCN26(SCQO(K),NSCEL,1,IERA)
      IF(IERA.GT.0)GO TO 10
      K = K + NSCEL
 740  CONTINUE
C
C  SEE IF NUMBER OF VALUES READ IS CORRECT.
C  CHECK FIRST TO SEE IF 'SCQI' AND 'SCEL' HAVE BEEN PROPERLY
C  ENTERED SO THAT THE VALUES OF NSCQI AND NSCEL ARE DEFINED.
C
      IF(.NOT.OK(5) .OR. .NOT.OK(6))GO TO 10
      KVAL= NSCEL* NSCQI
      IF(NSCQO.EQ.KVAL)GO TO 710
      CALL STER26(62,1)
      GO TO 10
C
C
C  SEE IF DISCHARGES ARE REAL AND POSITIVE.
C
 710  DO 720 I=1,NSCQO
      SCQO(I)=SCQO(I)/CONVLT
      IF(SCQO(I).GT.0.0)GO TO 720
C
      CALL STER26(61,1)
      GO TO 10
C
 720  CONTINUE
C
C  VALUES ARE OK
C
      OK(7) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'CONV' IS NEXT.  IF NOT ENTERED, USE DEFAULT VALUE OF 0.02.
C
 800  CONTINUE
      IP(8) = IP(8) + 1
      IF(IP(8).GT.1)CALL STER26(39,1)
C
C  READ NEXT FIELD.  LOOKING FOR A REAL NUMBER OR NULL FIELD.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.1)GO TO 9000
      IF(IERF.EQ.1)GO TO 890
C
C  SEE IF VALUE IS REAL AND BETWEEN 0.01 AND 1.00
C
      IF(ITYPE.EQ.1)GO TO 820
      CALL STER26(4,1)
      GO TO 10
C
 820  CONTINUE
      IF(REAL.GE..001 .AND. REAL.LE.1.00)GO TO 830
      CALL STER26(68,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 830  CONV = REAL
C
 890  CONTINUE
      OK(8) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'DTYPE' IS NEXT KEYWORD.  IT IS AN INTEGER VALUE (1-5)
C   TO DESCRIBE WHICH TYPE OF DECISION TABLE TO USE.
C
 900  CONTINUE
      IP(9) = IP(9) + 1
      IF(IP(9).GT.1)CALL STER26(39,1)
C
C  LOOKING FOR AN INTEGER VALUE BETWEEN 1 AND 5.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
      IF(ITYPE.EQ.0)GO TO 920
      CALL STER26(5,1)
      GO TO 10
C
 920  CONTINUE
      IF(INTEGR.GE.1 .AND. INTEGR.LE.5)GO TO 930
      CALL STER26(109,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 930  CONTINUE
      DTYPE=INTEGR + .01
      OK(9) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'DTABLE' IS NEXT KEYWORD.
C
 1000 CONTINUE
      IP(10) = IP(10)+ 1
      IF(IP(10).GT.1)CALL STER26(39,1)
      IF(IP(9).EQ.1)GO TO 1005
      CALL STRN26(59,1,INPUT(1,9),LINPUT(9))
      GO TO 10
C
C  VALUES INPUT FOR 'DTABLE' DEPEND ON THE TYPE OF
C  DECISION TABLE SPECIFIED BY 'DTYPE'.
C
 1005 CONTINUE
      ITYP = DTYPE
      IF(ITYP.GT.3)GO TO 1050
C
C  'DTYPE' = 1,2, OR 3. GET LIST OF VALUES IN TABLE.
C
      NVAL=100
      CALL GLST26(1,1,X,VAL,X,NVAL,OK(10))
C
C  THE FOLLOWING CHECKS MUST BE MADE ON THE VALUES IN THE TABLE:
C  1) NO. OF VALUES IN TABLE MUST BE MULTIPLE OF 2
C  2) ODD VALUES MUST BE REAL AND POSITIVE
C  3) EVEN VALUES MUST BE INTEGER AND BE BETWEEN 1 AND 10
C  4) FOR 'DTYPE' 1 AND 3, THE ODD VALUES MUST ALSO BE WITHIN
C     THE BOUNDS OF THE ELVSSTOR CURVE
C
C  CHECK CONDITION #1
C
      IF(MOD(NVAL,2).EQ.0)GO TO 1010
      CALL STER26(40,1)
      GO TO 10
C
C  CHECK CONDITIONS #2 AND #4
C
 1010 DO 1020 I=1,NVAL,2
      IF (ITYP.EQ.2) VAL(I) = VAL(I)/CONVLT
      IF (ITYP.NE.2) VAL(I) = VAL(I)/CONVL
      IF(VAL(I).GE.0.0)GO TO 1015
C
      CALL STER26(95,1)
      GO TO 10
C
 1015 IF(ITYP.EQ.2)GO TO 1020
      CALL ELST26(VAL(I),1,IERST)
      IF(IERST.GT.0)GO TO 10
C
 1020 CONTINUE
C
C  CHECK CONDITION #3
C
      DO 1030 I=2,NVAL,2
      IVAL = VAL(I)
      VAL2=IVAL
      DIFF=VAL2-VAL(I)
      IF(ABS(DIFF).LT.0.00001)GO TO 1025
C
      CALL STER26(111,1)
      GO TO 10
C
 1025 IF(IVAL.GE.1 .AND. IVAL.LE.10)GO TO 1028
C
      CALL STER26(110,1)
      GO TO 10
C
C  THE INTEGER VALUE 'IVAL' IS A SELECTED EVACUATION OPTION.
C  SAVE WHICH OPTIONS HAVE BEEN SELECTED FOR LATER USE IN
C  DETERMINING WHICH VARIABLES NEED TO BE ENTERED.
C
 1028 CONTINUE
      LISTOP(IVAL)= .TRUE.
 1030 CONTINUE
      GO TO 1090
C
C  'DTYPE' = 4 OR 5. GET LIST OF VALUES IN TABLE.
C
 1050 CONTINUE
      NVAL=100
      CALL GLST26(1,1,X,VAL,X,NVAL,OK(10))
C
C  THE FOLLOWING CHECKS MUST BE MADE ON THE VALUES IN THE TABLE:
C  1) NO. OF VALUES IN TABLE MUST BE A MULTIPLE OF THREE
C  2) EVERY 1ST VALUE OF EACH SET OF 3 VALUES MUST BE WITHIN
C     THE BOUNDS OF THE ELVSSTOR CURVE
C  3) EVERY 2ND VALUE OF EACH SET OF 3 VALUES MUST BE REAL AND POSITIVE
C  4) EVERY 3RD VALUE OF EACH SET OF 3 VALUES MUST BE INTEGER AND BETWEE
C     1 AND 10
C
C  CHECK CONDITION #1
C
      IF(MOD(NVAL,3).EQ.0)GO TO 1060
      CALL STER26(40,1)
      GO TO 10
C
C  CHECK CONDITION #2
C
 1060 DO 1070 I=1,NVAL,3
      VAL(I) = VAL(I)/CONVL
      CALL ELST26(VAL(I),1,IERST)
      IF(IERST.GT.0)GO TO 10
 1070 CONTINUE
C
C  CHECK CONDITION #3
C
      DO 1075 I=2,NVAL,3
      VAL(I) = VAL(I)/CONVLT
      IF(VAL(I).GE.0.0)GO TO 1075
C
      CALL STER26(61,1)
      GO TO 10
 1075 CONTINUE
C
C  CHECK CONDITION #4
C
      DO 1080 I=3,NVAL,3
      IVAL=VAL(I)
      VAL2=IVAL
      DIFF=VAL2-VAL(I)
      IF(ABS(DIFF).LT.0.0001)GO TO 1076
C
      CALL STER26(111,1)
      GO TO 10
C
 1076 IF(IVAL.GE.1 .AND. IVAL.LE.10)GO TO 1078
C
      CALL STER26(110,1)
      GO TO 10
C
C  THE INTEGER VALUE 'IVAL' IS THE SELECTED EVACUATION OPTION.
C  SAVE THE OPTION NUMBER FOR LATER USE IN DETERMINING WHICH
C  VARIABLES NEED TO BE ENTERED.
C
 1078 CONTINUE
      LISTOP(IVAL)= .TRUE.
C
 1080 CONTINUE
C
C  EVERYTHING IS OK
C
 1090 OK(10) = .TRUE.
C
C  COMPUTE NO. OF LINES IN TABLE (THERE ARE EITHER 2 OR 3
C  VALUES PER LINE, DEPENDING ON THE TYPE OF DECISION TABLE.
C
      NL=2
      IF(ITYP.GT.3)NL=3
      NLINES=NVAL/NL
      RLINES=NLINES + .01
      GO TO 1092
C
C----------------------------------------------------------
C----------------------------------------------------------
C
C  EVACUATION OPTION VARIABLES ARE NEXT. THE VARIABLES THAT
C  NEED TO BE ENTERED DEPEND ON THE EVACUATION OPTIONS
C  SELECTED IN 'DTABLE'.
C
C  'LISTOP(I)' CONTAINS WHICH OPTIONS HAVE BEEN SELECTED.
C   IF LISTOP(I) IS .TRUE. , THEN OPTION 'I' HAS BEEN CHOSEN.
C   DETERMINE WHICH VARIABLES ARE NEEDED. THERE ARE ACTUALLY 10
C   VARIABLES TOTAL, BUT IF VARIABLE #8 IS REQUIRED, THEN
C   VARIABLES #9 and 10 ARE ALWAYS NEEDED ALSO.
C
 1092 CONTINUE
      DO 1094 I=1,10
      IF(.NOT.LISTOP(I))GO TO 1094
C
      DO 1096 J=1,8
      NEEDIT(J)=NEEDIT(J) .OR. NEEDVA(J,I)
 1096 CONTINUE
C
 1094 CONTINUE
C
C  'NEEDIT(J)' NOW CONTAINS THE INFORMATION AS TO WHICH OF THE
C   8(10) VARIABLES NEED TO BE ENTERED.
C
      GO TO 10
C
C-----------------------------------------------------------
C-----------------------------------------------------------
C  'HTARGET1' IS NEXT KEYWORD.
C
 1100 CONTINUE
      IP(11)= IP(11) + 1
      IF(IP(11).GT.1)CALL STER26(39,1)
      IF(NEEDIT(1))GO TO 1110
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1110 CONTINUE
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HTARG1,GETRUL,OK(11))
      GO TO 10      
C
C-----------------------------------------------------------------------
C  'DIFFQI1' IS NEXT.
C
 1200 CONTINUE
      IP(12) = IP(12) + 1
      IF(IP(12).GT.1)CALL STER26(39,1)
      IF(NEEDIT(2))GO TO 1210
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
C
 1210 CONTINUE
C
C  LOOKING FOR A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1220
      CALL STER26(4,1)
      GO TO 10
C
 1220 CONTINUE
      IF(REAL.GE.0.0)GO TO 1230
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1230 CONTINUE
      DIFFQ1=REAL/CONVLT
      OK(12) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'REDUCE' IS NEXT.
C
 1300 CONTINUE
      IP(13)= IP(13) + 1
      IF(IP(13).GT.1)CALL STER26(39,1)
      IF(NEEDIT(3))GO TO 1310
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1310 CONTINUE
C
C  LOOKING FOR A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1320
      CALL STER26(4,1)
      GO TO 10
C
 1320 IF(REAL.GE.0.0)GO TO 1330
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1330 CONTINUE
      REDUCE=REAL/CONVLT
      OK(13) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'QTARGET1' IS NEXT.
C
 1400 CONTINUE
      IP(14)= IP(14) + 1
      IF(IP(14).GT.1)CALL STER26(39,1)
      IF(NEEDIT(4))GO TO 1410
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1410 CONTINUE
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1420
      CALL STER26(4,1)
      GO TO 10
C
 1420 IF(REAL.GE.0.0)GO TO 1430
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1430 CONTINUE
      QTARG1=REAL/CONVLT
      OK(14) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'QTARGET2' IS NEXT.
C
 1500 CONTINUE
      IP(15)= IP(15) + 1
      IF(IP(15).GT.1)CALL STER26(39,1)
      IF(NEEDIT(5))GO TO 1510
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1510 CONTINUE
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1520
      CALL STER26(4,1)
      GO TO 10
C
 1520 IF(REAL.GE.0.0)GO TO 1530
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1530 CONTINUE
      QTARG2=REAL/CONVLT
      OK(15) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'DIFFQI2' IS NEXT KEYWORD.
C
 1600 CONTINUE
      IP(16)= IP(16) + 1
      IF(IP(16).GT.1)CALL STER26(39,1)
      IF(NEEDIT(6))GO TO 1610
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1610 CONTINUE
C
C  NEXT FIELD MUST BE A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1620
      CALL STER26(4,1)
      GO TO 10
C
 1620 CONTINUE
      IF(REAL.GE.0.0)GO TO 1630
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1630 CONTINUE
      DIFFQ2=REAL/CONVLT
      OK(16) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'DIFFQI3' IS NEXT.
C
 1700 CONTINUE
      IP(17) = IP(17) + 1
      IF(IP(17).GT.1)CALL STER26(39,1)
      IF(NEEDIT(7))GO TO 1710
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
C
 1710 CONTINUE
C
C  LOOKING FOR A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 1720
      CALL STER26(4,1)
      GO TO 10
C
 1720 CONTINUE
      IF(REAL.GE.0.0)GO TO 1730
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 1730 CONTINUE
      DIFFQ3=REAL/CONVLT
      OK(17) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'GATEL' IS NEXT.
C
1800  CONTINUE
      IP(18) = IP(18) + 1
      IF(IP(18).GT.1)CALL STER26(39,1)
      IF(NEEDIT(8))GO TO 1805
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1805 CONTINUE
C
C  GET LIST OF VALUES FOR POOL ELEVATIONS .
C
      NGATEL=25
      CALL GLST26(1,1,X,GATEL,X,NGATEL,OK(18))
      IF(.NOT.OK(18))GO TO 10
C
      CALL ASCN26(GATEL,NGATEL,0,IERA)
      IF(IERA.GT.0)GO TO 10
C
C  ELEVATIONS MUST BE REAL, POSITIVE AND ASCENDING.
C  THEY MUST ALSO BE WITHIN THE BOUNDS OF THE ELVSSTOR CURVE.
C
      DO 1820 I=1,NGATEL
      GATEL(I)=GATEL(I)/CONVL
      IF(GATEL(I).GT.0.0)GO TO 1820
C
      CALL STER26(61,1)
      GO TO 10
C
1820  CONTINUE
C
C  SEE IF WITHIN BOUNDS OF ELVSSTOR
C
      CALL ELST26(GATEL,NGATEL,IERST)
      IF(IERST.GT.0)GO TO 10
C
C  VALUES ARE OK
C
      OK(18) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'GATEOPEN' IS NEXT.
C
 1900  CONTINUE
      IP(19) = IP(19) + 1
      IF(IP(19).GT.1)CALL STER26(39,1)
      IF(NEEDIT(8))GO TO 1905
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 1905 CONTINUE
C
C  GET LIST OF VALUES FOR GATE OPENINGS.
C
      NGATEO=25
      CALL GLST26(1,1,X,GATEO,X,NGATEO,OK(19))
      IF(.NOT.OK(19))GO TO 10
C
      CALL ASCN26(GATEO,NGATEO,0,IERA)
      IF(IERA.GT.0)GO TO 10
C
C  VALUES MUST BE REAL, POSITIVE AND ASCENDING.
C
      DO 1920 I=1,NGATEO
      GATEO(I)=GATEO(I)/CONVL
      IF(GATEO(I).GE.0.0)GO TO 1920
C
      CALL STER26(61,1)
      GO TO 10
C
 1920  CONTINUE
C
C  VALUES ARE OK
C
      OK(19) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'GATEQ' IS NEXT.
C
 2000  CONTINUE
      IP(20) = IP(20) + 1
      IF(IP(20).GT.1)CALL STER26(39,1)
      IF(IP(18).EQ.0)CALL STRN26(59,1,INPUT(1,18),LINPUT(18))
      IF(IP(19).EQ.0)CALL STRN26(59,1,INPUT(1,19),LINPUT(19))
      IF(NEEDIT(8))GO TO 2025
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
 2025 CONTINUE
C
C  GET LIST OF VALUES FOR DISCHARGES .
C  THERE ARE 'NGATEL X NGATEO' VALUES OF DISCHARGE.
C
      NGATEQ=625
      CALL GLST26(1,1,X,GATEQ,X,NGATEQ,OK(20))
      IF(.NOT.OK(20))GO TO 10
C
C  SEE IF NUMBER OF VALUES READ IS CORRECT.
C  CHECK FIRST TO SEE IF 'GATEL' AND 'GATEO' HAVE BEEN ENTERED
C  PROPERLY SO THAT THE VALUES OF NGATEL AND NGATEO ARE DEFINED.
C
      IF(.NOT.OK(18) .OR. .NOT.OK(19))GO TO 10
      KVAL= NGATEL* NGATEO
      IF(NGATEQ.EQ.KVAL)GO TO 2010
      CALL STER26(62,1)
      GO TO 10
C
C  SEE IF EACH SET OF 'NGATEL' VALUES ARE ASCENDING. (THERE ARE
C  'NGATEO' SETS OF VALUES).
C
      K=1
      DO 2040 I=1,NGATEO
      CALL ASCN26(GATEQ(K),NGATEL,1,IERA)
      IF(IERA.GT.0)GO TO 10
      K = K + NGATEL
 2040  CONTINUE
C
C  SEE IF DISCHARGES ARE REAL AND POSITIVE.
C
 2010  DO 2020 I=1,NGATEQ
      GATEQ(I)=GATEQ(I)/CONVLT
      IF(GATEQ(I).GE.0.0)GO TO 2020
C
      CALL STER26(61,1)
      GO TO 10
C
 2020  CONTINUE
C
C  VALUES ARE OK
C
      OK(20) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'GATESET' IS NEXT. IF NEEDED AND NOT ENTERED, USE DEFAULT VALUE.
C
 2100 CONTINUE
      IP(21)= IP(21) + 1
      IF(IP(21).GT.1)CALL STER26(39,1)
C      IF(NEEDIT(8))GO TO 2110
C      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
C      GO TO 10
C
 2110 CONTINUE
C
C  LOOKING FOR INTEGER VALUE OR A NULL FIELD.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GE.1)GO TO 9000
C
C  FIELD IS NUMERIC. SEE IF VALUE IS INTEGER AND POSITIVE.
C
      IF(ITYPE.EQ.0)GO TO 2120
      CALL STER26(5,1)
      GO TO 10
C
 2120 IF(INTEGR.GT.0)GO TO 2130
      CALL STER26(95,1)
      GO TO 10
C
C  VALUE MUST BE .LE. TO THE TIME INTERVAL OF THE OPERATION,
C  AS WELL AS EVENLY DIVISIBLE INTO IT.
C
 2130 CONTINUE
      IF(MOD(MINODT,INTEGR).EQ.0)GO TO 2140
      CALL STER26(40,1)
      GO TO 10
C
 2140 CONTINUE
      IF(INTEGR.LE.MINODT)GO TO 2150
      CALL STER26(112,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 2150 GSET=INTEGR + .01
      GO TO 10
C
C-----------------------------------------------------------
C  END OF EVACUATION OPTION VARIABLES
C-----------------------------------------------------------
C  'IOPTND' IS NEXT KEYWORD. IF NOT ENTERED, USE DEFAULT VALUE.
C
 2200 CONTINUE
      IP(22)= IP(22) + 1
      IF(IP(22).GT.1)CALL STER26(39,1)
C  READ NEXT FIELD. AN INTEGER VALUE OR THE NULL FIELD MUST FOLLLOW.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.1)GO TO 9000
      IF(IERF.EQ.1)GO TO 2290
C
C  FIELD IS NUMERIC. MUST BE INTEGER AND .GE. ZERO
C
      IF(ITYPE.EQ.0)GO TO 2220
      CALL STER26(5,1)
      GO TO 10
C
 2220 CONTINUE
      IF(INTEGR.GE.0)GO TO 2230
      CALL STER26(95,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 2230 OPT= INTEGR + .01
 2290 OK(22)= .TRUE.
      GO TO 10
C
C------------------------------------------------------------
C  'CURVE' IS EXPECTED HERE. ONLY NEEDED IF 'RULE' IS SPECIFIED
C  FOR THE ELEVATIONS OF HCHECK, HLOWER, OR HTARGET1.
C
 2300 CONTINUE
      IP(23)= IP(23) + 1
      IF(IP(23).GT.1)CALL STER26(39,1)
      IF(GETRUL)GO TO 2320
      CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
      GO TO 10
C
C
C  READ FIRST FIELD AFTER 'RULECURV'. IF IT'S NUMERIC, GET LIST OF NUMBE
C   FOR DEFINING RULECURV
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'RULECURV'.
C
C  IF THE CURVE IS NEEDED AND NOT FOUND, CALL IT AN ERROR.
C
 2320 CONTINUE
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      ICTYPE = ITYPE
      IF (ICTYPE.GT.1) GO TO 2360
C
C  REPOSITION TO READ FIRST FIELD AFTER 'RULECURV'
C
      GETTIM=.TRUE.
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC - 1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE RULE RULECURV
C
      NRVAL=100
      CALL GLST26(1,1,X,RVAL,X,NRVAL,OK(23))
      IF (.NOT.OK(23)) GO TO 10
C
C  FOUR CHECKS MUST BE MADE ON THE RULECURV:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF RVALS ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE RULECURV,
C   3) THE DATES MUST BE BETWEEN 1 AND 366, AND
C   4) THE DATES MUST BE IN ASCENDIONG ORDER.
C
      IF (MOD(NRVAL,2).EQ.0) GO TO 2330
C
      CALL STER26(40,1)
      GO TO 10
C
 2330 CONTINUE
      NHALF = NRVAL/2
      NSEC = NHALF + 1
C
C  SEE IF DATES ARE IN ASCENDING ORDER
C
      CALL ASCN26(RVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DATES ARE BETWEEN 1 AND 366
C
      DO 2340 I=1,NHALF
      IF (1.0.LE.RVAL(I).AND.RVAL(I).LE.366.02) GO TO 2340
C
      CALL STER26(64,1)
      GO TO 10
C
 2340 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF RULECURV WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 2355 I=NSEC,NRVAL
      RVAL(I) = RVAL(I)/CONVL
 2355 CONTINUE
C
      CALL ELST26(RVAL(NSEC),NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
C
C  STORE CODE FOR RULERULECURV IN /MULT26/
C
      NMDEF(1) = NMDEF(1) + 1
      DMCODE(NMDEF(1),1) = CODEMQ
C
      GO TO 2395
C
C-----------------------------------------------------------
C  FIRST FIELD AFTER 'CURVE' IS CHARACTER. SEE IF IT'S A VALID
C  S/U ID WITH OR WITHOUT PARENTHESES
C
 2360 CONTINUE
      CALL MREF26(1,REFCDE,LOCWK,LOCCDE,IERM)
      IF(IERM.GT.0)GO TO 10
C
C  CURVE IS DEFINED OK
C
 2395 CONTINUE
      OK(23)= .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'RULETIME' KEYWORD EXPECTED. IF FOUND, GET NEXT FIELD ON CARD
C   IF NOT FOUND, STORE VALUES IN WORK USING DEFAULT
C
 2400 CONTINUE
C
      IP(24) = IP(24) + 1
      IF (IP(24).GT.1) CALL STER26(39,1)
      IF (GETTIM) GO TO 2410
C
C  'RULETIME' FOUND BUT NOT NEEDED. (I.E. - A REFERENCE TO 'CURVE' WAS
C   FOUND.)
C
      CALL STRN26(60,1,INPUT(1,24),2)
      GO TO 10
C
C  AN INTEGER VALUE ( OR A NULL FIELD) MUST FOLLOW
C
 2410 CONTINUE
C
      OK(24) = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 2450
C
C  SPECIFICATION MUST BE INTEGER
C
      IF (ITYPE.EQ.0) GO TO 2420
      CALL STER26(5,1)
      GO TO 10
C
 2420 CONTINUE
C
C  RULETIME MUST BE .GE. ZERO
C
      IF (INTEGR.GE.0) GO TO 2430
C
      CALL STER26(95,1)
      GO TO 10
C
C  TIME MUST BE MULTIPLE OF OPERATION TIME INTERVAL.
C
 2430 CONTINUE
C$      IF (MOD(INTEGR,MINODT).EQ.0) GO TO 2440
C
C$      CALL STER26(47,1)
C$      GO TO 10
C
C$ 2440 CONTINUE
      RTIME = INTEGR + 0.01
C
C  EVERYTHING IS OK
C
 2450 CONTINUE
      OK(24) = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------
C  'HRSCHECK' IS NEXT. IF NEEDED AND NOT ENTERED, USE DEFAULT VALUE.
C
 2500 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
 2510 CONTINUE
C
C  LOOKING FOR INTEGER VALUE OR A NULL FIELD.
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GE.1)GO TO 9000
C
C  FIELD IS NUMERIC. SEE IF VALUE IS INTEGER AND POSITIVE.
C
      IF(ITYPE.EQ.0)GO TO 2520
      CALL STER26(5,1)
      GO TO 10
C
 2520 IF(INTEGR.GT.0)GO TO 2530
      CALL STER26(95,1)
      GO TO 10
C
C  VALUE MUST BE .LE. TO THE TIME INTERVAL OF THE OPERATION,
C  AS WELL AS EVENLY DIVISIBLE INTO IT.
C
 2530 CONTINUE
      IF(MOD(MINODT,INTEGR).EQ.0)GO TO 2540
      CALL STER26(40,1)
      GO TO 10
C
 2540 CONTINUE
      IF(INTEGR.LE.MINODT)GO TO 2550
      CALL STER26(112,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 2550 HRSCH=INTEGR + .01
      GO TO 10
C
C-----------------------------------------------------------
C  'QCHECK' IS NEXT.
C
 2600 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 2620
      CALL STER26(4,1)
      GO TO 10
C
 2620 IF(REAL.GE.0.0)GO TO 2630
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 2630 CONTINUE
      QCHECK=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'QDIFF' IS NEXT.
C
 2700 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 2720
      CALL STER26(4,1)
      GO TO 10
C
 2720 IF(REAL.GE.0.0)GO TO 2730
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 2730 CONTINUE
      QDIFF=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C-----------------------------------------------------------
C  'HTARGET2' IS NEXT KEYWORD.
C
 2800 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HTARG2,GETRUL,OK(ID))
      GO TO 10      
C
C-----------------------------------------------------------
C-----------------------------------------------------------
C  'HTARGET3' IS NEXT KEYWORD.
C
 2900 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HTARG3,GETRUL,OK(ID))
      GO TO 10      
C
C-----------------------------------------------------------
C  'REDUCE1' IS NEXT.
C
 3000 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
C  LOOKING FOR A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3020
      CALL STER26(4,1)
      GO TO 10
C
 3020 IF(REAL.GE.0.0)GO TO 3030
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3030 CONTINUE
      REDUC1=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'REDUCE2' IS NEXT.
C
 3100 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
C  LOOKING FOR A REAL POSITIVE NUMBER
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3120
      CALL STER26(4,1)
      GO TO 10
C
 3120 IF(REAL.GE.0.0)GO TO 3130
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3130 CONTINUE
      REDUC2=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'QTARGET3' IS NEXT.
C
 3200 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3220
      CALL STER26(4,1)
      GO TO 10
C
 3220 IF(REAL.GE.0.0)GO TO 3230
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3230 CONTINUE
      QTARG3=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'MINSCQI' IS NEXT.
C
 3300 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3320
      CALL STER26(4,1)
      GO TO 10
C
 3320 IF(REAL.GE.0.0)GO TO 3330
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3330 CONTINUE
      SCQIMN=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'HPREVQ' IS NEXT KEYWORD.
C
 3400 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HPREVQ,GETRUL,OK(ID))
      GO TO 10      
C
C-----------------------------------------------------------
C  'MINSCQO' IS NEXT.
C
 3500 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3520
      CALL STER26(4,1)
      GO TO 10
C
 3520 IF(REAL.GE.0.0)GO TO 3530
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3530 CONTINUE
      SCQOMN=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'QGENMX' IS NEXT.
C
 3600 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3620
      CALL STER26(4,1)
      GO TO 10
C
 3620 IF(REAL.GE.0.0)GO TO 3630
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3630 CONTINUE
      QGENMX=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C  'PEAKQO1' IS NEXT.
C
 3700 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD= -2
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF.GT.0)GO TO 9000
C
C  SEE IF VALUE IS REAL AND POSITIVE
C
      IF(ITYPE.EQ.1)GO TO 3720
      CALL STER26(4,1)
      GO TO 10
C
 3720 IF(REAL.GE.0.0)GO TO 3730
      CALL STER26(61,1)
      GO TO 10
C
C  EVERYTHING IS OK
C
 3730 CONTINUE
      PEAKQ1=REAL/CONVLT
      GO TO 10
C
C-----------------------------------------------------------
C-----------------------------------------------------------
C  'HEVACEND' IS NEXT KEYWORD.
C
 3800 CONTINUE
      ID = IDEST
      IP(ID) = IP(ID) + 1
      IF(IP(ID).GT.1)CALL STER26(39,1)
C
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
      CALL HX1126(IDEST,PLUS,RMINUS,HEVACE,GETRUL,OK(ID))
      GO TO 10      
C
C-----------------------------------------------------------
C---------------------------------------------------------------
C  END OF INPUT. STORE VALUES IN WORK ARRAY IF EVERYTHING WAS ENTERED
C  WITHOUT ERROR.
C
 5000 CONTINUE
C
      DO 5005 I = 1,7
            NIP = IPREQ(I)
            IF (IP(NIP).EQ.0)
     .      CALL STRN26(59,1,INPUT(1,NIP),LINPUT(NIP))
 5005 CONTINUE
C
      IF(NEEDIT(8)) THEN
        IF(NGATEL.EQ.-999) CALL STRN26(59,1,INPUT(1,18),LINPUT(18))
        IF(NGATEO.EQ.-999) CALL STRN26(59,1,INPUT(1,19),LINPUT(19))
        IF(NGATEQ.EQ.-999) CALL STRN26(59,1,INPUT(1,20),LINPUT(20))
      ENDIF
C
      IF(GETRUL.AND.IP(23).EQ.0)
     .   CALL STRN26(59,1,INPUT(1,23),LINPUT(23))
C
      DO 5006 I=1,10
      K = 10 + I
      N = I
      IF(N .GT. 8) N = 8
      IF(NEEDIT(N) .AND. IP(K).EQ.0)
     .     CALL STRN26(59,1,INPUT(1,K),LINPUT(K))
 5006 CONTINUE
C
      DO 5007 I=1,38
      IF (.NOT.OK(I)) GO TO 9999
 5007 CONTINUE
      IF (ALLOK) GO TO 5010
      GO TO 9999
C--------------------------------------------------------
C  STORE HUPPER
C
 5010 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,HUPPER,501)
      NP11 = NP11 + 1
C
C------------------------------------------------------------
C  STORE HCHECK
C
      CALL FLWK26(WORK,IUSEW,LEFTW,HCHECK,501)
      NP11 = NP11 + 1
C
C-------------------------------------------------------------
C  STORE HLOWER
C
      CALL FLWK26(WORK,IUSEW,LEFTW,HLOWER,501)
      NP11 = NP11 + 1
C
C------------------------------------------------------------
C  STORE TIME INTERVAL TO COMPUTE MEAN FLOWS
C
      CALL FLWK26(WORK,IUSEW,LEFTW,COMP,501)
      NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  STORE SURCHARGE CURVE.  STORE IN FOLLOWING ORDER:
C    1 - NO. OF INFLOW VALUES
C    2 - NO. OF ELEVATIONS
C    3 - THE VALUES OF INFLOW
C    4 - THE VALUES OF THE ELEVATIONS
C    5 - THE DISCHARGE VALUES
C
      WVAL=NSCQI
      SVAL=NSCEL
      CALL FLWK26(WORK,IUSEW,LEFTW,WVAL,501)
      CALL FLWK26(WORK,IUSEW,LEFTW,SVAL,501)
      NP11 = NP11 + 2
C
      DO 5100 I=1,NSCQI
      CALL FLWK26(WORK,IUSEW,LEFTW,SCQI(I),501)
 5100 CONTINUE
      NP11 = NP11 + NSCQI
C
      DO 5110 I=1,NSCEL
      CALL FLWK26(WORK,IUSEW,LEFTW,SCEL(I),501)
 5110 CONTINUE
      NP11 = NP11 + NSCEL
C
      DO 5120 I=1,NSCQO
      CALL FLWK26(WORK,IUSEW,LEFTW,SCQO(I),501)
 5120 CONTINUE
      NP11 = NP11 + NSCQO
C
C-----------------------------------------------------------
C  STORE ITERATION CONVERGENCE CRITERION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CONV,501)
      NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  STORE DECISION TABLE TYPE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,DTYPE,501)
      NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  STORE NO. OF LINES IN DECISION TABLE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RLINES,501)
      NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  STORE VALUES IN DECISION TABLE
C
      DO 5200 I=1,NVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,VAL(I),501)
 5200 CONTINUE
      NP11 = NP11 + NVAL
C
C-----------------------------------------------------------
C  STORE EVACUATION VARIABLES AS NEEDED
C
      IF(.NOT.NEEDIT(1))GO TO 5210
C
C     STORE TARGET ELEVATION 1
          CALL FLWK26(WORK,IUSEW,LEFTW,HTARG1,501)
          NP11 = NP11 + 1
C
 5210 IF(.NOT.NEEDIT(2)) GO TO 5220
C
C     STORE INFLOW DIFFERENCE 1
          CALL FLWK26(WORK,IUSEW,LEFTW,DIFFQ1,501)
          NP11 = NP11 + 1
C
 5220 IF(.NOT.NEEDIT(3)) GO TO 5230
C
C     STORE DISCHARGE REDUCTION RATE
          CALL FLWK26(WORK,IUSEW,LEFTW,REDUCE,501)
          NP11 = NP11 + 1
C
 5230 IF(.NOT.NEEDIT(4)) GO TO 5240
C
C     STORE TARGET DISCHARGE 1
          CALL FLWK26(WORK,IUSEW,LEFTW,QTARG1,501)
          NP11 = NP11 + 1
C
 5240 IF(.NOT.NEEDIT(5)) GO TO 5250
C
C     STORE TARGET DISCHARGE 2
          CALL FLWK26(WORK,IUSEW,LEFTW,QTARG2,501)
          NP11 = NP11 + 1
C
 5250 IF(.NOT.NEEDIT(6)) GO TO 5260
C
C     STORE INFLOW DIFFERENCE 2
          CALL FLWK26(WORK,IUSEW,LEFTW,DIFFQ2,501)
          NP11 = NP11 + 1
C
 5260 IF(.NOT.NEEDIT(7)) GO TO 5270
C
C     STORE INFLOW DIFFERENCE 3
          CALL FLWK26(WORK,IUSEW,LEFTW,DIFFQ3,501)
          NP11 = NP11 + 1
C
 5270 IF(.NOT.NEEDIT(8)) GO TO 5290
C
C     STORE GATE PARAMETERS IN FOLLOWING ORDER:
C     1) NO. OF ELEVATION VALUES
C     2) NO. OF GATE OPENINGS
C     3) POOL ELEVATION VALUES
C     4) GATE OPENING VALUES
C     5) DISCHARGE VALUES
C     6) TIME INTERVAL FOR RESETTING GATES
C
          X = NGATEL + .01
          Y = NGATEO + .01
          CALL FLWK26(WORK,IUSEW,LEFTW,X,501)
          CALL FLWK26(WORK,IUSEW,LEFTW,Y,501)
          NP11 = NP11 + 2
C
          DO 5272 I=1,NGATEL
          CALL FLWK26(WORK,IUSEW,LEFTW,GATEL(I),501)
 5272     CONTINUE
          NP11 = NP11 + NGATEL
C
          DO 5275 I=1,NGATEO
          CALL FLWK26(WORK,IUSEW,LEFTW,GATEO(I),501)
 5275     CONTINUE
          NP11 = NP11 + NGATEO
C
          DO 5280 I=1,NGATEQ
          CALL FLWK26(WORK,IUSEW,LEFTW,GATEQ(I),501)
 5280     CONTINUE
          NP11 = NP11 + NGATEQ
C
          CALL FLWK26(WORK,IUSEW,LEFTW,GSET,501)
          NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  STORE OPTION FOR REDUCUNG OUTFLOW FOR RISING POOL
C
 5290 CONTINUE
      IF(NGATEL.LE.1 .OR. NGATEO.LE.1) OPT=0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,OPT,501)
      NP11 = NP11 + 1
C
C-----------------------------------------------------------
C  IF RULE CURVE WAS DEFINED IN THIS ROUTINE, STORE THE ENTIRE CURVE,
C  OTHERWISE JUST STORE THE NEGATIVE LOCATION IN THE WORK ARRAY
C
      IF (GETRUL) GO TO 5445
C
C  STORE ZERO TO INDICATE NO RULE CURVE USED.
C
      CALL FLWK26(WORK,IUSEW,LEFTW,0.01,501)
      NP11 = NP11 + 1
      GO TO 6000
C
 5445 CONTINUE
      IF (ICTYPE.GT.1) GO TO 5460
C
C  CURVE WAS DEFINED IN THIS SCHEME
C
      PAIR = NRVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION FOR THIS RULE CURVE DEFINITION
C
      IPOWD(NMDEF(1),1) = NPMENT + NP11 + 1
      IWKWD(NMDEF(1),1) = IUSEW
C
C  STORE CURVE DEFINITION
C
      DO 5450 I=1,NRVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,RVAL(I),501)
 5450 CONTINUE
C
C  STORE RULETIME HERE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RTIME,501)
      NP11 = NP11 + 1
      GO TO 5470
C
C  STORE REFERENCE TO PREVIOUS DEFINITION IN WORK
C
 5460 CONTINUE
      CDELOC = - (LOCCDE+0.01)
      NRVAL = 0
      CALL FLWK26(WORK,IUSEW,LEFTW,CDELOC,501)
C
 5470 CONTINUE
      NP11 = NP11 + NRVAL + 1
C
C-----------------------------------------------------------
C  STORE ADDITIONAL EVACUATION VARIABLES
C
 6000 CONTINUE
C
C     STORE 199302 TO INDICATE MORE VARIABLES ARE NEEDED IN NEW MANUAL
          YRMON=199302.
          CALL FLWK26(WORK,IUSEW,LEFTW,YRMON,501)
          NP11 = NP11 + 1
C
C     STORE HRSCHECK
          IX=HRSCH
          IF(IX.EQ.-9998) THEN
            HRSCH=MINODT+0.01
            IF(NEEDIT(8)) HRSCH=GSET
          ENDIF
          CALL FLWK26(WORK,IUSEW,LEFTW,HRSCH,501)
          NP11 = NP11 + 1
C
C     STORE QCHECK
          CALL FLWK26(WORK,IUSEW,LEFTW,QCHECK,501)
          NP11 = NP11 + 1
C
C     STORE QDIFF
          CALL FLWK26(WORK,IUSEW,LEFTW,QDIFF,501)
          NP11 = NP11 + 1
C
C     STORE HTARGET2
          CALL FLWK26(WORK,IUSEW,LEFTW,HTARG2,501)
          NP11 = NP11 + 1
C
C     STORE HTARGET3
          CALL FLWK26(WORK,IUSEW,LEFTW,HTARG3,501)
          NP11 = NP11 + 1
C
C     STORE REDUCE1
          CALL FLWK26(WORK,IUSEW,LEFTW,REDUC1,501)
          NP11 = NP11 + 1
C
C     STORE REDUCE2
          CALL FLWK26(WORK,IUSEW,LEFTW,REDUC2,501)
          NP11 = NP11 + 1
C
C     STORE QTARGET3
          CALL FLWK26(WORK,IUSEW,LEFTW,QTARG3,501)
          NP11 = NP11 + 1
C
C     STORE MINSCQI
          CALL FLWK26(WORK,IUSEW,LEFTW,SCQIMN,501)
          NP11 = NP11 + 1
C
C     STORE HPREVQ
          CALL FLWK26(WORK,IUSEW,LEFTW,HPREVQ,501)
          NP11 = NP11 + 1
C
C     STORE MINSCQO
          CALL FLWK26(WORK,IUSEW,LEFTW,SCQOMN,501)
          NP11 = NP11 + 1
C
C     STORE QGENMX
          CALL FLWK26(WORK,IUSEW,LEFTW,QGENMX,501)
          NP11 = NP11 + 1
C
C     STORE PEKQO1
          CALL FLWK26(WORK,IUSEW,LEFTW,PEAKQ1,501)
          NP11 = NP11 + 1
C
C     STORE HEVACEND
          CALL FLWK26(WORK,IUSEW,LEFTW,HEVACE,501)
          NP11 = NP11 + 1
C
          GO TO 9999
C
C-----------------------------------------------------------
C  ERROR IN UFLD26
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER26(19,1)
      IF (IERF.EQ.2) CALL STER26(20,1)
      IF (IERF.EQ.3) CALL STER26(21,1)
      IF (IERF.EQ.4) CALL STER26( 1,1)
C
      IF (NCARD.GE.LASTCD) GO TO 9100
      IF (IBLOCK.EQ.1)  GO TO 5
      IF (IBLOCK.EQ.2)  GO TO 10
C
 9100 USEDUP = .TRUE.
C
 9999 CONTINUE
      RETURN
      END
