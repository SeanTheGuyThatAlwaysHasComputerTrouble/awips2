C MEMBER PM0626
C  (from old member FCPM0626)
C
      SUBROUTINE PM0626(WORK,IUSEW,LEFTW,NP06,SPCODE,INPOK,
     .                  LENDSU,JDEST,IERR)
C---------------------------------------------------------------------
C  SUBROUTINE TO READ AND INTERPRET PARAMETER INPUT FOR S/U #06
C    SPILLWAY ROUTING SCHEME
C---------------------------------------------------------------------
C  JTOSTROWSKI - HRL - MARCH 1983
C----------------------------------------------------------------
C
      INCLUDE 'common/comn26'
C
C
      INCLUDE 'common/err26'
C
C
      INCLUDE 'common/fld26'
C
C
      INCLUDE 'common/mult26'
C
C
      INCLUDE 'common/rc26'
C
C
      INCLUDE 'common/read26'
C
C
      INCLUDE 'common/suid26'
C
C
      INCLUDE 'common/suin26'
C
C
      INCLUDE 'common/suky26'
C
C
      INCLUDE 'common/warn26'
C
C
      DIMENSION INPUT(2,11),          LINPUT(11),         QVAL(100),
     . HVAL(100),STYPE(2,2),LSTYPE(2),TTYPE(2,2),LTTYPE(2),ENDSU(2),
     . WORK(1),
     . IP(11)
      LOGICAL ENDFND,TYOK,RPOK,CROK,QOK,HDOK,TOK,ALLOK,
     .     PSOK,INTOK,SLOK,CONVOK,GETGTS,GETSTS,GETMOR,INPOK
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_res/RCS/pm0626.f,v $
     . $',                                                             '
     .$Id: pm0626.f,v 1.1 1995/09/17 18:52:00 dws Exp $
     . $' /
C    ===================================================================
C
C
C
       DATA INPUT/
     .            4HTYPE,4H    ,4HREPL,4HQ   ,4HCRES,4HT   ,
     .            4HELVS,4HQ   ,4HINTE,4HRP  ,4HPASS,4HEL  ,
     .            4HHEAD,4HVSQ ,4HTWCU,4HRVE ,4HCONV,4H    ,
     .            4HQGEN,4H    ,4HQSLU,4HICE /
      DATA LINPUT/1,2,2,2,2,2,2,2,1,1,2/
      DATA NINPUT/11/
      DATA NDINPU/2/
C
      DATA STYPE/4HUNC ,4H    ,4HGATE,4HD   /
      DATA LSTYPE/1,2/
      DATA NSTYPE/2/
C
      DATA TTYPE/4HLINE,4HAR  ,4HLOG ,4H    /
      DATA LTTYPE/2,1/
      DATA NTTYPE/2/
C
      DATA TSPEC/4HTS  /
C
C  INITIALIZE LOCAL VARIABLES AND COUNTERS
C
      NP06 = 0
      TYOK = .FALSE.
      RPOK = .TRUE.
      CROK = .TRUE.
      INTOK = .TRUE.
      PSOK = .TRUE.
      CONVOK = .TRUE.
      SLOK = .TRUE.
      QOK = .TRUE.
      HDOK = .TRUE.
      TOK = .TRUE.
      ALLOK = .TRUE.
      GETMOR = .FALSE.
      INPOK = .FALSE.
C
      GETGTS = .FALSE.
      GETSTS = .FALSE.
C
      TERP = 0.01
      QGEN = 0.00
      QSLUCE = 0.00
      TOLRNS = 0.02
      DFQGEN = 1.01
      DFQSL  = 1.01
      REPLQ = 2E31
C
      NQVAL = 0
      NHVAL = 0
      NTVAL = 0
C
      DO 3 I = 1,11
           IP(I) = 0
    3 CONTINUE
C
      TYPE = -1
C
      CODESP = SPCODE + SULEVL
C
C
      IERR = 0
C
C  PARMS FOUND, LOOKING FOR ENDP
C
      LPOS = LSPEC + NCARD + 1
      LASTCD = LENDSU
      IBLOCK = 1
C
    5 IF (NCARD .LT. LASTCD) GO TO 8
           CALL STRN26(59,1,SUKYWD(1,7),3)
           IERR = 99
           GO TO 9
    8 NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0 ) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,SUKYWD,LSUKEY,NSUKEY,NDSUKY)
      IF (IDEST.EQ.0) GO TO 5
C
C  IDEST = 7 IS FOR ENDP
C
      IF (IDEST.EQ.7.OR.IDEST.EQ.8) GO TO 9
          CALL STRN26(59,1,SUKYWD(1,7),3)
          JDEST = IDEST
          IERR = 89
    9 LENDP = NCARD
C
C  ENDP CARD OR TS OR CO FOUND AT LENDP,
C  ALSO ERR RECOVERY IF NEITHER ONE OF THEM FOUND.
C
C
      IBLOCK = 2
      CALL POSN26(MUNI26,LPOS)
      NCARD = LPOS - LSPEC -1
C
   10 CONTINUE
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
      IF(IERF .GT. 0) GO TO 9000
      NUMWD = (LEN -1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,INPUT,LINPUT,NINPUT,NDINPU)
      IF(IDEST .GT. 0) GO TO 50
      IF(NCARD .GE. LENDP) GO TO 5000
C
C  NO VALID KEYWORD FOUND
C
      CALL STER26(1,1)
      ALLOK = .FALSE.
      GO TO 10
C
C  NOW SEND CONTROL TO PROPER LOCATION FOR PROCESSING EXPECTED INPUT
C
   50 CONTINUE
      GO TO (100,200,300,400,500,600,700,800,900,1000,1100) , IDEST
C
C---------------------------------------------------------------------
C  'TYPE' EXPECTED HERE. IF FOUND, IT MUST BE FOLLOWED BY 'UNC', 'GATED'
C    OR A S/U REFERENCE( EITHER 'SPILLWAY' OR ' FILLSPILL')
C
  100 CONTINUE
      IP(1) = IP(1) + 1
      IF (IP(1).GT.1) CALL STER26(39,1)
C
C  LOOK FOR 'UNC', 'GATED' OR 'SPILLWAY(N) OR FILLSPILL(N)'
C
  110 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD MUST BE CHARACTER
C
      IF (ITYPE.EQ.2) GO TO 120
C
      CALL STER26(1,1)
      GO TO 10
C
C  LOOK FOR MATCH WITH 'UNC' OR 'GATED' FIRST.
C
  120 CONTINUE
      NUMWD = (LEN-1) /4 + 1
      INTY = IKEY26(CHAR,NUMWD,STYPE,LSTYPE,NSTYPE,2)
      IF (INTY.EQ.0) GO TO 150
C
C  TYPE IS EITHER 'UNC' OR 'GATED'. ALL OTHER INPUT IS EXPECTED.
C
      TYPE = INTY - 1 + 0.01
      TYOK = .TRUE.
      GETMOR = .TRUE.
C
C  UPDATE MULTIPLE USE INFORMATION FOR 'SPILLWAY'
C
      NMDEF(6) = NMDEF(6) + 1
      DMCODE(NMDEF(6),6) = CODESP
C
      GO TO 10
C
C  ONLY OTHER SPECIFICATION IS A MULTIPLE REFERENCE TO ANOTHER SPILLWAY
C  OR FILLSPILL SCHEME
C
  150 CONTINUE
      CALL MREF26(6,REFSP,LOCWK,LOCSP,IERSP)
      IF (IERSP.GT.0) GO TO 10
C
      TYPE = - (LOCSP+0.01)
      TYOK = .TRUE.
      GO TO 10
C
C---------------------------------------------------------------------
C  'REPLQ' IS NEXT. IT IS ONLY NEEDED IF WE NEED TO GET FULL
C   DEFINITION OF SPILLWAY SCHEME (I.E. - NO REFERENCE WAS MADE TO A
C   PREVIOUS DEFINITION.
C
  200 CONTINUE
      IP(2) = IP(2) + 1
      IF (IP(2).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 210
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           RPOK = .FALSE.
           GO TO 10
C
C  NEXT FIELD MUST BE REAL POSITIVE VALUE, CONVERTED TO METRIC.
C
  210 CONTINUE
      RPOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 220
      CALL STER26(4,1)
      GO TO 10
C
  220 CONTINUE
      IF (REAL.GT.0.00) GO TO 230
      CALL STER26(61,1)
      GO TO 10
C
C EVERYTHING IS OK
C
  230 CONTINUE
      RPOK = .TRUE.
      REPLQ = REAL/CONVLT
      GO TO 10
C
C------------------------------------------------------------------
C  'CREST' IS NEXT. ONLY NEEDED IF WE NEED FULL SPILLWAY DEFINITION.
C
  300 CONTINUE
      IP(3) = IP(3) + 1
      IF (IP(3).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 310
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           CROK = .FALSE.
           GO TO 10
C
C  THE CREST SPECIFICATION MUST BE REAL AND POSITIVE AND MUST BE
C  WITHIN THE ELEV. VS. STORAGE CURVE
C
  310 CONTINUE
      CROK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 320
      CALL STER26(4,1)
      GO TO 10
C
  320 CONTINUE
      IF (REAL.GT.0.00) GO TO 330
      CALL STER26(61,1)
      GO TO 10
C
C  VALUE MUST BE WITHIN STORAGE CURVE ELEVATION LIMITS
C
  330 CONTINUE
      CREST = REAL/CONVL
      IF (CREST.GT.ELSTOR(1)) GO TO 340
      CALL STER26(63,1)
      GO TO 10
  340 CALL ELST26(CREST,1,IERC)
      IF (IERC.GT.0) GO TO 10
C
C  CREST INFORMATION IS OK
C
      CROK = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'ELVSQ' IS NEXT. IT'S ONLY NEEDED IF WE NEED TO FULLY DEFINE THE
C   SPILLWAY SCHEME.
C
  400 CONTINUE
      IP(4) = IP(4) + 1
      IF (IP(4).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 410
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           QOK = .FALSE.
           GO TO 10
C
C  READ FIRST FIELD AFTER 'ELVSQ'. IF IT'S NUMERIC, GET LIST OF NUMBERS
C   FOR DEFINING CURVE
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'ELVSQ'.
C
  410 CONTINUE
      QOK = .FALSE.
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IQTYPE = ITYPE
      IF (IQTYPE.GT.1) GO TO 460
C
C  REPOSITION TO READ FIRST FIELD AFTER 'ELVSQ'
C
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC - 1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE SPILLWAY RATING CURVE
C
      NQVAL=100
      CALL GLST26(1,1,X,QVAL,X,NQVAL,QOK)
      IF (.NOT.QOK) GO TO 10
C
C  FIVE CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE ELEVATIONS MUST BE BETWEEN THE DEFINED BOUNDARIES OF THE ELEV
C      VS STORAGE CURVE,
C   3) THE ELEVATIONS MUST BE IN ASCENDING ORDER,
C   4) THE DISCHARGES MUST BE IN ASCENDING ORDER,
C   5) THE DISCHARGES MUST BE POSITIVE.
C
      IF (MOD(NQVAL,2).EQ.0) GO TO 420
C
      CALL STER26(40,1)
      GO TO 10
C
  420 CONTINUE
      NHALF = NQVAL/2
      NSEC = NHALF + 1
C
C  SEE IF ELEVATIONS ARE IN ASCENDING ORDER
C
      CALL ASCN26(QVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE IN ASCENDING ORDER
C
      CALL ASCN26(QVAL(NSEC),NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE ALL POSITIVE
C
      DO 440 I=NSEC,NQVAL
      QVAL(I) = QVAL(I)/CONVLT
      IF (QVAL(I).GE.0.00) GO TO 440
C
      CALL STER26(95,1)
      GO TO 10
C
  440 CONTINUE
C
C  SEE IF ELEVATIONS ARE WITHIN BOUNDS OF ELEV VS. STORAGE CURVE
C  IF STORAGE CURVE WAS NOT DEFINED, CALL IT AN ERROR
C
      DO 455 I=1,NHALF
      QVAL(I) = QVAL(I)/CONVL
  455 CONTINUE
C
      CALL ELST26(QVAL,NHALF,IERST)
      IF (IERST.GT.0) GO TO 10
C
C  STORE CODE FOR SPILLWAY RATING IN /MULT26/
C
      NMDEF(2) = NMDEF(2) + 1
      DMCODE(NMDEF(2),2) = CODESP
C
      QOK = .TRUE.
C
      GO TO 495
C
C--------------------------------
C  FIRST FIELD AFTER 'ELVSQ' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
  460 CONTINUE
      CALL MREF26(2,REFCDQ,LOCWK,LOCCDQ,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
  495 CONTINUE
      QOK = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'INTERP' EXPECTED NEXT. IF NOT ENTERED WHEN NEEDED USE DEFAULT. IF
C   NEEDED FOR FULL DEFINITION OF SPILLWAY SCHEME
C
  500 CONTINUE
      IP(5) = IP(5) + 1
      IF (IP(5).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 510
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           INTOK = .FALSE.
           GO TO 10
C
C  ALLOWED FIELDS AFTER 'INTERP' ARE A NULL FIELD, 'LINEAR' OR 'LOG'
C
  510 CONTINUE
      INTOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 590
C
      NUMWD = (LEN-1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,TTYPE,LTTYPE,NTTYPE,2)
      IF (IDEST.GT.0) GO TO 520
      CALL STER26(1,1)
      GO TO 10
C
C  SET INTERPOLATION TYPE
C
  520 CONTINUE
      TERP = IDEST - 1 + 0.01
C
C  EVERYTHING FOR INTERP IS OK
C
  590 CONTINUE
      INTOK = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'PASSEL' IS NEXT. ONLY NEEDED IF FULL DEFINITION IS NEEDED AND THE
C   SPILLWAY IS GATED.
C
  600 CONTINUE
      IP(6) = IP(6) + 1
      IF (IP(6).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 610
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           PSOK = .FALSE.
           GO TO 10
C
C  IF WE'RE ENTERING A FULL DEFINITION, AND SPILLWAY IS NOT GATED, BUT
C  WE'VE FOUND 'PASSEL', CALL IT AN ERROR.
C
  610 CONTINUE
      PSOK = .FALSE.
      IF (TYPE.GT.1.0) GO TO 620
      CALL STRN26(97,1,INPUT(1,1),LINPUT(1))
      GO TO 10
C
C  THE ELEVATION MUST BE REAL, POSITIVE, AND WITHIN ELEVATION VS. STORAG
C   CURVE.
C
  620 CONTINUE
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IF (ITYPE.LE.1) GO TO 630
      CALL STER26(4,1)
      GO TO 10
C
  630 CONTINUE
      IF (REAL.GT.0.00) GO TO 640
      CALL STER26(61,1)
      GO TO 10
C
C  VALUE MUST BE WITHIN STORAGE CURVE ELEVATION LIMITS
C
  640 CONTINUE
      PASSEL = REAL/CONVL
      CALL ELST26(PASSEL,1,IERC)
      IF (IERC.GT.0) GO TO 10
C
C  PASS INFLOW ELEVATION INFORMATION IS OK
C
      PSOK = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'HEADVSQ' IS NEXT IN LINE. ONLY NEEDED IF WE'RE SUPPLYING
C   FULL SPILLWAY DEFINITION.
C
  700 CONTINUE
      IP(7) = IP(7) + 1
      IF (IP(7).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 710
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           HDOK = .FALSE.
           GO TO 10
C
C  HEADVSQ CURVE IS ONLY NEEDED IF WE'RE INPUTTING THE DEFINITION OF THE
C  MAX GENERATION DISCHARGE VS TOTAL GENERATION CURVE.
C
C
C  READ FIRST FIELD AFTER 'HEADVSQ'. IF IT'S NUMERIC, GET LIST OF NUMBER
C   FOR DEFINING CURVE
C  IF IT'S CHARACTER, ASSUME A MULTIPLE USE REFERENCE HAS BEEN ENTERED,
C   SEE IF SPEC IS VALID.
C
C  IN THE 1ST CASE, WE MUST REPOSITION READ POINTER BACK TO READ THE FIR
C  FIELD AFTER 'HEADVSQ'.
C
  710 CONTINUE
      HDOK = .FALSE.
      LPOSST = LSPEC + NCARD
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
      IHTYPE = ITYPE
      IF (IHTYPE.GT.1) GO TO 770
C
C  REPOSITION TO READ FIRST FIELD AFTER 'HEADVSQ'
C
      CALL POSN26(MUNI26,LPOSST)
      NCARD = LPOSST - LSPEC - 1
      NUMFLD = 0
      CALL UFLD26(NUMFLD,IERF)
C
C
C GET LIST OF VALUES FOR DEFINING THE HEAD VS. Q CURVE
C
      NHVAL=100
      CALL GLST26(1,1,X,HVAL,X,NHVAL,HDOK)
      IF (.NOT.HDOK) GO TO 10
C
C  FIVE CHECKS MUST BE MADE ON THE CURVE:
C   1) THE TOTAL NO. OF VALUES INPUT MUST BE EVEN (PAIRS OF VALUES ARE
C      NEEDED,
C   2) THE HEAD VALUES MUST BE IN ASCENDING ORDER,
C   3) THE DISCHARGES MUST BE IN ASCENDING ORDER,
C   4) THE DISCHARGES AND HEAD VALUES MUST BE POSITIVE.
C
      IF (MOD(NHVAL,2).EQ.0) GO TO 730
C
      CALL STER26(40,1)
      GO TO 10
C
  730 CONTINUE
      NHALF = NHVAL/2
      NSEC = NHALF + 1
C
C  SEE IF HEAD VALUES ARE IN ASCENDING ORDER
C
      CALL ASCN26(HVAL,NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF DISCHARGES ARE IN ASCENDING ORDER
C
      CALL ASCN26(HVAL(NSEC),NHALF,0,IERA)
      IF (IERA.GT.0) GO TO 10
C
C  SEE IF ALL VALUES ARE ALL POSITIVE
C
      DO 750 I=1,NHVAL
      CONV = CONVL
      IF (I.GT.NHALF) CONV = CONVLT
      HVAL(I) = HVAL(I)/CONV
      IF (HVAL(I).GE.0.00) GO TO 750
C
      CALL STER26(95,1)
      GO TO 10
C
  750 CONTINUE
C
C  STORE CODE FOR HEAD VS DISCHARGE CURVE IN /MULT26/
C
      NMDEF(3) = NMDEF(3) + 1
      DMCODE(NMDEF(3),3) = CODESP
C
      GO TO 795
C
C--------------------------------
C  FIRST FIELD AFTER 'HEADVSQ' IS CHARACTER. SEE IF IT'S A VALID S/U ID
C  WITH OR WITHOUT PARENTHESES
C
  770 CONTINUE
      CALL MREF26(3,REFCDH,LOCWK,LOCCDH,IERM)
      IF (IERM.GT.0) GO TO 10
C
C  CURVE IS DEFINED OK
C
  795 CONTINUE
      HDOK = .TRUE.
      GO TO 10
C
C-----------------------------------------------------------------------
C  'TWCURVE' IS NEXT IN LINE. ONLY NEEDED IF WE'RE PROVIDING A FULL
C   DEFINITION OF THE SPILLWAY.
C
  800 CONTINUE
      IP(8) = IP(8) + 1
      IF (IP(8).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 810
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           TOK = .FALSE.
           GO TO 10
C
C  TW CURVE IS ONLY NEEDED IF THE MAX GENERATION VS. TOTAL GENERATION
C  CURVE IS BEING DEFINED.
C
  810 CONTINUE
      IF (IP(7).GT.0) GO TO 815
C
      CALL STRN26(99,1,INPUT(1,7),LINPUT(7))
      TOK = .FALSE.
      GO TO 10
C
C  LOOK FOR RATING CURVE NAME
C
  815 CONTINUE
      TOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  SEE IF RATING CURVE HAS BEEN DEFINED WITHIN THE FORECAST SEGMENT
C
      CALL CHEKRC(CHAR,IERR)
      IF (IERR.GT.0) GO TO 10
C
C  SEE IF WE'VE ALREADY DEFINED A TAIL WATER RATING CURVE
C
      CALL CKRC26(1,CHAR,IERR)
      IF (IERR.GT.0) GO TO 10
C
C  CURVE IS REFERRED TO PROPERLY.
C
  895 CONTINUE
      TOK = .TRUE.
      GO TO 10
C
C------------------------------------------------------------------
C  'CONV' IS NEXT. IT'S ONLY NEEDED IF WE'RE PROVIDING A FULL SPILLWAY
C   DEFINITION, AND THE MAX GENERATION RELATION IS USED.
C  USE THE DEFAULT (2%) IF NOT ENTERED.
C
  900 CONTINUE
      IP(9) = IP(9) + 1
      IF (IP(9).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 910
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           CONVOK = .FALSE.
           GO TO 10
C
C  IT'S AN ERROR IF WE FIND 'CONV' AND WE'RE NOT USING THE MAX GEN
C  RELATION.
C
  910 CONTINUE
      IF (IP(7).GT.0) GO TO 915
C
      CALL STRN26(99,1,INPUT(1,7),LINPUT(7))
      CONVOK = .FALSE.
      GO TO 10
C
C  GET NEXT FIELD. ALLOWED FIELDS ARE THE NULL FIELD, OR A REAL POSITIVE
C  VALUE BETWEEN 0.01 AND 1.00
C
  915 CONTINUE
      CONVOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.1) GO TO 9000
      IF (IERF.EQ.1) GO TO 990
C
C  LOOKING FOR REAL, POSITIVE VALUE BETWEEN 0.01 AND 1.00
C
      IF (ITYPE.EQ.1) GO TO 920
      CALL STER26(4,1)
      GO TO 10
C
  920 CONTINUE
      IF (REAL.GE.0.01.AND.REAL.LE.1.00) GO TO 930
      CALL STER26(68,1)
      GO TO 10
C
C  SAVE THE VALUE AS ALL IS OK WITH 'CONV'
C
  930 CONTINUE
      TOLRNS = REAL
C
  990 CONTINUE
      CONVOK = .TRUE.
      GO TO 10
C
C----------------------------------------------------------------------
C  'QGEN' IS NEXT. ONLY NEEDED IF WE'RE NOT USING THE MAXIMUM
C   GENERATION RELATION, AND WE'RE DEFINING THE SPILLWAY.
C
 1000 CONTINUE
      IP(10) = IP(10) + 1
      IF (IP(10).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 1010
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           HDOK = .FALSE.
           GO TO 10
C
C IF TAILWATER RATING CURVE ISN'T NEEDED, IT SHOULDN'T HAVE BEEN
C  ENTERED. CALL IT AN ERROR
C
 1010 CONTINUE
      IF (IP(7).EQ.0) GO TO 1020
C
      CALL STRN26(97,1,INPUT(1,7),LINPUT(7))
      GO TO 10
C
 1020 CONTINUE
      HDOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD CAN BE EITHER 'TS' OR A REAL NUMBER.
C
      IF (ITYPE.GT.1) GO TO 1050
C
C  NUMBER FOUND, IT MUST BE POSITIVE.
C
 1030 CONTINUE
      IF (REAL.GE.0.0) GO TO 1040
C
      CALL STER26(95,1)
      GO TO 10
C
C  QGEN IS OK. CONVERT IT TO METRIC VALUE
C
 1040 CONTINUE
      QGEN = REAL/CONVLT
      GO TO 1090
C
C  CHARACTER FIELD FOUND. MUST BE 'TS' TO INDICATE THAT GENERATION
C  VALUES ARE TO BE TIME-SERIES SPECIFIED.
C
 1050 CONTINUE
      IF (IUSAME(CHAR,TSPEC,1).EQ.1) GO TO 1060
      CALL STRN26(59,1,TSPEC,1)
      GO TO 10
C
C  INDICATE THAT VALUES ARE TS SPECIFIED
C
 1060 CONTINUE
      GETGTS = .TRUE.
C
C  ALL IS OK WITH 'QGEN'
C
 1090 CONTINUE
      HDOK = .TRUE.
      GO TO 10
C
C----------------------------------------------------------------------
C  'QSLUICE' IS NEXT. IF FOUND, IT MUST BE FOLLOWED BY EITHER 'TS'
C   OR THE DISCHARGE VALUE (POSITIVE).
C
 1100 CONTINUE
      IP(11) = IP(11) + 1
      IF (IP(11).GT.1) CALL STER26(39,1)
      IF (GETMOR) GO TO 1110
           IF(IP(1).GT.0) CALL STRN26(60,1,INPUT(1,IDEST),LINPUT(IDEST))
           IF(IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
           SLOK = .FALSE.
           GO TO 10
C
C  IF 'QSLUICE' NOT FOUND, JUST USE DEFAULT OF 0.0.
C
 1110 CONTINUE
      SLOK = .FALSE.
      NUMFLD = -2
      CALL UFLD26(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
C  FIELD CAN BE EITHER 'TS' OR A REAL NUMBER.
C
      IF (ITYPE.GT.1) GO TO 1150
C
C  NUMBER FOUND, IT MUST BE POSITIVE.
C
 1130 CONTINUE
      IF (REAL.GE.0.0) GO TO 1140
C
      CALL STER26(95,1)
      GO TO 10
C
C  QSLUICE IS OK. CONVERT IT TO METRIC VALUE
C
 1140 CONTINUE
      QSLUCE = REAL/CONVLT
      GO TO 1190
C
C  CHARACTER FIELD FOUND. MUST BE 'TS' TO INDICATE THAT SLUICEWAY
C  VALUES ARE TO BE TIME-SERIES SPECIFIED.
C
 1150 CONTINUE
      IF (IUSAME(CHAR,TSPEC,1).EQ.1) GO TO 1160
      CALL STRN26(59,1,TSPEC,1)
      GO TO 10
C
C  INDICATE THAT VALUES ARE TS SPECIFIED
C
 1160 CONTINUE
      GETSTS = .TRUE.
C
C  ALL IS OK WITH 'QSLUICE'
C
 1190 CONTINUE
      SLOK = .TRUE.
      GO TO 10
C
C--------------------------------------------------------------------
C  END OF INPUT. STORE VALUES IN WORK ARRAY IF EVERYTHING WAS ENTERED
C  WITHOUT ERROR.
C
 5000 CONTINUE
C
      IF (IP(1).EQ.0) CALL STRN26(59,1,INPUT(1,1),LINPUT(1))
C
      DO 5005 I = 3,4
           IF (GETMOR.AND.IP(I).EQ.0)
     .     CALL STRN26(59,1,INPUT(1,I),LINPUT(I))
 5005 CONTINUE
C
      IF (IP(5).EQ.0) TERP = 0.01
      IF (TYPE .GT. 0.99 .AND. IP(6).EQ.0)
     .            CALL STRN26(59,1,INPUT(1,6),LINPUT(6))
C
      IF (TYOK.AND.RPOK.AND.CROK.AND.INTOK.AND.PSOK.AND.CONVOK.AND.SLOK.
     . AND.QOK.AND.HDOK.AND.TOK.AND.ALLOK) GO TO 5010
      GO TO 9999
C--------------------------------------------------------
C  IF SPILLWAY DEFINITION WAS REFERENCED TO ANOTHER S/U, JUST STORE
C  THAT REFERENCE NUMBER AND STOP STORING ANY OTHER INPUT.
C
 5010 CONTINUE
C
      INPOK = .TRUE.
C
      IF (TYPE.GT.0.00) GO TO 5020
C
      CALL FLWK26(WORK,IUSEW,LEFTW,TYPE,501)
      NP06 = NP06 + 1
      GO TO 9999
C
C  FROM HERE ON OUT, WE NEED TO STORE THE SPILLWAY DEFINITION.
C  THE DEFINITON WILL VARY VERY SLIGHTLY FOR A GATED SPILLWAY.
C
 5020 CONTINUE
C--------------------------------
C  STORE THE TYPE OF SPILLWAY
C
      CALL FLWK26(WORK,IUSEW,LEFTW,TYPE,501)
      NP06 = NP06 + 1
C
C  STORE LOCATION OF START OF DEFINITION FOR LATER
C  MULTIPLE DEFINITION REFERENCE.
C
      IPOWD(NMDEF(6),6) = NPMENT + NP06
      IWKWD(NMDEF(6),6) = IUSEW
C
C-------------------------------------------
C  STORE THE PEAK REPLACING VALUE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,REPLQ,501)
      NP06 = NP06 + 1
C----------------------------------------------
C  STORE THE CREST ELEVATION
C
      CALL FLWK26(WORK,IUSEW,LEFTW,CREST,501)
      NP06 = NP06 + 1
C--------------------------------------------------
C  STORE THE SPILLWAY RATING CURVE
C
C  IF REFERENCE WAS MADE TO SPILLWAY RATING CURVE, STORE THE NEGATIVE
C  LOCATION. IF IT WAS DEFINED HERE STORE THE CURVE.
C
      IF (IQTYPE.GT.1) GO TO 5030
C
      PAIR = NQVAL/2 + 0.01
CCC ** EV CHANGE ** CHECK THAT NUMBER OF SPILLWAY PTS LE 2*NSE
      IF (NQVAL/4.GT.NSE) CALL STER26(121,1)
      IF (NQVAL/4.GT.NSE) GO TO 9999
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION OF THE DEFINITION OF THIS CURVE
C
      IPOWD(NMDEF(2),2) = NPMENT + NP06 + 1
      IWKWD(NMDEF(2),2) = IUSEW
C
C  STORE DEFINITION OF CURVE
C
      DO 5015 I=1,NQVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,QVAL(I),501)
 5015 CONTINUE
      NP06 = NP06 + NQVAL + 1
      GO TO 5040
C
C  STORE REFERENCE TO CURVE IN WORK ARRAY
C
 5030 CONTINUE
      CDQLOC = - (LOCCDQ+0.01)
      CALL FLWK26(WORK,IUSEW,LEFTW,CDQLOC,501)
      NP06 = NP06 + 1
C-----------------------------------------------------
C  STORE INTERPOLATION TYPE
C
 5040 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,TERP,501)
      NP06 = NP06 + 1
C----------------------------------------------
C  IF SPILLWAY IS GATED, STORE THE ELEVATION TO PASS INFLOW
C
      IF (TYPE.LT.0.99) GO TO 5200
C
      CALL FLWK26(WORK,IUSEW,LEFTW,PASSEL,501)
      NP06 = NP06 + 1
C------------------------------------------------------------------
C  STORE INFORMATION FOR HEAD VS. DISCHARGE CURVE
C
 5200 CONTINUE
C
C  ONLY NEED TO STORE A VALUE OF 0.01 FOR THE NUMBER OF VALUES IN THIS
C  CURVE IF THE CURVE IS NOT NEEDED OR WAS NOT DEFINED.
C
       IF (IP(7).EQ.0) GO TO 5450
C
C  IF THE CURVE WAS REFERENCED TO ANOTHER S/U, JUST STORE THAT REFERENCE
C  LOCATION.
C
      IF (IHTYPE.GT.1) GO TO 5230
C
C  STORE DEFINITION OF THE HEAD VS. Q CURVE
C
      PAIR = NHVAL/2 + 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,PAIR,501)
C
C  STORE LOCATION FOR THIS CURVE DEFINITION
C
      IPOWD(NMDEF(3),3) = NPMENT + NP06 + 1
      IWKWD(NMDEF(3),3) = IUSEW
C
C  STORE CURVE
C
      DO 5220 I=1,NHVAL
      CALL FLWK26(WORK,IUSEW,LEFTW,HVAL(I),501)
 5220 CONTINUE
      NP06 = NP06 + NHVAL + 1
      GO TO 5300
C
C  STORE REFERENCE TO CURVE IN WORK ARRAY
C
 5230 CONTINUE
      CDHLOC = - (LOCCDH+0.01)
      CALL FLWK26(WORK,IUSEW,LEFTW,CDHLOC,501)
      NP06 = NP06 + 1
C
C------------------------------------------------------------
C  STORE TAILWATER RATING CURVE NAME.
C
 5300 CONTINUE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,RCID26(1,1),501)
      CALL FLWK26(WORK,IUSEW,LEFTW,RCID26(2,1),501)
      NP06 = NP06 + 2
C
C----------------------------------------
C  STORE TOLERANCE VALUE FOR COMPUTING MAXIMUM DISCHARGE. ONLY NEEDED
C  IF MAX Q VS. TOTAL Q. WAS USED
C
 5400 CONTINUE
C
      CALL FLWK26(WORK,IUSEW,LEFTW,TOLRNS,501)
      NP06 = NP06 + 1
      GO TO 5600
C
C---------
C  HEAD VS. Q CURVE WAS NOT DEFINED. JUST STORE A ZERO FOR THE NUMBER
C  OF ITEMS IN THE CURVE DEFINITION.
C
 5450 CONTINUE
      HVALN = 0.01
      CALL FLWK26(WORK,IUSEW,LEFTW,HVALN,501)
      NP06 = NP06 + 1
C
C-------------------------------------------------
C  SINCE WE'RE NOT USING THE MAX GENERATION RELATION, WE NEED TO STORE
C  THE CONSTANT GENERATION DISCHARGE.
C
 5500 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,QGEN,501)
      NP06 = NP06 + 1
C-------------------------------------------------------
C  STORE THE VALUE OF THE CONSTANT SLUICEWAY DISCHARGE.
C
 5600 CONTINUE
      CALL FLWK26(WORK,IUSEW,LEFTW,QSLUCE,501)
      NP06 = NP06 + 1
      GO TO 9999
C
C---------------------------------------------------------------------
C  ERROR IN UFLD26
C
C
C--------------------------------------------------------------
C  ERROR IN UFLD26
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER26(19,1)
      IF (IERF.EQ.2) CALL STER26(20,1)
      IF (IERF.EQ.3) CALL STER26(21,1)
      IF (IERF.EQ.4) CALL STER26( 1,1)
C
      IF (NCARD.GE.LASTCD) GO TO 9100
      IF (IBLOCK.EQ.1)  GO TO 5
      IF (IBLOCK.EQ.2)  GO TO 10
C
 9100 USEDUP = .TRUE.
C
 9999 CONTINUE
      RETURN
      END
