C MODULE MSACBA
C-----------------------------------------------------------------------
C
C
C     DESC - PERFORMS THE SACBASEF MOD
C
      SUBROUTINE MSACBA(NCARDS,MODCRD,P,MP,IDATE,IHZERO)
C
      CHARACTER*8 OPNAME,BLANK8,MODNAM
      LOGICAL FIRST
      INCLUDE 'ufreex'
      INCLUDE 'common/fmodft'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      COMMON/FSACCO/NUMCOS,SACCOS(15,10)
C
      DIMENSION MODCRD(20,NCARDS),P(MP),IFIELD(3)
      DIMENSION OLDOPN(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/msacba.f,v $
     . $',                                                             '
     .$Id: msacba.f,v 1.3 1998/07/02 20:49:57 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'SACBASEF'/
C
      CALL FSTWHR(8HMSACBA  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG SWITCH
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HSACB)
C
      IF(IBUG.GT.0)WRITE(IODBUG,10)IDATE
10    FORMAT(1H0,10X,'** ENTERING MSACBA ** - IDATE=',I11)
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
      IF (IDATE.LE.ICOMP) GOTO 20
         IF (MODWRN.EQ.0) GOTO 250
         ITYPE=2
         CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
         GOTO 250
C
C     SEE IF DATE IS WITHIN RUN PERIOD, PLUS OR MINUS 12 HOURS
C
20    ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
      IF(ISTHR-12.LE.IDATE.AND.IENHR+12.GE.IDATE)GO TO 40
C
C     DATE NOT WITHIN ALLOWABLE WINDOW
C
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,30)IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC,
     1IM2,ID2,IY2,IH2,MODTZC
30    FORMAT(1H0,10X,'**WARNING** THE DATE FOR CHANGES ENTERED IN THE ',
     1 'SACBASEF MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS NOT WITHIN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 250
C
40    CONTINUE
C
C     READ CARD - IF COMMAND, LEAVE - IF COMMAND AND 1ST CARD, ERROR
C
      FIRST=.TRUE.
C
      IF(NRDCRD.EQ.NCARDS)GO TO 60
C
50    IF(NRDCRD.EQ.NCARDS)GO TO 250
C
      OPNAME=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 80
C
      IF(.NOT.FIRST)GO TO 250
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
60    IF(MODWRN.EQ.1)
     .WRITE(IPR,70)
70    FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1  'SACBASEF MOD.  PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 250
C
80    FIRST=.FALSE.
      NRDCRD=NRDCRD+1
C
C     NOW READ 2ND FIELD - MUST BE A REAL NO. OR INTEGER
C
      NFLD=1
      ISTRT=-3
      NCHAR=3
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,IVALUE,VALUE,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 100
C
C     ERROR - DATA EXPECTED - PROCESS NEXT CARD
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,90)(MODCRD(I,NRDCRD),I=1,20)
90    FORMAT(1H0,10X,'**WARNING** IN THE SACBASEF MOD - NOT ENOUGH ',
     1  'FIELDS ON SUBSEQUENT CARD.  THE CARD BEING PROCESSED IS:'/
     2  11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
100   IF(ITYPE.LT.2.AND.NREP.EQ.-1)GO TO 120
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,110)(MODCRD(I,NRDCRD),I=1,20)
110   FORMAT(1H0,10X,'**WARNING** IN SACBASEF MOD - INVALID VALUE ',
     1  'FOUND, THE CARD BEING PROCESSED IS:'/11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
120   IF(VALUE.GE.0.)GO TO 140
C
C     BAD BASEFLOW ADJUSTMENT VALUE ENTERED
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,130)VALUE
130   FORMAT(1H0,10X,'**WARNING** IN SACBASEF MOD - VALUE IS OUT OF ',
     1 'VALID RANGE '/11X,'VALUE = ',G10.4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
140   CONTINUE
C
C     LOOK FOR NEXT FIELD
C
      ISTRT=-3
      NCHAR=3
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTEGR,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
C     IF NO SLASH FOUND - STORE VALUE IN CB WITH BLANK OPER NAME
C
      IF(ISTRT.EQ.-2)GO TO 180
C
C     FIELD FOUND - MUST BE A SLASH
C
      IF(LEN.EQ.1.AND.IFIELD(1).EQ.ISLASH)GO TO 160
C
C     FIELD IS NOT SLASH - ERROR
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,150)(MODCRD(I,NRDCRD),I=1,20)
150   FORMAT(1H0,10X,'**WARNING** A SLASH WAS EXPECTED AS THE THIRD ',
     1 'FIELD OF THE FOLLOWING MOD CARD:'/11X,20A4,/11X,
     2 'THIS CARD IS IGNORED AND PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
160   CONTINUE
C
C     SLASH FOUND - NOW READ OPERATION NAME
C
      ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTEGR,REAL,
     1  NCHAR,OPNAME,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
C     IF NAME FOUND - STORE IN CB WITH OPER NAME
C
      IF(ISTRT.NE.-2)GO TO 180
C
C     NO FIELD FOUND FOR OPERATION NAME - ERROR
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,170)(MODCRD(I,NRDCRD),I=1,20)
170   FORMAT(1H0,10X,'**WARNING** NO OPERATION NAME WAS FOUND AFTER ',
     1 'THE SLASH ON THE FOLLOWING MOD CARD:'/11X,20A4/11X,
     2 'THIS CARD IS IGNORED AND PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
180   CONTINUE
C
C     SEE IF ANY SETS OF CARRYOVER IN CB /FSACCO/
C
      IF(NUMCOS.GT.0)GO TO 200
C
C     NONE IN CB - JUST ADD THIS CARRYOVER TO CB
C
      NUMCOS=1
      CALL UMEMOV(OPNAME,SACCOS(1,1),2)
      SACCOS(3,1)=IDATE+0.01
      CALL UMEMST(-999.,SACCOS(4,1),12)
      SACCOS(13,1)=VALUE
C
      IF(IBUG.GT.0)WRITE(IODBUG,190)NUMCOS,((SACCOS(J,I),J=1,15),
     1  I=1,NUMCOS)
190   FORMAT(1H0,10X,'IN SUBROUTINE MSACBA - NUMCOS=',I5/
     1 (11X,'SACCOS=',1X,2A4,F8.0,12F8.2))
      GO TO 50
C
200   CONTINUE
C
C     SEE IF OPER NAME AND DATE MATCHES ANY VALUES CURRENTLY IN CB
C
      DO 210 I=1,NUMCOS
      IF(IUSAME(OPNAME,SACCOS(1,I),2).EQ.0)GO TO 210
C
C     NAME MATCHES - NOW CHECK DATE
C
      IF(IFIX(SACCOS(3,I)).NE.IDATE)GO TO 210
C
C     DATES MATCH TOO - CHANGE VALUE IN CB
C
      SACCOS(13,I)=VALUE
      GO TO 240
C
210   CONTINUE
C
C     NO MATCH FOR OPER NAME AND DATE - ADD TO CB IF THERE IS ROOM
C
      IF(NUMCOS.LT.10)GO TO 230
C
C     NOT ENOUGH ROOM
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,220)
220   FORMAT(1H0,10X,'**WARNING** NOT ENOUGH ROOM IN COMMON BLOCK ',
     1 '/FSACCO/'/11X,'TO HOLD A NEW BASEFLOW MULTIPLIER.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 240
C
C     ENOUGH ROOM - ADD
C
230   NUMCOS=NUMCOS+1
      CALL UMEMOV(OPNAME,SACCOS(1,NUMCOS),2)
      SACCOS(3,NUMCOS)=IDATE+0.01
      CALL UMEMST(-999.,SACCOS(4,NUMCOS),12)
      SACCOS(13,NUMCOS)=VALUE
C
240   IF(IBUG.GT.0)WRITE(IODBUG,190)NUMCOS,((SACCOS(J,I),J=1,15),
     1  I=1,NUMCOS)
      GO TO 50
C
250   CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      IF(IBUG.GT.0)WRITE(IODBUG,260)NUMCOS
260   FORMAT(11X,'** LEAVING MSACBA ** - NUMCOS=',I3)
C
      RETURN
      END
