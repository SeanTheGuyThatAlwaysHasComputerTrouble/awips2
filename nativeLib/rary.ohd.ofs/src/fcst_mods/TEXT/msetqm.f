C MODULE MSETQM
C-----------------------------------------------------------------------
C
C
C     DESC - THIS SUBROUTINE PERFORMS THE SETQMEAN MOD
C
      SUBROUTINE MSETQM(MP,P,NCARDS,MODCRD,IIDATE,LLDATE,
     1  NXTOPN,NXTNAM,IHZERO)
C
      LOGICAL FIRST,M126ON
      CHARACTER*8 NXTNAM,OPID,BLANK8,MODNAM
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fmodft'
      COMMON/MOD126/M126ON,MJ126,NVM126,VM126(744)
C
      DIMENSION P(MP),VALUES(744),TEMP1(744)
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/msetqm.f,v $
     . $',                                                             '
     .$Id: msetqm.f,v 1.7 1998/07/02 20:50:37 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'SETQMEAN'/
C
      CALL FSTWHR(8HMSETQM  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG FLAG
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HSETQ)
C
      IF(IBUG.GT.0)WRITE(IODBUG,10)IIDATE,NXTOPN,NXTNAM
10    FORMAT(1H0,10X,'*** SUBROUTINE MSETQM ENTERED *** - IIDATE=',
     1 I11,', NXTOPN=',I3,', NXTNAM=',1X,A8)
C
      IF(NXTOPN.NE.26)GO TO 390
C
      IDATE=IABS(IIDATE)
      LDATE=IABS(LLDATE)
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
C
C  CHECK IF DATE IS LESS THAN LASTCOMPDATE OR LSTCMPDY DATE
C  AND LASTCOMPDATE EQUALS LSTCMPDY DATE FOR SETQMEAN MOD
C
      if(idate.le.ldate) goto 20
      if(ldate.eq.icomp) goto 20
c     IF((IDATE.LE.LDATE).OR.(IDATE.LE.ICOMP)) GOTO 20
c     IF (LDATE.EQ.ICOMP) GOTO 20
C
         ITYPE=4
C        IF(MODWRN.EQ.0) GOTO 999
         CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
         GOTO 390
C
C     SEE IF DATE IS WITHIN RUN PERIOD
C
20    ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
C     IF(IENHR.GE.IDATE.AND.ISTHR.LE.IDATE)GO TO 40
      IF(IENHR.GE.IDATE) GOTO 40
C
C     START DATE FOR CHANGES AFTER ALLOWABLE WINDOW
C
25    CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,30)IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC,
     1IM2,ID2,IY2,IH2,MODTZC
30    FORMAT(1H0,10X,'**WARNING** THE STARTING DATE FOR CHANGES ',
     1 'ENTERED IN THE ',
     1 'SETQMEAN MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS NOT WITHIN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 390
C
C     CALL SUBROUTINE TO READ VALUES
C
40    MXVALS=744
C
C     READ CARD - IF COMMAND LEAVE - IF COMMAND AND 1ST CARD ERROR
C
      FIRST=.TRUE.
      IF(NRDCRD.EQ.NCARDS)GO TO 60
C
50    IF(NRDCRD.EQ.NCARDS)GO TO 390
C
      OPID=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 80
C
      IF(.NOT.FIRST)GO TO 390
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
60    IF(MODWRN.EQ.1)WRITE(IPR,70)
70    FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1 'SETQMEAN MOD.  PROCESSING CONTINUES.')
      GO TO 380
C
80    FIRST=.FALSE.
C
C     CALL SUBROUTINE TO READ VALUES
C
      NFLD=1
      NRDCRD=NRDCRD+1
C     IF(NRDCRD.EQ.NCARDS)GO TO 390
C
      CALL MRDVAL(NCARDS,MODCRD,NFLD,MXVALS,NVALS,VALUES,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,90)ISTAT,FIRST,NVALS
90    FORMAT(11X,'**IN MSETQM** AFTER CALL TO MRDVAL - ISTAT=',I3,
     1 ', FIRST=',L4,', NVALS=',I2)
      IF(IBUG.GT.0.AND.NVALS.GT.0.AND.ISTAT.NE.-1)WRITE(IODBUG,100)
     1 (VALUES(I),I=1,NVALS)
100   FORMAT(11X,'VALUES='/(11X,10G10.2))
C
C     ISTAT RETURNED FROM MRDVAL MEANS
C       =0, VALUES READ OK, NO ADDITIONAL FIELDS ON CARD
C       =2, VALUES READ OK, ADDITIONAL FIELDS ON CARD
C       =-1, NO VALUES ENTERED
C       ELSE, TOO MANY VALUES ENTERED
C
      IF(ISTAT.EQ.0)GO TO 200
      IF(ISTAT.EQ.2)GO TO 140
      IF(ISTAT.EQ.-1)GO TO 120
C
      IF(MODWRN.EQ.0)GO TO 200
      WRITE(IPR,110)MXVALS,NVALS,(MODCRD(I,NRDCRD),I=1,20)
110   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - MORE THAN ',
     1 I3,' VALUES ENTERED.'/11X,'THE FIRST ',I3,' VALUES ENTERED WILL',
     2 ' BE USED.'/11X,'THE CURRENT CARD IMAGE IS'/11X,20A4)
      CALL WARN
      GO TO 200
C
120   IF(MODWRN.EQ.0)GO TO 50
      WRITE(IPR,130)(MODCRD(I,NRDCRD),I=1,20)
130   FORMAT(1H0,10X,'**WARNING** ',
     1  'NO VALUES ENTERED ON A SUBSEQUENT CARD FOR SETQMEAN MOD'/
     2  11X,'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 380
C
C     HAVE ADDITIONAL FIELDS - LOOK FOR A SLASH (/) AND
C     AN OPERATION NAME - REPROCESS CURRENT FIELD TO SEE IF A SLASH
C
140   ISTRT=-1
      NCHAR=1
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(IFIELD.EQ.ISLASH)GO TO 160
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,150)(MODCRD(I,NRDCRD),I=1,20)
150   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - A SLASH ',
     1 'WAS NOT FOUND WHERE EXPECTED ON THE FOLLOWING CARD'/
     2 11X,20A4/11X,'NO CHANGES ENTERED ON THIS CARD WILL BE MADE')
      GO TO 380
C
C     NOW READ OPERATION NAME
C
160   ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,OPID,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 180
      IF(MODWRN.EQ.0)GO TO 50
      WRITE(IODBUG,170)(MODCRD(I,NRDCRD),I=1,20)
170   FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 380
180   CONTINUE
C
C     CHECK THAT OPERATION NAME ENTERED MATCHES NXTNAM -
C     IF NOT, READ NEXT CARD
C
      IF(IBUG.GT.0)WRITE(IODBUG,190)OPID,NXTNAM
190   FORMAT(11X,'COMPARING THE OPERATION NAME ENTERED - ',A8,
     1 ' WITH THE NEXT OPERATION NAME - ',A8)
      IF(OPID.EQ.NXTNAM)GO TO 200
      GO TO 50
C
C     FIND START OF SECOND PORTION OF P ARRAY FOR THE OPERATION
C
200   LOCOPN=0
      CALL FSERCH(26,NXTNAM,LOCOPN,P,MP)
C
      IF(LOCOPN.GT.0)GO TO 220
C
C     SHOULD NEVER GET HERE - MEANS PROBLEM IN P ARRAY
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,210)NXTNAM
210   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - CANNOT FIND ',
     1 'RES-SNGL OPERATION ',A8,' IN THE P ARRAY.')
      GO TO 380
C
C     CHECK TIME PERIOD AGAINST RUN PERIOD - PRINT WARNING ONLY IF
C     ENTIRE PERIOD BEING CHANGED IS OUTSIDE OF RUN PERIOD
C
C     GET TIME INTERVAL FOR RES-SNGL OPERATION FROM POSITION 7
C     OF THE SECOND PORTION OF THE P ARRAY
C
220   LOCP=LOCOPN-1
      IDT=P(LOCP+7)
      NVPDT=1
C
C     CHECK TO SEE IF ALL VALUES IN VALUES() ARRAY ARE USED OR GET
C     TRUNCATED
C
      IF (IDATE.GT.ISTHR) GOTO 225
C
      NDEL=((ISTHR-IDATE+(IDT/2))/IDT) + 1
      IDATE=ISTHR
      DO 221 III=1,MXVALS
         TEMP1(III)=0.0
221   CONTINUE
      JJ=0
      DO 222 IIII=NDEL+1,NVALS
         TEMP1(JJ+1)=VALUES(IIII)
         JJ=JJ+1
222   CONTINUE
C
      CALL UMEMOV(TEMP1,VALUES,MXVALS)
      NVALS=JJ
C
      if (nvals.gt.0) goto 333
C
      IF (LDATE.LT.ISTHR) THEN
         IDATE=IABS(IIDATE)
         GOTO 25
         ENDIF
c
      IF (MODWRN.EQ.0) GOTO 380
c
      IXDA=(IABS(IIDATE)/24)+1
      IXHR=IABS(IIDATE)-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
c
      CALL MDYH2(IDA,IHZERO,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
c
      WRITE(IPR,224)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC
224   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - THERE ARE NO ',
     1'VALUES AFTER RESETTING THE START DATE ON THE MOD CARD (',I2,
     2'/',I2,'/',I4,'-'I2,1X,A4,')',/,25X,'TO THE STARTRUN ',
     3'TECHNIQUE (',I2,'/',I2,'/',I4,'-',I2,1X,A4,')') 
      GOTO 380
C
  333 continue
c
      if (modwrn.eq.0) goto 225
c
      IXDA=(IABS(IIDATE)/24)+1
      IXHR=IABS(IIDATE)-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
C
      CALL MDYH2(IDA,IHZERO,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      WRITE(IPR,444)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC,NDEL
444   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - START DATE (',I2,
     1  '/',I2,'/',I4,'-',I2,1X,A4,') IS BEFORE START RUN DATE (',I2,
     2  '/',I2,'/',I4,'-',I2,1X,A4,')'/,25X,'THE FIRST ',I4,' VALUE(S)',
     3  ' BEFORE AND AT START DATE ON THE MOD CARD ARE IGNORED.')
      CALL WARN
C
225   CONTINUE
C   
      IF (LDATE.GE.ICOMP) GOTO 229
c     if (ldate.le.icomp.and.idate.ge.isthr) goto 229
C
c     NOFF=(ICOMP-LDATE+(IDT/2))/IDT
      nslect=((ldate-idate+(idt/2))/idt) + 1
      n1=nslect
      nvalso=nvals
      if (nslect.gt.nvals) nslect=nvals
      DO 226 LL=1,MXVALS
         TEMP1(LL)=0.0
226   CONTINUE
      KK=0
      DO 227 LLL=1,nslect
         TEMP1(KK+1)=VALUES(LLL)
         KK=KK+1
227   CONTINUE
C
      NVALS=KK
      CALL UMEMOV(TEMP1,VALUES,MXVALS)
C     
      if (nvalso.le.n1) goto 229
      IF (MODWRN.EQ.0) GOTO 229
c
      ndiff=nvalso-n1
c
      IXDA=ICOMP/24+1
      IXHR=ICOMP-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
c
      IXDA=LDATE/24+1
      IXHR=LDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
C
C
      WRITE(IPR,228)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC,ndiff
228   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - LSTCMPDY (',I2,
     1  '/',I2,'/',I4,'-',I2,1X,A4,') IS BEYOND VALID DATE (',I2,'/',I2,
     2  '/',I4,'-',I2,1X,A4,')'/,25X,'THE ',I2,' VALUE(S) AFTER VALID ',
     3  'DATE ARE IGNORED.')
      CALL WARN
C
C     IF START HOUR NOT ENTERED - USE DEFAULT VALUE OF 12Z
C     IF START HOUR ENTERED - SET TO CLOSEST DT OF TIME SERIES
C
C     IF HOUR ENTERED IIDATE LESS THAN ZERO
C
  229 continue
c
      IF(IIDATE.LT.0)GO TO 230
C
C     HOUR NOT ENTERED - IDATE SHOULD BE DIVISIBLE BY 24
C
      JSTHR=IDATE
      GO TO 240
C
230   CONTINUE
C
C     HOUR ENTERED - SET TO NEAREST DT
C
      JSTHR=MISTDT(IDATE,IDT)
C
240   CONTINUE
C
C     NOW COMPUTE ENDING HOUR FOR TIME SERIES VALUES ENTERED
C
      ISPAN=IDT*(((NVALS-1)/NVPDT)*NVPDT)
      JENHR=JSTHR+ISPAN
C
C     NOW SEE IF ANY OF PERIOD ENTERED IS WITHIN THE CURRENT RUN PERIOD
C
      IF(IBUG.GT.0)WRITE(IODBUG,250)ISTHR,IENHR,JSTHR,JENHR,IDA,IHR,
     1 LDA,LHR,IDADAT,IHZERO,IDT,NVALS,NVPDT,ISPAN
250   FORMAT(11X,'CHECKING TIME PERIOD -  ISTHR, IENHR, JSTHR, JENHR'/
     1 33X,4I7/11X,'IDA,  IHR,  LDA,  LHR,  IDADAT,  IHZERO,  IDT'/
     2 8X,4I6,I8,I9,I6/11X,'NVALS, NVPDT, ISPAN'/
     3 11X,I4,I7,I7)
C
      IF(JSTHR.GT.IENHR.OR.JENHR.LT.ISTHR)GO TO 260
C
C     SOME OF PERIOD BEING CHANGED IS WITHIN THE RUN PERIOD
C
      GO TO 280
C
260   CONTINUE
C
C     NONE OF THE PERIOD BEING CHANGED IS WITHIN THE RUN PERIOD
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,270)NXTNAM
270   FORMAT(1H0,10X,'**WARNING** NONE OF THE CHANGES REQUESTED FOR ',
     1 'RES-SNGL OPERATION ',A8,1H ,
     2 'ARE WITHIN THE CURRENT RUN PERIOD.')
      GO TO 380
C
280   CONTINUE
C
C     SEE IF ANY VALUES ENTERED ARE MISSING - NOT ALLOWED
C
      DO 320 I=1,NVALS
      IF(IFMSNG(VALUES(I)).EQ.0)GO TO 300
      IF(MODWRN.EQ.1)
     .WRITE(IPR,290)NXTNAM,I
290   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - FOR RES-SNGL ',
     1 'OPERATION ',A8/11X,'VALUE NUMBER ',I3,' IS THE MISSING ',
     2 'DATA SYMBOL - MISSING DATA ARE NOT ALLOWED FOR THIS MOD.'/
     3  11X,'NO CHANGES WILL BE MADE TO THIS OPERATION.')
      GO TO 380
C
300   IF(VALUES(I).GE.0)GO TO 320
      IF(MODWRN.EQ.1)
     .WRITE(IPR,310)NXTNAM,I
310   FORMAT(1H0,10X,'** WARNING ** IN SETQMEAN MOD - FOR RES-SNGL ',
     1 'OPERATION ',A8/11X,'VALUE NUMBER ',I3,' IS LESS THAN ',
     2 'ZERO - NEGATIVE DATA ARE NOT ALLOWED FOR THIS MOD.'/
     3  11X,'NO CHANGES WILL BE MADE TO THIS OPERATION.')
      GO TO 380
C
320   CONTINUE
C
C     STORE INFO IN COMMON BLOCK /MOD126/
C
      M126ON=.TRUE.
      MJ126=JSTHR
      NVM126=NVALS
C
C     GET UNITS CONVERSION FACTORS IF NEEDED
C
      IF(IUMGEN.EQ.1)GO TO 350
C
      CALL FCONVT(4HCMS ,4HL3/T,EUNITS,XMULT,XADD,IER)
C
C     CONVERT CFS TO CMS
C
      IF(IBUG.GT.0)WRITE(IODBUG,330)NVALS,JSTHR
330   FORMAT(11X,'STORING ',I4,' VALUES IN VM126 FOR JSTHR =',I11,
     1 '.  CHANGING UNITS FROM CFS TO CMS.')
      DO 340 I=1,NVALS
340   VM126(I)=(VALUES(I)-XADD)/XMULT
      GO TO 50
C
C     NO CONVERSION NEEDED
C
350   IF(IBUG.GT.0)WRITE(IODBUG,360)NVALS,JSTHR
360   FORMAT(11X,'STORING ',I4,' VALUES IN VM126 FOR JSTHR =',I11,
     1 '.  NO UNITS CONVERSION.')
      DO 370 I=1,NVALS
370   VM126(I)=VALUES(I)
      GO TO 50
C
380   CONTINUE
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
390   CONTINUE
      IF(IBUG.GT.0)WRITE(IODBUG,400)M126ON,MJ126,NVM126
400   FORMAT(11X,'*** LEAVING MSETQM *** - M126ON=',L4,', MJ126=',I11,
     1 ', NVM126=',I5)
      IF(IBUG.GT.0.AND.NVM126.GT.0)
     1 WRITE(IODBUG,410)(VM126(I),I=1,NVM126)
410   FORMAT(11X,'VM126='/(11X,10G10.2))
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      RETURN
      END
