c$pragma c (chkdollarsign)
C MODULE MRRICH
C-----------------------------------------------------------------------
C
C
C
C     DESC - THIS SUBROUTINE PERFORMS THE RRICHNG MOD
C
      SUBROUTINE MRRICH(MP,P,MTS,TS,MD,D,NCARDS,MODCRD,IIDATE,
     1  LLDATE,NXTOPN,NXTNAM,IHZERO)
C
      LOGICAL FIRST
      CHARACTER*8 OPTYPE,TSID,NXTNAM,OPID,BLANK8,OPTEMP,MODNAM
C
      EQUIVALENCE (TSID,TSID4(1))
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fmodft'
C
      DIMENSION P(MP),TS(MTS),D(MD),VALUES(744),TSID4(2),TEMP1(744)
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS)
      DIMENSION NOPS(8),LOCS(3,8),Modstmp(20)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mrrich.f,v $
     . $',                                                             '
     .$Id: mrrich.f,v 1.10 2004/09/09 11:42:27 aivo Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'RRICHNG '/
C
      CALL FSTWHR(8HMRRICH  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG FLAG
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HRRIC)

C
      IF(IBUG.GT.0)WRITE(IODBUG,10)IIDATE,NXTOPN,NXTNAM
   10 FORMAT(1H0,10X,'*** SUBROUTINE MRRICH ENTERED ***  IIDATE=',I11,
     1 ', NXTOPN=',I3,', NXTNAM= ',A8)
C
C     GET LIST OF VALID RAINFALL/RUNOFF OPERATIONS
C
      MXOPS=8
      CALL MLDRRO(MXOPS,NUMOPS,NOPS,LOCS)
C
      IF(IBUG.EQ.0)GO TO 50
      WRITE(IODBUG,20)NUMOPS
   20 FORMAT(11X,'THE NUMBER OF VALID RAINFALL/RUNOFF OPERATIONS ',
     1 'FROM MLDRRO IS ',I2)
      IF(NUMOPS.GT.0)WRITE(IODBUG,30)(NOPS(I),I=1,NUMOPS)
   30 FORMAT(11X,'NOPS=',10I5)
      IF(NUMOPS.GT.0)WRITE(IODBUG,40)((LOCS(J,I),J=1,3),I=1,NUMOPS)
   40 FORMAT(11X,'LOCS=',20I5)
C
   50 IF(NUMOPS.LT.1)GO TO 530
C
      DO 60 IOPER=1,NUMOPS
      IF(NXTOPN.EQ.NOPS(IOPER))GO TO 70
   60 CONTINUE
      IF (NXTOPN.EQ.41) GOTO 70
      IF (NXTOPN.EQ.43) GOTO 70
      GO TO 530
C
   70 IF(IBUG.GT.0)WRITE(IODBUG,80)IOPER
   80 FORMAT(11X,'IOPER=',I5)
C
C   CHECK IF DATE IS LESS THAN OR EQUAL TO LASTCMPDATE OR LSTCMPDY VALUE
C
      IDATE=IABS(IIDATE)
      LDATE=IABS(LLDATE)
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
      if(idate.le.ldate) goto 90
      if(ldate.eq.icomp) goto 90
c     IF ((IDATE.LE.LDATE).OR.(IDATE.LE.ICOMP)) GOTO 90
c     IF (LDATE.EQ.ICOMP) GOTO 90
         IF (MODWRN.EQ.0) GOTO 530
         ITYPE=4
         CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
         GOTO 530
C
C     SEE IF DATE IS WITHIN RUN PERIOD
C
   90 ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
C     IF(IDATE.GE.ISTHR.AND.IDATE.LE.IENHR) GOTO 110
      IF(IENHR.GE.IDATE) GOTO 110
C
C     START DATE FOR CHANGES AFTER ALLOWABLE WINDOW
C
   95 CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,100)IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC,
     1 IM2,ID2,IY2,IH2,MODTZC
  100 FORMAT(1H0,10X,'**WARNING** THE STARTING DATE FOR CHANGES ',
     1 'ENTERED IN THE ',
     1 'RRICHNG MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS NOT WITHIN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      CALL WARN
      GO TO 530
C
C     CALL SUBROUTINE TO READ VALUES
C
  110 MXVALS=744
C
C     READ CARD - IF COMMAND LEAVE - IF COMMAND AND 1ST CARD ERROR
C
      FIRST=.TRUE.
      IF(NRDCRD.EQ.NCARDS)GO TO 130
C
  120 IF(NRDCRD.EQ.NCARDS)GO TO 530
C
      OPID=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 150
C
      IF(.NOT.FIRST)GO TO 530
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
  130 IF(MODWRN.EQ.1)WRITE(IPR,140)
  140 FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1 'RRICHNG MOD.  PROCESSING CONTINUES.')
      GO TO 520
C
  150 FIRST=.FALSE.
C
C     CALL SUBROUTINE TO READ VALUES
C
      NFLD=1
      NRDCRD=NRDCRD+1
      do j = 1, 20          
          Modstmp(j) = modcrd(j,nrdcrd)  
      end do
      call chkdollarsign(iret,Modstmp)
      if (iret .eq. 1) goto 120

C     IF(NRDCRD.EQ.NCARDS)GO TO 530
C

      CALL MRDVAL(NCARDS,MODCRD,NFLD,MXVALS,NVALS,VALUES,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,160)ISTAT,FIRST,NVALS
  160 FORMAT(11X,'**IN MRRICH** AFTER CALL TO MRDVAL - ISTAT=',I3,
     1 ', FIRST=',L4,', NVALS=',I3)
      IF(IBUG.GT.0.AND.NVALS.GT.0.AND.ISTAT.NE.-1)WRITE(IODBUG,170)
     1 (VALUES(I),I=1,NVALS)
  170 FORMAT(11X,'VALUES='/(11X,10G10.2))
C
C     ISTAT RETURNED FROM MRDVAL MEANS
C       =0, VALUES READ OK, NO ADDITIONAL FIELDS ON CARD
C       =2, VALUES READ OK, ADDITIONAL FIELDS ON CARD
C       =-1, NO VALUES ENTERED
C       ELSE, TOO MANY VALUES ENTERED
C     
      IF(ISTAT.EQ.0)GO TO 270
      IF(ISTAT.EQ.2)GO TO 210
      IF(ISTAT.EQ.-1)GO TO 190
C
      IF(MODWRN.EQ.0)GO TO 270
      WRITE(IPR,180)MXVALS,NVALS,(MODCRD(I,NRDCRD),I=1,20)
  180 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - MORE THAN ',
     1 I3,' VALUES ENTERED.'/11X,'THE FIRST ',I3,' VALUES ENTERED WILL',
     2 ' BE USED.'/11X,'THE CURRENT CARD IMAGE IS'/11X,20A4)
      CALL WARN
      GO TO 270
C
  190 IF(MODWRN.EQ.0)GO TO 120
      WRITE(IPR,200)(MODCRD(I,NRDCRD),I=1,20)
  200 FORMAT(1H0,10X,'**WARNING** ',
     1  'NO VALUES ENTERED ON A SUBSEQUENT CARD FOR RRICHNG MOD'/
     2  11X,'THE CURRENT MOD CARD IMAGE IS '/11X,20A4)
      GO TO 520
     
C
C     HAVE ADDITIONAL FIELDS - LOOK FOR A SLASH (/) AND
C     AN OPERATION NAME - REPROCESS CURRENT FIELD TO SEE IF A SLASH
C
  210 ISTRT=-1
      NCHAR=1
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(IFIELD.EQ.ISLASH)GO TO 230
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,220)(MODCRD(I,NRDCRD),I=1,20)
  220 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - A SLASH ',
     1 'WAS NOT FOUND WHERE EXPECTED ON THE FOLLOWING CARD'/
     2 11X,20A4/11X,'NO CHANGES ENTERED ON THIS CARD WILL BE MADE')
      GO TO 520
C
C     NOW READ OPERATION NAME
C
  230 ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,OPID,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 250
      IF(MODWRN.EQ.0)GO TO 120
      WRITE(IODBUG,240)(MODCRD(I,NRDCRD),I=1,20)
  240 FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 520
  250 CONTINUE
C
C     CHECK THAT OPERATION NAME ENTERED MATCHES NXTNAM -
C     IF NOT, READ NEXT CARD
C
      IF(IBUG.GT.0)WRITE(IODBUG,260)OPID,NXTNAM
  260 FORMAT(11X,'COMPARING THE OPERATION NAME ENTERED - ',A8,
     1 ' WITH THE NEXT OPERATION NAME - ',A8)
      IF(OPID.EQ.NXTNAM)GO TO 270
      GO TO 120
C
C     FIND START OF SECOND PORTION OF P ARRAY FOR THE OPERATION
C
  270 LOCOPN=0
      CALL FSERCH(NOPS(IOPER),NXTNAM,LOCOPN,P,MP)
C
      IF(LOCOPN.GT.0)GO TO 290
C
C     SHOULD NEVER GET HERE - MEANS PROBLEM IN P ARRAY
C
      CALL FOPCDX(OPTEMP,NOPS(IOPER))
      IF(MODWRN.EQ.1)
     .WRITE(IPR,280)OPTEMP,NXTNAM
  280 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - CANNOT FIND ',
     1 A8,' OPERATION ',A8,' IN THE P ARRAY.')
      GO TO 520
C
C     CHECK FOR NEGATIVE RUNOFF VALUES
C
  290 DO 310 I=1,NVALS
      IF(VALUES(I).GE.0.0)GO TO 310
      IF(MODWRN.EQ.1)WRITE(IPR,300)(MODCRD(J,NRDCRD),J=1,20)
  300 FORMAT(1H0,10X,'** WARNING ** IN THE RRICHNG MOD - ',
     1 'A NEGATIVE RUNOFF VALUE WAS ENTERED.'/
     2 11X,'NO CHANGES ON THIS CARD WILL BE MADE.  ',
     3 'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 520
C
  310 CONTINUE
C
C     TIME SERIES ID STARTS IN POSITION LOCS(1,IOPER) OF P ARRAY
C     DATA TYPE IS IN POSITION LOCS(2,IOPER)
C     TIME INTERVAL IS IN POSTION LOCS(3,IOPER)
C
      LOCP=LOCOPN-1
      TSID4(1)=P(LOCP+LOCS(1,IOPER))
      TSID4(2)=P(LOCP+LOCS(1,IOPER)+1)
      DTYPE=P(LOCP+LOCS(2,IOPER))
      IDT=P(LOCP+LOCS(3,IOPER))
C
      IF(IBUG.LT.1)GO TO 340
C
      WRITE(IODBUG,320)IDATE,TSID,DTYPE,IDT,NVALS,OPID,LOCOPN
  320 FORMAT(1H0,10X,'IN SUBROUTINE MRRICH - RRICHNG MOD'/11X,
     1 'IDATE, TSID, DTYPE, IDT, NVALS, OPID, LOCOPN ='/5X,
     1 I11,1X,A8,1X,A4,1X,I3,1X,I3,1X,A8,I7)
      IF(NVALS.GT.0)WRITE(IODBUG,330)(VALUES(I),I=1,NVALS)
  330 FORMAT(11X,'VALUES ='/(11X,10G9.2))
C
  340 CONTINUE
C
C     GET LOCATION OF TIME SERIES IN SEGMENT
C
      CALL FINDTS(TSID,DTYPE,IDT,LOCD,LOCTS,DIMS)
C
      IF(LOCD.GT.0)GO TO 360
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,350)TSID,DTYPE,IDT
  350 FORMAT(1H0,10X,'**WARNING** IN RRICHNG MOD - TIME SERIES ',
     1 A8,1X,A4,I3,' NOT IN THIS SEGMENT.')
      GO TO 520
C
  360 CONTINUE
C
C     SEE IF THIS DATA TYPE ALLOWS MISSING DATA
C     AND GET VALUE FOR NUMBER OF VALUES PER DELTA T (NVPDT)
C
      CALL FDCODE(DTYPE,UNITS,DIMS,MISALW,NVPDT,TSCALE,NADINF,IERR)
C
C     CHECK TIME PERIOD AGAINST RUN PERIOD - PRINT WARNING ONLY IF
C     ENTIRE PERIOD BEING CHANGED IS OUTSIDE OF RUN PERIOD
C  
C     CHECK IF ALL VALUES IN VALUES() ARRAY ARE BEING USED
C
      IF (IDATE.GT.ISTHR) GOTO 364
C
      NDEL=((ISTHR-IDATE+(IDT/2))/IDT) + 1
      IDATE=ISTHR
      DO 361 III=1,MXVALS
         TEMP1(III)=0.0
  361 CONTINUE
      JJ=0
      DO 362 IIII=NDEL+1,NVALS
         TEMP1(JJ+1)=VALUES(IIII)
         JJ=JJ+1
  362 CONTINUE
C
      CALL UMEMOV(TEMP1,VALUES,MXVALS)
      NVALS=JJ
C
      if (nvals.gt.0) goto 368
C
      IF (LDATE.LT.ISTHR) THEN
         IDATE=IABS(IIDATE)
         GOTO 95
         ENDIF
c
      IF (MODWRN.EQ.0) GOTO 520
c
      IXDA=(IABS(IIDATE)/24)+1
      IXHR=IABS(IIDATE)-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
c
      CALL MDYH2(IDA,IHZERO,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
C
      WRITE(IPR,363)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC
  363 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - THERE ARE NO ',
     1'VALUES AFTER RESETTING THE START DATE ON THE MOD CARD (',I2,
     2'/',I2,'/',I4,'-'I2,1X,A4,')',/,25X,'TO THE STARTRUN ',
     3'TECHNIQUE (',I2,'/',I2,'/',I4,'-',I2,1X,A4,')')
      GOTO 520
C
  368 if(modwrn.eq.0) goto 364
c
      IXDA=(IABS(IIDATE)/24)+1
      IXHR=IABS(IIDATE)-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
C
      CALL MDYH2(IDA,IHZERO,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      WRITE(IPR,444)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC,NDEL
  444 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - START DATE (',I2,
     1  '/',I2,'/',I4,'-',I2,1X,A4,') IS BEFORE START RUN DATE (',I2,
     2  '/',I2,'/',I4,'-',I2,1X,A4,')'/,25X,'THE FIRST ',I4,' VALUE(S)',
     3  ' BEFORE AND AT START DATE ON THE MOD CARD ARE IGNORED.')
      CALL WARN
c
  364 CONTINUE
C
      IF (LDATE.GE.ICOMP) GOTO 369
c     if (ldate.le.icomp.and.idate.ge.isthr) goto 369
C
c     NOFF=(ICOMP-LDATE+(IDT/2))/IDT
      nslect=((ldate-idate+(idt/2))/idt)+1
      n1=nslect
      nvalso=nvals
      if(nslect.gt.nvals) nslect=nvals
      DO 365 LL=1,MXVALS
         TEMP1(LL)=0.0
  365 CONTINUE
      KK=0
      do 366 lll=1,nslect
c      DO 366 LLL=1,NOFF
         TEMP1(KK+1)=VALUES(LLL)
         KK=KK+1
  366 CONTINUE
C
      CALL UMEMOV(TEMP1,VALUES,MXVALS)
      NVALS=KK
C
      if(nvalso.le.n1) goto 369
      IF (MODWRN.EQ.0) GOTO 369
c
      ndiff=nvalso-n1
c
      IXDA=ICOMP/24+1
      IXHR=ICOMP-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
c
      IXDA=LDATE/24+1
      IXHR=LDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
C
      WRITE(IPR,367)IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC,ndiff 
  367 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - LSTCMPDY (',I2,'/',
     1  I2,'/',I4,'-',I2,1X,A4,') IS BEYOND VALID DATE (',I2,'/',I2,
     2  '/',I4,'-',I2,1X,A4,')'/,25X,'THE ',I2,' VALUE(S) AFTER VALID ',
     3  'DATE ARE IGNORED.')
C
      CALL WARN
C
C     IF START HOUR NOT ENTERED - USE DEFAULT VALUE OF 12Z
C     IF START HOUR ENTERED - SET TO CLOSEST DT OF TIME SERIES
C
C     IF HOUR ENTERED IIDATE LESS THAN ZERO
C
  369 CONTINUE
C
      IF (IBUG.GE.1) WRITE(IODBUG,371) (VALUES(NN),NN=1,NVALS)
  371 FORMAT(1H0,10X,'IN SUBROUTINE MRRICH VALUES = ',/,10(F6.2,1X))
C
      IF(IIDATE.LT.0)GO TO 370
C
C     HOUR NOT ENTERED - IDATE SHOULD BE DIVISIBLE BY 24
C
      JSTHR=IDATE
      GO TO 380
C
  370 CONTINUE
C
C     HOUR ENTERED - SET TO NEAREST DT
C
      JSTHR=MISTDT(IDATE,IDT)
C
  380 CONTINUE
C
C     NOW COMPUTE ENDING HOUR FOR TIME SERIES VALUES ENTERED
C
      ISPAN=IDT*(((NVALS-1)/NVPDT)*NVPDT)
      JENHR=JSTHR+ISPAN
C
C  GET LOCATIONS TO START CHANGES AND NUMBER OF VALUES TO MOVE
C
      CALL MLOCCH(8HRRICHNG ,ISTHR,IENHR,JSTHR,JENHR,
     1 TSID,DTYPE,IDT,NVALS,NVPDT,LOCD,IBUG,
     2 IOFFST,LDSTRT,NMOVE,ISTART,ISTATT)
C
      IF(ISTATT.EQ.1)GO TO 120
C
C     GET UNITS CONVERSION FACTORS IF NEEDED
C
      IF(IUMGEN.EQ.0)CALL FCONVT(UNITS,DIMS,EUNITS,XMULT,XADD,IER)
C
      IGOTO = (IUMGEN*4 + MISALW*2)/2 + 1
C
C     GO TO ONE OF FOUR CASES
C      IGOTO = 1,    UNITS CONVERSION, MISSING NOT ALLOWED
C              2,    UNITS CONVERSION, MISSING ALLOWED
C              3, NO UNITS CONVERSION, MISSING NOT ALLOWED
C              4, NO UNITS CONVERSION, MISSING ALLOWED
C
      IF(IBUG.GT.0)WRITE(IODBUG,390)NMOVE,TSID,DTYPE,IDT,LDSTRT,
     1 IOFFST,IGOTO,NXTOPN,NXTNAM
  390 FORMAT(11X,'ABOUT TO MOVE ',I4,' VALUES INTO TIME SERIES ',
     1 A8,1X,A4,I3/11X,'LDSTRT,IOFFST,IGOTO,NXTOPN,NXTNAM ='/
     2 5X,I11,I7,I6,I7,2X,A8)
C
      GO TO (470,500,410,450) , IGOTO
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,400)IUMGEN,MISALW
  400 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - ILLEGAL VALUE ',
     1 'FOR IUMGEN (',I5,') OR MISALW (',I5,').'/11X,
     2 'NO VALUES CHANGED.')
      GO TO 520
C
  410 DO 430 I=1,NMOVE
      IF(IFMSNG(VALUES(IOFFST+I)).EQ.0)GO TO 430
      IF(MODWRN.EQ.1)
     .WRITE(IPR,420)I,TSID,DTYPE,IDT,DTYPE
  420 FORMAT(1H0,10X,'** WARNING ** IN RRICHNG MOD - VALUE NUMBER ',
     1 I3,' FOR TIME SERIES ',A8,1X,A4,I3,' IS A MISSING VALUE.'/
     2 11X,'MISSING VALUES ARE NOT ALLOWED FOR DATA TYPE ',A4,1H./
     3 11X,'NO VALUES WILL BE CHANGED FOR THIS TIME SERIES.')
      GO TO 520
  430 CONTINUE
C
      DO 440 I=1,NMOVE
  440 D(LDSTRT+I)=VALUES(IOFFST+I)
      GO TO 120
C
  450 DO 460 I=1,NMOVE
  460 D(LDSTRT+I)=VALUES(IOFFST+I)
      GO TO 120
C
  470 DO 480 I=1,NMOVE
      IF(IFMSNG(VALUES(IOFFST+I)).EQ.0)GO TO 480
      IF(MODWRN.EQ.1)
     .WRITE(IPR,420)I,TSID,DTYPE,IDT,DTYPE
      GO TO 520
  480 CONTINUE
C
      DO 490 I=1,NMOVE
  490 D(LDSTRT+I)=(VALUES(IOFFST+I)-XADD)/XMULT
      GO TO 120
C
  500 DO 510 I=1,NMOVE
      TEMP=VALUES(IOFFST+I)
      IF(IFMSNG(TEMP).EQ.0)TEMP=(TEMP-XADD)/XMULT
  510 D(LDSTRT+I)=TEMP
      GO TO 120
C
  520 IF(MODWRN.EQ.1)CALL WARN
      GO TO 120
C
  530 CONTINUE
      IF(IBUG.GT.0)WRITE(IODBUG,540)
  540 FORMAT(11X,'** LEAVING MRRICH **')
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      RETURN
      END
