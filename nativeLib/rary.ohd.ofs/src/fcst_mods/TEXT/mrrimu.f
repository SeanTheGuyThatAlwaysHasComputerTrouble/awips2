c$pragma c (chkdollarsign)
C MODULE MRRIMU
C-----------------------------------------------------------------------
C
C
C
C     DESC - THIS SUBROUTINE PERFORMS THE RRIMULT MOD
C
      SUBROUTINE MRRIMU(MP,P,MTS,TS,MD,D,NCARDS,MODCRD,IIDATE,LLDATE,
     1  KKDATE,NXTOPN,NXTNAM,IHZERO)
C
      LOGICAL FIRST
      CHARACTER*8 OPTYPE,TSID,NXTNAM,OPID,BLANK8,OPTEMP,MODNAM
C
      EQUIVALENCE (TSID,TSID4(1))
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fmodft'
C
      DIMENSION P(MP),TS(MTS),D(MD),VALUES(1),TSID4(2)
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS),Modstmp(20)
      DIMENSION NOPS(8),LOCS(3,8)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mrrimu.f,v $
     . $',                                                             '
     .$Id: mrrimu.f,v 1.5 2004/09/08 16:14:52 aivo Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'RRIMULT '/
C
      CALL FSTWHR(8HMRRIMU  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG FLAG
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HRRIM)
C
      IF(IBUG.GT.0)WRITE(IODBUG,10)IIDATE,LLDATE,NXTOPN,NXTNAM
10    FORMAT(1H0,10X,'*** SUBROUTINE MRRIMU ENTERED ***  IIDATE=',I11,
     1 ', LLDATE=',I11,', NXTOPN=',I3,', NXTNAM= ',A8)
C
C     GET LIST OF VALID RAINFALL/RUNOFF OPERATIONS
C
      MXOPS=8
      CALL MLDRRO(MXOPS,NUMOPS,NOPS,LOCS)
C
      IF(IBUG.EQ.0)GO TO 50
      WRITE(IODBUG,20)NUMOPS
20    FORMAT(11X,'THE NUMBER OF VALID RAINFALL/RUNOFF OPERATIONS ',
     1 'FROM MLDRRO IS ',I2)
      IF(NUMOPS.GT.0)WRITE(IODBUG,30)(NOPS(I),I=1,NUMOPS)
30    FORMAT(11X,'NOPS=',10I5)
      IF(NUMOPS.GT.0)WRITE(IODBUG,40)((LOCS(J,I),J=1,3),I=1,NUMOPS)
40    FORMAT(11X,'LOCS=',20I5)
C
50    IF(NUMOPS.LT.1)GO TO 490
      DO 60 IOPER=1,NUMOPS
      IF(NXTOPN.EQ.NOPS(IOPER))GO TO 70
60    CONTINUE
      IF (NXTOPN.EQ.41) GOTO 70
      IF (NXTOPN.EQ.43) GOTO 70
      GO TO 490
C
70    IF(IBUG.GT.0)WRITE(IODBUG,80)IOPER
80    FORMAT(11X,'IOPER=',I5)
C
      IDATE=IABS(IIDATE)
      LDATE=IABS(LLDATE)
      KDATE=IABS(KKDATE)
C
C     NOW SEE IF LSTCMPDY VALUE EQUAL LASTCMPDATE VALUE
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
C
      IF ((IDATE.LE.KDATE).OR.(IDATE.LE.ICOMP)) GOTO 90
      IF ((IDATE.GT.KDATE).AND.(KDATE.EQ.ICOMP)) GOTO 130
      GOTO 120
C
90    IF (KDATE.EQ.ICOMP) GOTO 130
      IF (LDATE.LE.KDATE) GOTO 130
C
      IF (MODWRN.EQ.0) GOTO 110
C
      WRITE(IPR,100)(MODCRD(I,NRDCRD),I=1,20)
100   FORMAT(1H0,10X,'** WARNING ** IN RRIMULT MOD - THIS MOD IS ',
     1 'ONLY ENABLED BETWEEN THE START DATE AND THE EFFECTIVE DATE ',
     2 'ON THE MOD CARD.'/14X,'THE CURRENT MOD CARD IMAGE IS: ',20A4)
       CALL WARN
C
110      LDATE=KDATE
         GOTO 130
C
120      IF (MODWRN.EQ.0) GOTO 490
         ITYPE=4
         CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
         GOTO 490
C
C     CHECK TIME PERIOD AGAINST RUN PERIOD - PRINT WARNING ONLY IF
C     ENTIRE PERIOD BEING CHANGED IS OUTSIDE OF RUN PERIOD
C
130   ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
C     NOW SEE IF ANY OF PERIOD ENTERED IS WITHIN THE CURRENT RUN PERIOD
C
      IF(IDATE.GT.IENHR.OR.LDATE.LT.ISTHR)GO TO 140
C
C     SOME OF PERIOD BEING CHANGED IS WITHIN THE RUN PERIOD
C
      GO TO 160
C
C     NONE OF THE PERIOD BEING CHANGED IS WITHIN THE RUN PERIOD
C
140   IF(MODWRN.EQ.0)GO TO 490
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
      LXDA=LDATE/24+1
      LXHR=LDATE-(LXDA-1)*24
      IF(LXHR.EQ.0)LXDA=LXDA-1
      IF(LXHR.EQ.0)LXHR=24
      CALL MDYH2(LXDA,LXHR,IM4,ID4,IY4,IH4,DUM1,DUM2,MODTZC)
C
      WRITE(IPR,150)IM3,ID3,IY3,IH3,MODTZC,IM4,ID4,IY4,IH4,MODTZC,
     1 IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC
150   FORMAT(1H0,10X,'**WARNING** THE DATES FOR CHANGES IN THE ',
     1 'RRIMULT MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
     1 4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'ARE NOT WITHIN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      CALL WARN
      GO TO 490
C
C     CALL SUBROUTINE TO READ VALUES
C
160   MXVALS=1
C
C     READ CARD - IF COMMAND LEAVE - IF COMMAND AND 1ST CARD ERROR
C
      FIRST=.TRUE.
      IF(NRDCRD.EQ.NCARDS)GO TO 180
C
170   IF(NRDCRD.EQ.NCARDS)GO TO 490
C
      OPID=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 200
C
      IF(.NOT.FIRST)GO TO 490
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
180   IF(MODWRN.EQ.1)WRITE(IPR,190)
190   FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1 'RRIMULT MOD.  PROCESSING CONTINUES.')
      GO TO 480
C
200   FIRST=.FALSE.
C
C     CALL SUBROUTINE TO READ VALUES
C
      NFLD=1
      NRDCRD=NRDCRD+1
      
C
      do j = 1, 20          
        Modstmp(j) = modcrd(j,nrdcrd) 
      end do
      call chkdollarsign(iret,Modstmp)
      if (iret .eq. 1) goto 170
C

      CALL MRDVAL(NCARDS,MODCRD,NFLD,MXVALS,NVALS,VALUES,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,210)ISTAT,FIRST,NVALS
210   FORMAT(11X,'**IN MRRIMU** AFTER CALL TO MRDVAL - ISTAT=',I3,
     1 ', FIRST=',L4,', NVALS=',I3)
      IF(IBUG.GT.0.AND.NVALS.GT.0.AND.ISTAT.NE.-1)WRITE(IODBUG,220)
     1 (VALUES(I),I=1,NVALS)
220   FORMAT(11X,'VALUES='/(11X,10G10.2))
C
C     ISTAT RETURNED FROM MRDVAL MEANS
C       =0, VALUES READ OK, NO ADDITIONAL FIELDS ON CARD
C       =2, VALUES READ OK, ADDITIONAL FIELDS ON CARD
C       =-1, NO VALUES ENTERED
C       ELSE, TOO MANY VALUES ENTERED
C
      IF(ISTAT.EQ.0)GO TO 320
      IF(ISTAT.EQ.2)GO TO 260
      IF(ISTAT.EQ.-1)GO TO 240
C
      IF(MODWRN.EQ.0)GO TO 320
      WRITE(IPR,230)(MODCRD(I,NRDCRD),I=1,20)
230   FORMAT(1H0,10X,'** WARNING ** IN RRIMULT MOD - MORE THAN ',
     1 'ONE VALUE ENTERED.'/11X,'THE FIRST VALUE ENTERED WILL',
     2 ' BE USED.'/11X,'THE CURRENT CARD IMAGE IS'/11X,20A4)
      CALL WARN
      GO TO 320
C
240   IF(MODWRN.EQ.0)GO TO 170
      WRITE(IPR,250)(MODCRD(I,NRDCRD),I=1,20)
250   FORMAT(1H0,10X,'**WARNING** ',
     1  'NO VALUES ENTERED ON A SUBSEQUENT CARD FOR RRIMULT MOD'/
     2  11X,'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 480
C
C     HAVE ADDITIONAL FIELDS - LOOK FOR A SLASH (/) AND
C     AN OPERATION NAME - REPROCESS CURRENT FIELD TO SEE IF A SLASH
C
260   ISTRT=-1
      NCHAR=1
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(IFIELD.EQ.ISLASH)GO TO 280
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,270)(MODCRD(I,NRDCRD),I=1,20)
270   FORMAT(1H0,10X,'** WARNING ** IN RRIMULT MOD - A SLASH ',
     1 'WAS NOT FOUND WHERE EXPECTED ON THE FOLLOWING CARD'/
     2 11X,20A4/11X,'NO CHANGES ENTERED ON THIS CARD WILL BE MADE')
      GO TO 480
C
C     NOW READ OPERATION NAME
C
280   ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,OPID,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 300
      IF(MODWRN.EQ.0)GO TO 170
      WRITE(IODBUG,290)(MODCRD(I,NRDCRD),I=1,20)
290   FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 480
300   CONTINUE
C
C     CHECK THAT OPERATION NAME ENTERED MATCHES NXTNAM -
C     IF NOT, READ NEXT CARD
C
      IF(IBUG.GT.0)WRITE(IODBUG,310)OPID,NXTNAM
310   FORMAT(11X,'COMPARING THE OPERATION NAME ENTERED - ',A8,
     1 ' WITH THE NEXT OPERATION NAME - ',A8)
      IF(OPID.EQ.NXTNAM)GO TO 320
      GO TO 170
C
C     FIND START OF SECOND PORTION OF P ARRAY FOR THE OPERATION
C
320   LOCOPN=0
      CALL FSERCH(NOPS(IOPER),NXTNAM,LOCOPN,P,MP)
C
      IF(LOCOPN.GT.0)GO TO 340
C
C     SHOULD NEVER GET HERE - MEANS PROBLEM IN P ARRAY
C
      IF(MODWRN.EQ.0)GO TO 170
      CALL FOPCDX(OPTEMP,NOPS(IOPER))
      WRITE(IPR,330)OPTEMP,NXTNAM
330   FORMAT(1H0,10X,'** WARNING ** IN RRIMULT MOD - CANNOT FIND ',
     1 A8,' OPERATION ',A8,' IN THE P ARRAY.')
      GO TO 170
C
C     CHECK FOR NEGATIVE MULTIPLIER
C
340   IF(VALUES(1).GE.0.0)GO TO 360
      IF(MODWRN.EQ.1)WRITE(IPR,350)(MODCRD(J,NRDCRD),J=1,20)
350   FORMAT(1H0,10X,'** WARNING ** IN THE RRIMULT MOD - ',
     1 'A NEGATIVE MULTIPLIER WAS ENTERED.'/
     2 11X,'NO CHANGES ON THIS CARD WILL BE MADE.  ',
     3 'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 480
C
360   CONTINUE
C
C     TIME SERIES ID STARTS IN POSITION LOCS(1,IOPER) OF P ARRAY
C     DATA TYPE IS IN POSITION LOCS(2,IOPER)
C     TIME INTERVAL IS IN POSTION LOCS(3,IOPER)
C
      LOCP=LOCOPN-1
      TSID4(1)=P(LOCP+LOCS(1,IOPER))
      TSID4(2)=P(LOCP+LOCS(1,IOPER)+1)
      DTYPE=P(LOCP+LOCS(2,IOPER))
      IDT=P(LOCP+LOCS(3,IOPER))
C
      IF(IBUG.LT.1)GO TO 390
C
      WRITE(IODBUG,370)IDATE,LDATE,TSID,DTYPE,IDT,NVALS,OPID
370   FORMAT(1H0,10X,'IN SUBROUTINE MRRIMU - RRIMULT MOD'/11X,
     1 'IDATE,     LDATE, TSID, DTYPE, IDT, NVALS, OPID ='/5X,
     1 2I11,1X,A8,1X,A4,1X,I3,1X,I3,1X,A8)
      IF(NVALS.GT.0)WRITE(IODBUG,380)(VALUES(I),I=1,NVALS)
380   FORMAT(11X,'VALUES ='/(11X,10G9.2))
C
390   CONTINUE
C
C     GET LOCATION OF TIME SERIES IN SEGMENT
C
      CALL FINDTS(TSID,DTYPE,IDT,LOCD,LOCTS,DIMS)
C
      IF(LOCD.GT.0)GO TO 410
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,400)TSID,DTYPE,IDT
400   FORMAT(1H0,10X,'**WARNING** IN RRIMULT MOD - TIME SERIES ',
     1 A8,1X,A4,I3,' NOT IN THIS SEGMENT.')
      GO TO 480
C
410   CONTINUE
C
C     SEE IF THIS DATA TYPE ALLOWS MISSING DATA
C     AND GET VALUE FOR NUMBER OF VALUES PER DELTA T (NVPDT)
C
      CALL FDCODE(DTYPE,UNITS,DIMS,MISALW,NVPDT,TSCALE,NADINF,IERR)
C
C     CHECK TIME PERIOD AGAINST RUN PERIOD - PRINT WARNING ONLY IF
C     ENTIRE PERIOD BEING CHANGED IS OUTSIDE OF RUN PERIOD
C
C     IF START HOUR NOT ENTERED - USE DEFAULT VALUE OF 12Z
C     IF START HOUR ENTERED - SET TO CLOSEST DT OF TIME SERIES
C
C     IF HOUR ENTERED IIDATE LESS THAN ZERO
C
      IF(IIDATE.LT.0)GO TO 420
C
C     HOUR NOT ENTERED - IDATE SHOULD BE DIVISIBLE BY 24
C
      JSTHR=IDATE
      GO TO 430
C
420   CONTINUE
C
C     HOUR ENTERED - SET TO NEAREST DT
C
      JSTHR=MISTDT(IDATE,IDT)
C
430   CONTINUE
C
C     IF END HOUR ENTERED LLDATE LESS THAN ZERO
C
      IF(LLDATE.LT.0)GO TO 440
C
C     HOUR NOT ENTERED
C
      JENHR=LDATE
      GO TO 450
C
C     HOUR ENTERED - SET TO NEAREST DT
C
440   JENHR=MISTDT(LDATE,IDT)
C
450   CONTINUE
C
C     NVALS IS NOW THE NUMBER OF VALUES FOR TOTAL PERIOD REQUESTED
C
      NVALS=((JENHR-JSTHR)/IDT+1)*NVPDT
C
C  GET LOCATIONS TO START CHANGES AND NUMBER OF VALUES TO MOVE
C
      CALL MLOCCH(8HRRIMULT ,ISTHR,IENHR,JSTHR,JENHR,
     1 TSID,DTYPE,IDT,NVALS,NVPDT,LOCD,IBUG,
     2 IOFFST,LDSTRT,NMOVE,ISTART,ISTATT)
C
      IF(ISTATT.EQ.1)GO TO 170
C
      IF(IBUG.GT.0)WRITE(IODBUG,460)NMOVE,TSID,DTYPE,IDT,LDSTRT,
     1 VALUES(1)
460   FORMAT(11X,'ABOUT TO MULTIPLY ',I3,' VALUES IN ',A8,1X,A4,I3,
     1 ' STARTING AT LOCATION ',I5,'.  MULTIPLIER = ',F10.3)
C
      DO 470 I=1,NMOVE
      TEMPD=D(LDSTRT+I)
      IF(IFMSNG(TEMPD).EQ.0)D(LDSTRT+I)=TEMPD*VALUES(1)
470   CONTINUE
      GO TO 170
C
480   CONTINUE
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 170
C
490   CONTINUE
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      IF(IBUG.GT.0)WRITE(IODBUG,500)
500   FORMAT(11X,'*** LEAVING MRRIMU ***')
      RETURN
      END
