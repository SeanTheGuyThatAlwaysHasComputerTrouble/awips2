C MODULE MBFRAT
C ----------------------------------------------------------------------
C
C
C   DESC - THIS SUBROUTINE PERFORMS THE BFRATE MOD FOR THE BASEFLOW OPER
C   DESC -   SUBROUTINE MBASE2 CALLED FOR THE UNIT-HG OPERATION
C
C <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      SUBROUTINE MBFRAT(MP,P,NCARDS,MODCRD,IIDATE,
     1  NXTOPN,NXTNAM,IHZERO)
C
      LOGICAL FIRST
      CHARACTER*8 NXTNAM,OPID,BLANK8,MODNAM
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fmodft'
      COMMON/MOD102/NDT02,IDT02(5),VAL02(5)
C
      DIMENSION P(MP)
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS),MODNAM(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mbfrat.f,v $
     . $',                                                             '
     .$Id: mbfrat.f,v 1.3 1998/07/02 20:36:49 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'BASEF   ','BFRATE  '/
C
      IMOD=2
C
      CALL FSTWHR(8HMBFRAT  ,0,OLDOPN,IOLDOP)
C
C   SET DEBUG FLAG
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HBFRA)
C
      IF(IBUG.GT.0)WRITE(IODBUG,20)MODNAM(IMOD),NXTOPN,NXTNAM
20    FORMAT(11X,'*** SUBROUTINE ',A8,'ENTERED *** NEXT OPERATION ',
     1 'NUMBER =',I3,', OPERATION NAME = ',A8)
C
C
      IF(NXTOPN.EQ.38)GO TO 30
      GOTO 440
C
30    ICOMP=((LDACPD-1)*24)+LHRCPD
      IDATE=IABS(IIDATE)
C
      IF (IMOD.NE.1) GOTO 40
C
C  CHECK IF DATE IS LESS THAN LASTCOMPDATE OR LSTCMPDY DATE
C  AND LASTCOMPDATE EQUALS LSTCMPDY DATE BASEF MOD
C
      IF((IDATE.LE.LDATE).OR.(IDATE.LE.ICOMP)) GOTO 50
      IF (LDATE.EQ.ICOMP) GOTO 50
C
         IF(MODWRN.EQ.0) GOTO 440
         ITYPE=4
         IF (LDATE.EQ.0) ITYPE=2
         CALL MODS1(NCARDS,ICMND,MODNAM(IMOD),MODCRD,ITYPE)
         GOTO 440
C
C  CHECK IF DATE IS LESS THAN LASTCOMPDATE OR LSTCMPDY DATE
C  AND LASTCOMPDATE EQUALS LSTCMPDY DATE FOR BFRATE MOD
C
40    IF ((IDATE.LE.LDATE).OR.(IDATE.LE.ICOMP)) GOTO 50
      IF (LDATE.EQ.ICOMP) GOTO 50
         IF(MODWRN.EQ.0) GOTO 440
         ITYPE=4
         CALL MODS1(NCARDS,ICMND,MODNAM(IMOD),MODCRD,ITYPE)
         GOTO 440
C
C  CHECK IF NEXT OPERATION IS A BASEFLOW OPERATION
C  IF SO, PERFORM THIS MOD, IF NOT, LEAVE
C
C 221 IF(NXTOPN.EQ.38)GO TO 111
C     GO TO 999
C
C 111 IDATE=IIDATE
C
C   SEE IF DATE IS WITHIN RUN PERIOD
C
50    IDATE=IABS(IIDATE)
C
      ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
      IF(ISTHR.LE.IDATE.AND.IENHR.GE.IDATE)GO TO 70
C
C   DATE FOR CHANGES NOT IN ALLOWABLE WINDOW
C
      IF(MODWRN.EQ.0)GO TO 440
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C
      WRITE(IPR,60)MODNAM(IMOD),
     .IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC,
     1IM2,ID2,IY2,IH2,MODTZC
60    FORMAT(1H0,10X,'**WARNING** THE DATE FOR CHANGES IN THE ',
     1 A8,'MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS NOT IN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      CALL WARN
      GO TO 440
C
70    MXVALS=1
C
C   READ CARD - IF COMMAND LEAVE - IF COMMAND AND 1ST CARD ERROR
C
      FIRST=.TRUE.
      IF(NRDCRD.EQ.NCARDS)GO TO 90
C
80    IF(NRDCRD.EQ.NCARDS)GO TO 440
C
      OPID=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 110
C
      IF(.NOT.FIRST)GO TO 440
C
C   HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
90    IF(MODWRN.EQ.1)WRITE(IPR,100)MODNAM(IMOD)
100   FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1 A8,'MOD.  PROCESSING CONTINUES.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 440
C
110   FIRST=.FALSE.
C
C   CALL SUBROUTINE TO READ VALUE
C
      NFLD=1
      NRDCRD=NRDCRD+1
C
      CALL MRDVAL(NCARDS,MODCRD,NFLD,MXVALS,NVALS,VALUE,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,120)MODNAM(IMOD),ISTAT,FIRST,NVALS,VALUE
120   FORMAT(11X,'**IN MBASEF** ',A8,'MOD, AFTER CALL TO MRDVAL - ',
     1 'ISTAT=',I3,', FIRST=',L4,', NVALS=',I2,', VALUE=',G10.2)
C
C   ISTAT RETURNED FROM MRDVAL MEANS
C     =0, VALUE READ OK, NO ADDITIONAL FIELDS ON CARD
C     =2, VALUE READ OK, ADDITIONAL FIELDS ON CARD
C     =-1, NO VALUES ENTERED
C     ELSE, MORE THAN 1 VALUE ENTERED
C
C  IF NO MORE FIELDS ENTERED WANT TO MAKE THIS BASEF OR BFRATE MOD
C  CHANGE TO ALL BASEFLOW OPERATIONS IN THIS SEGMENT, SO SINCE
C  WE KNOW THAT THE NEXT OPERATION IS A BASEFLOW GO AHEAD
C  AND MAKE CHANGE.
C
      IF(ISTAT.EQ.0)GO TO 240
      IF(ISTAT.EQ.2)GO TO 160
      IF(ISTAT.EQ.-1)GO TO 140
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,130)MODNAM(IMOD),(MODCRD(I,NRDCRD),I=1,20)
130   FORMAT(1H0,10X,'** WARNING ** IN ',A8,'MOD - MORE THAN 1 ',
     1 'VALUE ENTERED.'/11X,'CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 430
C
140   IF(MODWRN.EQ.1)
     .WRITE(IPR,150)MODNAM(IMOD),(MODCRD(I,NRDCRD),I=1,20)
150   FORMAT(1H0,10X,'**WARNING** ',
     1  'NO VALUES ENTERED ON A SUBSEQUENT CARD FOR ',A8,'MOD'/
     2  11X,'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 430
C
C   HAVE ADDITIONAL FIELDS - LOOK FOR A SLASH (/) AND
C   AN OPERATION NAME - REPROCESS CURRENT FIELD TO SEE IF A SLASH
C
160   ISTRT=-1
      NCHAR=1
      ICKDAT=0
C
      IF(IBUG.GT.0)WRITE(IODBUG,170)NFLD,NRDCRD
170   FORMAT(11X,'ABOUT TO CALL UFIEL2 - LOOKING FOR A SLASH',
     1 ', NFLD=',I3,', NRDCRD=',I3)
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,180)NFLD,ISTRT,LEN,ITYPE,IFIELD,ISTAT
180   FORMAT(11X,'AFTER UFIEL2 - NFLD,ISTRT,LEN,ITYPE,IFIELD,ISTAT='/
     1 26X,I3,I6,I4,I6,3X,A4,I6)
C
      IF(IFIELD.EQ.ISLASH)GO TO 200
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,190)MODNAM(IMOD),(MODCRD(I,NRDCRD),I=1,20)
190   FORMAT(1H0,10X,'** WARNING ** IN ',A8,'MOD - A SLASH ',
     1 'WAS NOT FOUND WHERE EXPECTED ON THE FOLLOWING CARD'/
     2 11X,20A4/11X,'NO CHANGES ENTERED ON THIS CARD WILL BE MADE')
      GO TO 430
C
C   NOW READ OPERATION NAME
C
200   ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,OPID,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 220
      IF(MODWRN.EQ.0)GO TO 80
      WRITE(IODBUG,210)(MODCRD(I,NRDCRD),I=1,20)
210   FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 430
220   CONTINUE
C
C   CHECK THAT OPERATION NAME ENTERED MATCHES NXTNAM -
C   IF NOT, READ NEXT CARD
C
      IF(IBUG.GT.0)WRITE(IODBUG,230)OPID,NXTNAM
230   FORMAT(11X,'OPERATION NAME INPUT IS ',A8,', NEXT OPERATION ',
     1 'IN OPERATIONS TABLE IS ',A8,'.')
C
      IF(OPID.EQ.NXTNAM)GO TO 240
      GO TO 80
C
C  IF BASEF MOD (IMOD=1) --
C   VALUE ENTERED IS CMS IF METRIC UNITS (IUMAPI=1)
C               OR CFS IF ENGLISH UNITS (IUMAPI=0)
C   IF METRIC - NO CONVERSION NEEDED
C   IF ENGLISH - CHANGE TO CMS
C
C  IF BFRATE MOD (IMOD=2) --
C   VALUE ENTERED IS CMS/SQ KM IF METRIC UNITS (IUMAPI=1)
C               OR CFS/SQ MI IF ENGLISH UNITS (IUMAPI=0)
C   IF METRIC - NO CONVERSIONS NEEDED - JUST MULTIPLY VALUE
C             BY AREA AS STORED IN P() (I.E., IN SQ KM)
C   IF ENGLISH - 1ST CHANGE TO CMS/SQ MI
C              THEN CONVERT AREA TO SQ MI BEFORE MULTIPLYING BELOW
C
240   IF(IUMAPI.EQ.1)GO TO 250
C
C   MUST CONVERT FROM CFS TO CMS
C
      CALL FCONVT(4HCMS ,4HL3/T,ENGUN,ACM2CF,BCM2CF,IER)
C
      VALUE=VALUE/ACM2CF
C
250   CONTINUE
C
C   HAVE A SPECIFIC OPERATION NAME - FIND THAT OPERATION
C   IN ORDER TO GET THE AREA AND CONSTANT BASEFLOW FOR THIS BASEFLOW
C
      LOCP=0
      CALL FSERCH(38,NXTNAM,LOCP,P,MP)
C
      IF(LOCP.GT.0)GO TO 270
C
C   HAVE NOT FOUND THE REQUESTED OPERATION - ERROR
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,260)NXTNAM,MODNAM(IMOD)
260   FORMAT(1H0,10X,'**WARNING** A BASEFLOW OPERATION WITH NAME ',
     1 A8,' HAS NOT BEEN FOUND IN THIS SEGMENT.'/11X,
     2 'YOU ARE CURRENTLY EXECUTING THE ',A8,' MOD.'/11X,
     3 'THERE ARE PROBLEMS WITH YOUR PARAMETER FILES.')
      GO TO 430
C
C  FIRST CHECK THAT THIS OPERATION HAS VARIABLE BASEFLOW.
C
270   ICHECK=P(LOCP+8)
      IF(ICHECK.GT.0)GO TO 290
C
C  VARIABLE BASEFLOW NOT DEFINED.  CANNOT USE THIS MOD.
C
      IF(MODWRN.EQ.0)GO TO 80
      WRITE(IPR,280)MODNAM(IMOD),NXTNAM,MODNAM(IMOD)
280   FORMAT(1H0,10X,'** WARNING ** IN ',A8,'MOD - VARIABLE ',
     1 'BASEFLOW IS NOT DEFINED FOR BASEFLOW OPERATION ',
     2 A8,'.'/11X,'YOU CANNOT USE THE ',A8,'MOD TO CHANGE BASEFLOW ',
     3 'FOR THIS OPERATION.'/11X,'USE THE CBASEF OR CBFRATE MOD TO ',
     4 'CHANGE THE CONSTANT BASEFLOW DEFINED FOR THIS BASEFLOW ',
     5 'OPERATION'/11X,'OR DEFINE THE VARIABLE BASEFLOW OPTION FOR ',
     6 'THIS OPERATION USING THE RESEGDEF COMMAND IN FCINIT.')
      GO TO 430
C
C   HAVE FOUND A BASEFLOW OPERATION
C  NOW GET AREA FROM P() - THIS AREA IS IN SQ KM
C  ALSO GET CONSTANT BASEFLOW VALUE - IN CMS
C
290   CBASEF=P(LOCP+7)
C
      IF(IMOD.EQ.1)GO TO 310
C
      AREABF=P(LOCP+6)
C
C  CONVERT TO SQUARE MI IF NEEDED
C
      IF(IUMAPI.EQ.1)GO TO 300
C
C  USE 1.609 KM PER MILE
C
      AREABF=AREABF/(1.609*1.609)
C
300   VALUE=VALUE*AREABF
C
310   IF(VALUE.GE.CBASEF)GO TO 330
C
C   BAD TOTAL BASEFLOW VALUE ENTERED
C
      IF(MODWRN.EQ.0)GO TO 80
      WRITE(IPR,320)MODNAM(IMOD),NXTNAM,VALUE,CBASEF
320   FORMAT(1H0,10X,'**WARNING** IN ',A8,'MOD - TOTAL BASEFLOW ',
     1 'ENTERED IS SMALLER THAN THE CONSTANT BASEFLOW VALUE'/11X,
     2 'FOR UNIT HYDROGRAPH OPERATION ',A8/11X,
     3 'VALUE ENTERED (IN CMS) = ',G10.2,', CONSTANT BASEFLOW = ',G10.2/
     4 11X,'THIS VALUE WILL NOT BE CHANGED.')
      GO TO 430
C
C  SUBTRACT CONSTANT BASEFLOW FROM VALUE ENTERED BEFORE STORING
C  IN COMMON BLOCK /MOD102/
C
330   VARBF=VALUE-CBASEF
C
C   STORE VALUE IN COMMON BLOCK /MOD102/
C
      IF(NDT02.GT.0)GO TO 340
C
C   NO VALUES CURRENTLY IN COMMON BLOCK /MOD102/
C
      NDT02=1
      IDT02(1)=IDATE
      VAL02(1)=VARBF
      GO TO 400
C
C   VALUES CURRENTLY IN COMMON BLOCK /MOD102/
C   SEE IF DATE MATCHES EXACTLY ONE IN COMMON BLOCK
C
340   DO 350 I=1,NDT02
      IF(IDT02(I).NE.IDATE)GO TO 350
C
C   YES - MATCHES - REPLACE VALUE IN COMMON BLOCK
C
      VAL02(I)=VARBF
      GO TO 400
C
350   CONTINUE
C
C   NO MATCH
C   IF THERE IS ROOM - PUT THIS VALUE IN IN CHRONOLOGICAL ORDER
C
      IF(NDT02.LT.5)GO TO 370
C
C   NO ROOM
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,360)MODNAM(IMOD),(MODCRD(I,NRDCRD),I=1,20)
360   FORMAT(1H0,10X,'** WARNING ** IN ',A8,'MOD - NO ROOM IN ',
     1 'COMMON BLOCK /MOD102/'/11X,'THE VALUE ON THE FOLLOWING MOD ',
     2 'CARD IS IGNORED'/11X,20A4)
      GO TO 430
C
C   THERE IS ROOM - INSERT CHRONOLOGICALLY
C
370   IEND02=NDT02
      DO 390 I=1,IEND02
      IF(IDT02(I).LT.IDATE)GO TO 390
C
      MOVE=NDT02-I+1
      DO 380 J=1,MOVE
      K=NDT02+2-J
      IDT02(K)=IDT02(K-1)
380   VAL02(K)=VAL02(K-1)
      IDT02(I)=IDATE
      VAL02(I)=VARBF
      NDT02=NDT02+1
      GO TO 400
C
390   CONTINUE
C
C   ADD AT END
C
      NDT02=NDT02+1
      IDT02(NDT02)=IDATE
      VAL02(NDT02)=VARBF
C
400   IF(IBUG.LT.1)GO TO 80
C
      WRITE(IODBUG,410)MODNAM(IMOD),IDATE,VALUE,NDT02,NXTNAM
410   FORMAT(11X,'IN SUBROUTINE MBASEF - ',A8,'MOD'/11X,
     1 'IDATE, VALUE, NDT02, NXTNAM = ',I11,1X,G9.2,1X,I3,1X,A8)
      IF(NDT02.GT.0)WRITE(IODBUG,420)(IDT02(I),VAL02(I),I=1,NDT02)
420   FORMAT(11X,'IDT02, VAL02 ='/(11X,2G9.2))
      GO TO 80
C
430   IF(MODWRN.EQ.1)CALL WARN
      GO TO 80
C
440   IF(IBUG.GT.0)WRITE(IODBUG,450)MODNAM(IMOD)
450   FORMAT(11X,'**LEAVING SUBROUTINE MBASEF, ',A8,'MOD')
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      RETURN
      END
