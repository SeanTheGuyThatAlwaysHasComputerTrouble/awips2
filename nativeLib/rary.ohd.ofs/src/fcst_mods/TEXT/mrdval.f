C MODULE MRDVAL
C-----------------------------------------------------------------------
C
C  THIS ROUTINE READS VALUES UNTIL END OF CARD OR NON-NUMERIC
C  VALUE IS FOUND AND EXPANDS ANY REPEATED VALUES (I.E., ENTERED WITH
C  A * AND A REPEAT FACTOR).
C
      SUBROUTINE MRDVAL (NCARDS,MODCRD,NFLD,MVALS,NVALS,
     *   VALUES,ISTAT)
C
      CHARACTER*8 OLDOPN
      CHARACTER*40 STRNG
      CHARACTER*80 MODCRD(NCARDS)
      LOGICAL PAREN,EXPAND
C
      DIMENSION VALUES(MVALS)
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mrdval.f,v $
     . $',                                                             '
     .$Id: mrdval.f,v 1.6 2001/06/13 12:14:02 mgm Exp $
     . $' /
C    ===================================================================
C
C
      CALL FSTWHR ('MRDVAL  ',0,OLDOPN,IOLDOP)
C
      IBUG=IFBUG('MRDV')
C
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   'ENTER MRDVAL -',
     *   ' NRDCRD=',NRDCRD,
     *   ' MVALS=',MVALS,
     *   ' NCARDS=',NCARDS,
     *   ' NFLD=',NFLD
C
      LSTRNG=-LEN(STRNG)
      PAREN=.FALSE.
      EXPAND=.FALSE.
      NVALS=0
C
10    ISTRT=-3
      ICKDAT=0
C
C  CHECK IF ALL CARDS PROCESSED
      IF (NRDCRD.GT.NCARDS) GO TO 20
C
C  GET NEXT FIELD
      CALL UFIEL2 (NCARDS,MODCRD,NFLD,ISTRT,
     *   LENGTH,ITYPE,NREP,INTGER,REAL,LSTRNG,STRNG,
     *   LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,
     *   ISTAT)
C
      IF (IBUG.GT.0) THEN
         CALL UPRFLD (NFLD,ISTRT,
     *      LENGTH,ITYPE,NREP,INTGER,REAL,LSTRNG,STRNG,
     *      LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,
     *      ISTAT)
         WRITE (IODBUG,*) 'PAREN=',PAREN,' EXPAND=',EXPAND
         ENDIF
C
      IF (ITYPE.EQ.0) REAL=INTGER
      IF (ITYPE.EQ.1) INTGER=REAL
      NREP2=NREP
C
      IF (ITYPE.GT.-1) GO TO 30
C
C  END OF FILE
20    ISTAT=0
      IF (NVALS.EQ.0) ISTAT=-1
      GO TO 150
C
C  CHECK IF A NUMERIC VALUE
30    IF (ITYPE.LT.2) GO TO 80
C
      NREP2=-1
C
C  CHECK IF WITHIN PARENTHETICAL REPEATING FIELD
      IF (PAREN) GO TO 50
C
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   'CHECK FOR FIELD WITH LEFT PARENTHESIS'
C
C  CHECK IF THIS IS THE START OF PARENTHETICAL REPEATING FIELD
      IF (LLPAR-LASK.NE.1) GO TO 70
C
C  LEFT PARENTHESIS FOLLOWS ASTERISK - COULD BE START OF
C  PAREN REPEATING FIELD
C  CHECK THAT THERE IS AN INTEGER LEFT OF ASTERISK
      IS=IFSTRT(NFLD)
      LEND=IS-1+LASK-1
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'IS=',IS,' LEND=',LEND
      IF (LEND.LT.IS) GO TO 70
      NCHAR=LEND-IS+1
      IPRERR=0
      CALL UFA2I (ICDBUF,IS,NCHAR,INTCK,IPRERR,IPR,IER)
      IF (IER.NE.0) GO TO 70
C
C  STORE PAREN REPEAT FACTOR AS NREP1
      NREP1=INTCK
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'NREP1=',NREP1
      LSTR=ISTRT+LLPAR
      IE=IFSTOP(NFLD)
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'LSTR=',LSTR,' IE=',IE
      IF (IE.LT.LSTR) GO TO 70
C
C  CHECK IF FIELD TO THE RIGHT OF PAREN HAS A REPEAT FACTOR
      NCHAR=IE-LSTR+1
      CALL UINDEX (ICDBUF(LSTR:LSTR),NCHAR,'*',1,LASK)
      IF (LASK.EQ.0) THEN
         LSTR=LSTR-1
         GO TO 40
         ENDIF
C
C  CHECK THAT THERE IS AN INTEGER LEFT OF ASTERISK
      LEND=LASK-1
      IS=LSTR
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   ' IS=',IS,
     *   ' LEND=',LEND
      IF (LEND.LT.IS) GO TO 70
      NCHAR=LEND-IS+1
      IPRERR=0
      CALL UFA2I (ICDBUF,IS,NCHAR,INTCK,IPRERR,IPR,IER)
      IF (IER.NE.0) GO TO 70
C
C  STORE REPEAT FACTOR AS NREP2
      NREP2=INTCK
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'NREP2=',NREP2
      LSTR=LASK+1
      IE=IFSTOP(NFLD)
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *  ' LSTR=',LSTR,
     *  ' IE=',IE
      IF (IE.LT.LSTR) GO TO 70
C
C  CHECK THAT VALUE TO THE RIGHT OF PAREN OR ASTERISK IS A NUMBER
40    IBEG=LSTR+1
      NCHAR=IE-IBEG+1
      NDEC=0
      IPRERR=0
      CALL UFA2F (ICDBUF,IBEG,NCHAR,NDEC,REALCK,IPRERR,IPR,IER)
      IF (IER.NE.0) GO TO 70
C
C  VALID NUMBER - STORE IN VALUE ARRAY AND CONTINUE READING CARD
      REAL=REALCK
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   ' NREP2=',NREP2,
     *   ' REAL=',REAL,
     *   ' '
      NEXPND=0
      PAREN=.TRUE.
      NPSTRT=NVALS
      GO TO 80
C
C  WITHIN A PARENTHETICAL REPEATING FIELD - REPEAT FACTOR IS NREP1
C  CHECK IF CURRENT FIELD ENDS WITH A RIGHT PAREN
50    IE=IFSTOP(NFLD)
      IS=IFSTRT(NFLD)
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   'CHECK FOR FIELD WITH RIGHT PAREN -',
     *   ' IE=',IE,
     *   ' LRPAR=',LRPAR
      IF (LRPAR.EQ.0) GO TO 70
      IE=IS+LRPAR-1
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'IS=',IS,' IE=',IE
      IF (IE.LT.IS) GO TO 70
C
C  CHECK IF FIELD TO THE LEFT OF PAREN HAS A REPEAT FACTOR
      NCHAR=IE-IS+1
      CALL UINDEX (ICDBUF(LSTR:LSTR),NCHAR,'*',1,LASK)
      IF (LASK.EQ.0) THEN
         LEND=IE-1
         GO TO 60
         ENDIF
C
C  CHECK THAT THERE IS AN INTEGER LEFT OF ASTERISK
      LEND=LASK-1
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'IS=',IS,' LEND=',LEND
      IF (LEND.LT.IS) GO TO 70
      NCHAR=LEND-IS+1
      IPRERR=0
      CALL UFA2I (ICDBUF,IS,NCHAR,INTCK,IPRERR,IPR,IER)
      IF (IER.NE.0) GO TO 70
C
C  STORE REPEAT FACTOR AS NREP2
      NREP2=INTCK
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'NREP2=',NREP2
C
      IS=LASK+1
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'IS=',IS,' IE=',IE
      IF (IE.LT.IS) GO TO 70
C
C  NOW CHECK IF VALID NUMBER IS BEFORE PARENTHESIS
60    NCHAR=LEND-IS+1
      NDEC=0
      IPRERR=0
      CALL UFA2F (ICDBUF,IS,NCHAR,NDEC,REALCK,IPRERR,IPR,IER)
      IF (IER.NE.0) GO TO 70
C
C  VALID NUMBER - STORE IN VALUE ARRAY AND SET EXPAND SWITCH
      REAL=REALCK
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'REAL=',REAL
      EXPAND=.TRUE.
      GO TO 80
C
70    ISTAT=2
      IF (NVALS.EQ.0) ISTAT=-1
      GO TO 150
C
C  HAVE NUMERIC VALUE - CHECK IF THERE IS A REPEAT FACTOR
80    ITIMES=NREP
      IF (NREP2.EQ.-1) ITIMES=1
C
C  CHECK IF VALUES WILL FIT IN VALUES ARRAY
      NCHECK=NVALS+ITIMES
      IF (NCHECK.LE.MVALS) GO TO 90
C
C  VALUES WILL NOT FIT - SET ISTAT EQ 1 AND RESET ITIMES TO FILL ARRAY
      ISTAT=1
      ITIMES=MVALS-NVALS
C
C  IF ITIMES EQ 0 NO MORE ROOM IN ARRAY
      IF (ITIMES.EQ.0) GO TO 150
C
C  VALUES WILL FIT - FILL VALUES ARRAY
90    DO 100 I=1,ITIMES
         VALUES(NVALS+I)=REAL
100      CONTINUE
      NVALS=NVALS+ITIMES
C
      IF (PAREN) NEXPND=NEXPND+ITIMES
      IF (.NOT.EXPAND) GO TO 140
C
C  FILL VALUES ARRAY WITH VALUES ENTERED SINCE PAREN FOUND
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   'EXPAND PARENTHETICAL FIELD -',
     *   ' NEXPND=',NEXPND,
     *   ' NPSTRT=',NPSTRT,
     *   ' NREP1=',NREP1,
     *   ' NVALS=',NVALS
      EXPAND=.FALSE.
      PAREN=.FALSE.
      NCOPY=NREP1-1
      IF (NCOPY.LT.1) GO TO 140
      DO 130 I=1,NCOPY
         NCHECK=NVALS+NEXPND
         IF (NCHECK.GT.MVALS) THEN
            WRITE (IPR,110) MVALS
110   FORMAT ('0**WARNING** IN MRDVAL - MAXIMUM NUMBER OF VALUES THAT ',
     *   'CAN BE STORED (',I4,') EXCEEDED.')
            CALL WARN
            ISTAT=1
            NEXPND=MVALS-NVALS
            IF (IBUG.GT.0) WRITE (IODBUG,*) 'NEXPND=',NEXPND
            IF (NEXPND.EQ.0) GO TO 150
            ENDIF
         DO 120 J=1,NEXPND
            VALUES(NVALS+J)=VALUES(NPSTRT+J)
120         CONTINUE
         NVALS=NVALS+NEXPND
         IF (IBUG.GT.0) WRITE (IODBUG,*) 'NVALS=',NVALS
         IF (ISTAT.EQ.1) GO TO 150
130      CONTINUE
      GO TO 10
C
C  CHECK IF ARRAY IS FULL
140   IF (ISTAT.EQ.1) GO TO 150
      GO TO 10
C
150   IF (NVALS.GT.0.AND.IBUG.GT.0) THEN
          WRITE (IODBUG,'('' VALUES='',10(F9.3,1X))')
     *       (VALUES(I),I=1,NVALS)
         ENDIF
C
      CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   'EXIT MRDVAL -',
     *   ' NRDCRD=',NRDCRD,
     *   ' NVALS=',NVALS,
     *   ' ISTAT=',ISTAT
C
      RETURN
C
      END
