C MODULE MXINCO
C-----------------------------------------------------------------------
C
C
C     DESC - PERFORMS THE XINCO MOD
C
      SUBROUTINE MXINCO(NCARDS,MODCRD,IDATE,NXTOPN,NXTNAM,IHZERO)
C
      LOGICAL FIRST
      CHARACTER*8 OPNAME,KWRDS,IFIELD,SLASH,BLANK8,NXTNAM,MODNAM
C
      COMMON /MOD136/NDT36,IDT36(10),IUT36(10),VAL36(8,10)
C
      INCLUDE 'common/fmodft'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'ufreex'
C
C
      DIMENSION VALUES(9),KWRDS(9),MODCRD(20,NCARDS),XINOPN(2,10)
      DIMENSION OLDOPN(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mxinco.f,v $
     . $',                                                             '
     .$Id: mxinco.f,v 1.3 1998/07/02 21:01:07 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA KWRDS /'SUBAS   ','WUC     ','WLC     ','WDC     ',
     1 'SC      ','QIC     ','QGC     ','WRATIO  ','GMULT   '/
      DATA SLASH/'/       '/,BLANK8/'        '/
      DATA MODNAM/'XINCO   '/
C
      CALL FSTWHR(8HMXINCO  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG SWITCH
C
      IBUG=IFBUG(4HXINC)+IFBUG(4HMODS)
C
      IF(IBUG.LT.1)GO TO 20
C
      WRITE(IODBUG,10) NXTOPN,NXTNAM
10    FORMAT(1H0,10X,'IN XINCO MOD - ENTERED SUBROUTINE MXINCO'/
     1  11X,'OPERATION NUMBER=',I2,5X,'OPERATION NAME=',A8)
C
C   CHECK IF NEXT OPERATION IS XIN-SMA OPERATION,
C   IF SO, PERFORM THIS MOD, IF NO, LEAVE
C
      IF(NXTOPN.NE.36) GOTO 510
C
20    IF(IUMSAC.EQ.1)GO TO 30
C
C     NEED TO CONVERT FROM ENGLISH TO METRIC UNITS
C
      CALL FCONVT(4HMM  ,4HL   ,ENGUN,AMM2IN,BMM2IN,IER)
      CALL FCONVT(4HDEGC,4HDEG ,ENGUN,ADC2DF,BDC2DF,IER)
C
30    CONTINUE
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
      IF (IDATE.LE.ICOMP) GOTO 40
         IF (MODWRN.EQ.0) GOTO 510
         ITYPE=2
         CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
         GOTO 510
C
C
C     SEE IF DATE IS WITHIN - OR + 12 HOURS OF START OR END OF RUN
C
40    CONTINUE
      ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
      IF(ISTHR-12.LE.IDATE.AND.IENHR+12.GE.IDATE)GO TO 60
C
C     DATE NOT WITHIN ALLOWABLE WINDOW
C
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,50)IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC,
     1IM2,ID2,IY2,IH2,MODTZC
50    FORMAT(1H0,10X,'**WARNING** THE DATE FOR CHANGES ENTERED IN THE ',
     1 'XINCO MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS NOT WITHIN 12 HOURS OF THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 510
C
60    CONTINUE
C
C     READ MOD CARDS FOR THIS SEGMENT - STORE VALUES IN ARRAYS() -
C      WILL TRANSFER TO CB /MOD136/ AFTER ALL INFO IS READ
C
C     READ CARD - IF COMMAND, LEAVE - IF COMMAND AND 1ST CARD, ERROR
C
      FIRST=.TRUE.
C
      IF(NRDCRD.EQ.NCARDS)GO TO 80
C
70    IF(NRDCRD.EQ.NCARDS)GO TO 510
C
      OPNAME=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 100
C
      IF(.NOT.FIRST)GO TO 510
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
80    IF(MODWRN.EQ.1)
     .WRITE(IPR,90)
90    FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1  'XINCO MOD.  PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 510
C
100   FIRST=.FALSE.
C
      VALUES(1)=0.
      DO 110 I=2,9
110   VALUES(I)=-999.
C
      NRDCRD=NRDCRD+1
C
C     NOW READ 2ND FIELD - MUST BE KEYWORD
C
      NFLD=1
      ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,IVALUE,VALUE,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 140
C
C     ERROR - DATA EXPECTED - PROCESS NEXT CARD
C
120   CONTINUE
      IF(MODWRN.EQ.1)
     .WRITE(IPR,130)(MODCRD(I,NRDCRD),I=1,20)
130   FORMAT(1H0,10X,'**WARNING** IN THE XINCO MOD - NOT ENOUGH ',
     1  'FIELDS ON SUBSEQUENT CARD.  THE CARD BEING PROCESSED IS:'/
     2  11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 70
C
140   DO 150 I=1,9
      IKEY=I
      IF(KWRDS(I).EQ.IFIELD)GO TO 170
150   CONTINUE
      IF(MODWRN.EQ.1)
     .WRITE(IPR,160)(MODCRD(I,NRDCRD),I=1,20)
160   FORMAT(1H0,10X,'**WARNING** IN THE XINCO MOD - AN INVALID ',
     1  'KEYWORD FOUND ON THE FOLLOWING MOD CARD'/11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 70
C
170   CONTINUE
C
C   CHECK IF THE SUBAS COMMAND
C
      IF(IKEY.NE.1) GOTO 200
      DO 180 I0=2,9
      IF(VALUES(I0).GT.0.) GOTO 190
180   CONTINUE
      GOTO 200
C
190   KSUBAS=1
      GOTO 260
C
C
C     NOW READ THE 3RD FIELD - MUST BE AN INTEGER OR REAL NUMBER
C
200   KSUBAS=0
      ISTRT=-3
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.EQ.-2)GO TO 120
C
      IF(ITYPE.LT.2.AND.NREP.EQ.-1)GO TO 220
C
C     VALUE IS NOT AN INTEGER NOR A REAL NUMBER
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,210)(MODCRD(I,NRDCRD),I=1,20)
210   FORMAT(1H0,10X,'**WARNING** A NONNUMERIC VALUE WAS DECODED ',
     1  'WHERE ONE WAS EXPECTED'/11X,'THE CURRENT MOD CARD IS'/11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 70
C
220   VALUES(IKEY)=REAL
C
C     SEE IF THERE IS ANOTHER FIELD - IF NOT PROCESS THE INFO
C     IN ARRAYS() - IF SO IT MUST BE A KEYWORD OR A SLASH (/)
C
      ISTRT=-3
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.EQ.-2)GO TO 260
C
C     ANOTHER FIELD - IS IT A SLASH ? - IS NOT SEE IF A KEYWORD
C
      IF(IFIELD.NE.SLASH)GO TO 140
C
C     GET HERE IF FIELD IS A SLASH
C     NOW READ NEXT FIELD - OPERATION NAME
C
      ISTRT=-3
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 240
      IF(MODWRN.EQ.0)GO TO 70
      WRITE(IODBUG,230)(MODCRD(I,NRDCRD),I=1,20)
230   FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      CALL WARN
      GO TO 70
240   CONTINUE
C
      OPNAME=IFIELD
C
C   CHECK THAT OPERATION NAME ENTERED MATCHS NXTNAM
C   IF NOT, READ NEXT CARD
C
      IF (IBUG.GT.0) WRITE(IODBUG,250) OPNAME,NXTNAM
250   FORMAT(11X,'OPERATION NAME INPUT IS ',A8,', NEXT OPERATION '
     ., 'IN OPERATION TABLE IS ',A8,'.')
C
      IF(OPNAME.NE.NXTNAM) GOTO 70
C
C     SEE IF ANY SETS OF CARRYOVER IN CB /MOD136/
C
260   IF(NDT36.GT.0)GO TO 330
C
C     NONE IN CB - JUST ADD THIS CARRYOVER TO CB
C
      NDT36=1
      CALL UMEMOV(OPNAME,XINOPN(1,1),2)
      IDT36(1)=IDATE
      IUT36(1)=VALUES(1)+0.5
      DO 310 J=2,9
      VALUE=VALUES(J)
      IF(VALUE.LT.-998.)GO TO 300
      IF(IUMSAC.LT.1.AND.J.LE.7) VALUE=VALUE/AMM2IN
      IF(VALUE.GE.0.) GOTO 300
      IF(MODWRN.LE.0) GOTO 310
C
C     INVALID RANGE FOR VALUE
C
      WRITE(IPR,270)KWRDS(J)
      IF(J.LT.8)WRITE(IPR,280)VALUE
      IF(J.GE.8)WRITE(IPR,290)VALUE
      CALL WARN
      GO TO 310
C
270   FORMAT(1H0,10X,'**WARNING** IN XINCO MOD - VALUE IS OUT OF ',
     1 'VALID RANGE FOR VARIABLE ',A8)
280   FORMAT(11X,'VALUE IS ',G10.3,' MM.')
290   FORMAT(11X,'VALUE IS ',G10.3)
300   VAL36(J-1,1)=VALUE
310   CONTINUE
      IF(KSUBAS.LE.0) GOTO 70
      VALUES(1)=0.
      DO 320 I0=2,9
320   VALUES(I0)=-999.0
      GOTO 200
C
330   CONTINUE
C
C     CHECK IF NAME MATCHES ANY NAME IN CB OR IS BLANK -
C       AND IF DATE MATCHES ANY DATE IN CB
C
      DO 370 I=1,NDT36
      IF(IUSAME(OPNAME,XINOPN(1,I),2).EQ.0)GO TO 370
C
C     NAME IN CB MATCHES NAME TO BE STORED
C     NOW SEE IF DATES MATCH
C
      IDTCHK=IDT36(I)
      IF(IDTCHK.NE.IDATE)GO TO 370
C
C    CHECK THE SUB BASIN NUMBER
C
      IBSCHK=IUT36(I)
      ISBBSN=VALUES(1)+0.5
      IF(IBSCHK.NE.ISBBSN) GOTO 370
C
C   SUB-BASIN MATCH TOO - ADD INFO TO THIS SPOT IN CB
C
      IUT36(I)=VALUES(1)+0.5
      DO 350 J=2,9
      VALUE=VALUES(J)
      IF(VALUE.LT.-998.)GO TO 350
      IF(IUMSAC.LT.1.AND.J.LE.7) VALUE=VALUE/AMM2IN
      IF(VALUE.GE.0.) GOTO 340
      IF(MODWRN.LE.0) GOTO 350
C
C     INVALID RANGE FOR VALUE
C
      WRITE(IPR,270)KWRDS(J)
      IF(J.LT.8)WRITE(IPR,280)VALUE
      IF(J.GE.8)WRITE(IPR,290)VALUE
      CALL WARN
      GO TO 350
C
340   VAL36(J-1,I)=VALUE
350   CONTINUE
      IF(KSUBAS.LE.0) GOTO 70
      VALUES(1)=0.
      DO 360 I0=2,9
360   VALUES(I0)=-999.0
      GOTO 200
C
370   CONTINUE
C
C     HAVE NOT FOUND MATCH FOR NAME AND DATE -
C     ADD NEW ENTRY TO CB
C
      IF(NDT36.LT.10)GO TO 390
C
C     NOT ENOUGH ROOM IN CB
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,380)
380   FORMAT(1H0,10X,'**WARNING** NOT ENOUGH ROOM IN COMMON BLOCK ',
     1 '/FXINCO/'/11X,'TO HOLD A NEW ENTRY OF XIN-SMA CARRYOVER.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 70
C
390   CONTINUE
C
C   ENOUGH ROOM, LOCATE THIS MOD IN /MOD136/
C
      DO 400 I0=1,NDT36
      IF(IDATE.LT.IDT36(I0)) GOTO 430
      IF(IDATE.EQ.IDT36(I0)) GOTO 410
400   CONTINUE
      I=NDT36+1
      GOTO 460
C
C   IF THE SAME HOUR, ORDER BY SUB BASIN NUMBER
C
410   CONTINUE
      J0=I0
      DO 420 I0=J0,NDT36
      KBASIN=VALUES(1)+0.5
      IF(KBASIN.LE.IUT36(I0)) GOTO 430
420   CONTINUE
      I=NDT36+1
      GOTO 460
C
C   ORDER HERE
C
430   CONTINUE
C   DO 428 K0=NDT36,I0,-1
C
C  FOLLOWING CODE IS FOR FORTRAN 66 TO DUP ABOVE STMT.
C
      KSTOP = NDT36-I0+1
      DO 450 IX=1,KSTOP
      K0 = NDT36-I+1
      IDT36(K0+1)=IDT36(K0)
      IUT36(K0+1)=IUT36(K0)
      DO 440 M0=1,10
      VAL36(M0,K0+1)=VAL36(M0,K0)
440   CONTINUE
450   CONTINUE
      I=I0
C
C     EVERYTHING OK - ADD NEW ENTRY TO CB
C
460   NDT36=NDT36+1
      CALL UMEMOV(OPNAME,XINOPN(1,I),2)
      DO 470 J=1,8
470   VAL36(J,I)=-999.
      IDT36(I)=IDATE
      IUT36(I)=VALUES(1)+0.5
      DO 490 J=2,9
      VALUE=VALUES(J)
      IF(VALUE.LT.-998.)GO TO 480
      IF(IUMSAC.LT.1.AND.J.LE.7) VALUE=VALUE/AMM2IN
      IF(VALUE.GE.0.) GOTO 480
      IF(MODWRN.LE.0) GOTO 490
C
C     INVALID RANGE FOR VALUE
C
      WRITE(IPR,270)KWRDS(J)
      IF(J.LT.8)WRITE(IPR,280)VALUE
      IF(J.GE.8)WRITE(IPR,290)VALUE
      CALL WARN
      GO TO 490
C
480   VAL36(J-1,I)=VALUE
490   CONTINUE
      IF(KSUBAS.LE.0) GOTO 70
      VALUES(1)=0.
      DO 500 I0=2,9
500   VALUES(I0)=-999.0
      GOTO 200
C
510   IF(IBUG.EQ.0)GO TO 560
C
      WRITE(IODBUG,520)NDT36
520   FORMAT(11X,'IN XINCO MOD - LEAVING SUBROUTINE MXINCO - ',
     1 'NDT36 = ',I3)
      IF(NDT36.LE.0) GOTO 560
      WRITE(IODBUG,530)
530   FORMAT(14X,4HDATE,4X,6HSUBBAS,2X,6H  WUC ,2X,6H  WLC ,2X,6H  WDC ,
     .      2X,6H  SC  ,2X,6H  QIC ,2X,6H  QGC ,2X,6HWRATIO,2X,6H GMULT)
      DO 540 J=1,NDT36
540   WRITE(IODBUG,550) IDT36(J),IUT36(J),(VAL36(I,J),I=1,8)
550   FORMAT(11X,I8,3X,I4,2X,8(1X,F7.2))
C
560   CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
      END
