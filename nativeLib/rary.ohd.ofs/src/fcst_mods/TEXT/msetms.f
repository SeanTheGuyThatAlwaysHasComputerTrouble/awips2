C     MODULE MSETMS
C
C     THIS SUBROUTINE PERFORMS THE SETMSNG MOD.
C
C
      SUBROUTINE MSETMS(NCARDS,MODCRD,MTS,TS,MD,D,IHZERO)
C
C     THERE ARE 'NDATES' DATES WHICH ARE TO BE SET
C     TO MISSING.  THE DATES ARE IN 'JDATES' AND
C     THE TYPE OF DATE IS IN 'IRNGDT' WITH THE
C     FOLLOWING RULES:
C      IRNGDT=0, DATE IS A SINGLE DATE
C            =1, DATE IS THE START OF A PERIOD
C            =2, DATE IS THE END OF A PERIOD
C     NOTE THAT VALUES IN IRNGDT OF '1' AND '2' MUST
C     ALWAYS OCCUR IN PAIRS.
C
C <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DA,YR,HR
      LOGICAL LBUG,FIRST
C
      INCLUDE 'common/fprog'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'ufreex'
C
      DIMENSION OLDOPN(2)
      DIMENSION TSID(2),JDATES(7,30),IRNGDT(30)
      DIMENSION MODCRD(20,NCARDS),TS(MTS),D(MD)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/msetms.f,v $
     . $',                                                             '
     .$Id: msetms.f,v 1.3 1998/07/02 20:50:26 page Exp $
     . $' /
C    ===================================================================
C
C
      CALL FSTWHR(8HMSETMS  ,0,OLDOPN,IOLDOP)
C
      MAXDTS=30
C
      LBUG=.FALSE.
      IF(IFBUG(4HMODS).EQ.1.OR.IFBUG(4HSETM).EQ.1)LBUG=.TRUE.
C
      FIRST=.TRUE.
C
      IF(NRDCRD.EQ.NCARDS)GO TO 13
C
    1 IF(NRDCRD.EQ.NCARDS)GO TO 999
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 17
C
      IF(.NOT.FIRST)GO TO 999
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
   13 IF(MODWRN.EQ.1)
     .WRITE(IPR,920)
  920 FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1  'SETMSNG MOD.  PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 999
C
   17 FIRST=.FALSE.
      NRDCRD=NRDCRD+1
C
      CALL MRDTSH(NCARDS,MODCRD,NFLD,TSID,DTYPE,IDT,ISTAT)
C
      IF(ISTAT.EQ.0)GO TO 45
C
C     PROBLEMS READING TIME SERIES HEADER INFO
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,634)(MODCRD(I,NRDCRD),I=1,20)
  634 FORMAT(1H0,10X,'**WARNING** PROBLEM READING TIME SERIES ',
     1  'HEADER INFORMATION ON THE FOLLOWING MOD CARD.'/
     2  11X,'PROCESSING CONTINUES.'/11X,20A4)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 1
C
   45 CALL MDCDAT(NCARDS,MODCRD,NFLD,MAXDTS,NDATES,JDATES,IRNGDT,ISTAT)
C
      IF(ISTAT.EQ.0)GO TO 55
C
C     PROBLEMS READING DATES - HAVE FOUND A SLASH
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,635)(MODCRD(I,NRDCRD),I=1,20)
  635 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD - HAVE FOUND A ',
     1  'SLASH ON THE FOLLOWING MOD CARD'/
     2  11X,'THE SLASH AND ALL SUBSEQUENT FIELDS ARE IGNORED'/11X,20A4)
C
   55 IF(LBUG)WRITE(IODBUG,900)TSID,DTYPE,IDT,NDATES
  900 FORMAT(11X,'** SETMSNG MOD **'/11X,'TSID = ',2A4,
     1 ',DTYPE = ',A4,', IDT = ',I3,', NDATES = ',I3)
      IF(LBUG.AND.NDATES.GT.0)WRITE(IODBUG,901)((JDATES(I,J),I=1,7),
     1 IRNGDT(J),J=1,NDATES)
  901 FORMAT(11X,'JDATES = ',5I10,1X,A4,1X,I10,', IRNGDT = ',I3)
C
      VALMSN=-999.
C
C     SEE IF TIME SERIES IS IN SEGMENT
C
      CALL FINDTS(TSID,DTYPE,IDT,LOCD,LOCTS,DIMS)
C
      IF(LOCD.GT.0)GO TO 10
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,600)TSID,DTYPE,IDT
  600 FORMAT(1H0,10X,'**WARNING** TIME SERIES ',2A4,1X,A4,1X,I2,
     1 ' NOT IN THIS SEGMENT.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 1
C
   10 CONTINUE
C
C     SEE IF THIS DATA TYPE ALLOWS MISSING DATA
C     AND GET VALUE FOR NUMBER OF VALUES PER DELTA T (NVPDT)
C
      CALL FDCODE(DTYPE,UNITS,DIMS,MISALW,NVPDT,TSCALE,NADINF,IERR)
C
      IF(MISALW.EQ.1)GO TO 20
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,604)TSID,DTYPE,IDT
  604 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD COMMAND'/11X,
     1 'MISSING DATA ARE NOT ALLOWED FOR TIME SERIES ',2A4,1X,
     2 A4,1X,I2)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 1
C
   20 CONTINUE
C
C     SEE IF THIS IS AN INPUT TIME SERIES
C
      ITYPE=TS(LOCTS)
C
C     ITYPE=1 - INPUT TS
C     ITYPE=2 - UPDATE TS
C     ITYPE=3 - OUTPUT TS
C     ITYPE=4 - INTERNAL TS
C
      IF(ITYPE.EQ.1)GO TO 30
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,605)TSID,DTYPE,IDT
  605 FORMAT(1H0,10X,'**WARNING** ONLY INPUT TIME SERIES CAN ',
     1 'BE CHANGED WITH THE SETMSNG MOD'/11X,
     2 'TIME SERIES ',2A4,1X,A4,1X,I2,' IS NOT AN INPUT TIME SERIES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 1
C
   30 CONTINUE
C
C     GO THROUGH DATES AND SEE IF SINGLE DATES ARE WITHIN THE
C     RUN PERIOD, OR IF THE RANGE OF DATES REQUESTED IS TOTALLY
C     WITHIN THE RUN PERIOD
C
C     IF THEY ARE, SET VALUE IN TIME SERIES TO MISSING
C     IF NOT, CHECK TO SEE IF MESSAGE SHOULD BE PRINTED
C
C <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      IF(NDATES.GT.0)GO TO 40
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,601)TSID,DTYPE,IDT
  601 FORMAT(1H0,10X,'**WARNING** IN THE SETMSNG MOD COMMAND'/
     1 11X,'NO DATES HAVE BEEN ENTERED TO BE SET TO MISSING FOR ',
     2 'TIME SERIES'/11X,2A4,1X,A4,1X,I2)
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 1
C
   40 CONTINUE
C
      INITHR=(IDA-1)*24+IHZERO
      LASTHR=(LDA-1)*24+LHR
C
      DO 100 IDATE=1,NDATES
C
      IF(IRNGDT(IDATE).NE.0)GO TO 60
C
C     ONE DATE
C
      IF(JDATES(1,IDATE).LE.INITHR.OR.JDATES(1,IDATE).GT.LASTHR)GO TO 50
C
C     DATE OK - SET TO MISSING
C
      LOCCNG=LOCD+((JDATES(1,IDATE)-((IDADAT-1)*24+IDT))/IDT)*NVPDT
C
      IF(LBUG)WRITE(IODBUG,915)TSID,DTYPE,IDT,VALMSN,LOCCNG,LOCD,NVPDT,
     1 IDADAT,IDATE
  915 FORMAT(11X,'**SETMSNG MOD**  ABOUT TO SET ONE VALUE IN TIME ',
     1 'SERIES ',2A4,1X,A4,I3,' TO ',F8.2,' AT LOCATION ',I5/
     2 11X,'LOCD = ',I5,', NVPDT = ',I3,', IDADAT = ',I10,', IDATE = ',
     3 I3)
C
      D(LOCCNG)=VALMSN
C
      GO TO 100
C
   50 CONTINUE
C
C     BAD DATE
C
      JJDA=JDATES(1,IDATE)/24+1
      JJHR=JDATES(1,IDATE)-(JJDA-1)*24
C
      CALL MDYH2(JJDA,JJHR,MO,DA,YR,HR,ID1,ID2,INPTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,606)TSID,DTYPE,IDT,MO,DA,YR,HR,INPTZC
  606 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD - TRYING TO ',
     1 'CHANGE TIME SERIES ',2A4,1X,A4,1X,I2,'.'/11X,
     2 'PERIOD ',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,' IS NOT IN THE ',
     3 'CURRENT RUN PERIOD.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 100
C
C <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
   60 CONTINUE
C
C     RANGE OF DATES - IF START OF RANGE JUST GO ON
C                    - IF END OF RANGE PROCESS DATES
C
      IF(IRNGDT(IDATE).EQ.1)GO TO 100
C
C     NOW HAVE START OF RANGE IN (IDATE-1) AND END OF RANGE
C     IN (IDATE).
C
      IDATM1=IDATE-1
C
C     SEE IF THIS IS A VALID RANGE OF DATES
C     (I.E., THE FIRST DATE IS AT OR BEFORE THE SECOND DATE)
C
      IF(JDATES(1,IDATM1).LE.JDATES(1,IDATE))GO TO 65
C
C     NOT A VALID RANGE
C
      JJDA=JDATES(1,IDATM1)/24+1
      JJHR=JDATES(1,IDATM1)-(JJDA-1)*24
C
      CALL MDYH2(JJDA,JJHR,IIMO,IIDA,IIYR,IIHR,ID1,ID2,INPTZC)
C
      JJDA=JDATES(1,IDATE)/24+1
      JJHR=JDATES(1,IDATE)-(JJDA-1)*24
C
      CALL MDYH2(JJDA,JJHR,LLMO,LLDA,LLYR,LLHR,ID1,ID2,INPTZC)
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,608)TSID,DTYPE,IDT,IIMO,IIDA,IIYR,IIHR,INPTZC,
     1                             LLMO,LLDA,LLYR,LLHR,INPTZC
  608 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD - TRYING TO ',
     1 'CHANGE TIME SERIES ',2A4,1X,A4,1X,I2,'.'/11X,
     2 'THE PERIOD TO BE CHANGED ',I2,1H/,I2,1H/,I4,1H-,
     3 I2,1X,A4,' TO ',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
     4 ' IS NOT A VALID RANGE OF DATES.'/11X,
     5 'NO VALUES WILL BE CHANGED.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 100
C
   65 CONTINUE
C
C     SEE IF ENTIRE RANGE OF DATES IS WITHIN THE RUN PERIOD.
C
      IF(JDATES(1,IDATM1).GE.INITHR.AND.JDATES(1,IDATE).LE.LASTHR)
     1            GO TO 70
C
C     ENTIRE PERIOD NOT WITHIN RUN
C
      JJDA=JDATES(1,IDATM1)/24+1
      JJHR=JDATES(1,IDATM1)-(JJDA-1)*24
C
      CALL MDYH2(JJDA,JJHR,IIMO,IIDA,IIYR,IIHR,ID1,ID2,INPTZC)
C
      JJDA=JDATES(1,IDATE)/24+1
      JJHR=JDATES(1,IDATE)-(JJDA-1)*24
C
      CALL MDYH2(JJDA,JJHR,LLMO,LLDA,LLYR,LLHR,ID1,ID2,INPTZC)
C
      IF(JDATES(1,IDATM1).GT.LASTHR.OR.JDATES(1,IDATE).LT.INITHR)
     1 GO TO 67
C
C     SOME OF PERIOD ENTERED IS IN THE RUN PERIOD
C
      IF(MODWRN.EQ.0)GO TO 70
      WRITE(IPR,607)TSID,DTYPE,IDT,IIMO,IIDA,IIYR,IIHR,INPTZC,
     1                             LLMO,LLDA,LLYR,LLHR,INPTZC
  607 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD - TRYING TO ',
     1 'CHANGE TIME SERIES ',2A4,1X,A4,1X,I2,'.'/11X,
     2 'THE PERIOD TO BE CHANGED ',I2,1H/,I2,1H/,I4,1H-,
     3 I2,1X,A4,' TO ',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
     4 ' IS NOT COMPLETELY WITHIN THE RUN PERIOD.'/11X,
     5 'THOSE VALUES WITHIN THE RUN PERIOD WILL BE CHANGED.')
      CALL WARN
      GO TO 70
C
C     ENTIRE PERIOD ENTERED IS OUTSIDE THE RUN PERIOD
C
   67 IF(MODWRN.EQ.0)GO TO 100
      WRITE(IPR,844)TSID,DTYPE,IDT,IIMO,IIDA,IIYR,IIHR,INPTZC,
     1                             LLMO,LLDA,LLYR,LLHR,INPTZC
  844 FORMAT(1H0,10X,'**WARNING** IN SETMSNG MOD - TRYING TO ',
     1 'CHANGE TIME SERIES ',2A4,1X,A4,1X,I2,'.'/11X,
     2 'THE PERIOD TO BE CHANGED ',I2,1H/,I2,1H/,I4,1H-,
     3 I2,1X,A4,' TO ',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
     4 ' IS COMPLETELY OUTSIDE THE RUN PERIOD.'/11X,
     5 'NO VALUES WILL BE CHANGED.')
      CALL WARN
      GO TO 100
C
C     SOME OF PERIOD IS TO BE CHANGED
C
   70 LOC1=LOCD+((JDATES(1,IDATM1)-((IDADAT-1)*24+IDT))/IDT)*NVPDT
      LOC2=LOCD+((JDATES(1,IDATE)-((IDADAT-1)*24+IDT))/IDT)*NVPDT
      LOCEND=LOCD+(NDD*24/IDT)*NVPDT-1
C
      IF(LOC1.LT.LOCD)LOC1=LOCD
      IF(LOC2.GT.LOCEND)LOC2=LOCEND
C
      IF(LBUG)WRITE(IODBUG,914)TSID,DTYPE,IDT,VALMSN,LOC1,LOC2,
     1 LOCD,LOCEND,IDADAT,NVPDT,NDD,IDATM1,IDATE
  914 FORMAT(11X,'**SETMSNG MOD**  ABOUT TO SET VALUES IN TIME SERIES ',
     1 2A4,1X,A4,I3,' TO ',F8.2/11X,'FROM LOCATION ',I5,' TO ',I5/
     2 11X,'LOCD = ',I5,', LOCEND = ',I5,', IDADAT = ',I10,', NVPDT = ',
     3 I3,', NDD = ',I3,', IDATM1 = ',I3,', IDATE = ',I3)
C
      DO 80 I=LOC1,LOC2
   80 D(I)=VALMSN
C
  100 CONTINUE
      GO TO 1
C
  999 IF(LBUG)WRITE(IODBUG,902)
  902 FORMAT(11X,'** LEAVING MSETMS ** ')
C
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
      END
