C     MODULE MPSHFT
C-----------------------------------------------------------------------
C
C
C     DESC - PERFORMS THE QPSHIFT MOD
C
      SUBROUTINE MPSHFT(NCARDS,MODCRD,IIDATE,LLDATE,IHZERO)
C
      LOGICAL FIRST
C
      CHARACTER*8 ALLRC,RCID,IFIELD,BLANK8,SLASH
C
C
      INCLUDE 'common/modrcs'
      INCLUDE 'common/fmodft'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'ufreex'
C
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS)
      CHARACTER*8 BLOCK
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/mpshft.f,v $
     . $',                                                             '
     .$Id: mpshft.f,v 1.2 1998/07/02 20:46:02 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA BLANK8/'        '/,SLASH/'/       '/
      DATA ALLRC/'ALLRC   '/
C
      CALL FSTWHR('MPSHFT  ',0,OLDOPN,IOLDOP)
C
C     SET DEBUG SWITCH
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HQPSH)
      IFLAG=0
C
      IF(IBUG.GT.0) THEN
         WRITE(IPR,10) IIDATE,LLDATE
10       FORMAT('0** IN MPSHFT - IDATE LDATE = ',I12,2X,I12)
         ENDIF
C
C     SEE IF DATE IS WITHIN HOURS OF START OR END OF RUN
C
      IDATE=IABS(IIDATE)
      LDATE=IABS(LLDATE)
      ISTHR=(IDA-1)*24+IHZERO
      IENHR=(LDA-1)*24+LHR
C
      IF (LDATE.LE.IDATE) THEN
         IFLAG=1
         GOTO 15
         ENDIF
      IF(ISTHR.LE.IDATE.AND.IENHR.GE.LDATE) GOTO 30
      IDATE1=IDATE
      LDATE1=LDATE
      IF (IDATE1.LT.ISTHR) IDATE1=ISTHR
      IF (LDATE1.GT.IENHR) LDATE1=IENHR
      IF (ISTHR.LE.IDATE1.AND.IENHR.GE.LDATE1) THEN
         IDATE=IDATE1
         LDATE=LDATE1
         GOTO 30
         ENDIF
C
C     DATE NOT WITHIN ALLOWABLE WINDOW
C
15    IF (MODWRN.EQ.0) GOTO 380
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDA,LHR,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
      LXDA=LDATE/24+1
      LXHR=LDATE-(LXDA-1)*24
      IF(LXHR.EQ.0)LXDA=LXDA-1
      IF(LXHR.EQ.0)LXHR=24
      CALL MDYH2(LXDA,LXHR,IM4,ID4,IY4,IH4,DUM1,DUM2,MODTZC)
C
      IF (IFLAG.NE.0) THEN
         WRITE(IPR,25) (MODCRD(I,NRDCRD),I=1,20)
         CALL WARN
         GOTO 380
         ENDIF
C
      WRITE(IPR,20)IM3,ID3,IY3,IH3,MODTZC,IM4,ID4,IY4,IH4,MODTZC,
     1 IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC
20    FORMAT('0**WARNING** THE DATES FOR CHANGES IN THE ',
     1 'QPSHIFT MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
     1 4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'ARE NOT WITHIN THE CURRENT RUN PERIOD (',I2,1H/,I2,
     3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
     4 11X,'THESE CHANGES WILL BE IGNORED.')
25    FORMAT('0**WARNING** THE ENDING DATE AND TIME IS BEFORE ',
     1 'OR AT THE BEGINNING DATE AND TIME.  THESE CHANGES WILL BE ',
     2 'IGNORED.'/,23X,'THE CURRENT MOD CARD IS: ',20A4)
      CALL WARN
      GO TO 380
C
30    IF(IUMGEN.EQ.1)GO TO 40
C
C     MUST CONVERT UNITS FROM INCHES TO M
C
      CALL FCONVT(4HM   ,4HL   ,ENGUN,AIN2M,BIN2M,IER)
      CALL FCONVT(4HCMS ,4HV   ,ENGUN,CFS2M,DFS2M,IER)
C
C     READ MOD CARDS FOR THIS SEGMENT - STORE VALUES IN ARRAYS() -
C      WILL TRANSFER TO CB /MODRCS/ AFTER ALL INFO IS READ
C
C     READ CARD - IF COMMAND, LEAVE - IF COMMAND AND 1ST CARD, ERROR
C
40    FIRST=.TRUE.
C
      IF(NRDCRD.EQ.NCARDS)GO TO 60
C
50    IF(NRDCRD.EQ.NCARDS)GO TO 380
C
      RCID=BLANK8
C
      IF (MISCMD(NCARDS,MODCRD).EQ.0) GOTO 80
C
      IF(.NOT.FIRST)GO TO 380
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
60    IF(MODWRN.EQ.1)WRITE(IPR,70)
70    FORMAT('0**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1  'QPSHIFT MOD.  PROCESSING CONTINUES')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 380
C
80    FIRST=.FALSE.
      NRDCRD=NRDCRD+1
C
C     NOW READ THE 2ND FIELD - MUST BE AN INTEGER OR REAL NUMBER
C
      NFLD=1
      ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,VALUE,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ITYPE.NE.-1)GO TO 100
C
      IF(MODWRN.EQ.1)WRITE(IPR,90)(MODCRD(I,NRDCRD),I=1,20)
90    FORMAT('0**WARNING** IN THE QPSHIFT MOD - NOT ENOUGH ',
     1  'FIELDS ON SUBSEQUENT CARD.  THE CARD BEING PROCESSED IS:'/
     2  11X,20A4)
      GO TO 370
C
100   IF(ITYPE.LT.2.AND.NREP.EQ.-1)GO TO 120
C
C     VALUE IS NOT AN INTEGER NOR A REAL NUMBER
C
      IF(MODWRN.EQ.1)WRITE(IPR,110)(MODCRD(I,NRDCRD),I=1,20)
110   FORMAT('0**WARNING** A NONNUMERIC VALUE WAS DECODED ',
     1  'WHERE ONE WAS EXPECTED'/11X,'THE CURRENT MOD CARD IS'/11X,20A4)
      GO TO 370
C
C     SEE IF THERE IS ANOTHER FIELD - IF NOT PROCESS THE INFO
C     IN ARRAYS() - IF SO IT MUST BE A KEYWORD OR A SLASH (/)
C
C     NOW READ THE 3RD FIELD - MUST BE AN INTEGER
C
120   ISTRT=-3
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,IDISC,DISC,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ITYPE.NE.-1)GO TO 130
C
      IF(MODWRN.EQ.1)WRITE(IPR,90)(MODCRD(I,NRDCRD),I=1,20)
      GO TO 370
C
130   IF(ITYPE.NE.2.AND.NREP.EQ.-1)GO TO 150
C
C     VALUE IS NOT AN INTEGER
C
      IF(MODWRN.EQ.1)WRITE(IPR,140)(MODCRD(I,NRDCRD),I=1,20)
140   FORMAT('0**WARNING** A NON-INTEGER VALUE WAS DECODED ',
     1  'WHERE ONE WAS EXPECTED'/11X,'THE CURRENT MOD CARD IS'/11X,20A4)
      GO TO 370
C
C
150   ISTRT=-3
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.EQ.-2)GO TO 200
C
C     ANOTHER FIELD - IS IT A SLASH ? - IS NOT SEE IF A KEYWORD
C
      IF(IFIELD.EQ.SLASH)GO TO 170
C
      IF(MODWRN.EQ.1)WRITE(IPR,160)(MODCRD(I,NRDCRD),I=1,20)
160   FORMAT('0**WARNING** IN THE QPSHIFT MOD - AN INVALID ',
     1  'FIELD WAS FOUND ON THE FOLLOWING MOD CARD'/11X,20A4)
      GO TO 370
C
C     GET HERE IF FIELD IS A SLASH
C     NOW READ NEXT FIELD - RATING CURVE ID
C
170   ISTRT=-3
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,RCID,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 190
      IF(MODWRN.EQ.0)GO TO 50
      WRITE(IODBUG,180)(MODCRD(I,NRDCRD),I=1,20)
180   FORMAT('0**WARNING** NO RATING CURVE ID ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 370
190   CONTINUE
C
C     CONVERT TO MM IF NEEDED
C
200   IF (IUMGEN.EQ.0) THEN
         VALUE=VALUE/AIN2M
         DISC=DISC/CFS2M
         ENDIF
C
      IF (RCID.EQ.BLANK8) CALL UMEMOV(ALLRC,RCID,2)
C
C     CHECK FOR VALID DISCHARGE VALUE
C
C     BAD DISCHARGE VALUE ENTERED
C
      IF (DISC.LT.0.0) THEN
         IF (MODWRN.EQ.1) THEN
            IF (IUMGEN.EQ.0) DISC=DISC*CFS2M
            WRITE(IPR,230) DISC,(MODCRD(IY,NRDCRD),IY=1,20)
            GOTO 370
            ENDIF
         ENDIF
C
C     SEE IF ANY EXISTING RATING CURVE IN CB /MODRCS/
C
      IF(NUMRC.GT.0)GO TO 260
C
C     NONE IN CB - JUST ADD STAGE AND DISCHARGE VALUE TO CB
C
230   FORMAT('0**WARNING** IN QPSHIFT MOD - DISCHARGE VALUE ',
     1 F12.2,' IS OUT OF RANGE.  THIS CHANGE WILL BE IGNORED.',/,11X,
     2 'THE CURRENT CARD IMAGE IS : ',20A4)
C
240   NUMRC=1
      NSHIFT(NUMRC)=1
      CALL UMEMOV(RCID,RCSID(NUMRC,1),2)
      JROW=NSHIFT(NUMRC)
      IJHSHF(JROW,NUMRC)=IDATE
      LJHSHF(JROW,NUMRC)=LDATE
      ISTYPE(JROW,NUMRC)=1
      HNEW(JROW,NUMRC)=VALUE
      QNEW(JROW,NUMRC)=DISC
      HL(JROW,NUMRC)=-999.0
      HU(JROW,NUMRC)=-999.0
C
      IF(IBUG.GT.0) WRITE(IODBUG,310) HNEW(JROW,NUMRC),QNEW(JROW,NUMRC),
     1              JROW,NUMRC
      GO TO 50
C
C     CHECK IF NAME MATCHES ANY NAME IN CB OR IS BLANK -
C
260   DO 330 I=1,NUMRC
      IKEY=I
      IF(IUSAME(RCID,RCSID(1,I),2).EQ.0) GOTO 330
C
      CALL MSHIFT(IKEY,IDATE,LDATE,IERR)
      IF (IERR.NE.0) THEN
         IF (MODWRN.EQ.0) GOTO 370
         WRITE(IPR,320) (MODCRD(IX,NRDCRD),IX=1,20)
320      FORMAT('0**WARNING** NOT ENOUGH ROOM IN COMMON BLOCK ',
     1 '/MODRCS/'/11X,'TO HOLD NEW STAGE & DISCHARGE VALUES.  THE ',
     2 'CURRENT MOD CARD IMAGE IS'/11X,20A4)
         GOTO 370
         ENDIF
      NEW=NSHIFT(IKEY)+1
      IJHSHF(NEW,IKEY)=IDATE
      LJHSHF(NEW,IKEY)=LDATE
      ISTYPE(NEW,IKEY)=1
      HNEW(NEW,IKEY)=VALUE
      QNEW(NEW,IKEY)=DISC
      HL(NEW,IKEY)=-999.0
      HU(NEW,IKEY)=-999.0
      NSHIFT(IKEY)=NEW
      CALL MORDER(IKEY)
      DO 305 N=1,NSHIFT(IKEY)
         IF (IDATE.EQ.IJHSHF(N,IKEY).AND.LDATE.EQ.LJHSHF(N,IKEY)) THEN
            INEW=N
            ENDIF
305   CONTINUE
      IF(IBUG.GT.0) WRITE(IODBUG,310)HNEW(INEW,IKEY),QNEW(INEW,IKEY),
     1              NEW,IKEY
310   FORMAT(11X,'STAGE AND DISCHARGE VALUE OF ',F10.2,' M AND ',
     1 F10.2,' CMS STORED IN ROW AND COLUMN ',I1,2X,I1,' OF ARRAY ',
     2    'HNEW AND QNEW.')
      GO TO 50
C
330   CONTINUE
C
C     HAVE NOT FOUND MATCH FOR NAME  -
C     ADD NEW ENTRY TO CB
C
      IF(NUMRC.LT.2)GO TO 350
C
C     NOT ENOUGH ROOM IN CB
C
      IF(MODWRN.EQ.1)WRITE(IPR,340)(MODCRD(I,NRDCRD),I=1,20)
340   FORMAT('0**WARNING** NOT ENOUGH ROOM IN COMMON BLOCK ',
     1 '/MODRCS/'/11X,'TO HOLD A NEW RATING CURVE.  THE CURRENT ',
     2 'MOD CARD IMAGE IS'/11X,20A4)
      GO TO 370
C
C     ENOUGH ROOM - ADD NEW ENTRY TO CB
C
350   CONTINUE
C
      NUMRC=NUMRC+1
      NSHIFT(NUMRC)=1
      CALL UMEMOV(RCID,RCSID(1,NUMRC),2)
      IROW=NSHIFT(NUMRC)
      IJHSHF(IROW,NUMRC)=IDATE
      LJHSHF(IROW,NUMRC)=LDATE
      ISTYPE(IROW,NUMRC)=1
      HNEW(IROW,NUMRC)=VALUE
      QNEW(IROW,NUMRC)=DISC
      HL(IROW,NUMRC)=-999.0
      HU(IROW,NUMRC)=-999.0
      II=IROW
      NN=NUMRC
      IF(IBUG.GT.0)WRITE(IODBUG,310)HNEW(II,NN),QNEW(II,NN),II,NN
      GO TO 50
C
370   IF(MODWRN.EQ.1)CALL WARN
      GO TO 50
C
380   IF(IBUG.EQ.0)GO TO 500
C
      WRITE(IODBUG,390) NUMRC
390   FORMAT(11X,'***LEAVING SUBROUTINE MPSHFT*** NUMRC=',I3)
       IF(NUMRC.LE.0) GOTO 500
       DO 490 I=1,NUMRC
          WRITE(IODBUG,400)(RCSID(J,I),J=1,2)
          WRITE(IODBUG,420)(ISTYPE(J,I),J=1,NSHIFT(I))
          WRITE(IODBUG,430)(IJHSHF(K,I),K=1,NSHIFT(I))
          WRITE(IODBUG,440)(LJHSHF(L,I),L=1,NSHIFT(I))
          WRITE(IODBUG,450)(HNEW(N,I),N=1,NSHIFT(I))
          WRITE(IODBUG,460)(QNEW(N,I),N=1,NSHIFT(I))
          WRITE(IODBUG,470)(HL(N,I),N=1,NSHIFT(I))
          WRITE(IODBUG,480)(HU(N,I),N=1,NSHIFT(I))
400   FORMAT(11X,'ARRAY RCSID = ',2A4)
420   FORMAT(11X,'ARRAY ISTYPE = ',3X,5(I1,15X))
430   FORMAT(11X,'ARRAY IJHSHF = ',5(I8,8X))
440   FORMAT(11X,'ARRAY LJHSHF = ',5(I8,8X))
450   FORMAT(11X,'ARRAY HNEW = ',5(F12.2,4X))
460   FORMAT(11X,'ARRAY QNEW = ',5(F12.2,4X))
470   FORMAT(11X,'ARRAY HL = ',5(F10.2,6X))
480   FORMAT(11X,'ARRAY HU = ',5(F10.2,6X))
C
490   CONTINUE
C
500   CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
      END
