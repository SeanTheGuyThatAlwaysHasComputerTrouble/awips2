C$PRAGMA C (chkdates,cacheuhgchng)
C MODULE MUHGCH
C-----------------------------------------------------------------------
C
C
C     DESC - THIS SUBROUTINE PERFORMS THE UHGCHNG MOD
c            5/24/04 add code to check for more than one dates entry.
c            mod will run if valid date is greater than start date
c            and less than or equal lastcompdate
C
      SUBROUTINE MUHGCH(MP,P,NCARDS,MODCRD,IDATE,IHZERO)
C
      LOGICAL FIRST,ONEOP
      CHARACTER*8 OPNAME,BLANK8,MODNAM
      INTEGER*4 STRCPD,ENDCPD
C
      INCLUDE 'ufreex'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fmodft'
C
      
      DIMENSION P(MP),VALUES(100)
      DIMENSION OLDOPN(2),MODCRD(20,NCARDS),Modstmp(20)
      
      integer   datestat
      

     

C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mods/RCS/muhgch.f,v $
     . $',                                                             '
     .$Id: muhgch.f,v 1.10 2004/11/23 17:33:52 hank Exp $
     . $' /
C    ===================================================================
C
C
      DATA ISLASH/4H/   /,BLANK8/'        '/
      DATA MODNAM/'UHGCHNG '/
C
      CALL FSTWHR(8HMUHGCH  ,0,OLDOPN,IOLDOP)
C
C     SET DEBUG FLAG
C
      IBUG=IFBUG(4HMODS)+IFBUG(4HUHGC)
C
      IF(IBUG.GT.0)WRITE(IODBUG,10)
10    FORMAT(11X,'*** SUBROUTINE MUHGCH ENTERED ***')
C
      FIRST=.TRUE.
C
C     CHECK TIME PERIOD AGAINST OBSERVED DATA PERIOD - PRINT WARNING IF
C     ENTIRE OBS. DATA PERIOD IS NOT WITHIN PERIOD BEING CHANGED
C
      STRCPD=(IDA-1)*24+IHZERO
      ENDCPD=(LDACPD-1)*24+LHRCPD
C
      IF(IBUG.GT.0)WRITE(IODBUG,20)IDATE,STRCPD,LDATE,ENDCPD
20    FORMAT(11X,' IDATE,  STRCPD,   LDATE,  ENDCPD ='/8X,4I9)

ccav check for correct number of dates has entered
      do j = 1, 20          
          Modstmp(j) = modcrd(j,nrdcrd)  
      end do
      
      call chkdates(datestat,Modstmp)
cc
ccav check if mod had more than 1 date 
ccav for e.g .UHGCHNG 04029312Z 03209312Z
cc
      if(datestat .GT. 2) then
        WRITE(IPR,55)(MODCRD(I,NRDCRD),I=1,20)
55      FORMAT(1H0,10X,'**WARNING** THEERE ARE MORE THAN ONE DATE',
     1  ' ENTERED IN THE UHGCHNG MOD.THIS MOD WILL BE IGNORED.',
     2  ' THE CURRENT MOD CARD IMAGE IS:'/11X,20A4)
        CALL WARN
        GO TO 480  
      end if      
C
C     CHECK IF THE DATE IS THE SAME AS LSTCMPDY VALUE
C
      ICOMP=((LDACPD-1)*24)+LHRCPD
cav      IF(IDATE.EQ.ICOMP) GOTO 30
cav   idate is now can be less or equal lscmpdy
cav      IF(IDATE.LE.ICOMP) GOTO 30
cav      IF(MODWRN.EQ.0) GOTO 480
cav change to text message output to type2 as tester's comment
cav        ITYPE=3
cac        ITYPE=2
cav        CALL MODS1(NCARDS,ICMND,MODNAM,MODCRD,ITYPE)
cav        GOTO 480
C
C     SEE IF ALL OF CURRENT OBS. DATA PERIOD IS WITHIN PERIOD ENTERED
C
      IF(IDATE.LT.STRCPD)GO TO 40
C
C     ALL OF OBS. DATA PERIOD IS WITHIN PERIOD BEING CHANGED
C
      GO TO 60
C
40    CONTINUE
C
C     OBS. DATA PERIOD IS NOT ENTIRELY WITHIN THE PERIOD BEING CHANGED
C
      IF(MODWRN.EQ.0)GO TO 480
      CALL MDYH2(IDA,IHZERO,IM1,ID1,IY1,IH1,DUM1,DUM2,MODTZC)
      CALL MDYH2(LDACPD,LHRCPD,IM2,ID2,IY2,IH2,DUM1,DUM2,MODTZC)
      IXDA=IDATE/24+1
      IXHR=IDATE-(IXDA-1)*24
      IF(IXHR.EQ.0)IXDA=IXDA-1
      IF(IXHR.EQ.0)IXHR=24
C
      CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
      IF(MODWRN.EQ.1)
      
     .WRITE(IPR,50)IM3,ID3,IY3,IH3,MODTZC,IM1,ID1,IY1,IH1,MODTZC
50    FORMAT(1H0,10X,'**WARNING** THE DATE FOR CHANGES ENTERED IN THE ',
     1 'UHGCHNG MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     2 'IS LESS THAN (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/11X,
     3 'THESE CHANGES WILL BE IGNORED.')
C
C     CALL MDYH2(IXDA,IXHR,IM3,ID3,IY3,IH3,DUM1,DUM2,MODTZC)
C     LXDA=LDATE/24+1
C     LXHR=LDATE-(LXDA-1)*24
C     IF(LXHR.EQ.0)LXDA=LXDA-1
C     IF(LXHR.EQ.0)LXHR=24
C     CALL MDYH2(LXDA,LXHR,IM4,ID4,IY4,IH4,DUM1,DUM2,MODTZC)
C
C     WRITE(IPR,602)IM3,ID3,IY3,IH3,MODTZC,IM4,ID4,IY4,IH4,MODTZC,
C    1 IM1,ID1,IY1,IH1,MODTZC,IM2,ID2,IY2,IH2,MODTZC
C 602 FORMAT(1H0,10X,'**WARNING** THE DATES FOR CHANGES IN THE ',
C    1 'UHGCHNG MOD (',I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,
C    1 4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/15X,
C    2 'DO NOT COMPLETELY CONTAIN THE OBS. DATA PERIOD (',I2,1H/,I2,
C    3 1H/,I4,1H-,I2,1X,A4,4H TO ,I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,1H)/
C    4 15X,'THESE CHANGES WILL BE IGNORED.')
C
      CALL WARN
      GO TO 480

C
60    MXVALS=100
C
C     READ CARD - IF COMMAND LEAVE - IF COMMAND AND 1ST CARD ERROR
C
      FIRST=.TRUE.
      IF(NRDCRD.EQ.NCARDS)GO TO 80
C
70    IF(NRDCRD.EQ.NCARDS)GO TO 480
      NOPERS=0
C
      OPNAME=BLANK8
C
      IF(MISCMD(NCARDS,MODCRD).EQ.0)GO TO 100
C
      IF(.NOT.FIRST)GO TO 480
C
C     HAVE FOUND COMMAND AS FIRST SUBSEQUENT CARD - ERROR
C
80    IF(MODWRN.EQ.1)WRITE(IPR,90)
90    FORMAT(1H0,10X,'**WARNING** NO SUBSEQUENT CARDS FOUND FOR THE ',
     1 'UHGCHNG MOD.  PROCESSING CONTINUES.')
      IF(MODWRN.EQ.1)CALL WARN
      GO TO 480
C
100   FIRST=.FALSE.
C
C     CALL SUBROUTINE TO READ VALUES
C
      NFLD=1
      NRDCRD=NRDCRD+1
C
      CALL MRDVAL(NCARDS,MODCRD,NFLD,MXVALS,NVALS,VALUES,ISTAT)
C
      IF(IBUG.GT.0)WRITE(IODBUG,110)ISTAT,FIRST,NVALS
110   FORMAT(11X,'**IN MUHGCH** AFTER CALL TO MRDVAL - ISTAT=',I3,
     1 ', FIRST=',L4,', NVALS=',I2)
      IF(IBUG.GT.0.AND.NVALS.GT.0.AND.ISTAT.NE.-1)WRITE(IODBUG,120)
     1 (VALUES(I),I=1,NVALS)
120   FORMAT(11X,'VALUES='/(11X,10G10.2))
C
C     ISTAT RETURNED FROM MRDVAL MEANS
C       =0, VALUES READ OK, NO ADDITIONAL FIELDS ON CARD
C       =2, VALUES READ OK, ADDITIONAL FIELDS ON CARD
C       =-1, NO VALUES ENTERED
C       ELSE, TOO MANY VALUES ENTERED
C
      IF(ISTAT.EQ.0)GO TO 230
      IF(ISTAT.EQ.2)GO TO 160
      IF(ISTAT.EQ.-1)GO TO 140
C
      IF(MODWRN.EQ.0)GO TO 230
      WRITE(IPR,130)MXVALS,(MODCRD(I,NRDCRD),I=1,20),MXVALS
130   FORMAT(1H0,10X,'** WARNING ** IN UHGCHNG MOD - MORE THAN ',I3,
     1 ' VALUES ENTERED.'/11X,'CURRENT MOD CARD IMAGE IS'/11X,20A4/
     2 11X,'THE FIRST ',I3,' ORDINATES ENTERED WILL BE USED, ',
     3 'THE REMAINING ORDINATES WILL BE SET TO ZERO.')
      CALL WARN
      GO TO 230
C
140   IF(MODWRN.EQ.1)
     .WRITE(IPR,150)(MODCRD(I,NRDCRD),I=1,20)
150   FORMAT(1H0,10X,'**WARNING** ',
     1  'NO VALUES ENTERED ON A SUBSEQUENT CARD FOR UHGCHNG MOD'/
     2 11X,'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 470
C
C     HAVE ADDITIONAL FIELDS - LOOK FOR A SLASH (/) AND
C     AN OPERATION NAME - REPROCESS CURRENT FIELD TO SEE IF A SLASH
C
160   ONEOP=.TRUE.
      ISTRT=-1
      NCHAR=1
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,IFIELD,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(IFIELD.EQ.ISLASH)GO TO 180
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,170)(MODCRD(I,NRDCRD),I=1,20)
170   FORMAT(1H0,10X,'** WARNING ** IN UHGCHNG MOD - A SLASH ',
     1 'WAS NOT FOUND WHERE EXPECTED ON THE FOLLOWING CARD'/
     2 11X,20A4/11X,'NO CHANGES ENTERED ON THIS CARD WILL BE MADE')
      GO TO 470
C
C     NOW READ OPERATION NAME
C
180   ISTRT=-3
      NCHAR=2
      ICKDAT=0
C
      CALL UFIEL2(NCARDS,MODCRD,NFLD,ISTRT,LEN,ITYPE,NREP,INTGER,REAL,
     1  NCHAR,OPNAME,LLPAR,LRPAR,LASK,LATSGN,LAMPS,LEQUAL,ISTAT)
C
      IF(ISTRT.NE.-2)GO TO 200
      IF(MODWRN.EQ.0)GO TO 70
      WRITE(IODBUG,190)(MODCRD(I,NRDCRD),I=1,20)
190   FORMAT(11X,'** WARNING ** NO OPERATION NAME ENTERED ',
     1 'AFTER A SLASH ON THE FOLLOWING MOD CARD'/11X,20A4/
     2 11X,'THIS CARD IS IGNORED.')
      GO TO 470
200   CONTINUE
C
C     CHECK THAT OPERATION NAME ENTERED IS IN SEGMENT
C     IF NOT, READ NEXT CARD
C
      LOCOPN=0
      CALL FSERCH(2,OPNAME,LOCOPN,P,MP)
C
      IF(IBUG.GT.0)WRITE(IODBUG,210)OPNAME,ONEOP,LOCOPN
210   FORMAT(11X,'BACK FROM FSERCH LOOKING FOR OPERATION NAMED ',A8/
     1 11X,'ONEOP = ',L4,', LOCOPN = ',I5)
C
      IF(LOCOPN.GT.0)GO TO 270
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,220)OPNAME
220   FORMAT(1H0,10X,'** WARNING ** IN UHGCHNG MOD - ',
     1 'UNIT-HYDROGRAPH OPERATION ',A8,' NOT IN THIS SEGMENT.')
      GO TO 470
C
C     FIND START OF SECOND PORTION OF P ARRAY FOR THE OPERATION
C
230   LOCOPN=1
      ONEOP=.FALSE.
240   CALL FSERCH(2,OPNAME,LOCOPN,P,MP)
C
      IF(IBUG.GT.0)WRITE(IODBUG,250)OPNAME,ONEOP,LOCOPN,NOPERS
250   FORMAT(11X,'BACK FROM FSERCH LOOKING FOR ALL UNIT-HYDROGRAPH ',
     1 'OPERATIONS IN THIS SEGMENT'/11X,'OPNAME= ',A8,
     2 ', ONEOP= ',L4,', LOCOPN= ',I5,', NOPERS= ',I3)
C
      IF(LOCOPN.GT.0)GO TO 270
C
C     NO MORE UNIT-HYDROGRAPH OPERATIONS IN THIS SEGMENT
C     PRINT WARNING IF NO UNIT-HG OPERS WERE FOUND
C
      IF(NOPERS.GT.0)GO TO 70
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,260)
260   FORMAT(1H0,10X,'** WARNING ** IN UHGCHNG MOD - NO ',
     1 'UNIT-HYDROGRAPH OPERATIONS FOUND IN THIS SEGMENT.')
      GO TO 470
C
C     CHECK FOR NEGATIVE UNIT-HYDROGRAPH ORDINATES
C
270   DO 290 I=1,NVALS
      IF(VALUES(I).GE.0.0)GO TO 290
      IF(MODWRN.EQ.1)WRITE(IPR,280)I,(MODCRD(J,NRDCRD),J=1,20)
280   FORMAT(1H0,10X,'** WARNING ** IN THE UHGCHNG MOD - ',
     1 'A NEGATIVE NUMBER WAS ENTERED AS ORDINATE NUMBER ',I3/
     2 11X,'THIS UNIT-HYDROGRAPH WILL NOT BE CHANGED.  ',
     3 'THE CURRENT MOD CARD IMAGE IS'/11X,20A4)
      GO TO 470
C
290   CONTINUE
C
C     NUMBER OF UNIT-HG ORDINATES IS IN POSITION 10 OF P ARRAY
C     ORDINATES START IN POSITION 27
C
      LOCP=LOCOPN-1
      NOPERS=NOPERS+1
      NORDS=P(LOCP+10)
      LORDS=LOCP+27-1
C
      IF(IBUG.LT.1)GO TO 330
C
      WRITE(IODBUG,300)IDATE,LDATE,NVALS,NORDS,OPNAME
300   FORMAT(11X,'IN SUBROUTINE MUHGCH - UHGCHNG MOD'/11X,
     1 'IDATE, LDATE, NVALS, NORDS, OPNAME ='/5X,
     1 2I11,1X,I3,1X,I3,1X,A8)
      IF(NVALS.GT.0)WRITE(IODBUG,310)(VALUES(I),I=1,NVALS)
310   FORMAT(11X,'VALUES ='/(11X,10G9.2))
      IF(NORDS.GT.0)WRITE(IODBUG,320)(P(LORDS+I),I=1,NORDS)
320   FORMAT(11X,'CURRENT UNIT HYDROGRAPH ORDINATES ='/(11X,10G9.2))
C
C     SET END OF VALUES ARRAY TO ZERO
C
330   IF(NVALS.EQ.MXVALS)GO TO 350
      NSET=MXVALS-NVALS
      DO 340 I=1,NSET
340   VALUES(NVALS+I)=0.
C
C     SUM CURRENT UNIT-HG ORDINATES
C
350   SUM=0.
      DO 360 I=1,NORDS
360   SUM=SUM+P(LORDS+I)
C
C     CHECK IF UNIT-HG IN P ARRAY IS LARGER THAN MXVALS ALLOWED
C     IF SO, SET THE REST OF P ARRAY TO ZERO
C
      IF(NORDS.LE.MXVALS)GO TO 380
      NSET=NORDS-MXVALS
      DO 370 I=1,NSET
370   P(LORDS+MXVALS+I)=0.
C
C     CHECK IF NEW UNIT-HG WILL FIT IN P ARRAY
C
380   IF(NVALS.LE.NORDS)GO TO 400
C
      IF(MODWRN.EQ.1)
     .WRITE(IPR,390)NVALS,NORDS,NORDS
390   FORMAT(1H0,10X,'** WARNING ** IN UHGCHNG MOD - ',I3,
     1 ' UNIT-HG ORDINATES WERE ENTERED.'/11X,'THERE IS ROOM IN ',
     2 'THE PARAMETER ARRAY FOR ONLY ',I3,1H./11X,
     3 'THE FIRST ',I3,' UNIT-HG ORDINATES ENTERED WILL BE USED.')
      IF(MODWRN.EQ.1)CALL WARN
      NVALS=NORDS
C
C     SUM ENTERED ORDINATES
C
400   SUMNEW=0.
      DO 410 I=1,NVALS
410   SUMNEW=SUMNEW+VALUES(I)
C
C     RESCALE NEW VALUES IF NEEDED
C
      IF(SUM.EQ.SUMNEW)GO TO 440
C
      RATIO=0.
      IF(SUMNEW.NE.0.0)RATIO=SUM/SUMNEW
      IF(IBUG.GT.0)WRITE(IODBUG,420)RATIO,SUM,SUMNEW
420   FORMAT(11X,'RESCALING ORDINATES - RATIO= ',G10.3,
     1 ', SUM= ',G10.2,', SUMNEW= ',G10.2)


      DO 430 I=1,NVALS
430   VALUES(I)=VALUES(I)*RATIO
C
ckwz save uhgchng for uhgcdate
      call cacheuhgchng(NORDS,VALUES, OPNAME)
C
C     STORE NEW VALUES IN P ARRAY
C
440   IF(IBUG.GT.0)WRITE(IODBUG,450)NORDS,LORDS,(VALUES(I),I=1,NORDS)
450   FORMAT(11X,'ABOUT TO MOVE ',I3,' UNIT-HYDROGRAPH ORDINATES INTO ',
     1 'THE P ARRAY'/11X,'STARTING AT LOCATION ',I5,'+1, THE VALUES ARE'
     2 /(11X,10G10.2))
C
      DO 460 I=1,NORDS
460   P(LORDS+I)=VALUES(I)
C
C     IF A SPECIFIC OPERATION NAME WAS ENTERED READ NEXT CARD,
C     IF NO OPERATION NAME WAS ENTERED, SEARCH P ARRAY FOR ANOTHER
C     UNIT-HYDROGRAPH OPERATION
C
      IF(ONEOP)GO TO 70
      GO TO 240
C
470   IF(MODWRN.EQ.1)CALL WARN
      GO TO 70
C
480   CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      IF(IBUG.GT.0)WRITE(IODBUG,490)
490   FORMAT(11X,'*** LEAVING SUBROUTINE MUHGCH ***')
      RETURN
      END
