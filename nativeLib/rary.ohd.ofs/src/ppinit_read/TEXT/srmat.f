C MEMBER SRMAT
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 03/01/94.14:02:43 BY $WC20SV
C
C @PROCESS LVL(77)
C
C DESC READ AREA MAT PARAMETER RECORD
C
      SUBROUTINE SRMAT (IVMAT,XMATID,DESCRP,CENTRD,BASNID,ISTWT,POWER,
     *   MTEMP,NTEMP,TEMPID,IPDMMT,WTMMT,UNUSED,LARRAY,ARRAY,
     *   IPTR,IPRERR,IPTRNX,ISTAT)
C
      DIMENSION ARRAY(LARRAY)
      DIMENSION XMATID(*),DESCRP(*),CENTRD(*)
      DIMENSION BASNID(2),TEMPID(2,1),IPDMMT(*),WTMMT(*)
      DIMENSION UNUSED(*)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_read/RCS/srmat.f,v $
     . $',                                                             '
     .$Id: srmat.f,v 1.1 1995/09/17 19:14:55 dws Exp $
     . $' /
C    ===================================================================
C
C
C
      IF (ISTRCE.GT.0) WRITE (IOSDBG,120)
      IF (ISTRCE.GT.0) CALL SULINE (IOSDBG,1)
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('MAT ')
C
      IF (LDEBUG.GT.0) WRITE (IOSDBG,130) LARRAY
      IF (LDEBUG.GT.0) CALL SULINE (IOSDBG,1)
C
      ISTAT=0
C
C  READ PARAMETER RECORD
      CALL SUDOPN (1,'PPP ',IERR)
      CALL RPPREC (XMATID,'MAT ',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,
     *     IERR)
      IF (IERR.EQ.0) GO TO 10
      ISTAT=IERR
      IF (IERR.EQ.6) GO TO 110
      IF (IPRERR.EQ.0) GO TO 110
         CALL SRPPST (XMATID,'MAT ',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         WRITE (LP,180)
         CALL SULINE (LP,2)
         GO TO 110
C
C  SET PARAMETER ARRAY VERSION NUMBER
10    IVMAT=ARRAY(1)
C
C  SET MAT AREA IDENTIFIER
      XMATID(1)=ARRAY(2)
      XMATID(2)=ARRAY(3)
C
      NPOS=3
C
C  SET DESCRIPTIVE INFORMATION
      DO 20 I=1,5
         NPOS=NPOS+1
20       DESCRP(I)=ARRAY(NPOS)
C
C  SET CENTROID OF AREA (LAT/LONG IN DECIMAL DEGREES)
      DO 30 I=1,2
         NPOS=NPOS+1
30       CENTRD(I)=ARRAY(NPOS)
C
C  SET BASIN BOUNDARY IDENTIFIER
      DO 40 I=1,2
         NPOS=NPOS+1
40       BASNID(I)=ARRAY(NPOS)
C
C  SET TYPE OF STATION WEIGHTS
      NPOS=NPOS+1
      ISTWT=ARRAY(NPOS)
C
C  SET EXPONENT IN 1/D**POWER
      NPOS=NPOS+1
      POWER=ARRAY(NPOS)
C
C  THE NEXT TWO POSITIONS ARE UNUSED
      DO 50 I=1,2
         NPOS=NPOS+1
50       UNUSED(I)=ARRAY(NPOS)
C
C  SET NUMBER OF TEMP STATIONS USED TO COMPUTE MAT
      NPOS=NPOS+1
      NTEMP=ARRAY(NPOS)
C
C  SET TEMP STATION IDENTIFIERS
      IF (NTEMP.LE.MTEMP) GO TO 60
         WRITE (LP,150) NTEMP,MTEMP
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 100
60    DO 70 J=1,NTEMP
         DO 70 I=1,2
            NPOS=NPOS+1
70          TEMPID(I,J)=ARRAY(NPOS)
C
C  SET ARRAY LOCATIONS OF POINTERS FOR MAX/MIN TEMP DATA FOR STATION
      DO 80 I=1,NTEMP
         NPOS=NPOS+1
80       IPDMMT(I)=ARRAY(NPOS)
C
C  SET STATION WEIGHTS
      DO 90 I=1,NTEMP
         NPOS=NPOS+1
90       WTMMT(I)=ARRAY(NPOS)
C
      IF (LDEBUG.EQ.0) GO TO 100
         WRITE (IOSDBG,140) NPOS,NFILL,IPTRNX,IVMAT
         CALL SULINE (IOSDBG,1)
         CALL SUPDMP ('MAT ','BOTH',0,NPOS,ARRAY,ARRAY)
C
100   IF (LDEBUG.GT.0.AND.ISTAT.EQ.0) WRITE (IOSDBG,170)
      IF (LDEBUG.GT.0.AND.ISTAT.EQ.0) CALL SULINE (IOSDBG,1)
      IF (LDEBUG.GT.0.AND.ISTAT.GT.0) WRITE (IOSDBG,180)
      IF (LDEBUG.GT.0.AND.ISTAT.GT.0) CALL SULINE (IOSDBG,1)
C
110   IF (ISTRCE.GT.0) WRITE (IOSDBG,190) ISTAT
      IF (ISTRCE.GT.0) CALL SULINE (IOSDBG,1)
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
120   FORMAT (' *** ENTER SRMAT')
130   FORMAT (' LARRAY=',I5)
140   FORMAT (' NPOS=',I3,3X,'NFILL=',I3,3X,'IPTRNX=',I3,3X,
     *   'IVMAT=',I3)
150   FORMAT ('0*** ERROR - IN SRMAT  - NUMBER OF STATIONS ',
     *   'TO BE PROCESSED (',I3,') EXCEEDS MAXIMUM ',
     *   'ARRAY DIMENSIONS (',I3,').')
170   FORMAT ('0*** NOTE - MAT  PARAMETERS SUCCESSFULLY ',
     *     'READ.')
180   FORMAT ('0*** NOTE - MAT  PARAMETERS NOT SUCCESSFULLY ',
     *     'READ.')
190   FORMAT (' *** EXIT SRMAT : STATUS CODE=',I2)
C
      END
