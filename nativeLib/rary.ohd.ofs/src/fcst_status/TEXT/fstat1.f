C MODULE FSTAT1
C-----------------------------------------------------------------------
C
C  ROUTINE TO GENERAL STATUS INFORMATION FOR FORECAST COMPONENT FILES.
C
      SUBROUTINE FSTAT1 (IPART1,IPART2)
C
      CHARACTER*1 ZSIGN(2)/'-','+'/
      CHARACTER*5 ZCHAR
      CHARACTER*8 TECHNAME,SEGNAME,USERNAME
      CHARACTER*50 STRING
C
      DIMENSION IDL(30),IRBUF(3)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fcrfc'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fcfgs'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fcsegp'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fcdflt'
      COMMON/FGINFO/MAXFG,LUFGL
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_status/RCS/fstat1.f,v $
     . $',                                                             '
     .$Id: fstat1.f,v 1.6 2002/02/11 20:22:56 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'ENTER FSTAT1'
C
C  PRINT HEADING
      IFIRST=1
      CALL FSTAHD (IFIRST)
C
C  READ FIRST RECORD OF FILE RATING CURVE POINTER FILE
      IREC=1
      CALL UREADT (KFRCPT,IREC,IRBUF,IERR)
C
      CALL UMEMOV (RFCNAM,USERNAME,2)
C
C  PRINT DEFINITION INFORMATION
C
      WRITE (IPR,140)
      WRITE (IPR,150) NCG
      WRITE (IPR,160) NFGREC
      WRITE (IPR,170) NRSTS
      WRITE (IPR,180) IRBUF(1)
C
C  PRINT FILE INFORMATION
C
      WRITE (IPR,190)
      WRITE (IPR,200)
C
      MINPCT=95
C
      STRING='CARRYOVER'
      MWPS=NWR*NRSLOT
      IPCT=(FLOAT(NWPS)/FLOAT(MWPS))*100.+.5
      WRITE (IPR,210) STRING(1:LENSTR(STRING)),NSLOTS,MWPS,NWPS,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='PARAMETERS'
      IPCT=(FLOAT(NRP)/FLOAT(MRP))*100.+.5
      WRITE (IPR,230) STRING(1:LENSTR(STRING)),NWRP,MRP,NRP,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='CARRYOVER GROUP DEFINITION'
      MCG=25
      IPCT=(FLOAT(NCG)/FLOAT(MCG))*100.+.5
      WRITE (IPR,240) STRING(1:LENSTR(STRING)),'CARRYOVER GROUPS',
     *   MCG,NCG,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='FORECAST GROUP STATUS'
      IPCT=(FLOAT(NFGREC)/FLOAT(MAXFG))*100.+.5
      WRITE (IPR,240) STRING(1:LENSTR(STRING)),'FORECAST GROUPS',
     *   MAXFG,NFGREC,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='FORECAST GROUP SEGMENT LIST'
      IPCT=(FLOAT(LUFGL)/FLOAT(MRSTS))*100.+.5
      WRITE (IPR,240) STRING(1:LENSTR(STRING)),'SEGMENT IDENTIFIERS',
     *   MRSTS,LUFGL,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='SEGMENT POINTER AND STATUS'
      IPCT=(FLOAT(NRSTS)/FLOAT(MRSTS))*100.+.5
      WRITE (IPR,240) STRING(1:LENSTR(STRING)),'SEGMENTS',
     *   MRSTS,NRSTS,IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      STRING='RATING CURVE POINTER AND DEFINITION'
      IPCT=(FLOAT(IRBUF(1))/FLOAT(IRBUF(3)))*100.+.5
      WRITE (IPR,240) STRING(1:LENSTR(STRING)),'RATING CURVES',
     *   IRBUF(3),IRBUF(1),IPCT
      IF (IPCT.GT.MINPCT) WRITE (IPR,220)
     *    STRING(1:LENSTR(STRING)),
     *    IPCT,MINPCT
C
      IF (NRSTS.GT.0) THEN
C     COMPUTE AVERAGE NUMBER OF WORDS FOR P AND C ARRAYS
         NSEGT=0
         NPT=0
         NCT=0
         MLP=0
         MLC=0
         DO 10 IRSEG=1,NRSTS
            CALL UREADT (KFSGST,IRSEG,IDSEGN,ISTAT)
            CALL UMEMOV (IDSEGN,SEGNAME,2)
            IF (SEGNAME.NE.'OBSOLETE') THEN
               NSEGT=NSEGT+1
               NPT=NPT+NP
               NCT=NCT+NC
               IF (NP.GT.MLP) MLP=NP
               IF (NC.GT.MLC) MLC=NC
               ENDIF
10          CONTINUE
         IAVG=NPT/NSEGT
         WRITE (IPR,250) NSEGT,'P',IAVG,MLP
         IAVG=NCT/NSEGT
         WRITE (IPR,250) NSEGT,'C',IAVG,MLC
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      IF (IPART2.EQ.0) GO TO 130
C
C  PRINT HCL TECHNIQUE AND TIMING VARIABLE DEFAULTS
C
      WRITE (IPR,260)
C
C  GET DEFAULTS
      CALL FIDFLT
      DO 20 I=1,30
         IDL(I)=IDEFLT(I)
20       CONTINUE
C
C  GET TIME ZONE CODE
      CALL FCTZC (IDL(2),IDL(3),TZ)
C
C  PRINT TECHNIQUE VALUES
      WRITE (IPR,270)
      WRITE (IPR,310) IDL(2),TZ
      WRITE (IPR,300) IDL(3)
      WRITE (IPR,280) IDL(6)
      WRITE (IPR,290) IDL(7)
      WRITE (IPR,320) IDL(8)
      WRITE (IPR,330) IDL(14)
      WRITE (IPR,340) IDL(15)
      WRITE (IPR,350) IDL(9)
      WRITE (IPR,360) IDL(10)
      WRITE (IPR,370) IDL(11)
      WRITE (IPR,380) IDL(12)
      WRITE (IPR,390) IDL(13)
C
      TECHNAME='STARTRUN'
      ICM=IDL(16)
      IF (ICM.EQ.-999) WRITE (IPR,400) TECHNAME
      IF (ICM.EQ.-999) GO TO 70
      IACM=IABS(ICM)
      NSIGN=1
      IF (ICM.GE.0) NSIGN=2
      IFMT=0
      IF (IACM.LT.10.AND.IDL(18).LT.10) IFMT=1
      IF (IACM.GE.10.AND.IDL(18).LT.10) IFMT=2
      IF (IACM.LT.10.AND.IDL(18).GE.10) IFMT=3
      IF (IACM.GE.10.AND.IDL(18).GE.10) IFMT=4
      GO TO (30,40,50,60),IFMT
30    WRITE (IPR,410) TECHNAME,ZSIGN(NSIGN),IACM,IDL(18),IDL(5)
      GO TO 70
40    WRITE (IPR,420) TECHNAME,ZSIGN(NSIGN),IACM,IDL(18),IDL(5)
      GO TO 70
50    WRITE (IPR,430) TECHNAME,ZSIGN(NSIGN),IACM,IDL(18),IDL(5)
      GO TO 70
60    WRITE (IPR,440) TECHNAME,ZSIGN(NSIGN),IACM,IDL(18),IDL(5)
      GO TO 70
C
70    TECHNAME='ENDRUN'
      ICM=IDL(17)
      IF (ICM.EQ.-999) WRITE (IPR,400) TECHNAME
      IF (ICM.EQ.-999) GO TO 120
      IACM=IABS(ICM)
      NSIGN=1
      IF (ICM.GE.0) NSIGN=2
      IFMT=0
      IF (IACM.LT.10.AND.IDL(20).LT.10) IFMT=1
      IF (IACM.GE.10.AND.IDL(20).LT.10) IFMT=2
      IF (IACM.LT.10.AND.IDL(20).GE.10) IFMT=3
      IF (IACM.GE.10.AND.IDL(20).GE.10) IFMT=4
      GO TO (80,90,100,110),IFMT
80    WRITE (IPR,410) TECHNAME,ZSIGN(NSIGN),IACM,IDL(20),IDL(5)
      GO TO 120
90    WRITE (IPR,420) TECHNAME,ZSIGN(NSIGN),IACM,IDL(20),IDL(5)
      GO TO 120
100   WRITE (IPR,430) TECHNAME,ZSIGN(NSIGN),IACM,IDL(20),IDL(5)
      GO TO 120
110   WRITE (IPR,440) TECHNAME,ZSIGN(NSIGN),IACM,IDL(20),IDL(5)
      GO TO 120
C
120   TECHNAME='LSTCMPDY'
      ICM=IDL(19)
      IF (ICM.EQ.-999) WRITE (IPR,400) TECHNAME
      IF (ICM.NE.-999.AND.ICM.LT.10) WRITE (IPR,450) TECHNAME,ICM,IDL(5)
      IF (ICM.NE.-999.AND.ICM.GE.10) WRITE (IPR,460) TECHNAME,ICM,IDL(5)
C
C  PRINT TIMING VARIABLES
      WRITE (IPR,470)
      WRITE (IPR,480) IDL(1)
      WRITE (IPR,490) IDL(4)
      WRITE (IPR,500) IDL(5)
      WRITE (IPR,510) IDL(21)
      WRITE (IPR,520) IDL(22)
      ISTAT=-1
      CALL UINTCH (IABS(IDL(23)),LEN(ZCHAR),ZCHAR,LZCHAR,ISTAT)
      ZCHAR(1:1)=' '
      IF (IDL(23).LT.0) ZCHAR(1:1)='-'
      WRITE (IPR,530) ZCHAR
C
130   IF (ITRACE.GT.0) WRITE (IODBUG,*) 'EXIT FSTAT1'
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
140   FORMAT ('0','- DEFINITION INFORMATION -')
150   FORMAT ('0',I5,' CARRYOVER GROUPS ARE DEFINED')
160   FORMAT ('0',I5,' FORECAST GROUPS ARE DEFINED ',
     *   '(INCLUDING OBSOLETE DEFINITIONS)')
170   FORMAT ('0',I5,' SEGMENTS ARE DEFINED ',
     *   '(INCLUDING OBSOLETE DEFINITIONS)')
180   FORMAT ('0',I5,' RATING CURVES ARE DEFINED ',
     *   '(INCLUDING OBSOLETE DEFINITIONS)')
190   FORMAT ('0- DATA FILE STATUS -')
200   FORMAT ('0',3X,'CONTENTS',
     *      T43,'ENTRY TYPE',
     *      T72,'MAXIMUM',
     *      T89,'USED',
     *      T106,'%USED' /
     *   ' ',3X,36('-'),
     *      T43,27('-'),
     *      T72,15('-'),
     *      T89,15('-'),
     *      T106,'-----'
     *   )
210   FORMAT (' ',3X,A,
     *   T43,I4,' SLOTS - EACH SLOT HAS:',
     *   T72,I6,' WORDS',
     *   T89,I6,' WORDS',
     *   T106,I5)
220   FORMAT ('0**WARNING** PERCENT OF ',A,
     *   ' USED (',I3,') EXCEEDS ',I3,' PERCENT.')
230   FORMAT (' ',3X,A,
     *   T43,I4,' WORD RECORDS',
     *   T72,I6,' RECORDS',
     *   T89,I6,' RECORDS',
     *   T106,I5)
240   FORMAT (' ',3X,A,
     *   T43,A,
     *   T72,I6,
     *   T89,I6,
     *   T106,I5)
250   FORMAT ('0AVERAGE LENGTH OF THE ',I4,' ',A,' ARRAYS IS ',
     *   I5,' WORDS ',
     *   '(MAXIMUM LENGTH IS ',I6,' WORDS)')
260   FORMAT ('0- HCL TECHNIQUE AND TIMING VARIABLE DEFAULTS -')
270   FORMAT (
     *   '0',3X,'TECHNIQUE',T18,'VALUE   ' /
     *   ' ',3X,'---------',T18,'--------')
280   FORMAT (' ',3X,'FUTPRECP',T18,I2)
290   FORMAT (' ',3X,'METRIC',T18,I2)
300   FORMAT (' ',3X,'NOUTDS',T18,I2)
310   FORMAT (' ',3X,'NOUTZ',T18,I2,'(',A4,')')
320   FORMAT (' ',3X,'PRINTOUT',T18,I2)
330   FORMAT (' ',3X,'PRINTSNW',T18,I2)
340   FORMAT (' ',3X,'PRINTSMA',T18,I2)
350   FORMAT (' ',3X,'PLOTHYD',T18,I2)
360   FORMAT (' ',3X,'TABLES',T18,I2)
370   FORMAT (' ',3X,'SNOW',T18,I2)
380   FORMAT (' ',3X,'UPWE',T18,I2)
390   FORMAT (' ',3X,'UPSC',T18,I2)
400   FORMAT (' ',3X,A,T18,'UNDEFINED')
410   FORMAT (' ',3X,A,T18,'*',A,'0',I1,'/0',I1,A4)
420   FORMAT (' ',3X,A,T18,'*',A,I2,'/0',I1,A4)
430   FORMAT (' ',3X,A,T18,'*',A,'0',I1,'/',I2,A4)
440   FORMAT (' ',3X,A,T18,'*',A,I2,'/',I2,A4)
450   FORMAT (' ',3X,A,T18,'*/0',I1,A4)
460   FORMAT (' ',3X,A,T18,'*/',I2,A4)
470   FORMAT (
     *   '0',3X,'TIMING' /
     *   ' ',3X,'VARIABLE',T18,'VALUE' /
     *   ' ',3X,'--------',T18,'-----')
480   FORMAT (' ',3X,'LOCAL',T18,I5)
490   FORMAT (' ',3X,'NLSTZ',T18,I5)
500   FORMAT (' ',3X,'INPTZC',T18,A5)
510   FORMAT (' ',3X,'NHOPDB',T18,I5)
520   FORMAT (' ',3X,'NHOCAL',T18,I5)
530   FORMAT (' ',3X,'ZOFF  ',T18,A5)
C
      END
