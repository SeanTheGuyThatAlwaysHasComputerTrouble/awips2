C MODULE FCDATE
C-----------------------------------------------------------------------
C
C  ROUTINE TO FILL COMMON BLOCK FCSEGC WITH THE CARRYOVER DATES.
C
       SUBROUTINE FCDATE (IDSEG,IOBSO)
C
C   ARGUMENT LIST -
C     IDSEG - SEGMENT IDENTIFIER
C     IOBSO - 1=BYPASS CHECK FOR MATCH BETWEEN IDSEG AND ID ON
C               CARRYOVER FILE AND CHECK FOR MATCH WITH ID ON
C               FILE AND 'OBSOLETE'
C             0=MAKE CHECK BETWEEN IDSEG AND ID ON CARRYOVER FILE
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/sysbug'
      INCLUDE 'common/where'
      INCLUDE 'common/fcsegc'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fcunit'
C
      DIMENSION IDSEG(2)
      DIMENSION OLDNAM(2),ICGIDC(2),XICGID(2),IXX(4),IOBSLT(2)
C
      EQUIVALENCE (ICGIDC(1),CGIDC(1)),(XICGID(1),ICGID(1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_fcex/RCS/fcdate.f,v $
     . $',                                                             '
     .$Id: fcdate.f,v 1.4 2002/02/11 19:20:46 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA IOBSLT/4HOBSO,4HLETE/
      DATA IBLNK/4H    /
C
C
      IOPNUM=0
      IOLDOP=IOPNUM
      CALL UMEMOV (OPNAME,OLDNAM,2)
      CALL UMEMOV ('FCDATE  ',OPNAME,2)
C
      IBUG=0
      IF (IFBUG('COTR').EQ.1) IBUG=1
      IF (IFBUG('COBG').EQ.1) IBUG=2
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'ENTER FCDATE'
C      
      IF (IBUG.GE.2) WRITE (IODBUG,210) IDSEG,IDC,IDSEGN,ICGID,ICGIDC
C
      ICKSEG=0
      IF (ICKSEG.EQ.1) THEN
C     CHECK IF THE REQUESTED SEGMENT IS ALREADY IN COMMON FCSEGC
         IF (IDSEG(1).EQ.IDC(1).AND.IDSEG(2).EQ.IDC(2)) GO TO 190
         ENDIF
C
C  CHECK IF THE ID PASSED DOES NOT MATCH THE ID IN COMMON FCSEGN
      IF (IDSEG(1).EQ.IDSEGN(1).AND.IDSEG(2).EQ.IDSEGN(2)) THEN
         ELSE
            WRITE (IPR,220) IDSEG,IDSEGN
            CALL ERROR
            GO TO 190
         ENDIF
C
C  IF THE CARRYOVER GROUP IDENTIFIER IN COMMON FCSEGN MATCHES THAT IN
C  COMMON FCCGD1, THE DATES CAN BE TRANSFERRED FROM ICODAY AND ICOTIM
C  IN COMMON FCCGD1 TO ICDAYC AND ICHRC IN COMMON FCSEGC.
C  IF NOT, THE CARRYOVER GROUP THAT THE SEGMENT BELONGS TO MUST
C  BE FOUND ON FILE FCCOGDEF ON UNIT KFCGD. THAT DEFINITION IS THEN
C  PLACED IN COMMON FCCGD1 AND THE DATES ARE TRANSFERRED.
      IF (ICGID(1).EQ.IBLNK.AND.ICGID(2).EQ.IBLNK) GO TO 100
      IF (ICGID(1).NE.ICGIDC(1).OR.ICGID(2).NE.ICGIDC(2)) GO TO 60
C
C  MATCH FOUND - TRANSFER DATES AND TIMES FROM COMMON BLOCK
40    IDC(1)=IDSEGN(1)
      IDC(2)=IDSEGN(2)
      DO 50 I=1,NSLOTS
         ICDAYC(I)=ICODAY(I)
         ICHRC(I)=ICOTIM(I)
50       CONTINUE
      IF (IBUG.EQ.2) WRITE (IODBUG,230) IDC,NSLOTS,
     *   (ICDAYC(I),ICHRC(I),I=1,NSLOTS)
      GO TO 190
C
C  IF THE CARRYOVER GROUP ID IS BLANK THEN THE SEGMENT DOES NOT BELONG
C  TO A CARRYOVER GROUP, AND THE DATES MUST BE FOUND DIRECTLY FROM
C  THE CARRYOVER FILE.
60    IF (ICGID(1).NE.IBLNK.OR.ICGID(2).NE.IBLNK) GO TO 70
      GO TO 100
C
C  IF THE CARRYOVER GROUP ID IN COMMON FCSEGN IS NOT BLANK, THEN THE
C  SEGMENT BELONGS TO A CARRYOVER GROUP. THE CARRYOVER GROUP SHOULD THEN
C  BE FOUND ON COMMON FCCGD AND THE DEFINITION CAN BE READ FROM THE
C  CARRYOVER GROUP DEFINITION FILE.
70    DO 80 J=1,NCG
         IF (XICGID(1).NE.CGIDS(1,J).OR.XICGID(2).NE.CGIDS(2,J))
     *      GO TO 80
         NRECCG=J
         GO TO 90
80       CONTINUE
C
C  CARRYOVER GROUP ID IS NOT BLANK BUT IS NOT FOUND
      WRITE (IPR,240) ICGID
      CALL ERROR
      ICGID(1)=IBLNK
      ICGID(2)=IBLNK
      GO TO 100
C
C  RESET COMMON FCCGD1 AND THEN TRANSFER THE DATES
90    NCGREC=ICOREC(NRECCG)
      CALL UREADT (KFCGD,NCGREC,CGIDC(1),IERR)
      GO TO 40
C
C  FIND DATES ON CARRYOVER FILE
100   DO 180 K=1,NSLOTS
C     SET DATE AND TIME TO ZERO IF SLOT IS INCOMPLETE
         IF (INCSEG(K).EQ.1) GO TO 110
            WRITE (IPR,250) K,IDSEGN
            CALL WARN
            ICDAYC(K)=0
            ICHRC(K)=0
            IDC(1)=IDSEG(1)
            IDC(2)=IDSEG(2)
            GO TO 180
110      ISEREC=(K-1)*NRSLOT+((IWOCRY-1)/NWR)+1
         NBUF=MOD(IWOCRY,NWR)
         IF (NBUF.EQ.0) NBUF=NWR
         NEED2=0
         NBUF3=NBUF+3
         N=1
         IF (NBUF3.GT.NWR) NEED2=1
         IF (NEED2.EQ.0) GO TO 120
            NBUF3=NWR
            NBUF2=1
            NBUF23=NBUF+3-NWR
120      CALL FCRDCF (ISEREC,NBUF,NBUF3,IXX(N),IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,125) IDSEG
125   FORMAT ('0**ERROR** IN FPUTCO - READING CARRYOVER ',
     *   'FOR SEGMENT ',2A4,'.')             
            CALL ERROR
            GO TO 190
            ENDIF
         IF (IBUG.GE.2) WRITE (IODBUG,260) N,NBUF,NBUF3,IXX,IXX
         IF (NEED2.EQ.0) GO TO 130
            N=NWR-NBUF+2
            NBUF=NBUF2
            NBUF3=NBUF23
            ISEREC=ISEREC+1
            NEED2=0
            GO TO 120
130      IF (IOBSO.NE.0) GO TO 140
            IF (IDSEGN(1).NE.IXX(1).OR.IDSEGN(2).NE.IXX(2)) GO TO 150
            GO TO 160
C     CHECK FOR MATCH BETWEEN THE SEGID IN COMMON FCSEGN AND THAT FOUND
C     THE CARRYOVER FILE
140      IF (IXX(1).EQ.IOBSLT(1).AND.IXX(2).EQ.IOBSLT(2)) GO TO 160
            WRITE (IPR,270) IXX(1),IXX(2)
            CALL ERROR
            GO TO 190
150      WRITE (IPR,280) IXX(1),IXX(2),IDSEGN
         CALL ERROR
         GO TO 190
160      IF (IBUG.GE.2) WRITE (IODBUG,290) IXX
         IF (K.GT.1) GO TO 170
            IDC(1)=IDSEGN(1)
            IDC(2)=IDSEGN(2)
C     FILL COMMON FCSEGC WITH THE DATES AND TIMES
170      ICDAYC(K)=IXX(3)
         ICHRC(K)=IXX(4)
180      CONTINUE
C
190   IF (ITRACE.GT.0) WRITE (IODBUG,*) 'EXIT FCDATE'
C
      CALL UMEMOV (OLDNAM,OPNAME,2)
      IOPNUM=IOLDOP
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
210   FORMAT (' IDSEG=',2A4,' IDC=',2A4,' IDSEGN=',2A4,
     *   ' ICGID=',2A4,' ICGIDC=',2A4)
220   FORMAT ('0**ERROR** SEGMENT IDENTIFIER PASSED TO FCDATE (',
     *   2A4,') DOES NOT MATCH THE IDENTIFER ',
     *   'IN COMMON FCSEGN (',2A4,').')
230   FORMAT (' IN FCDATE - IDC=',2A4,', NSLOTS=',I3/
     * 5X,'ICDAYC',10X,'ICHRC'/(1X,I10,3X,I11))
240   FORMAT ('0**ERROR** CARRYOVER GROUP IDENTIFIER ',2A4,
     *   ' IS NOT BLANK BUT IS NOT IN THE LIST OF VALID ',
     *   'CARRYOVER GROUPS AND HAS BEEN SET TO BLANK.')
250   FORMAT ('0**WARNING** SLOT NUMBER ',I2,' FOR SEGMENT ',2A4,
     *  'IS INCOMPLETE. THE DATE FOR HAS BEEN SET TO ',
     *  'JULIAN DAY ZERO AND HOUR ZERO.')
260   FORMAT (' N=',I4,' NBUF=',I3,' NBUF3=',I3,
     *   ' IXX=',4(1X,I10),4(1X,A4))
270   FORMAT ('0**ERROR** IDENTIFIER ON FILE IS EXPECTED ',
     *   'TO BE ''OBSOLETE''. IDENTIFIER FOUND IS ',2A4,').')
280   FORMAT ('0**ERROR** SEGMENT IDENTIFIER FOUND IN ',
     *   'FILE FCCARRY (',2A4,') DOES NOT MATCH THE IDENTIFIER ',
     *   'PASSED TO FCDATE (',2A4,').')
290   FORMAT (' IXX (SECOND TIME)=',2A4,2(1X,I10))
C
      END
