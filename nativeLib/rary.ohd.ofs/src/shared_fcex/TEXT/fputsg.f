C$PRAGMA C (UPDATERESJTEMPTOPERM)
C MODULE FPUTSG
C-----------------------------------------------------------------------
C
C  ROUTINE TO ADD OR UPDATE SEGMENT.
C
      SUBROUTINE FPUTSG (P,T,TS,IADD,NPLACE,NNCOM,NOPARM,IMSGU,IER)
C
C  THIS ROUTINE ADDS A NEW SEGMENT OR UPDATES AN EXISTING SEGMENT
C  IN FILES FCSEGSTS, FCPARAM AND FCSEGPTR AND WRITES 'SKELETON'
C  CARRYOVER RECORDS IN FILE FCCARRY FOR A NEW SEGMENT AND RECORD
C  OF FILE FCCOGDEF.
C
C  IADD   =0 FOR UPDATE EXISTING SEGMENT
C  IADD   =1 FOR NEW SEGMENT
C  NPLACE =1 TO UPDATE EXISTING SEGMENT IN PLACE (SAME RECORDS)
C  NNCOM  =0 IF SEGMENT DEFINED IN COMMON BLOCK FCSEGN
C  NNCOM  =1 IF SEGMENT DEFINED IN COMMON BLOCK FCSGNN
C  NOPARM =0 WRITE TO PARAMETER FILE
C  NOPARM =1 DO NOT WRITE TO PARAMETER FILE (IGNORED UNLESS
C            IADD=0 AND NPLACE=1)
C  IMSGU  =0 NO MESSAGES PRINTED
C  IMSGU  =1 PRINT FILE UPDATE MESSAGES
C  IER    =0 FOR NORMAL RETURN
C  IER    =1 ERRORS ENCOUNTERED
C
      CHARACTER*8 OPNOLD,SEGNAM
C
      DIMENSION P(*),T(*),TS(*)
      INTEGER T
      DIMENSION NAMSEG(2),INTBU2(3)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fcsegp'
      INCLUDE 'common/fcsgnn'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fsglst'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_fcex/RCS/fputsg.f,v $
     . $',                                                             '
     .$Id: fputsg.f,v 1.7 2002/02/11 20:27:04 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'ENTER FPUTSG'
C
      IBUG=IFBUG('FCIO')
C
      IF (IBUG.GT.0) WRITE (IODBUG,*)
     *   ' IADD=',IADD,
     *   ' NPLACE=',NPLACE,
     *   ' NNCOM=',NNCOM,
     *   ' NOPARM=',NOPARM
C
      IOPNUM=0
      CALL FSTWHR ('FPUTSG  ',IOPNUM,OPNOLD,IOLDOP)
C
      IMSGUA=IABS(IMSGU)
C
C  CHECK ARGUMENTS
      IER=1
      IF (IADD.LT.0.OR.IADD.GT.1) GO TO 20
      IF (NNCOM.LT.0.OR.NNCOM.GT.1) GO TO 20
      IF (IADD.EQ.1) GO TO 40
      IF (NPLACE.EQ.0.OR.NPLACE.EQ.1) GO TO 40
20    WRITE (IPR,30) IADD,NPLACE,NNCOM
30    FORMAT ('0**ERROR** FPUTSG CALLED WITH INVALID ARGUMENTS:',
     *  ' IADD=',I6,' NPLACE=',I6,' NNCOM=',I6)
      IER=1
      CALL ERROR
      GO TO 340
C
C  CHECK IF SEGMENT EXISTS
40    IF (NNCOM.EQ.0) THEN
         CALL UMEMOV (IDSEGN,SEGNAM,2)
         MDEFSG=IDEFSG
         IDEFSG=1
         ENDIF
      IF (NNCOM.EQ.1) THEN
         CALL UMEMOV (JDSEGN,SEGNAM,2)
         MDEFSG=JDEFSG
         JDEFSG=1
         ENDIF
      CALL UMEMOV (SEGNAM,NAMSEG,2)
      CALL FLOCSG (SEGNAM,NRSEG)
      IF (IRSEG.GT.0.AND.NRSEG.GT.0) THEN
         IF (IRSEG.NE.NRSEG) THEN
            WRITE (IPR,50) SEGNAM,IRSEG,NRSEG
50    FORMAT ('0**ERROR** RECORD NUMBER OF SEGMENT ',A, 
     *   ' IN COMMON BLOCK FCSEGN (',I5,') IS NOT THE SAME AS THE ',
     *   'RECORD NUMBER IN FILE (',I5,').')
            CALL ERROR
            IER=1
            ENDIF
         ENDIF
      IF (NRSEG.LE.0.AND.IADD.EQ.1) GO TO 80
      IF (NRSEG.GT.0.AND.IADD.EQ.0) GO TO 80
      IF (IADD.EQ.0) THEN
         WRITE (IPR,60) SEGNAM
60    FORMAT ('0**ERROR** CANNOT UPDATE SEGMENT ',A, 
     *   ' BECAUSE IT IS NOT DEFINED.')
         CALL ERROR
         IER=1
         ENDIF
      IF (IADD.EQ.1) THEN
         WRITE (IPR,70) SEGNAM
70    FORMAT ('0**ERROR** CANNOT ADD SEGMENT ',A,
     *   ' BECAUSE IT IS ALREADY DEFINED.')
         CALL ERROR
         IER=1
         ENDIF
      GO TO 340
C
80    IF (IADD.EQ.0.AND.NPLACE.EQ.1) GO TO 180
C
      LC=NC
      LP=NP
      LT=NT
      LTS=NTS
      IF (NNCOM.EQ.1) LC=JNC
      IF (NNCOM.EQ.1) LP=JNP
      IF (NNCOM.EQ.1) LT=JNT
      IF (NNCOM.EQ.1) LTS=JNTS
C
C  CHECK FOR SPACE FOR SEGMENT IN FILES - UPDATING A SEGMENT
C  REALLY MEANS ADD A NEW SEGMENT DEFINITION UNLESS THE UPDATE
C  IS IN PLACE
C
C  CHECK FOR SPACE IN FILE FCSEGSTS
      IF (NRSTS.GT.MRSTS) THEN
         WRITE (IPR,90) SEGNAM
90    FORMAT ('0**ERROR** FILE FCSEGSTS IS FULL. ',
     *   'UNABLE TO ADD OR UPDATE SEGMENT ',A,'.')
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
C
C  CHECK FOR SPACE IN FILE FCPARAM
      NADRCP=(LP+LT+LTS+2+NWRP-1)/NWRP
      IF (NRP+NADRCP.GT.MRP) THEN
         WRITE (IPR,110) SEGNAM
110   FORMAT ('0**ERROR** NOT ENOUGH SPACE IN FILE ',
     *   'FCPARAM FOR SEGMENT ',A,'.')
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
C
C  CHECK FOR SPACE IN CARRYOVER FILE
      MWPS=NWR*NRSLOT
      IF (NWPS+LC+10.GT.MWPS) THEN
         WRITE (IPR,130) SEGNAM
130   FORMAT ('0**ERROR** NOT ENOUGH ROOM IN FILE FCCARRY ',
     *  'TO HOLD SEGMENT ',A,'.')
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
C
C  SET VARIABLES FOR FILE FCCOGDEF
      IWORD1=NWPS+1
      NWPS=NWPS+LC+10
C
C  ALSO SET IWOCRY OR JWOCRY AS APPROPRIATE
      IF (NNCOM.EQ.0) IWOCRY=IWORD1
      IF (NNCOM.EQ.1) JWOCRY=IWORD1
C
C  FILE FCSEGPTR
      IREC=1
      CALL UREADT (KFSGPT,IREC,NS,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,135) IREC,KFSGPT,SEGNAM
135   FORMAT ('0**ERROR** READING RECORD ',I6,
     *   ' FROM UNIT ',I2,' FOR SEGMENT ',A,'.')
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      IREC=2
      CALL UREADT (KFSGPT,IREC,NRP,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,135) IREC,KFSGPT,SEGNAM
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      NSOLD=NS
CCC      NRPOLD=NRP
      IF (IADD.EQ.1) NS=NS+1
      NRSTS=NRSTS+1
      NRP=NRP+NADRCP
C
C  ADD OR CHANGE POINTER RECORD IN FILE FCSEGPTR
      INTBU2(1)=NAMSEG(1)
      INTBU2(2)=NAMSEG(2)
      IF (IADD.NE.1) GO TO 150
         INTBU2(3)=NRSTS
         KPT=NS+2
         IF (NS.GT.MLIST) GO TO 170
            NLIST=NLIST+1
            IDZ(1,NLIST)=NAMSEG(1)
            IDZ(2,NLIST)=NAMSEG(2)
            IDZ(3,NLIST)=NRSTS
            GO TO 170
150   DO 160 I=1,NSOLD
         IREC=I+2
         CALL UREADT (KFSGPT,IREC,INTBU2,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,135) IREC,KFSGPT,SEGNAM
            CALL ERROR
            IER=1
            GO TO 340
            ENDIF
         IF (INTBU2(1).NE.NAMSEG(1)) GO TO 160
         IF (INTBU2(2).NE.NAMSEG(2)) GO TO 160
            INTBU2(3)=NRSTS
            KPT=IREC
            IF (I.LE.NLIST) IDZ(3,I)=NRSTS
            GO TO 170
160      CONTINUE
C
C  DEFINE POSITION OF NEW RECORD IN FILES FCPARAM AND FCSEGSTS
170   IF (NNCOM.EQ.0) IRSEG=NRSTS
      IF (NNCOM.EQ.1) JRSEG=NRSTS
      IF (NNCOM.EQ.0) IPREC=NRP-NADRCP+1
      IF (NNCOM.EQ.1) JPREC=NRP-NADRCP+1
C
C  AT THIS POINT A NEW SEGMENT HAS BEEN ADDED TO ALL FILES EXCEPT
C  FILE FCPARAM AND FCSEGSTS.  THE COMMON BLOCK FCSEGN (NNCOM=0) OR
C  FCSGNN (NNCOM=1) IS COMPLETELY DEFINED AS WELL.  SINCE THESE
C  COMMONS ARE ALSO DEFINED COMPLETELY ON ENTRY WHEN AN UPDATE IN
C  PLACE IS OCCURRING, ALL OF THE OPTIONS CAN USE THE SAME CODE
C  TO DEFINE THE ENTRIES IN FILES FCPARAM AND FCSEGSTS.
C
180   IF (IMSGU.EQ.1) WRITE (IPR,190) 'FORECAST COMPONENT',SEGNAM
190   FORMAT ('0*** BEGINNING ',A,' FILE UPDATES FOR SEGMENT ',A,'. ',
     *   'ABNORMAL PROGRAM TERMINATION MAY RESULT IN UNUSABLE FILES.')
C
      IF (NNCOM.EQ.1) THEN
         CALL UWRITT (KFSGST,JRSEG,JDSEGN,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,195) JRSEG,KFSGST,SEGNAM
195   FORMAT ('0**ERROR** WRITING RECORD ',I6,
     *   ' TO UNIT ',I2,' FOR SEGMENT ',A,'.')
            CALL ERROR
            IER=1
            GO TO 340
            ENDIF
         ENDIF
      IF (NNCOM.EQ.0) THEN
         CALL UWRITT (KFSGST,IRSEG,IDSEGN,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,195) IRSEG,KFSGST,SEGNAM
            CALL ERROR
            IER=1
            GO TO 340
            ENDIF
         ENDIF
C
      IF (IBUG.GT.0) THEN
         IF (IADD.EQ.0.AND.NPLACE.EQ.1) GO TO 210
            WRITE (IODBUG,*) 'SEGNAM=',SEGNAM,
     *        ' IWORD1=',IWORD1,
     *        ' NADRCP=',NADRCP,
     *        ' LC=',LC,
     *        ' LP=',LP,
     *        ' LT=',LT,
     *        ' LTS=',LTS
210      WRITE (IODBUG,*)
     *      ' NS=',NS,
     *      ' NRSTS=',NRSTS,
     *      ' MRSTS=',MRSTS,
     *      ' NRP=',NRP,
     *      ' MRP=',MRP,
     *      ' NWRP=',NWRP
         IF (NNCOM.EQ.0) CALL FCDMP1 (0,IRSEG)
         IF (NNCOM.EQ.1) CALL FCDMP1 (1,JRSEG)
         LMP=-1
         CALL FDMPA ('P   ',P,LMP)
         LMT=-1
         CALL FDMPA ('T   ',T,LMT)
         LMTS=-1
         CALL FDMPA ('TS  ',TS,LMTS)
         ENDIF
C
C  CHECK IF TO ADD OR REPLACE RECORDS IN FILE FCPARAM
      IF (IADD.EQ.0.AND.NPLACE.EQ.1.AND.NOPARM.EQ.1) GO TO 250
C
C  UPDATE P ARRAY TO INDICATE IF PERMANENT RES-J FILES EXIST
      ier=updateRESJTempToPerm(P)
C
      IF (IMSGUA.EQ.1) WRITE (IPR,230)
230   FORMAT ('0*** BEGINNING UPDATE OF PARAMETER FILE.')
      IF (NNCOM.EQ.0) CALL FCWTPF (IPREC,IDSEGN,P,NP,T,NT,TS,NTS)
      IF (NNCOM.EQ.1) CALL FCWTPF (JPREC,JDSEGN,P,JNP,T,JNT,TS,JNTS)
      IF (IMSGUA.EQ.1) WRITE (IPR,240)
240   FORMAT (' *** SUCCESSFUL UPDATE OF PARAMETER FILE.')
C
C  UPDATE FIRST RECORD OF COGDEF FILE AND UPDATE SEGMENT POINTER FILE
250   IF (IADD.EQ.0.AND.NPLACE.EQ.1) GO TO 300
      IF (IMSGUA.EQ.1) WRITE (IPR,260)
260   FORMAT ('0*** BEGINNING UPDATE OF CARRYOVER GROUP DEFINITION ',
     *   'FILE.')
      IREC=1
      CALL UWRITT (KFCGD,IREC,NSLOTS,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,195) IREC,KFCGD,SEGNAM
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      IREC=1
      CALL UWRITT (KFSGPT,IREC,NS,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,195) IREC,KFSGPT,SEGNAM
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      IREC=2
      CALL UWRITT (KFSGPT,IREC,NRP,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,195) IREC,KFSGPT,SEGNAM
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      IF (IMSGUA.EQ.1) WRITE (IPR,270)
270   FORMAT (' *** SUCCESSFUL UPDATE OF CARRYOVER GROUP DEFINITION ',
     *   'FILE.')
      IF (IMSGUA.EQ.1) WRITE (IPR,280)
280   FORMAT ('0*** BEGINNING UPDATE OF SEGMENT POINTER FILE.')
      CALL UWRITT (KFSGPT,KPT,INTBU2,IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,195) KPT,KFSGST,SEGNAM
         CALL ERROR
         IER=1
         GO TO 340
         ENDIF
      IF (IMSGUA.EQ.1) WRITE (IPR,290)
290   FORMAT (' *** SUCCESSFUL UPDATE OF SEGMENT POINTER FILE.')
C
C  ADD OR REPLACE SEGMENT IN FILE FCSEGSTS
300   IF (NNCOM.EQ.1) JDEFSG=MDEFSG
      IF (NNCOM.EQ.0) IDEFSG=MDEFSG
      IF (IMSGUA.EQ.1) WRITE (IPR,310)
310   FORMAT ('0*** BEGINNING UPDATE OF SEGMENT STATUS FILE.')
      IF (NNCOM.EQ.0) THEN
         CALL UWRITT (KFSGST,IRSEG,IDSEGN,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,195) IRSEG,KFSGST,SEGNAM
            CALL ERROR
            IER=1
            GO TO 340
            ENDIF
         ENDIF
      IF (NNCOM.EQ.1) THEN
         CALL UWRITT (KFSGST,JRSEG,JDSEGN,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,195) JRSEG,KFSGST,SEGNAM
            CALL ERROR
            IER=1
            GO TO 340
            ENDIF
         ENDIF
      IF (IMSGUA.EQ.1) WRITE (IPR,320)
320   FORMAT (' *** SUCCESSFUL UPDATE OF SEGMENT STATUS FILE.')
      IF (IMSGUA.EQ.1) THEN
         IF (IADD.EQ.1) WRITE (IPR,330) ' ',SEGNAM
         IF (IADD.EQ.0) WRITE (IPR,330) ' RE',SEGNAM
330   FORMAT ('0*** SUCCESSFUL FILE UPDATE FOR',A,'DEFINITION OF ',
     *   'SEGMENT ',A,'.')
         ENDIF
      IER=0
C
340   CALL FSTWHR (OPNOLD,IOLDOP,OPNOLD,IOLDOP)
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'EXIT FPUTSG'
C
      RETURN
C
      END
