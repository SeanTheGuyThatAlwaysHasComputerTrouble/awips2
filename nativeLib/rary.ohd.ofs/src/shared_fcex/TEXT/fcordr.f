C MEMBER FCORDR
C  (from old member FCFCORDR)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 08/10/95.10:59:29 BY $WC20SV
C
C @PROCESS LVL(77)
C
C  ROUTINE TO SET ORDER OF SEGMENT EXECUTION IN COMMON BLOCK FCRUNC.
C
      SUBROUTINE FCORDR (IDTYP,RUNAME,IER,IWORK,NWORK)
C
C  IDTYP = 1 FOR A CARRYOVER GROUP RUN
C        = 2 FOR A FORECAST GROUP RUN
C        = 3 FOR A SINGLE SEGMENT RUN
C
      DIMENSION RUNAME(2),IWORK(3,1)
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fcfgs'
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/fcsegp'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fsglst'
      INCLUDE 'common/where'
C
      DIMENSION OLDNAM(2),IDSEG(2)
      DIMENSION IRNAME(2),RNAME(2)
      EQUIVALENCE (IRNAME(1),RNAME(1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_fcex/RCS/fcordr.f,v $
     . $',                                                             '
     .$Id: fcordr.f,v 1.3 1996/07/11 20:31:38 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (ITRACE.GT.0) WRITE (IODBUG,10)
10    FORMAT (' *** ENTER FCORDR')
C
      IBUG=IFBUG('INIT')
C
      CALL UMEMOV (OPNAME,OLDNAM,2)
      CALL UMEMOV ('FCORDR  ',OPNAME,2)
      IOLDOP=IOPNUM
      IOPNUM=0
C
      RNAME(1)=RUNAME(1)
      RNAME(2)=RUNAME(2)
      RUNID(1)=RNAME(1)
      RUNID(2)=RNAME(2)
C      
      NSEGEX=0
      DO 20 I=1,MSEGEX
         IRSGEX(I)=0
20       CONTINUE
C
      IF (IBUG.GT.0) WRITE (IODBUG,30) IDTYP,RUNAME,NWORK
30    FORMAT (' IN FCORDR - IDTYP,RUNAME,NWORK=',I5,1X,2A4,1X,I6)
C
C  CHECK FOR VALID IDTYP
      IF (IDTYP.GT.0.AND.IDTYP.LE.3) GO TO 50
         WRITE (IPR,40) IDTYP,RUNAME
40    FORMAT ('0**ERROR** VALUE OF RUN TYPE (',I5,') IS INVALID FOR ',
     *   'RUN IDENTIFIER ',2A4,'.')
         CALL ERROR
         GO TO 480
C
C  FOR IDTYP=3 (SINGLE SEGMENT RUN) NO NEED TO SCAN FORECAST GROUPS
C              OR TRY TO GET ALL SEGMENT POINTER RECORDS INTO CORE
50    IF (IDTYP.NE.3) GO TO 80
C
      CALL FLOCSG (RUNAME,IRSGEX(1))
      NSEGEX=1
      IF (IBUG.GT.0) WRITE (IODBUG,60) RUNAME,IRSGEX(1)
60    FORMAT (' IN FCORDR - SINGLE SEGMENT ',2A4,' AT RECORD ',I7)
      IF (IRSGEX(1).GT.0) GO TO 490
         WRITE (IPR,70) RUNAME
70    FORMAT ('0**ERROR** SEGMENT ',2A4,
     *   ' NOT FOUND FOR SINGLE SEGMENT RUN.')
         CALL ERROR
         GO TO 480
C
C  RUN TYPE IS 1 (CARRYOVER GROUP) OR 2 (FORECAST GROUP)
80    IREC=1 
      CALL UREADT (KFSGPT,IREC,NS,IERR)
      IREC=2
      CALL UREADT (KFSGPT,IREC,NRP,IERR)
      NLIST=NS
      IF (NLIST.GT.MLIST) NLIST=MLIST
C
C  READ SEGMENT POINTER RECORDS      
      DO 90 I=1,NLIST
         IREC=I+2
         CALL UREADT (KFSGPT,IREC,IDZ(1,I),IERR)
         IF (IBUG.GT.0) WRITE (IODBUG,85) I,(IDZ(N,I),n=1,3)
85    FORMAT (' IN FCORDR - I=',I2,' IDZ(1...3,I)=',2A4,1X,I5)         
90       CONTINUE
      NSWORK=NS-NLIST
      IF (IBUG.GT.0) WRITE (IODBUG,100)NSWORK
100   FORMAT (' IN FCORDR - NSWORK=',I10)
      IF (NSWORK.LE.0) GO TO 140
         NEEDW=NSWORK*3
         IF (NEEDW.LE.NWORK) GO TO 120
            WRITE (IPR,110)NWORK,NEEDW
110   FORMAT ('0**ERROR** WORK ARRAY IS ',I6,' WORDS. ',
     *    I6,' WORDS NEEDED.')
            CALL ERROR
            GO TO 480
C     FILL IWORK ARRAY
120      DO 130 I=1,NSWORK
            IREC=NLIST+2+I
            CALL UREADT (KFSGPT,IREC,IWORK(1,I),IERR)
130         CONTINUE
C
140   IF (IDTYP.EQ.2) GO TO 210
C
C  CARRYOVER GROUP RUN
      IREC=1
      CALL UREADT (KFCGD,IREC,NSLOTS,IERR)
      IF (NCG.GT.0) GO TO 160
         WRITE (IPR,150) RUNAME
150   FORMAT ('0**ERROR** REQUEST TO RUN CARRYOVER GROUP ',
     *   2A4,' BUT NO CARRYOVER GROUPS ARE DEFINED')
         CALL ERROR
         GO TO 480
160   DO 170 ICG=1,NCG
         IF (CGIDS(1,ICG).NE.RUNAME(1)) GO TO 170
         IF (CGIDS(2,ICG).NE.RUNAME(2)) GO TO 170
         GO TO 190
170      CONTINUE
      WRITE (IPR,180) RUNAME
180   FORMAT ('0**ERROR** REQUESTED CARRYOVER GROUP ',
     *   2A4,' NOT FOUND.')
      CALL ERROR
      GO TO 480
C      
190   CALL UREADT (KFCGD,ICOREC(ICG),CGIDC,IERR)
C
C  SET NUMBER OF FORECAST GROUPS IN THE RUN
      NFGRUN=NFG
      IF (IBUG.GT.0) WRITE (IODBUG,200) RUNAME,ICG,ICOREC(ICG),
     *   CGIDC
200   FORMAT (' IN FCORDR - CGROUP RUN - RUNAME,ICG,ICOREC,CGIDC=',
     *   2A4,',',I5,',',I5,',',2A4)
      GO TO 220
C      
C  FORECAST GROUP RUN
210   NFGRUN=1
C
C  IFGRC1 IS THE RECORD TO START THE SEARCH OF FILE FCFGSTAT FOR
C  THE CORRECT FORECAST GROUP.  IFGRC2 IS THE RECORD TO END THE SEARCH.
C  THESE ARE SET TO IFGRC1=1 AND IFGRC2=NFGREC AT FIRST,  BUT WHEN
C  A FORECAST GROUP IS FOUND, THE SEARCH LIMITS ARE RESET TO SEARCH
C  THE REMAINDER OF THE FILE BEFORE RESTARTING AT RECORD ONE.  THIS
C  IS MORE COMPLICATED ADMITTEDLY, BUT REDUCES IO COUNTS WHEN THE
C  FORECAST GROUP DEFINITIONS ARE IN PROPER ORDER.
C
C  FIRST READ FIRST RECORD ON FILE FCFGSTAT TO GET NFGREC
220   IREC=1
      CALL UREADT (KFFGST,IREC,FGID,IERR)
      NFGREC=IDUMYG
      IF (IBUG.GT.0) WRITE (IODBUG,230) NFGRUN,NFGREC
230   FORMAT (' IN FCORDR - NFGRUN,NFGREC=',I5,',',I5)
      IFGRC1=1
C
C  PROCESS EACH FORECAST GROUP
      DO 470 IFGRUN=1,NFGRUN
         IF (IBUG.GT.0) WRITE (IODBUG,240) IFGRUN
240   FORMAT (' IN FCORDR - IFGRUN=',I5)
C     RESET END SEARCH LIMIT TO NFGREC AT START OF EACH PASS
         IFGRC2=NFGREC
C     FIND FORECAST GROUP ON FILE
250      IF (IBUG.GT.0) WRITE (IODBUG,260) IFGRC1,IFGRC2
260   FORMAT (' IN FCORDR - IFGRC1,IFGRC2=',I5,',',I5)
         DO 280 IFGREC=IFGRC1,IFGRC2
            CALL UREADT (KFFGST,IFGREC,FGID,IERR)
            IF (IDTYP.EQ.2) GO TO 270
C           CARRYOVER GROUP RUN - FORECAST GROUP MUST BE THE IFGRUN-TH
C           TO BE EXECUTED IN THE PROPER CARRYOVER GROUP
               IF (ICOSEQ.NE.IFGRUN) GO TO 280
               IF (CGIDF(1).NE.RUNAME(1)) GO TO 280
               IF (CGIDF(2).NE.RUNAME(2)) GO TO 280
               GO TO 290
C        FORECAST GROUP RUN - FORECAST GROUP MUST MATCH RUN NAME
270         IF (FGID(1).NE.RUNAME(1)) GO TO 280
            IF (FGID(2).NE.RUNAME(2)) GO TO 280
            GO TO 290
280         CONTINUE
         GO TO 300
C     FORECAST GROUP TO BE EXECUTED HAS BEEN FOUND - RESETS EARCH LIMITS 
290      IFGRC1=IFGREC+1
         IF (IFGRC1.GT.NFGREC) IFGRC1=1
         GO TO 340
C  DID NOT FIND REQUIRED FORECAST GROUP IN RECORDS IFGRC1 THROUGH IFGRC2
C  IF SEARCH STARTED AT RECORD ONE, THE FORECAST GROUP IS NOT ON FILE
C  IF SEARCH STARTED AT SOME RECORD OTHER THAN RECORD ONE, THE FIRST
C  PART OF THE FILE HAS TO BE SEARCHED
300      IF (IFGRC1.NE.1) GO TO 330
            IF (IDTYP.EQ.1) WRITE (IPR,310) IFGRUN,FGID,RUNAME
310   FORMAT ('0**ERROR** UNABLE TO FIND FORECAST GROUP NUMBER ',I5,
     *   ' (',2A4,') IN CARRYOVER GROUP ',2A4,'.')
            IF (IDTYP.EQ.2) WRITE (IPR,320) RUNAME
320   FORMAT ('0**ERROR** FORECAST GROUP ',2A4,' NOT FOUND.')
            CALL ERROR
            GO TO 480
330      IFGRC2=IFGRC1-1
         IFGRC1=1
         GO TO 250
C     FORECAST GROUP LOCATED - NOW READ SEGMENTS IN FORECAST GROUP
C     FROM FILE FCFGLIST
340      IRL1=IREC
         IRL2=IREC+NSEG-1
         IF (IBUG.GT.0) WRITE (IODBUG,350) IRL1,IRL2
350   FORMAT (' IN FCORDR - IRL1,IRL2=',I5,',',I5)
         DO 460 IRLIST=IRL1,IRL2
            CALL UREADT (KFFGL,IRLIST,IDSEG,IERR)
C        SEARCH COMMON FSGLST FOR SEGMENT
            DO 360 I=1,NLIST
               IF (IDZ(1,I).NE.IDSEG(1)) GO TO 360
               IF (IDZ(2,I).NE.IDSEG(2)) GO TO 360
               IRSEG=IDZ(3,I)
               GO TO 400
360            CONTINUE
            IF (NSWORK.LE.0) GO TO 380
               DO 370 I=1,NSWORK
                  IF (IWORK(1,I).NE.IDSEG(1)) GO TO 370
                  IF (IWORK(2,I).NE.IDSEG(2)) GO TO 370
                  IRSEG=IWORK(3,I)
                  GO TO 400
370            CONTINUE
C        UNABLE TO FIND SEGMENT
380         I=IRLIST-IRL1+1
            WRITE (IPR,390) I,IDSEG,FGID
390   FORMAT ('0**ERROR** UNABLE TO FIND SEGMENT NUMBER ',I5,
     *   ' (',2A4,') IN FORECAST GROUP ',2A4,'.')
            CALL ERROR
            GO TO 480
C     SEGMENT FOUND - ADD TO LIST OF SEGMENTS
400         IF (NSEGEX.LT.MSEGEX) GO TO 420
               WRITE (IPR,410) MSEGEX
410   FORMAT ('0**ERROR** NUMBER OF SEGMENTS IN RUN EXCEEDS ',
     *   'LENGTH OF IRSGEX ARRAY IN COMMON FCRUNC (',I5,').')
               CALL ERROR
               GO TO 480
420         IF (IRSEG.GT.0) GO TO 440
               WRITE (IPR,430) IDSEG,FGID,IRSEG
430   FORMAT ('0**ERROR** SEGMENT ',2A4,
     *   ' IN FORECAST GROUP ' ,2A4,' LOCATED AT INVALID RECORD ',
     *     'NUMBER (',I6,').')
               CALL ERROR
               GO TO 480
440         NSEGEX=NSEGEX+1
            IRSGEX(NSEGEX)=IRSEG
            IF (IBUG.GT.0) WRITE (IODBUG,450) IDSEG,
     *         NSEGEX,IRSGEX(NSEGEX)
450   FORMAT (' IN FCORDR - IDSEG=',2A4,
     *   'NSEGEX=',I5,' IRSGEX(NSEGEX)=',I6)
            GO TO 460
460         CONTINUE
470      CONTINUE
C
      GO TO 490
C
480   IER=1
      ITYPRN=IDTYP
      GO TO 500
C
490   IER=0
      ITYPRN=IDTYP
C
500   CALL UMEMOV (OLDNAM,OPNAME,2)
      IOPNUM=IOLDOP
      ISEGEX=1
C
      IF (ITRACE.GE.1) WRITE (IODBUG,510)
510   FORMAT (' *** EXIT FCORDR')
C
      RETURN
C
      END
