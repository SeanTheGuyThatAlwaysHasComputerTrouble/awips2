C MEMBER FPUTCO
C  (from old member FCFPUTCO)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 03/17/95.08:18:26 BY $WC20SV
C
C @PROCESS LVL(77)
C
      SUBROUTINE FPUTCO (IDSEG,ICD,ICHR,NOW,ISLOT,IWOCRY,C,NC,IFW)
C
C  ROUTINE FPUTCO WRITES CARRYOVER FOR A SELECTED DATE FOR A SEGMENT.
C
C
C  ARGUMENT LIST:
C    IDSEG - SEGMENT IDENTIFIER
C    ICD    - CARRYOVER SAVE DATE
C    ICHR   - CARRYOVER SAVE HOUR
C    NOW    - CURRENT TIME: USED FOR NOTING THE LAST UPDATE TIME
C    ISLOT  - SLOT ON FILE WHERE CARRYOVER IS TO BE PLACED
C    IWOCRY - WORD OFFSET WITHIN SLOT FOR SEGMENT CARRYOVER VALUES
C    C      - CARRYOVER ARRAY
C    NC     - NUMBER OF CARRYOVER VALUES
C    IFW    - FORCED WRITE INDICATOR:
c               1=FORCE WRITE RECORD TO FILE
C               0=NO FORCED WRITE
C
C
      INCLUDE 'common/fciobf'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
      INCLUDE 'common/errdat'
C
      CHARACTER*8 OLDNAM
C
      DIMENSION IDSEG(2),C(NC),NOW(5),IZZBUF(100)
C
      EQUIVALENCE (IZZBUF(1),ZZZBUF(1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_fcex/RCS/fputco.f,v $
     . $',                                                             '
     .$Id: fputco.f,v 1.2 1996/07/11 20:55:15 dws Exp $
     . $' /
C    ===================================================================
C
C
C
      IBUG=0
      IF (IFBUG('COTR').EQ.1) IBUG=1
      IF (IFBUG('COBG').EQ.1) IBUG=2
      IF (IFBUG('BUFW').EQ.1) IBUG=3
C
      IOPNUM=0
      CALL UMEMOV (OPNAME,OLDNAM,2)
      CALL UMEMOV ('FPUTCO  ',OPNAME,2)
C
      IF (IBUG.GT.0) WRITE (IODBUG,10)
10    FORMAT (' *** ENTER FPUTCO')
C
C  FIND THE RECORD WHERE CARRYOVER IS LOCATED AND THE WORD IN THE
C  THE PHYSICAL RECORD THAT IS THE START OF THE CONCEPTUAL RECORD
      ISEREC=(ISLOT-1)*NRSLOT+((IWOCRY-1)/NWR)+1
      INEXT=ISEREC
      NBUF=MOD(IWOCRY,NWR)
      IF (NBUF.EQ.0) NBUF=NWR
      IF (IBUG.GT.1) WRITE (IODBUG,20) ISEREC,NBUF,IDSEG,ICD,ICHR,NOW,
     *   ISLOT,IWOCRY,NC
20    FORMAT (' ISEREC=',I5,' NBUF=',I4,' IDSEG=',2A4,
     *   ' ICD=',I5,' ICHR=',I5,' NOW=',5I5,
     *   ' ISLOT=',I4,' IWOCRY=',I5,' NC=',I5)
C
      NBUFST=NBUF
C
C  READ A RECORD FROM CARRYOVER FILE
      CALL FCRDCF (ISEREC,NBUF,MZZBUF,ZZZBUF(NBUF),IERR)
      IF (IERR.GT.0) THEN
         WRITE (IPR,25) IDSEG
25    FORMAT ('0**ERROR** IN FPUTCO - READING CARRYOVER ',
     *   'FOR SEGMENT ',2A4,'.')  
         CALL ERROR
         GO TO 200
         ENDIF
C
      NCST=1
      NSTART=0
      LOC=1
C
C  CHECK FOR MATCH BETWEEN INPUT SEGMENT ID AND SEGMENT ID ON FILE
      IF (IZZBUF(NBUF).NE.IDSEG(1)) GO TO 40
      IF ((NBUF+1).LE.MZZBUF) GO TO 30
         INEXT=INEXT+1
         CALL FCRDCF (INEXT,1,MZZBUF,ZZZBUF(1),IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,25) IDSEG
            CALL ERROR
            GO TO 200
            ENDIF
         NBUF=0
30    IF (IZZBUF(NBUF+1).NE.IDSEG(2)) GO TO 40
      GO TO 60
C
40    WRITE (IPR,50) IDSEG,IZZBUF(NBUF),IZZBUF(NBUF+1)
50    FORMAT ('0**ERROR** SEGMENT TO BE WRITTEN TO THE ',
     *   'CARRYOVER FILE (',2A4,') DOES NOT MATCH ',
     *   'THE SEGMENT ON FILE (',2A4,').')
      CALL ERROR
      GO TO 200
C
60    IF ((NBUF+4).LE.MZZBUF) GO TO 70
         INEXT=INEXT+1
         CALL FCRDCF (INEXT,1,MZZBUF,ZZZBUF(1),IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,25) IDSEG
            CALL ERROR
            GO TO 200
            ENDIF
         NBUF=NBUFST-NWR
70    IF (NC.NE.IZZBUF(NBUF+4)) GO TO 80
      GO TO 100
C
80    WRITE (IPR,90) NC,IZZBUF(NBUF+4),IDSEG
90    FORMAT ('0**ERROR** THE LENGTH OF THE C ARRAY PASSED (',I5,
     *   ') DOES NOT MATCH THE VALUE STORED ON THE CARRYOVER FILE (',
     *   I5,') FOR SEGMENT ',2A4,'.')
      CALL ERROR
      GO TO 200
C
100   NBUF=NBUFST
      IZZBUF(NBUF)=IDSEG(1)
      GO TO 170
110   IZZBUF(NBUF)=IDSEG(2)
      GO TO 170
120   IZZBUF(NBUF)=ICD
      GO TO 170
130   IZZBUF(NBUF)=ICHR
      GO TO 170
140   IZZBUF(NBUF)=NC
      GO TO 170
C
150   NSTART=NSTART+1
      IF (NSTART.GT.5) GO TO 160
         IZZBUF(NBUF)=NOW(NSTART)
         GO TO 170
160   IF (NCST.GT.NC) GO TO 170
         ZZZBUF(NBUF)=C(NCST)
         NCST=NCST+1
         GO TO 170
C
170   CALL FCBFCK (NBUF,LOC,LOCSVE)
      NBUFND=NBUF-1
      IF (NBUFND.EQ.0) NBUFND=NWR
      IF (NCST.GT.NC) GO TO 180
C
      GO TO (190,180),LOCSVE
C
C  WRITE A RECORD TO CARRYOVER FILE
180   CALL FCWTCF (ISEREC,NBUFST,NBUFND,ZZZBUF(NBUFST),IFW)
      IF (IBUG.GE.3) CALL FCDMP2 (ISEREC,MZZBUF)
      NBUFST=NBUF
      ISEREC=ISEREC+1
      IF (NCST.GT.NC) GO TO 200
190   GO TO (100,110,120,130,140,150,150,150,150,150,160),LOC
C
200   CALL UMEMOV (OLDNAM,OPNAME,2)
C
      IF (IBUG.GE.1) WRITE (IODBUG,210)
210   FORMAT (' *** EXIT FPUTCO')
C
      RETURN
C
      END
