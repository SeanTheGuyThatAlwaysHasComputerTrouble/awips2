C MEMBER DWSM21
C  (from old member FCDWSM21)
C DESC -- THIS SUBROUTINE HANDLES COMPUTATIONS PRODUCING A SIMULATED RUN
C
C                             LAST UPDATE: 10/02/95.13:37:00 BY $WC30JL
C
C @PROCESS LVL(77)
C
      SUBROUTINE DWSM21 (PO,Z,XX,KU,NB,QJ,QI,YJ,NJUN,NNYQ,NS,ITR,NSITR,
     1 QU,YD,YU,X,QC,YC,QDI,YDI,VU,VC,VD,NT,QII,YII,HS,QTC,LOQTC,STC,
     2 LOSTC,TII,T1,DTH,QD,DDX,NRT1,ICY,ICQ,STN,LOSTN,ST1,LOST1,ITWT,
     3 LOIWT,POOLT,LOPLT,QL,LOQL,QLLT,NQL,GZO,DIV,LODIV,QLSTR,LOQLS,QSTR
     4,LOQSR,TO,NSTR,NST,KTYP,NPD,CCO,QLEVE,ISTRT,NWMUP,NPO,K4,K6,K7,
     5 K9,K14,ST0,QT0,QLI,DVI,PLTI,IWTI,NDIV,NUMLAD,YMX,IMX,LQ,NUMRCP,
     6 LAD,KD,TIDE)
C
C           THIS SUBROUTINE WAS WRITTEN ORIGINALLY BY:
C           DR. DANNY FREAD   HRL   APRIL 1978
C
C           THIS SUBROUTINE WAS MODIFIED TO MEET VER. NO. 5 STANDARDS
C           OF THE NWSRFS BY:
C           JANICE LEWIS      HRL   NOVEMBER,1982     VERSION NO. 1
C
C   *****   UPDATED 03/10/88 BY JANICE LEWIS  -- REMOVED SAVE CARRYOVER
C           CODE INTO SEPARATE SUBROUTINE (SAVC21); FIXED PROBLEM WITH
C           STC AND QTC BEING STORED THE WRONG WAY.
C   *****   UPDATED 10/20/97 BY J.LEWIS -- ALL TIDE AS D/S BOUNDARY
C
      COMMON/FCARY/IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/FNOPR/NOPROT
      COMMON/IONUM/IN,IPR,IPU
      COMMON/XS21/LOAS,LOBS,LOHS,LOASS,LOBSS,LOHSS,LONSS,LONS1
      COMMON/CM21/LONYQ,LONM1,LONCM,LOCM,LOYCM
      COMMON/DV21/LONDV,LOLDV,LZIDV
      COMMON/OX21/LOFKC,LONT1,LONQL,LOLQ,LZRCP,LZQQD,LZYQD,LONT
      COMMON/LD21/LONLD,LOCTW,LOLAD,LOPTR
      COMMON/OD21/LOGZ1,LOSTM,LOKU,LOKD,LONB,LONJN,LOGZ,LOX,LOATF
      COMMON/WQ21/LOBBL,LOHFL,LOHML,LOHWH,LONWJ,LOTFL,LOWC,LONJX,LOKLF,
     1            LOTTL
      COMMON/Z121/LZC,LZD,LZICQ,LZICY,LZLLT,LZNN2,LZNS,LZNSR,LZNTS,LZQLV
      COMMON/Z221/LZQC,LZQD,LZQI,LZQII,LZQJ,LZQU,LZVC,LZVD,LZVU,LZWF
      COMMON/M121/N,NU,NS1,JN,JJ,KIT,G,DT,TT,TIMF,F1,GZN,NYQD
      COMMON/M621/KTIME,DHF,J1,KX
      COMMON/M3021/EPSY,EPSQ,EPSQJ,THETA,XFACT
      COMMON/M3221/KTERM,KPL,KPL2,JNK,TE,TM,KITPR
      COMMON/M3421/NCT,ICD,ITMAX
      COMMON/M3821/CONS,QSUMIM,QSUMIT,QSUMOM,QSUMOT,JJKT
      COMMON/SS21/NCS,A,B,DB,R,DR,AT,BT,NCSS,P,DP,ZH,NP,NPEND
      COMMON/JW21/JI,JO,KKG
      COMMON/NT21/NIT,SF1
      COMMON/IT21/ITER
      COMMON/KTT21/IPLT,TMPR
      COMMON/OPTN21/SEA,AVD,ISC,LNK,NAUTC,MCM,LK,J,YQR(26)
      COMMON/IVRSN21/IVER
C
      DIMENSION PO(*),Z(*),XX(*),KU(*),NB(*),QJ(*),QI(*),YJ(*),ST0(*)
      DIMENSION NJUN(*),NNYQ(*),NS(*),ITR(*),NSITR(*),QU(*),YD(*),QT0(*)
      DIMENSION YU(*),X(*),QC(*),YC(*),QDI(*),YDI(*),NQL(*),DIV(*)
      DIMENSION VU(*),VC(*),VD(*),NT(*),QII(*),LOQL(*),QLLT(*),LOQLS(*)
      DIMENSION YII(*),HS(K7,*),QTC(*),LOQTC(*),STC(*),QL(*),QLSTR(*)
      DIMENSION LOSTC(*),TII(*),T1(*),DTH(*),QD(*),DDX(*),LODIV(*)
      DIMENSION STN(*),ST1(*),LOST1(*),ITWT(*),LOIWT(*),POOLT(*),CCO(*)
      DIMENSION LOPLT(*),NRT1(*),ICY(*),ICQ(*),SNAME(2),JT(10),QLEVE(*)
      DIMENSION QSTR(*),LOQSR(*),GZO(*),TO(*),NSTR(*),NST(*),KTYP(*)
      DIMENSION QLI(*),LQ(*),DVI(*),PLTI(*),IWTI(*),NDIV(*),NUMLAD(*)
      DIMENSION YMX(*),IMX(*),NUMRCP(*),LAD(*),KD(*),TIDE(*)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_dwoper/RCS/dwsm21.f,v $
     . $',                                                             '
     .$Id: dwsm21.f,v 1.6 2001/06/13 12:30:06 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SNAME/4HDWSM,4H21  /
C
C
      CALL FPRBUG(SNAME,1,21,IBUG)
C
      NWARM=10
      IF(NWMUP.EQ.1) NWARM=0
C
      JSIZE=PO(126)

cew hard code to get hydraulic info out of dwoper in ESP
cew      noprot=0
cew

cew  change from RTi for making dwoper run in ESP and MCP
cew change to allow gradual time step increase following
cew nonconvergence
cew IPOS tracks the realtionship of the current time to an
cew even interval
      IPOS=0
cew end of change
C
      ICO=1
      JHRCO=(ICDAY(ICO)-1)*24+ICHOUR(ICO)
      NCTI=NCT
      KSUM=0
      TMPR=TM*KITPR
      K=1
      TII(K)=TMPR
      IPLT=0
 1011 K=K+1
      IF(K.GT.NPD) TE=TII(NPD)
      IF(K.GT.NPD) K=NPD
      NPRINT=K
      TII(K)=TII(K-1)+TMPR
      IF(TII(K).GE.TE) GO TO 1012
      GO TO 1011
 1012 IF(DHF.LT.TMPR) GO TO 1014
      KDHF=DHF/TMPR+0.0001
      TDHF=KDHF*TMPR
      IF(ABS(TDHF-DHF).LT.0.0001) IPLT=1
      GO TO 1016
 1014 KDHF=TMPR/DHF
      TDHF=KDHF*DHF
      IF(ABS(TDHF-TMPR).LE.0.0001) IPLT=1
 1016 IF(NU.GT.0) GO TO 1015
      DO 1013 K=1,NPRINT
 1013 T1(K)=TII(K)
 1015 CONTINUE
      DO 1070 J=1,JN
      NSITR(J) = 0
      ITR(J)=0
      N=NB(J)
      L1J=LCAT21(1,J,NB)-1
      QI(J)=QDI(1+L1J)
      DO 1070 I=1,N
      YD(I+L1J)=YDI(I+L1J)
      QD(I+L1J)=QDI(I+L1J)
      YMX(I+L1J)=YDI(I+L1J)
      QLEVE(I+L1J)=0.
      Y=YD(I+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,I,Y,K7,K9)
      VD(I+L1J)=QD(I+L1J)/A
      VU(I+L1J)=VD(I+L1J)
      VC(I+L1J)=VD(I+L1J)
      QU(I+L1J)=QD(I+L1J)
      YU(I+L1J)=YD(I+L1J)
      QC(I+L1J)=QD(I+L1J)
 1070 YC(I+L1J)=YD(I+L1J)
      QSUMIM=0.
      QSUMIT=0.
      QSUMOM=0.
      QSUMOT=0.
      CFACT=1.0
C
      KIT=1
      KOUT=1
      KTIME=1
C
      FI=F1
      TMII=TM
      ITMAXI=ITMAX
C
C
      ITMAXJ = 5
      JJK=0
      JJKT=0
      TT=0.
      G=32.2
      TIMF=3600.
      DT=TM*TIMF
      DTM=TM
      NDPS = 0
      IF (JNK.GE.1.AND.NOPROT.EQ.0) WRITE(IPR,1475)
 1475 FORMAT (/ 25X,29HINITIAL CONDITIONS AS READ IN/)
      GO TO 1425
 1080 CONTINUE
C     WRITE(6,8800) KIT,NWARM,KTIME,KSTORE,KPRINT,DT,TT
C8800 FORMAT(2X'*** BEFORE 1080 **** KIT,NWARM,KTIME,KSTORE,KPRINT=',
C    1 5I5,5X,3HDT=,F20.2,5X,3HTT=,F5.1)
      KIT=KIT+1
      F1=1.00
      TM=10000.
      DTM=TM
      DTMI=DTM
      ITMAX=50
      IF (KIT.EQ.KITPR+1.AND.JNK.GE.1.AND.NOPROT.EQ.0) WRITE(IPR,1085)
 1085 FORMAT (/ 15X,92HINITIAL CONDITIONS IMPROVED BY SOLVING UNSTEADY F
     1LOW EQUATIONS WITH BOUNDARIES HELD CONSTANT/)
      GO TO 1115
 1090 CONTINUE
C     WRITE(6,8810) KIT,NWARM,KTIME,KSTORE,KPRINT,DT,TT
C8810 FORMAT(2X'*** BEFORE 1090 **** KIT,NWARM,KTIME,KSTORE,KPRINT=',
C    1 5I5,5X,3HDT=,F20.2,5X,3HTT=,F5.1)
      KIT=KIT+1
      F1=FI
      TM=TMII
      ITMAX=ITMAXI
cew additions from rti
c change to make sure that after non convergence the time step is
c gradulally increased and falls evenly on the original 
c computational time interval, TM.  the user should specify equal input
c and output time series intervals (DHF=DHFO) and a computational
c time interval that divides evenly into the output time series interval
c (DHFO/TM=integer) i.e. DHFO=6 hr TM=1,2,3 or 6.  This will
c ensure that computations continue to the end of the specified time period
c and allows the proper saving of carryover and storage of output time series
c values at the end of the run

cew update the current position assumes minimum timestep =tm/8

      IPOS= IPOS + (DTM/TM)*8 +0.0001
      if(IPOS.GE. 8) IPOS=0

cew set the mximimum time step appropriate for a given position

      DTMAX= TM/8
      if((IPOS.eq.2) .OR. (IPOS.EQ. 6)) DTMAX=TM/4
      IF(IPOS.eq. 4) DTMAX=TM/2
      if(IPOS.eq.0) DTMAX=TM

cew if last time step had no convergence problems, try doubling 
cew time step, but don't exceed maximum

      if (DTMI .eq. DTM) DTM=DTM*2.0
      if (DTM.gt.DTMAX) DTM=DTMAX

cew end of change

      DTMI=DTM
1092  TT=TT+DTM
1115  NIT=0

cew rti addition
c change to reset tt to the last valid computational time step at the end 
c of a run.  this allows proper saving at the end of a run of
c carryover values which are based on input time series
      IF(TT.GT.TE)  then
        TT =TT-DTM
        GO TO 1740
      endif

cew end of change

      IF(IBUG.GT.0.AND.JNK.GE.2) WRITE(IODBUG,1110) TT
      IF(IBUG.GT.0.AND.JNK.GE.2.AND.JN.GT.1) WRITE(IODBUG,1110) TT
 1110 FORMAT(///1H ,10X,3HTT=,F10.3)
      DT=DTM*TIMF
C
 1120 IRC1=0
      LRC1=0
      IF(NYQD.EQ.0) GO TO 1122
      IRC1=1
      LRC1=NUMRCP(1)
C
 1122 LLD=1
      LLDK=1
      DO 1300 JK=1,JN
      KKG=0
C
      JK1=JK-1
      IF(JK1.EQ.0) GO TO 1126
      NUM=NUMLAD(JK1)
      IF(NUM.EQ.0) GO TO 1126
      LLAD=LCAT21(1,JK1,NUMLAD)-1
      DO 1124 LKK=1,NUM
      IF(IVER.LT.3) LLDK=LKK+LLAD
      IF(LAD(LLDK).GE.0) GO TO 1123
      IRC1=IRC1+1
      LRC1=LRC1+NUMRCP(IRC1)
 1123 IF(IVER.GE.3) LLDK=LLDK+2
 1124 CONTINUE
 1126 CONTINUE
C
      IF (JT(JK).EQ.0.AND.JJK.GT.0.AND.JK.GT.1) GO TO 1300
      JJ=JK
      J=JJ
      L1J=LCAT21(1,J,NB)-1
      IF(JN-1) 1180,1180,1130
 1130 IF (J-2) 1140,1170,1170
 1140 DO 1160 K=2,JN
      N=NB(K)
      QPJ=QU(LCAT21(N,K,NB))
      IF(JJK) 1150,1150,1160
 1150 QJ(K)=QPJ
 1160 CONTINUE
      GO TO 1180
 1170 NJUNCT=NJUN(J)
      YJ(J)=0.5*(YU(LCAT21(NJUNCT,1,NB))+YU(LCAT21(NJUNCT+1,1,NB)))
C
 1180 DO 1290 ITER=1,ITMAX
      IF(ITER.EQ.1) LLDO=LLD
      IF(ITER.GT.1) LLD=LLDO
      NYQ=NNYQ(J)
      ITR(J)=ITER-1
      N=NB(J)
      NS1=NS(J)
      IKY=0
      IKQ=0
      DO 1182 K=1,N
      YY=YU(K+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,K,YY,K7,K9)
      IF(B.GT.0.00) GO TO 1181
      WRITE(IPR,1179) K,J
 1179 FORMAT(1H0,68H**WARNING** NEGATIVE TOPWIDTH HAS BEEN COMPUTED AT C
     *ROSS SECTION NO.,I4,13H ON RIVER NO.,I2,29H.  START TIME STEP REDU
     *CTION./)
      CALL WARN
      GO TO 1184
 1181 IF(A.GT.0.00) GO TO 1182
      WRITE(IPR,1183) K,J
 1183 FORMAT(1H0,64H**WARNING** NEGATIVE AREA HAS BEEN COMPUTED AT CROSS
     * SECTION NO.,I4,13H ON RIVER NO.,I2,29H.  START TIME STEP REDUCTIO
     *N./)
      CALL WARN
      GO TO 1184
 1182 CONTINUE
      IF(J.EQ.1.AND.KD(J).EQ.0) THEN
        CALL BDRY21(PO,HS,QD,QU,YD,YU,DDX,QDI,KD,YJ,Z(LZNN2),KU,
     1   TIDE,ST1,LOST1,T1,Z(LZC),Z(LZD),Z(LZYQD),Z(LZQQD),NYQ,
     2   NB,PO(LOSTM),YDI,K6,K7,K9)
       ELSE
        CALL BDRY21(PO,HS,QD,QU,YD,YU,DDX,QDI,KD,YJ,Z(LZNN2),KU,
     1   STN(LOSTN),ST1,LOST1,T1,Z(LZC),Z(LZD),Z(LZYQD),Z(LZQQD),NYQ,NB,
     2   PO(LOSTM),YDI,K6,K7,K9)
      ENDIF
      CALL INTR21(Z,PO,NQL,PO(LONM1),Z(LZC),KU,NB,QJ,NJUN,
     1 NUMLAD,PO(LONCM),QD,QU,YD,YU,DDX,PO(LOFKC),PO(LOCTW),
     2 PO(LOLAD),POOLT,LOPLT,ITWT,LOIWT,PO(LONJX),Z(LZD),PO(LONWJ),
     3 Z(LZWF),PO(LOATF),NYQ,KD,QL,LOQL,T1,NDIV,DIV,LODIV,
     4 QLSTR,LOQLS,QLEVE,QLI,DVI,PLTI,IWTI,PO(LOPTR),NUMRCP,IRC1,LRC1,
     5 LLD,K6,K7,K9)
      CALL MTRX21(Z(LZC),Z(LZD),XX,Z(LZNN2),J)
      N=NB(J)
      ICIT=0
      II=0
      DO 1280 IK=1,N
      I=IK
      II=II+1
      IF(KU(J)-1) 1240,1240,1200
 1200 QU(I+L1J)=QU(I+L1J)+XX(II)*CFACT
      IF(ABS(CFACT*XX(II))-EPSQ)  1220,1210,1210
 1210 ICIT=1
      IKQ=IKQ+1
      ICQ(IKQ)=IK
 1220 CONTINUE
      II=II+1
      YU(I+L1J)=YU(I+L1J)+XX(II)*CFACT
      IF(ABS(CFACT*XX(II))-EPSY) 1280,1230,1230
 1230 ICIT=1
      IKY=IKY+1
      ICY(IKY)=IK
      GO TO 1280
 1240 YU(I+L1J)=YU(I+L1J)+XX(II)*CFACT
      IF(ABS(CFACT*XX(II))-EPSY) 1260,1250,1250
 1250 ICIT=1
      IKY=IKY+1
      ICY(IKY)=IK
 1260 CONTINUE
      II=II+1
      QU(I+L1J)=QU(I+L1J)+XX(II)*CFACT
      IF(ABS(CFACT*XX(II))-EPSQ) 1280,1270,1270
 1270 ICIT=1
      IKQ=IKQ+1
      ICQ(IKQ)=IK
 1280 CONTINUE
      IF(IBUG.EQ.0) GO TO 1282
      IF(JNK.LT.2) GO TO 1282
C     WRITE(IODBUG,8002) J
C8002 FORMAT(1H0,10X,16HYD FOR RIVER NO.,I3)
C     WRITE(IODBUG,2152) (YD(I+L1J),I=1,N)
      WRITE(IODBUG,8000) J
 8000 FORMAT(1H0,10X,16HYU FOR RIVER NO.,I3)
      WRITE(IODBUG,2152) (YU(I+L1J),I=1,N)
C     WRITE(IODBUG,8005) J
C8005 FORMAT(1H0,10X,16HQD FOR RIVER NO.,I3)
C     WRITE(IODBUG,2150) (QD(I+L1J),I=1,N)
      WRITE(IODBUG,8010) J
 8010 FORMAT(1H0,10X,16HQU FOR RIVER NO.,I3)
      WRITE(IODBUG,2150) (QU(I+L1J),I=1,N)
 1282 IF (ICIT) 1295,1295,1290
 1290 CONTINUE
      WRITE(IPR,1292) TT,J
 1292 FORMAT(1H0,10X,38H**WARNING** NONCONVERGENCE OCCURRED AT,F10.3,
     1 19H HOURS ON RIVER NO.,I2,25H.  START FIXUP PROCEDURE./)
      CALL WARN
 1184 IF(TT.LT.0.0001) GO TO 1296
      TT=TT-DTM
      IF(IKY.NE.0.AND.NOPROT.EQ.0) WRITE(IPR,1275)(ICY(IK),IK=1,IKY)
      IF(IKQ.NE.0.AND.NOPROT.EQ.0) WRITE(IPR,1276)(ICQ(IK),IK=1,IKQ)
      IF(NOPROT.EQ.0) WRITE(IPR,1277) TT,DTM,F1
 1275 FORMAT(10X,4HICY=,20I5/)
 1276 FORMAT(10X,4HICQ=,20I5/)
 1277 FORMAT(10X,3HTT=,F10.3,5X,4HDTM=,F6.3,5X,3HF1=,F6.2/)
 1278 FORMAT(10X,8HNEW DTM=,F6.3,5X,7HNEW F1=,F6.2/)
      IF(DTM.GT.TM/4.-0.01) DTM=DTM/2.
      DO 1186 JI=1,JN
      NI=NB(JI)
      LIJ=LCAT21(1,JI,NB)-1
      DO 1186 I=1,NI
      YU(I+LIJ)=YII(I+LIJ)*DTM/DTMI+YD(I+LIJ)
      QU(I+LIJ)=QII(I+LIJ)*DTM/DTMI+QD(I+LIJ)
 1186 CONTINUE
      IF(F1.GT.FI) GO TO 1285
      IF(DTM.GT.TM/4.-0.01.AND.NOPROT.EQ.0) WRITE(IPR,1278) DTM,F1
      IF(DTM.GT.TM/4.-0.01) GO TO 1092
 1285 F1=F1+0.05
      IF(F1.GT.1.01) GO TO 1289
      IF(NOPROT.EQ.0) WRITE(IPR,1278) DTM,F1
      GO TO 1092
 1289 IF(KSUM.LE.8) TT=TT+DTM
      IF(KSUM.GT.8) CALL NONC21(STC,LOSTC,QTC,LOQTC,CCO,NB,NRT1,NT,
     * YD,QD,ICO,NSTR,NST,KTYP,GZO,QSTR,LOQSR,KTIME,NPD,JN,K4,ISTRT,
     * PO,QL,LOQL,DIV,LODIV,POOLT,LOPLT,ITWT,LOIWT,T1,DDX,IHRCO,JHRCO,
     * JSIZE)
      IF(KSUM.GT.8) GO TO 1740
      WRITE(IPR,1287) TT
 1287 FORMAT(//10X,45H**WARNING** EXTRAPOLATION HAS OCCURRED AT TT=,
     1 F10.3/)
       CALL WARN
C
      DO 1291 IK=1,N
      YU(IK+L1J)=YD(IK+L1J)+(YD(IK+L1J)-YC(IK+L1J))*0.5
      QU(IK+L1J)=QD(IK+L1J)+(QD(IK+L1J)-QC(IK+L1J))*0.5
 1291 CONTINUE
      KSUM=KSUM+1
 1296 CONTINUE
 1295 NSITR(J) = NSITR(J) + ITR(J)
 1300 CONTINUE
      IF(JN-1) 1370,1370,1310
 1310 KT=0
      IF(IBUG.EQ.0) GO TO 1325
      IF (JNK.GE.2.AND.JJK.EQ.0.AND.TT.GT.0.0) WRITE(IODBUG,1315)
 1315 FORMAT (////)
      IF (JNK.GE.2.AND.JJK.EQ.0) WRITE(IODBUG,1320)
      IF (JNK.GE.2.AND.JJK.GT.0) WRITE(IODBUG,1320)
 1320 FORMAT (1H0,10X,3HJJK,6X,3HERQ,17X,2HQU,18X,2HQD,18X,2HQJ,17X,
     1                3HQJO,9X,3HITR)
 1325 DO 1350 K=1,JN
      N=NB(K)
      LLNK=LCAT21(N,K,NB)
      QJO=0.
      QJ(1)=0.
      ERQ=0.
      IF(K.EQ.1) GO TO 1350
      ERQ=ABS(QJ(K)-QU(LLNK))
      IF(ERQ.GT.EPSQJ) KT=1
      IF (ERQ.GT.EPSQJ) JT(K) = 1
      QJO=QJ(K)
      QJ(K)=THETA*QU(LLNK)+(1.-THETA)*QJO
      IF(JNK) 1350,1350,1330
 1330 IF(IBUG.GT.0.AND.JNK.GE.2) WRITE(IODBUG,1340) JJK,ERQ,QU(LLNK),
     1 QD(LLNK),QJ(K),QJO,ITR(K)
 1340 FORMAT(1H ,2X,I10,F10.1,4F20.0,I10)
 1350 CONTINUE
      JJK=JJK+1
      IF(KT) 1370,1370,1360
 1360 IF(JJK-ITMAXJ)1120,1120,1370
 1370 JJKT=JJKT+JJK-1
      JJK = 0
      DO 1380 J=1,JN
      N=NB(J)
      L1J=LCAT21(1,J,NB)-1
      DO 1380 I=1,N
      Y=YU(I+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,I,Y,K7,K9)
 1380 VU(I+L1J)=QU(I+L1J)/A
 1389 DO 1394 J=1,JN
      QLLT(J)=0.
      IF(NQL(J).EQ.0) GO TO 1394
      LQL=LCAT21(1,J,NQL)-1
      NQLM=NQL(J)
      CALL INTP21(NU,TINP,IT1,IT2,T1)
      DO 1392 L=1,NQLM
      LOQ=LOQL(L+LQL)-1
      QLC=QL(IT2+LOQ)+TINP*(QL(IT1+LOQ)-QL(IT2+LOQ))
      IF(TT.LT.DTM) QLC=QLI(L+LQL)
 1392 QLLT(J)=QLLT(J)+QLC
 1394 CONTINUE
      IF(JN-1) 1390,1390,1400
 1390 QSUMIT=0.
      QSUMOT=0.
      GO TO 1420
 1400 DO 1410 K=2,JN
      N=NB(K)
      QSUMIT=QSUMIT+QU(LCAT21(1,K,NB))+QLLT(K)
 1410 QSUMOT=QSUMOT+QU(LCAT21(N,K,NB))
 1420 QSUMIM=QSUMIM+QU(LCAT21(1,1,NB))+QLLT(1)
      N=NB(1)
      QSUMOM=QSUMOM+QU(LCAT21(N,1,NB))
 1425 KSTORE=0
      KSTOUT=0
      KPRINT=0
      KSJN=0
      KXJ=0
      DTH(KTIME)=DTM
      IF(KIT.GT.1.AND.KIT.LT.NWARM) GO TO 1670
      IF(KIT.EQ.NWARM) GO TO 1490
C
C      CHECK FOR PRINTING
C
      IF(TT.LT.0.000001) KPRINT=1
      IF(TT.LT.0.000001) GO TO 1469
      DO 1465 K=1,NPRINT
      IF(ABS(TT-TII(K)).LE.0.0001) GO TO 1466
 1465 CONTINUE
      GO TO 1467
 1466 KPRINT = 1
C

C        CHECK FOR STORAGE OF OUTPUT TIME SERIES
C
 1467 IF(KOUT.GT.NPO) GO TO 1462
      IF(TT.LT.TO(KOUT)) KSTOUT=0
      IF(ABS(TT-TO(KOUT)).LE.0.0001) KSTOUT=1

cew rti addition
c change to allow correct saving of output time series
c after time step reduction
       if(tt.gt.to(kout)) goto 7200
       goto 1462
7200   tt=tt-dtm
       dtmi=dtm
       dtm=to(kout)-tt
       goto 7201
C
C      CHECK FOR STORAGE OF PLOTTING ARRAYS
C
 1462 IF(TT.LT.TII(KTIME)) KSTORE=0
      IF(ABS(TT-TII(KTIME)).LE.0.0001) KSTORE=1
      IF(TT.GT.TII(KTIME)) GO TO 1468
      GO TO 1469
 1468 TT=TT-DTM
      DTMI=DTM
      DTM=TII(KTIME)-TT
7201  DO 1463  J=1,JN
      N=NB(J)
      L1J=LCAT21(1,J,NB)-1
      DO 1463  I=1,N
      YU(I+L1J)=YD(I+L1J)+YII(I+L1J)*DTM/DTMI
      QU(I+L1J)=QD(I+L1J)+QII(I+L1J)*DTM/DTMI
 1463 CONTINUE
      GO TO 1092
 1469 IF(KPRINT.EQ.1.AND.JNK.GT.0) GO TO 1470
      GO TO 1490
 1470 DTHH=DTH(KTIME)
      IF(JNK.GT.0.AND.NOPROT.EQ.0) WRITE(IPR,1315)
      IF(NOPROT.EQ.0) WRITE(IPR,2110) DTHH,TT,(ITR(J),J=1,JN)
      IF(NOPROT.EQ.0.AND.K14.EQ.0) WRITE(IPR,1480)
 1480 FORMAT (1H0,9X,1HI,17H   X(MI)  MANN. N,4X,6HH(MSL),3X,7HDEP(FT),
     1 2X,6HFROUDE,3X,44HV(FPS)  Q(1000 CFS)  A(1000 SQFT)     BT(FT))
      IF(NOPROT.EQ.0.AND.K14.GT.0) WRITE(IPR,1482)
 1482 FORMAT (1H0,9X,1HI,17H   X(MI)  MANN. N,4X,6HH(MSL),3X,7HDEP(FT),
     1 2X,6HFROUDE,3X,60HV(FPS)  Q(1000 CFS)  QLEV(1000 CFS)  A(1000 SQF
     *T)     BT(FT))
 1490 DO 1600 J=1,JN
      NYQ = NNYQ(J)
      N=NB(J)
      L1J=LCAT21(1,J,NB)-1
      K1J=LCAT21(1,J,NRT1)-1
      M1J=LCAT21(1,J,NSTR)-1
      DO 1600 I=1,N
      Y=YU(I+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,I,Y,K7,K9)
      AA=0.001*A
      AAT=0.001*AT
      QQ=0.001*QU(I+L1J)
      QQLV=0.001*QLEVE(I+L1J)
      IF(NYQ) 1500,1500,1510
 1500 YQ=Y
      GO TO 1520
 1510 YQ=QU(I+L1J)
 1520 CALL FRCT21(PO(LONM1),PO(LONCM),PO(LOCM),PO(LOYCM),J,I,YQ,CMU,DCMU
     1,K6)
      IF(NWARM.EQ.0.AND.KTIME.EQ.1.AND.KIT.EQ.1) KSTORE=2
      IF(NWARM.EQ.KIT) KSTORE=2
C     WRITE(6,9992) NWARM,KIT,KTIME,KSTORE
C9992 FORMAT(2X,10H*** NWARM=,I2,3X,4HKIT=,I3,3X,6HKTIME=,I3,3X,
C    1 7HKSTORE=,I2)
      IF(KSTORE.EQ.0) GO TO 1580
      NRT=NRT1(J)
      IF(NRT) 1580,1580,1540
 1540 DO 1570 K=1,NRT
      IF(I-NT(K+K1J)) 1580,1560,1570
 1560 IF(KSTORE.EQ.1) GO TO 1565
      ST0(K+K1J)=Y
      QT0(K+K1J)=QU(I+L1J)*0.001
C     WRITE(6,9991) KSTORE,K1J,ST0(K+K1J),QT0(K+K1J)
C9991 FORMAT(1X,'KSTORE=',I3,'  K1J=',I3,'  ST0=',F10.2,'  QT0=',F12.3)
      KSTORE=1
      GO TO 1570
 1565 LOST=LOSTC(K+K1J)-1
      LOQT=LOQTC(K+K1J)-1
      STC(KTIME+LOST)=Y
      QTC(KTIME+LOQT)=QU(I+L1J)*0.001
C     WRITE(6,9990) KTIME,KSTORE,I,NT(K+K1J),STC(KTIME+LOST),LOST,LOQT
C9990 FORMAT(2X,'*** KTIME=',I3,3X,7HKSTORE=,I2,3X,2HI=,I2,3X,3HNT=,I2,
C    1 3X,'STC=',F10.2,3X,'LOST=',I10,3X,'LOQT=',I10)
 1570 CONTINUE
 1580 IF(KSTOUT.EQ.0) GO TO 1590
      NSR=NSTR(J)
      IF(NSR.EQ.0) GO TO 1590
      DO 1585 K=1,NSR
      IF(I-NST(K+M1J)) 1590,1582,1585
 1582 LOQR=LOQSR(K+M1J)-1
      IF(KTYP(K+M1J).EQ.3) QSTR(KOUT+LOQR)=VU(I+L1J)
      IF(KTYP(K+M1J).EQ.2) QSTR(KOUT+LOQR)=QU(I+L1J)
      IF(KTYP(K+M1J).EQ.1) QSTR(KOUT+LOQR)=Y-GZO(K+M1J)
 1585 CONTINUE
 1590 IF(KPRINT.EQ.0.OR.JNK.EQ.0) GO TO 1600
      DEP=YU(I+L1J)-HS(1,I+L1J)
      DD=ABS(A/B)
      FR=ABS(VU(I+L1J)/(SQRT(32.2*DD)))
      IF(NOPROT.EQ.0.AND.K14.EQ.0) WRITE(IPR,2120) I,X(I+L1J),CMU,
     1 YU(I+L1J),DEP,FR,VU(I+L1J),QQ,AA,BT
      IF(NOPROT.EQ.0.AND.K14.GT.0) WRITE(IPR,2122) I,X(I+L1J),CMU,
     1 YU(I+L1J),DEP,FR,VU(I+L1J),QQ,QQLV,AA,BT
 1600 CONTINUE
      IF(KIT.EQ.NWARM) GO TO 1670
      IF(KSTORE.EQ.2) GO TO 1670
      IF(KIT.GT.1.AND.KSTORE.EQ.1) KTIME=KTIME+1
C     IF(KIT.EQ.1.AND.NWARM.EQ.0) KTIME=KTIME+1
      IF(KIT.GT.1.AND.KSTOUT.EQ.1) KOUT=KOUT+1
      IF(KTERM) 1670,1670,1610
 1610 IF(IBUG.EQ.0) GO TO 1670
      DO 1660 J=1,JN
      NS1=NS(J)
      NYQ=NNYQ(J)
      L1J=LCAT21(1,J,NB)-1
      DO 1660 I=1,NS1
      IR=I+1
      QAU=0.5*(QU(I+L1J)+QU(IR+L1J))
      YUR=YU(IR+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,IR,YUR,K7,K9)
      RUR=R
      AUR=A
      BUR=B
      YUL=YU(I+L1J)
      CALL SECT21(PO(LOAS),PO(LOBS),HS,PO(LOASS),PO(LOBSS),PO(LOHSS),
     1 PO(LONSS),PO(LONS1),NB,J,I,YUL,K7,K9)
      RUL=R
      AUL=A
      BUL=B
      RAU=((AUL+AUR)/(BUL+BUR))**(2./3.)
      AAU=0.5*(AUL+AUR)
      IF(NYQ) 1620,1620,1630
 1620 YQ=0.5*(YU(I+L1J)+YU(IR+L1J))
      GO TO 1640
 1630 YQ=0.5*(QU(I+L1J)+QU(IR+L1J))
 1640 CALL FRCT21(PO(LONM1),PO(LONCM),PO(LOCM),PO(LOYCM),J,I,YQ,CMU,DCMU
     1,K6)
      TERM1=(QU(I+L1J)+QU(IR+L1J)-QD(I+L1J)-QD(IR+L1J))/(2.*G*AAU*DT)
      TERM2=(QU(IR+L1J)*QU(IR+L1J)/AUR-QU(I+L1J)*QU(I+L1J)/AUL)/(G*AAU*
     1 DDX(I+L1J))
      TERM3=(YU(IR+L1J)-YU(I+L1J))/DDX(I+L1J)
      TERM4=CMU*CMU*ABS(QAU)*QAU/(2.208*RAU*RAU*AAU*AAU)
      WRITE(IODBUG,1650) I,YU(I+L1J),VU(I+L1J),QU(I+L1J),TERM1,TERM2,
     1 TERM3,TERM4,CMU
 1650 FORMAT(I10,3F10.2,5F15.7)
 1660 CONTINUE
 1670 CONTINUE
      DO 1720 J = 1, JN
      IF(YMX(I+L1J).LT.YU(I+L1J)) YMX(I+L1J)=YU(I+L1J)
      JT(J) = 0
      N=NB(J)
      L1J=LCAT21(1,J,NB)-1
      DO 1720 I=1,N
      IF(ABS(YU(I+L1J)-YD(I+L1J)).LT.ICD) GO TO 1025
      ADR=0.
      GO TO 1026
 1025 ADR=1.00
 1026 CONTINUE
      DY=(YU(I+L1J)-YD(I+L1J))*ADR*TM/DTM
      DQ=(QU(I+L1J)-QD(I+L1J))*ADR*TM/DTM
      IF(NCT.EQ.0) GO TO 1685
      IF(NCT.EQ.1) GO TO 1690
      IF(NCT.GE.2) GO TO 1700
 1685 YP=YU(I+L1J)
      QP=QU(I+L1J)
      GO TO 1710
 1690 YP=YU(I+L1J)+DY
      QP=QU(I+L1J)+DQ
      GO TO 1710
 1700 YP=YC(I+L1J)+3.*DY
      QP=QC(I+L1J)+3.*DQ
 1710 YC(I+L1J)=YD(I+L1J)
      YD(I+L1J)=YU(I+L1J)
      YU(I+L1J)=YP
      QC(I+L1J)=QD(I+L1J)
      QD(I+L1J)=QU(I+L1J)
      QU(I+L1J)=QP
      YII(I+L1J)=DY
      QII(I+L1J)=DQ
 1720 CONTINUE
      NCT=NCTI
C
C           SAVE CARRYOVER VALUES
C
C     WRITE(6,9999) IFILLC,NCSTOR,ICO,KIT,NWARM
C9999 FORMAT(1H0,'IFILLC NCSTOR ICO KIT NWARM ='/1H ,I6,I7,I4,I4,I6)
C     DO 7500 J=1,JN
C     IJ=LCAT21(1,J,NRT1)-1
C     NRTT=NRT1(J)
C     IF(NRTT.EQ.0) GO TO 7500
C     WRITE(6,7000) (ST0(I+IJ),I=1,NRTT)
C7000 FORMAT(2X,'ST0=',10F10.3)
C     WRITE(6,7100) (QT0(I+IJ),I=1,NRTT)
 7100 FORMAT(2X,'QT0=',10F10.3)
C7500 CONTINUE
C
      IF(IFILLC*NCSTOR.EQ.0) GO TO 1725
      IF(KIT.GT.1.AND.KIT.LT.NWARM) GO TO 1080
      IF(ICO.GT.NCSTOR) GO TO 1725
      IHRCO=ISTRT+TT
      IF(JHRCO.NE.IHRCO) GO TO 1725
      CALL SAVC21(PO,CCO,CCO,YD,QD,NB,NQL,LQ,QL,LOQL,NDIV,DIV,LODIV,
     1 NUMLAD,LOPLT,LOIWT,POOLT,ITWT,T1,DDX,LAD,PO(LOCTW))
C     WRITE(6,9998)JHRCO,IHRCO,ISTRT,TT,ICO,ICDAY(ICO),ICHOUR(ICO),JSIZE
C9998 FORMAT(1H0,'     JHRCO     IHRCO     ISTRT   TT       ICO     ICDA
C    *Y    ICHOUR   K4='/1H ,3I10,F5.0,3I10,I5)
C
      CALL FCWTCO(ICDAY(ICO),ICHOUR(ICO),CCO,JSIZE)
      ICO=ICO+1
      JHRCO=(ICDAY(ICO)-1)*24+ICHOUR(ICO)
C
 1725 CONTINUE
C     WRITE(6,8890) KIT,NWARM,KTIME,KSTORE,KPRINT,DT,TT
C8890 FORMAT(2X'*** BEFORE 1725 **** KIT,NWARM,KTIME,KSTORE,KPRINT=',
C    1 5I5,5X,3HDT=,F20.2,5X,3HTT=,F5.1)
      IF(KIT.LE.NWARM) GO TO 1080
      GO TO 1090
 1740 TCHK=(KTIME-1)*TMPR
C     WRITE(6,7777) TE,TCHK
C7777 FORMAT(3X,'*****TE TCHK = '2F10.2,' ********')
      IF(TCHK.GT.TE) KTIME=KTIME-1
      IF(JNK.GE.2.AND.IBUG.EQ.1) WRITE(IODBUG,1890)
 1890 FORMAT(1H0,20X,23HTOTAL INFLOW (1000 CFS),8X,24HTOTAL OUTFLOW (100
     20 CFS)/1H ,20X,5HRIVER,7X,11HTRIBUTARIES,8X,5HRIVER,8X,11HTRIBUTAR
     3IES)
      IF(JNK.GE.2.AND.IBUG.EQ.1) WRITE(IODBUG,2154) QSUMIM,QSUMIT,
     1 QSUMOM,QSUMOT
 2154 FORMAT(1H ,10X,F13.2,7X,F13.2,5X,F13.2,3X,F13.2)
      IF (JN.GT.1.AND.JNK.GE.1.AND.NOPROT.EQ.0) WRITE(IPR,1910 ) JJKT
 1910 FORMAT (27H    TRIBUTARY ITERATIONS = ,I3)
      IF (JNK.GE.1.AND.NOPROT.EQ.0) WRITE(IPR,1915 )
     1 JN,(NSITR(J),J = 1, JN)
 1915 FORMAT (/33H    TOTAL ITERATIONS FOR EACH OF ,I2,8H RIVERS./
     1           4X,5I8/)
 2110 FORMAT(1H ,10X,2X,3HDT=,F5.1,5H HRS ,2HT=,F6.1,5H HRS ,5HITER=,
     * 8I4)
 2120 FORMAT(1H ,5X,I5,F9.3,2X,F6.4,2X,F9.3,2X,F7.3,2X,F6.3,2X,F7.3,2X,
     * F10.3,3X,F10.3,5X,F8.1)
 2122 FORMAT(1H ,5X,I5,F9.3,2X,F6.4,2X,F9.3,2X,F7.3,2X,F6.3,2X,F7.3,2X,
     * F10.3,3X,F10.3,5X,F10.3,5X,F8.1)
 2150 FORMAT(1H ,10X,10F10.0)
 2152 FORMAT(1H ,10X,10F10.2)

cew  rti addition
c    store carryover if requested
       if(ifillc .eq. 0) goto 2200
       call savc21(po,ydi,ydi,yd,qd,nb,nql,lq,ql,loql,ndiv,div,lodiv,
     1  numlad,loplt,loiwt,poolt,itwt,t1,ddx,lad,chctw)
2200   continue

C
C       CHECK TO SEE IF WSEL'S ARE GREATER THAN MAX HS VALUE
C
      IMXX=0
      DO 2500 J=1,JN
      L1J=LCAT21(1,J,NB)-1
      N=NB(J)
      DO 2410 I=1,N
      IF(YMX(I+L1J).LE.HS(NCS,I+L1J)) GO TO 2410
      IMXX=IMXX+1
      IMX(IMXX)=I
 2410 CONTINUE
C
      IF(IMXX.EQ.0) GO TO 2500
      WRITE(IPR,2420) J
 2420 FORMAT(1H0,10X,24H**WARNING** ON RIVER NO.,I3,56H THE MAXIMUM WSEL
     1 (MAX ELEV) IS GREATER THAN THE HIGHEST/1H ,22X,58HELEVATION FOR T
     2OPWIDTH (MAXHS) FOR THE FOLLOWING SECTIONS:/1H0,25X,37HSECT. NO.
     3RVR MILE   MAX HS MAX ELEV)
      DO 2440 I=1,IMXX
      I2=IMX(I)
      II=I2+L1J
      WRITE(IPR,2430) I2,X(II),HS(NCS,II),YMX(II)
 2430 FORMAT(1H ,25X,I5,4X,3F10.2)
 2440 CONTINUE
      CALL WARN
      IMXX=0
 2500 CONTINUE
C
      IF(ITRACE.EQ.1) WRITE(IODBUG,9000) SNAME
 9000 FORMAT(1H0,2H**,1X,2A4,8H EXITED.)
      RETURN
      END
