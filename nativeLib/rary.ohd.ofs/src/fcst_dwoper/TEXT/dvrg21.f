C MEMBER DVRG21
C  (from old member FCDVRG21)
C DESC -- THIS SUBROUTINE COMPUTES THE AMOUNT OF FLOW DIVERTED
C
C                             LAST UPDATE: 03/01/94.13:10:02 BY $WC30JL
C
C @PROCESS LVL(77)
C
      SUBROUTINE DVRG21(NDV,MDIV,NQL,LQ,QL,LOQL,LDIV,DIV,LODIV,QU,QD,
     1 QLU,QLD,QLSTR,LOQLS,IFLDIV,I1,DDX,T1,QLI,DVI,NB,NDIV)
C
C           THIS SUBROUTINE WAS WRITTEN ORIGINALLY BY:
C           DR. DANNY FREAD   HRL   APRIL 1978
C
C           THIS SUBROUTINE WAS MODIFIED TO MEET VER. NO. 5 STANDARDS
C           OF THE NWSRFS BY:
C           JANICE LEWIS      HRL   NOVEMBER,1982     VERSION NO. 1
C
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/M121/N,NU,NS1,JN,JJ,KIT,G,DT,TT,TIMF,F1,GZN,NYQD
      COMMON/M621/KTIME,DHF,J1,KX
C
      DIMENSION NQL(*),LQ(*),QL(*),LOQL(*),LDIV(*),DIV(*),LODIV(*),QU(*)
      DIMENSION QD(*),QLSTR(*),LOQLS(*),IFLDIV(*),DDX(*),T1(*)
      DIMENSION QLI(*),DVI(*),SNAME(2),NB(*),NDIV(*)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_dwoper/RCS/dvrg21.f,v $
     . $',                                                             '
     .$Id: dvrg21.f,v 1.2 1996/01/16 11:35:03 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA SNAME/4HDVRG,4H21  /
C
C
      CALL FPRBUG(SNAME,1,21,IBUG)
C
C        DETERMINE THE LOCATIONS OF THE ARRAYS
C
      LI11=LCAT21(I1,1,NB)
      LI1J=LCAT21(I1,JJ,NB)
      L1JJ=LCAT21(1,JJ,NDIV)-1
      LKJJ=LCAT21(1,JJ,NQL)-1
C
C        DETERMINE THE REACH WITH DIVERGENCE
C
      MDIV=0
      DO 100 JZ=1,NDV
      IF(I1.EQ.LDIV(JZ+L1JJ)) GO TO 200
  100 CONTINUE
      GO TO 1000
C
C        DETERMINE THE PERCENTAGE OF FLOW DIVERTED AT THE CURRENT AND
C        PREVIOUS TIME STEPS
C
  200 LJZ=JZ+L1JJ
C
      CALL INTP21(NU,TINP,IT1,IT2,T1)
      IF(TT.LT.DHF) TINP=TT/DHF
      MDIV=1
      DX=DDX(LI11)
      TT=TT-DT/TIMF
      TTT=TT
      CALL INTP21(NU,TINPD,IT1D,IT2D,T1)
      IF(TT.LT.DHF) TINPD=TT/DHF
      TT=TT+DT/TIMF
C
      LDV=LODIV(LJZ)-1
      DIVU=DIV(IT2+LDV)+TINP*(DIV(IT1+LDV)-DIV(IT2+LDV))
      DIVD=DIV(IT2D+LDV)+TINPD*(DIV(IT1D+LDV)-DIV(IT2D+LDV))
      IF(TT.LT.DHF) DIVU=DVI(LJZ)+(DIV(1+LDV)-DVI(LJZ))*TINP
      IF(TTT.LT.DHF) DIVD=DVI(LJZ)+(DIV(1+LDV)-DVI(LJZ))*TINPD
C
C        CHECK FOR LATERAL FLOW
C
      NQL1=NQL(JJ)
      IF(NQL1.EQ.0) GO TO 600
      DO 300 KX=1,NQL1
      IF(LQ(KX+LKJJ).EQ.LDIV(LJZ)) GO TO 500
  300 CONTINUE
      GO TO 600
C
C        DETERMINE THE AMOUNT OF FLOW TO BE DIVERTED AND STORE IN QLSTR
C        ARRAY
C
  500 IF(IFLDIV(LJZ).EQ.1) GO TO 600
C
      LQL=LOQL(KX+LKJJ)-1
      QLU=QL(IT2+LQL)+TINP*(QL(IT1+LQL)-QL(IT2+LQL))
      QLD=QL(IT2D+LQL)+TINPD*(QL(IT1D+LQL)-QL(IT2D+LQL))
      IF(TT.LT.DHF) QLU=QLI(KX+LKJ)+(QL(1+LQL)-QLI(KX+LKJ))*TINP
      IF(TTT.LT.DHF) QLD=QLI(KX+LKJ)+(QL(1+LQL)-QLI(KX+LKJ))*TINPD
      GO TO 700
C
  600 QLU=-ABS(QU(LI1J))*DIVU/100./DX
      QLD=-ABS(QD(LI1J))*DIVD/100./DX
C
  700 IF(KTIME.EQ.0) GO TO 1000
      LQS=LOQLS(LJZ)-1
      QLSTR(KTIME+LQS)=QLU*DX
C
 1000 IF(ITRACE.EQ.1) WRITE(IODBUG,9000) SNAME
 9000 FORMAT(1H0,2H**,1X,2A4,8H EXITED.)
      RETURN
      END
