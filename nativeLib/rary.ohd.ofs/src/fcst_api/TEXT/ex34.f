C MEMBER EX34
C  (from old member FCEX34)
C
C***********************************************************************
C                             LAST UPDATE: 02/08/94.11:42:30 BY $WC20SV
C
C
C THIS SUBROUTINE EXECUTES THE API-SLC OPERATION
C
C***********************************************************************
C
C SUBROUTINE INITIALLY WRITTEN BY
C       DON LAURINE - CBRFC     MARCH 1985
C
C***********************************************************************
C
C PRINCIPAL VARIABLES
C
C FOR DEFINITION OF VARIABLES IN COMMON BLOCKS, SEE SECTION IX.3.3C
C OF THE NWSRFS USER'S MANUAL
C
C     AA               API RELATIONSHIP CONSTANT (A)
C     AB               API RELATIONSHIP CONSTANT (B)
C     AK               API RELATIONSHIP CONSTANT (K)
C     AM               API RELATIONSHIP CONSTANT (M)
C     AP               API TIMME SERIES ARRAY
C     API,APICO        API VALUE
C     APILMT           API LOWER LIMIT
C     APIR             API REDUCTION VALUE
C     APIREC           API RECESSION CONSTANT
C     B                API EQUATION TERM
C     C                API EQUATION TERM 1ST QUAD
C     CARY             UPDATED CARRYOVER ARRAY
C     CO               CARRYOVER ARRAY
C     CP               API RELATIONSHIP CONSTANT (CP)
C     E1               API RELATIONSHIP CONSTANT (E1)
C     E2               API RELATIONSHIP CONSTANT (E2)
C     FD               API EQUATION TERM 3RD QUAD
C     G1               API EQUATION TERM 1ST QUAD
C     G2               API EQUATION TERM 1ST QUAD
C     IDAY             NUMBER OF DAYS SINCE JAN 1 OF CURRENT YEAR
C     IDELT            DELTA-T OF TIME SERIES FOR RAINFALL+MELT
C     IDUR,IDURCO      DURATION OF STORM IN PERIODS OF 6 HOURS
C     IFDEB            DEBUG OUTPUT SWITCH - 0=OFF 1-ON
C     INTDA            INTERNAL DAY OF CURRENT DAY BEING PROCESSED
C     ISFG,ISFGCO      STORM FLAG - 0=NO STORM
C     IVERS            VERSION OF OPERATION
C     IWN,NWN          API RELATIONSHIP CONSTANT (WN)
C     IWX,NWX          API RELATIONSHIP CONSTANT (WX)
C     KCQN             ARRAY ELEMENT IN API CORRECTION ARRAY
C     KMO,KDA,KYR,     MONTH,DAY,YEAR,HOUR OF TODAYS DATE
C     KHR
C     LAST             NUMBER OF DAYS RUNOFF IS TO BE CALCULATED
C     LIK              LOCATION OF ELEMENT IN API AND SNOW COVER ARRAYS
C                        FOR STORING CURRENT VALUES
C     LOC              LOCATION OF ELEMENT IN RAIN+MELT AND RUNOFF
C ARRAYS
C                        FOR READING AND STORING VALUES
C     MODA             NUMBER OF DAYS IN EACH MONTH
C     NLSTZ            NUMBER IDENTIFING SPECIFIC TIME ZONE
C     NMO,NDA,NYR      TOMORROWS DATE
C     NOC              COUNTER FOR NUMBER OF DAYS TO SAVE CARRYOVER
C     PER              PERCENT OF 24 HR RUNOFF PLACED IN 6 HR LOCATION
C     PO               API PARAMETER ARRAY
C     POW              API RELATIONSHIP CONSTANT (POW)
C     PS               % SNOW COVER ARRAY
C     PSCCO            % SNOW COVER VALUE
C     PX               RAIN+MMELT ARRAY
C     PXSIG            SIGNIFICANT PRECIP LEVEL
C     RAIN             6 HOURLY RAIN
C     RI1              API EQUATION TERM 1ST QUAD
C     RI2              API EQUATION TERM 2ND QUAD
C     RO               RUNOFF ARRAY
C     SC               % SNOW COVER ARRAY
C     SUBNAM           NAME OF OPERATION
C     TOT24            24 HOUR RAIN+MELT
C     TRO              24 HOUR RUNOFF
C     WEEK             WEEK NUMBER
C     Y                API EQUATION TERM 1ST QUAD
C
C***********************************************************************
C
      SUBROUTINE EX34(PO,CO,PX,RO,SC,AP)
C
      DIMENSION PO(1),CO(1),PX(1),RO(1),SC(1),AP(1),SUBNAM(2),MODA(12),
     *          RAIN(4),CARY(4)
C
      COMMON /FDBUG/ IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON /FCTIME/ IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     *                LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON /FCARY/ IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON /MOD129/ NDT34,IDT34(5),VAL34(5)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_api/RCS/ex34.f,v $
     . $',                                                             '
     .$Id: ex34.f,v 1.1 1995/09/17 18:57:05 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SUBNAM/4hEX34,4h    /,NOP/34/
      DATA MODA/31,28,31,30,31,30,31,31,30,31,30,31/,EMPTY/4h    /
C
C CALL DEBUG CHECK ROUTINE
C
      CALL FPRBUG(SUBNAM,1,NOP,IFDEB)
C
C INITIALIZE COUNTER FOR NUMBER OF DAYS CARRYOVER IS BEING SAVED.
C
      NOC=1
C
C INITIALIZE COUNTER FOR API CORRECTION
C
      KCQN=1
C
C SELECT REQUIRED VAIABLES FROM PO AND CO ARRAYS
C
      IVERS=PO(1)
      APIREC=PO(8)
      APILMT=PO(9)
      IDELT=PO(11)
C
      AA=PO(27)
      AB=PO(28)
      IWN=PO(29)
      IWX=PO(30)
      E1=PO(31)
      E2=PO(32)
      CP=PO(33)
      AK=PO(34)
      AM=PO(35)
      POW=PO(36)
      PXSIG=PO(37)
C
      APICO=CO(1)
      PSCCO=CO(2)
      ISFGCO=CO(3)
      IDURCO=CO(4)
C
      G1=(E2-E1)/2.0
      G2=(E1-E2)/2.0
C
      PI=3.141592654
      PI2=1.570796327
C
      IF(IFDEB.GT.0) GO TO 300
C
C CALL ROUTINE TO GET MONTH, DAY AND YEAR FOR THE FIRST DATE BEING RUN.
C SET NUMBER OF DAYS FOR RUN AND INITIALIZE INTERNAL DAY COUNTER.
C
100   CALL MDYH1(IDA,IDELT,KMO,KDA,KYR,KHR,NLSTZ,NOUTDS,TZ)
      KYR=KYR-((KYR/100)*100)
      LAST=LDA-IDA+1
      INTDA=IDA
      IF(IFDEB.GT.0) GO TO 302
C
C BEGIN DAILY LOOP
C
102   DO 1000 II=1,LAST
C
C DETERMINE THE LOCATION OF THE FIRST VALUE NEEDED IN THE PX ARRAY
C AND FIRST VALUE TO BE OUTPUT IN THE RO ARRAY FOR THIS DATE.
C
      LOC=((INTDA-IDADAT)*4)+1
C
C DETERMINE THE LOCATION IN AP ARAAY FOR STORING API FOR THE
C TIME SERIES OUTPUT.
C
      LIK=(IDA-IDADAT)+II
C
C CHECK FOR LEAP YEAR
C
      IF(((KYR/4)*4).EQ.KYR) MODA(2)=29
C
C DETERMINE MONTH, DAY AND YEAR FOR NEXT DATE TO BE PROCESSED
C
      IF(KDA.GE.MODA(KMO)) GO TO 110
      NMO=KMO
      NDA=KDA+1
      NYR=KYR
      GO TO 116
C
110   IF(KMO.GE.12) GO TO 114
      NMO=KMO+1
      NDA=1
      NYR=KYR
      GO TO 116
C
114   NMO=1
      NDA=1
      NYR=KYR+1
C
C DETERMINE WEEK NUMBER OF CURRENT DATE
C
116   IDAY=0
      DO 1005 MM=1,KMO
      IDAY=IDAY+MODA(MM)
1005  CONTINUE
      IDAY=IDAY-MODA(KMO)+KDA
      WEEK=((IDAY-1)/7)+1
      IF(IFDEB.GT.0) GO TO 304
C
C CONVERT 4 PERIODS OF RAINFALL+MELT FROM METRIC TO ENGLISH.
C THEN DETERMINE DAY'S TOTAL 24-HOUR AMOUNT
C
118   TOT24=0.0
      ISFG=0
      IDUR=0
C      IF(ISFGCO.EQ.4) IDUR=IDURCO
      DO 1010 I=1,4
      J=LOC+I-1
      RAIN(I)=PX(J)/25.4
      TOT24=TOT24+RAIN(I)
      IF(RAIN(I).LT.PXSIG) GO TO 1010
      ISFG=I
      IDUR=IDUR+1
1010  CONTINUE
      IF(ISFG.EQ.0) IDUR=0
      IF(TOT24.LE.0.0.OR.IDUR.GT.0) GO TO 117
      IDUR=1
      ISFG=1
117   IF(IFDEB.GT.0) GO TO 306
C
C CHECK FOR NO RAIN EVENT
C
119   IF(TOT24.GT.0.0) GO TO 124
C
C IF NO RAIN+MELT EVENT SET CARRYOVER AND RUNOFF AMOUNTS
C
      ISFGCO=0
      IDURCO=0
      DO 1015 I=1,4
      J=LOC+I-1
      RO(J)=0.0
1015  CONTINUE
      IF(IFDEB.GT.0) GO TO 308
      GO TO 160
C
C CALCULATE 24 RUNOFF
C
C FIRST QUAD OF API COAXIAL GRAPH....
C
124   Y=1.0
      NWN=IWN
      NWX=IWX
      IF(NWN-NWX) 128,126,126
126   NWN=NWN-52
128   IF(WEEK-NWN) 130,130,136
130   IF(((WEEK+52.-NWX)*(PI/(52.+NWN-NWX)))-PI2) 134,134,132
C
132   CS=COS(PI-((WEEK+52.-NWX)*(PI/(52.+NWN-NWX))))
      IF(CS.LE.0) GO TO 133
      Y=1.-CS**CP
133   C=E1+G1*(NWN-WEEK)/((52.-NWX+NWN)/2.)
      GO TO 150
C
134   CS=COS((WEEK+52.-NWX)*(PI/(52.+NWN-NWX)))
      IF(CS.LE.0) GO TO 135
      Y=1.+CS**CP
135   C=E2+G2*(52.-NWX+WEEK)/((52.-NWX+NWN)/2.)
      GO TO 150
C
136   IF(WEEK.GT.NWX) GO TO 144
      IF(((WEEK-NWN)*(PI/(NWX-NWN)))-PI2) 142,142,140
C
140   CS=COS(PI-((WEEK-NWN)*(PI/(NWX-NWN))))
      IF(CS.LE.0) GO TO 141
      Y=1.+CS**CP
141   C=E2+G2*(NWX-WEEK)/((NWX-NWN)/2.)
      GO TO 150
C
142   CS=COS((WEEK-NWN)*(PI/(NWX-NWN)))
      IF(CS.LE.0) GO TO 143
      Y=1.-CS**CP
143   C=E1+G1*(WEEK-NWN)/((NWX-NWN)/2.)
      GO TO 150
C
144   IF(((WEEK-NWX)*(PI/(52.+NWN-NWX)))-PI2) 148,148,146
C
146   CS=COS(PI-((WEEK-NWX)*(PI/(52.+NWN-NWX))))
      IF(CS.LE.0) GO TO 147
      Y=1.-CS**CP
147   C=E1+G1*(NWN+52.-WEEK)/((52.-NWX+NWN)/2.)
      GO TO 150
C
148   CS=COS((WEEK-NWX)*(PI/(52.+NWN-NWX)))
      IF(CS.LE.0) GO TO 149
      Y=1.+CS**CP
149   C=E2+G2*(WEEK-NWX)/((52.-NWX+NWN)/2.)
C
150   B=(AB-AA)/2.
      API=APICO
      IF(APICO.GT.0.0) GO TO 154
      API=0.01
  154 RI1=0.0
      IF(C.LE.0.0) GO TO 155
      RI1=(AA+B*Y)*C**API
  155 IF(IFDEB.GT.0) GO TO 310
C
C SECOND QUADRANT.....
C
156   FD=0.0
      RI2=0.0
      TRO=0.0
      IF(TOT24.LT..01) GO TO 157
      RI2=TOT24*(TOT24/(TOT24+1.))**RI1
C
C THIRD QUADRANT....
C
      FD=((RI1+1.)*(IDUR*6.0))/(6.+AM*(RI2**POW))
      TRO=RI2*(AK**FD)
157   IF(IFDEB.GT.0) GO TO 312
C
C COMPUTE 6 HOUR RUNOFF BASED ON 6 HOUR PRECIP
C
158   DO 1020 I=1,4
      J=LOC+I-1
      PER=RAIN(I)/TOT24
      RO(J)=TRO*PER*25.4
1020  CONTINUE
      IF(IFDEB.GT.0) GO TO 314
C
C MAKE API CORRECTIONS IF NEEDED
C
160   IF(KCQN.GT.NDT34) GO TO 162
      IF(IDT34(KCQN).GT.(LDACPD*24)) GO TO 162
      IF(IDT34(KCQN).GT.(INTDA*24)) GO TO 162
      APICO=VAL34(KCQN)
      IF(APICO.LT.APILMT.OR.APICO.GT.5.0) GO TO 700
161   KCQN=KCQN+1
      IF(IFDEB.GT.0) GO TO 316
C
C ADJUST API RECESSION BY USING % SNOW COVER
C
162   APICO=APICO+TOT24
      APIR=APICO*(1.-APIREC)
      PSCCO=0.0
      IF(PO(22).EQ.EMPTY) GO TO 164
      PSCCO=SC(LIK)
      APIR=APICO*(1.-APIREC)*(1.-PSCCO)
C
C NOW UPDATE API AND OTHER CARRYOVERS
C
164   IF(APILMT.GE.0.0) GO TO 168
      IF(APICO.GT.0.05) GO TO 168
      APICO=APICO-.01
      GO TO 170
168   APICO=APICO-APIR
170   IF(APICO.LT.APILMT) APICO=APILMT
      IF(APICO.GT.5.0) APICO=5.0
C
      IF(ISFG.LE.0) GO TO 178
      ISFGCO=ISFG
      IDURCO=IDUR
      GO TO 180
178   ISFGCO=0
      IDURCO=0
C
C STORE API INTO OUTPUT ARRAY IF REQUESTED
C
180   IF(PO(26).EQ.EMPTY) GO TO 186
      AP(LIK)=APICO*25.4
      IF(IFDEB.GT.0) GO TO 317
C
C CHECK TO SEE IF CARRYOVER IS TO BE SAVED FOR CURRENT DATE
C
186   IF(IFDEB.GT.0) GO TO 318
188   IF(IFILLC.LE.0) GO TO 200
      IF(NCSTOR.LE.0) GO TO 200
      IF(NOC.GT.NCSTOR) GO TO 200
      IF(INTDA.NE.ICDAY(NOC)) GO TO 200
C
      CARY(1)=APICO
      CARY(2)=PSCCO
      CARY(3)=ISFGCO+0.01
      CARY(4)=IDURCO+0.01
      CALL FCWTCO(INTDA,24,CARY,4)
      IF(IFDEB.GT.0) GO TO 320
C
C UPDATE COUNTER FOR NUMBER OF DAYS CARRYOVER HAS BEEN STORED
C
196   NOC=NOC+1
C
C UPDATE MONTH, DAY AND YEAR FOR PROCESSING NEXT DAY. UPDATE INTERNAL
C COUNTER
C
200   KMO=NMO
      KDA=NDA
      KYR=NYR
      MODA(2)=28
      INTDA=INTDA+1
1000  CONTINUE
C
C SEE IF YOU NEED TO UPDATE CARRYOVER
C
      IF(IFILLC.LE.0) GO TO 9999
      CO(1)=APICO
      CO(2)=PSCCO
      CO(3)=ISFGCO+.01
      CO(4)=IDURCO+.01
      IF(IFDEB.GT.0) GO TO 322
C
9999  RETURN
C
C-----------------------------------------------------------------------
C DEBUG STATEMENTS
C
300   WRITE(IODBUG,900) SUBNAM,IVERS
      WRITE(IODBUG,902) APILMT,APIREC,AA,AB,IWN,IWX,E1,E2,CP,AK,AM,POW,
     *G1,G2
      PS=PSCCO*100.
      ID=IDURCO*6
      WRITE(IODBUG,904) APICO,PS,ISFGCO,ID
      GO TO 100
302   WRITE(IODBUG,906) IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW,
     *                  LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,
     *                  IDADAT,LAST
      WRITE(IODBUG,908) IFILLC,NCSTOR,ICDAY,ICHOUR
      WRITE(IODBUG,910) NDT34,IDT34,VAL34
      IE=((LDA-IDADAT)+1)*4
      WRITE(IODBUG,912) (PX(I),I=1,IE)
      IE=IE/4
      IF((PO(22)-EMPTY).NE.0) WRITE(IODBUG,914) (SC(I),I=1,IE)
      GO TO 102
304   WRITE(IODBUG,916) II,KMO,KDA,KYR,NMO,NDA,NYR,IDAY,WEEK,INTDA,LOC,
     *LIK
      GO TO 118
306   ID=IDUR*6
      WRITE(IODBUG,918) RAIN,TOT24,ISFG,ID
      GO TO 119
308   IB=LOC
      IE=LOC+3
      WRITE(IODBUG,926) (RO(I),I=IB,IE)
      GO TO 160
310   WRITE(IODBUG,922) NWN,NWX,Y,C,B,API,RI1
      GO TO 156
312   WRITE(IODBUG,924) FD,RI2,TRO
      GO TO 158
314   IB=LOC
      IE=LOC+3
      WRITE(IODBUG,926) (RO(I),I=IB,IE)
      GO TO 160
316   WRITE(IODBUG,925) APICO
      GO TO 162
317   WRITE(IODBUG,927) AP(LIK)
      GO TO 186
318   ID=IDURCO*6
      PS=PSCCO*100.
      WRITE(IODBUG,928) APICO,PS,ISFGCO,ID
      GO TO 188
320   WRITE(IODBUG,930) INTDA
      GO TO 196
322   ID=IDURCO*6
      PS=PSCCO*100.
      WRITE(IODBUG,929) APICO,PS,ISFGCO,ID
      GO TO 9999
C
C-----------------------------------------------------------------------
C WARNING MESSAGES
C
700   WRITE(IPR,932) APICO,APILMT
      IF(APICO.LT.APILMT) APICO=APILMT
      IF(APICO.GT.5.0) APICO=5.0
      WRITE(IPR,934) APICO
      GO TO 161
C
C
C-----------------------------------------------------------------------
C I/O FORMATS
C
900   FORMAT(/5X,2A4,' DEBUG OUTPUT.',5X,'VERSION:',I4)
902   FORMAT(/15X,'API LOWER LIMIT:',F7.2,/15X,'API REC CONSTANT:',
     *F6.2,//15X,'API CONSTANTS:',//17X,'A',7X,'I',7X,'WN',6X,'WX',6X,
     *'E1',6X,'E2',6X,'CP',6X,'K',7X,'M',6X,'POW',6X,'G1',6X,'G2',
     */12X,12(3X,'-----'),/15X,F5.2,3X,F5.2,4X,I3,5X,I3,1X,4(3X,F5.2),
     *3X,F5.1,3(3X,F5.2))
904   FORMAT(/15X,'CARRYOVER VALUES:',//16X,'API',7X,'%SC',6X,'STORM',
     *6X,'DUR HRS',/15X,3('-----',5X),'--------',/14X,F6.2,5X,F5.1,
     *6X,I2,10X,I3)
906   FORMAT(/10X,'IDARUN   IHRRUN   LDARUN   LHRRUN   LDACPD   ',
     *'LHRCPD   NOW(1)   NOW(2)   NOW(3)   NOW(4)   NOW(5)'/
     *7X,11I9//
     *10X,'LOCAL     NOUTZ   NOUTDS    NLSTZ      IDA      ',
     *'IHR      LDA      LHR   IDADAT     LAST'/
     *7X,10I9)
908   FORMAT(/10X,'IFILLC:',I3,5X,'NCSTOR:',I3,5X,'ICDAY:',10I7/
     *46X,10I7/39X,'ICHOUR:',10I7/46X,10I7)
910   FORMAT(/10X,'NDT34:',I3,5X,'IDT34:',5I10/24X,'VAL34:',5F10.2)
912   FORMAT(/10X,'PX ARRAY (METRIC):',2X,16F6.1,7(/30X,16F6.1))
914   FORMAT(/10X,'% SNOW COVER:     ',4X,16F6.3,7(/30X,16F6.3))
916   FORMAT(/10X,122('-')/10X,'DAY:',I3,2X,'TODAY:',1X,I2,'/',I2,'/',
     *I2,2X,'TOMORROW:',1X,I2,'/',I2,'/',I2,3X,'DAY OF YEAR:',I4,
     *3X,'WEEK NO:',F4.0,3X,'INTERNAL DAY:',I6,3X,'LOC:',I4,2X,
     *'LIK:',I4)
918   FORMAT(/10X,'6-HOURLY RAIN:',4F8.2,5X,'24-HOUR TOTAL:',F8.2,
     */10X,'STORM FLAG:',I3,5X,'DURATION (HRS):',I4)
922   FORMAT(/10X,'API FIRST QUAD VALUES:',
     */10X,'NWN:',I4,5X,'NWX:',I4,5X,'Y:',F8.2,5X,'C:',F8.2,5X,'B:',
     *F8.2,5X,'API:',F8.2,5X,'RI1:',F8.2)
924   FORMAT(/10X,'API SECOND AND THIRD QUAD VALUES:'
     */10X,'FD:',F8.2,5X,'RI2:',F8.2,5X,'TRO:',F8.2)
925   FORMAT(/10X,'CORRECTION TO API HAS BEEN MADE. NEW VALUE IS',F6.2)
926   FORMAT(/10X,'6-HRLY RUNOFF VALUES STORED IN RO ARRAY (METRIC):',
     *4F8.2)
927   FORMAT(/10X,'API ARRAY UPDATE (METRIC):',F6.2)
928   FORMAT(/10X,'NEW CARRYOVER AND API VALUES:',
     */10X,'API:',F8.2,5X,'%SNOW COVER:',F6.2,5X,'STORM FLAG:',I4,
     *5X,'DURATION:',I4)
929   FORMAT(/10X,'FINAL STORAGE MADE FOR CALIBRATION RUN',
     */10X,'NEW CARRYOVER AND API VALUES:',
     */10X,'API:',F8.2,5X,'%SNOW COVER:',F6.2,5X,'STORM FLAG:',I4,
     *5X,'DURATION:',I4)
930   FORMAT(/10X,'CARRYOVER VALUES JUST STORED FOR INTERNAL DATE',I8)
932   FORMAT(/10X,'**WARNING** CORRECTION TO API IS OUTSIDE LIMITS',
     */22X,'ENTERED VALUE (',F8.2,') IS OUTSIDE ',F6.2,' - 5.0')
934   FORMAT(22X,'VALUE SET TO',F6.2)
      END
