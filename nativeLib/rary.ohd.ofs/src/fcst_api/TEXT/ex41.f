C MEMBER EX41
C  (from old member FCEX41)
C
      SUBROUTINE EX41(PO,CO,PX,RO,PEV,AIS,APIS,AEIS)
C
C######################################################################
C
C  THIS SUBROUTINE EXECUTES THE NEW EVENT-BASED API-HAR2 OPERATION.
C
C######################################################################
C  LIST OF VARIABLES:
C
C  NAME    DEFINITION                                 S/D  I/O  UNITS
C  ______  _________________________________________  ___  ___  ________
C  AEIDRY  DRY CURVE AEI VALUE                         P    I   INCHES
C  AEIWET  WET CURVE AEI VALUE                         P    I   INCHES
C  AEIS    AEI TIME SERIES (IF REQUESTED)             TS    O   MM
C  APIS    API TIME SERIES (IF REQUESTED)             TS    O   MM
C  AEIX    ARRAY FOR TEMPORARY STORAGE OF AEI VALUES   L        INCHES
C  APIX    ARRAY FOR TEMPORARY STORAGE OF API VALUES   L        INCHES
C  BDRY    AI INTERCEPT ALONG THE DRY CURVE IN THE     P        INCHES
C          SEASON QUADRANT
C  BWET    AI INTERCEPT ALONG THE WET CURVE IN THE     P        INCHES
C          SEASON QUADRANT
C  CAPI    API VALUE FOR THE CURRENT PERIOD            L        INCHES
C  CARY    ARRAY FOR TEMPORARY STORAGE OF CARRYOVER    L
C  CDRY    CURVATURE PARAMETER FOR DRY CURVE IN THE    P
C          SEASON QUADRANT
C  CWET    CURVATURE PARAMETER FOR WET CURVE IN THE    P
C          SEASON QUADRANT
C  DRAIM   24 HOUR (DAILY) RAIN/MELT                   C    O   INCHES
C  DRO     24 HOUR (DAILY) RUNOFF                      C    O   INCHES
C  AIS     AI TIME SERIES (IF REQUESTED)              TS    O
C  AIX     ARRAY FOR TEMPORARY STORAGE OF AI VALUES    L
C  FIXPEV  POTENTIAL ET ADJUSTMENT FACTOR              L
C  ICAEI   AEI MOD CORRECTION COUNTER                  L
C  ICAPI   API MOD CORRECTION COUNTER                  L
C  ICDAY   ARRAY OF DATES TO SAVE CARRYOVER           CM    I   JDAYS
C  IDADAT  FIRST DAY OF DATA IN TIME SERIES           CM    I   JDAYS
C  IDAY    FIRST DAY OF RUN                           CM    I   JDAYS
C  IDELTA  COMPUTATIONAL TIME STEP INTERVAL            P    I   HOURS
C  IDT29   ARRAY OF DATES FOR API CORRECTIONS         CM    I   JHOURS
C  IDT35   ARRAY OF DATES FOR AEI CORRECTIONS         CM    I   JDAYS
C  IFDEB   DEBUG OUTPUT SWITCH (0 OR 1)               SUB   I
C  IFILLC  SAVE CARRYOVER SWITCH (0 OR 1)             CM    I
C  INTDA   INTERNAL DAY COUNTER                        L        DAYS
C  INTHR   INTERNAL HOUR COUNTER                       L        HOURS
C  IOFAAA  API/AEI/AI TIME SERIES OUTPUT FLAG          P    I
C  IRNUM   RUNOFF ZONE NUMBER                          P    I
C  IUSEC   NUMBER OF WORDS USED IN THE CO ARRAY        P    I
C  KDA     TODAYS DAY                                  L
C  KMO     TODAYS MONTH                                L
C  KYR     TODAYS YEAR                                 L
C  LAST    # OF DAYS FOR WHICH OPERATION IS TO BE RUN  L
C  LDA     LAST DAY OF RUN                            CM    I   JDAYS
C  LOC     ARRAY LOCATION FOR THE CURRENT PERIODS      L
C          RAIM, RO, AI, API & AEI TIME SERIES DATA
C  LOCPEV   ARRAY LOCATION FOR THE CURRENT DAYS PEV    L
C          TIME SERIES DATA
C  NAPIT   NUMBER OF TIMES API HAS TOPPED UPPER LIMIT  L
C          (NOW DEFINED AS 15.00)
C  NAPIB   NUMBER OF TIMES API HAS DROPPED BELOW       L
C          LOWER LIMIT (NOW DEFINED AS 0.00)
C  NCSTOR  NUMBER OF DAYS TO STORE CARRYOVER          CM    I
C  NDA     TOMORROWS DAY                               L
C  NDT29   NUMBER OF API CORRECTIONS TO BE MADE       CM    I
C  NDT35   NUMBER OF AEI CORRECTIONS TO BE MADE       CM    I
C  NMO     TOMORROWS MONTH                             L
C  NOC     SAVE CARRYOVER COUNTER                      L
C  NOP     NUMBER ASSIGNED TO THIS OPERATION           P    I
C  NPER    NUMBER OF PERIODS IN A DAY                  P    I
C  NSW     NEW STORM WINDOW                            P    I   HOURS
C  NSPER   NUMBER OF PERIODS IN NSHR                   P    I
C  NWD1    NUMBER OF WORDS USED IN PX, RO, AEIS,       L
C          APIS AND AIS TIME SERIES
C  NWD2    NUMBER OF WORDS USED IN PEV TIME SERIES     L
C  NYR     TOMORROWS YEAR                              L
C  PA      PRECIPITATION QUADRANT PARAMETER            P
C  PB      PRECIPITATION QUADRANT PARAMETER            P
C  PC      PRECIPITATION QUADRANT PARAMETER            P
C  PD      PRECIPITATION QUADRANT PARAMETER            P
C  PE      PRECIPITATION QUADRANT PARAMETER            P
C  PMAX    MAX RAIN/MELT ALLOWED (WITHIN NSW) FOR      P    I
C          A NEW STORM TO BEGIN
C  PEV      POTENTIAL ET TIME SERIES                  TS    I   MM
C  PX      RAIN/MELT TIME SERIES                      TS    I   MM
C  PXX     ARRAY FOR TEMPORARY STORAGE OF RAIN/MELT    L        INCHES
C  R24     24 HOUR API RECESSION COEFFICIENT           P    I
C  REC     INCREMENTAL API RECESSION COEFFICIENT       L
C  RID     RUNOFF ZONE ID                              P    I
C  RLAT    LATITUDE OF RUNOFF ZONE CENTROID            P    I   DEG DEC
C  RLNG    LONGITUDE OF RUNOFF ZONE CENTROID           P    I   DEG DEC
C  RNAME   RUNOFF ZONE NAME                            P    I
C  RNS     TOTAL RAIN/MELT WITHIN NEW STORM WINDOW     L        INCHES
C  RNSP    RAIN/MELT FOR EACH PERIOD WITHIN NEW        C    O   INCHES
C          STORM WINDOW
C  RO      GENERATED RUNOFF TIME SERIES               TS    O   MM
C  ROX     ARRAY FOR TEMPORARY STORAGE OF RUNOFF       L        INCHES
C  RUNOFF  GENERATED RUNOFF USING TOTAL STORM          L        INCHES
C          RAIN/MELT
C  SAEI    CURRENT STORM AEI VALUE                     C   I,O  INCHES
C  SAPI    CURRENT STORM API VALUE                     C   I,O  INCHES
C  SAI     CURRENT STORM AI VALUE                      C   I,O
C  SRAIM   CURRENT STORM RAIN/MELT                     C   I,O  INCHES
C  SRO     CURRENT STORM RUNOFF                        C   I,O  INCHES
C  TAEI    AEI VALUE AT 12Z TODAY                      C    O   INCHES
C  TAPI    API VALUE AT 12Z TODAY                      C    O   INCHES
C  TAI     AI VALUE AT 12Z TODAY                       C    O
C  VAL29   ARRAY OF API CORRECTIONS                   CM    I   INCHES
C  VAL35   ARRAY OF AEI CORRECTIONS                   CM    I   INCHES
C  YAEI    YESTERDAYS 12Z AEI VALUE                    C    I   INCHES
C  YAPI    YESTERDAYS 12Z API VALUE                    C    I   INCHES
C  YAI     YESTERDAYS 12Z AI VALUE                     C    I
C
C
C       ABBREVIATIONS:
C
C          S/D = SOURCE/DESTINATION
C
C             TS = TIME SERIES
C             C  = CARRYOVER
C             P  = PARAMETRIC
C             L  = LOCAL
C             SUB= SUBROUTINE
C             CM = COMMON BLOCK
C
C
C          I/O = INPUT/OUTPUT
C
C             I  = INPUT
C             O  = OUTPUT
C
C
C#######################################################################
C
C
      DIMENSION PO(1),CO(1),PX(1),RO(1),PEV(1),AIS(1),APIS(1),AEIS(1),
     1          CARY(34),RNAME(5),RID(2),SUBNAM(2),MODA(12),
     2          PXX(24),ROX(24),AIX(24),APIX(24),AEIX(24)
      DIMENSION RNSP(24)
      COMMON /FDBUG/ IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON /FCTIME/ IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     1                NOW(5),LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,
     2                LDA,LHR,IDADAT
      COMMON /FCARY/ IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON/IONUM/ IN,IPR,IPU
      COMMON /MOD129/ NDT29,IDT29(5),VAL29(5)
      COMMON /MOD135/ NDT35,IDT35(5),VAL35(5)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_api/RCS/ex41.f,v $
     . $',                                                             '
     .$Id: ex41.f,v 1.1 1995/09/17 18:57:15 dws Exp $
     . $' /
C    ===================================================================
C
      DATA SUBNAM /4hEX41,4h    /,NOP/41/
      DATA MODA /31,28,31,30,31,30,31,31,30,31,30,31/
C
C  CALL DEBUG CHECK ROUTINE
C
      CALL FPRBUG(SUBNAM,1,NOP,IFDEB)
C
C  INITIALIZE COUNTER FOR THE NUMBER OF DAYS CARRYOVER
C  IS BEING SAVED.  THIS COUNTER IS INCREMENTED BY 1 EACH
C  DAY CARRYOVER IS SAVED.  ALSO, INITIALIZE
C  THE COUNTERS FOR THE AEI AND API MOD CORRECTIONS, AND FOR
C  AEI AND API ERROR COUNTERS.
C
C
      NOC=1
      ICAEI=1
      ICAPI=1
      NAEIBW=0
      NAEITS=0
      NAEITD=0
      NAPIT=0
      NAPIB=0
C
C  SELECT REQUIRED VARIABLES FROM THE PO AND CO ARRAYS.
C
      IVERS=PO(1)
      RID(1)=PO(2)
      RID(2)=PO(3)
      DO 100 I=1,5
100   RNAME(I)=PO(I+3)
      IRNUM=PO(9)
      RLAT=PO(10)
      RLNG=PO(11)
      AEIWET=PO(12)
      BWET=PO(13)
      CWET=PO(14)
      AEIDRY=PO(15)
      BDRY=PO(16)
      CDRY=PO(17)
      PA=PO(18)
      PB=PO(19)
      PC=PO(20)
      PD=PO(21)
      PE=PO(22)
      FIXPEV=PO(23)
      PMAX=PO(24)
      R24=PO(25)
      IDELTA=PO(26)
      NSW=PO(27)
      NSPER=PO(28)
      IUSEC=PO(29)
      IOFAAA=PO(30)
      YAPI=CO(1)
      YAEI=CO(2)
      YAI=CO(3)
      SAPI=CO(4)
      SAEI=CO(5)
      SAI=CO(6)
      SRAIM=CO(7)
      SRO=CO(8)
      DO 125 I=1,NSPER
125   RNSP(I)=CO(10+I)
      NPER=24/IDELTA
C
C  CALCULATE THE NUMBER OF WORDS USED IN THE TIME SERIES
C  PASSED INTO THIS ROUTINE.
C
      NWD1=(LDA-IDADAT+1)*24/IDELTA
      NWD2=(LDA-IDADAT+1)
      IF(IFDEB)150,150,4050
C
C  CALL ROUTINE TO GET MONTH, DAY AND YEAR FOR FIRST DATE
C  BEING RUN.  SET THE NUMBER OF DAYS FOR THE RUN AND
C  INITIALIZE THE INTERNAL DAY COUNTER AND THE INTERNAL HOUR COUNTER.
C
150   CALL MDYH1(IDA,0,KMO,KDA,KYR,KHR,NLSTZ,0,TZ)
      KYR=KYR-((KYR/100)*100)
      LAST=LDA-IDA+1
      INTDA=IDA
      INTHR=(IDA-1)*24
C
C  BEGIN DAILY LOOP
C
200   DO 400 II=1,LAST
C
C  DETERMINE THE LOCATION OF THE FIRST VALUE NEEDED IN THE
C  PX ARRAY, AND THE FIRST VALUE TO BE OUTPUT IN THE
C  RO (AND THE AIS, APIS AND AEIS ARRAYS IF REQUESTED).
C
      LOC=(INTDA-IDADAT)*NPER+1
C
C  DETERMINE THE LOCATION OF TODAYS POTENTIAL EVAPOTRANSPIRATION
C  VALUE IN THE PEV ARRAY.  REMEMBER, THIS IS A 24-HOUR TIME SERIES.
C
      LOCPEV=(INTDA-IDADAT)+1
C
C  CHECK FOR LEAP YEAR
C
      IF(((KYR/4)*4)-KYR)207,206,207
206   MODA(2)=29
C
C  DETERMINE THE MONTH, DAY AND YEAR FOR THE NEXT DATE
C  TO BE CALCULATED.
C
207   IF(KDA-MODA(KMO))208,209,209
208   NMO=KMO
      NDA=KDA+1
      NYR=KYR
      GO TO 230
209   IF(KMO-12)210,211,211
210   NMO=KMO+1
      NDA=1
      NYR=KYR
      GO TO 230
211   NMO=1
      NDA=1
      NYR=KYR+1
C
C  CALCULATE TODAYS AEI.
C
230   TAEI=YAEI*0.985+(PEV(LOCPEV)*FIXPEV)/25.4
C
C  CHECK FOR AEI CORRECTION TO BE APPLIED TO CURRENT COMPUTATIONAL
C  DAY.  IF ALL CORRECTIONS PASSED IN COMMON BLOCK MOD135 HAVE
C  BEEN CHECKED, OR CORRECTION IS FOR FORECAST DAY, SKIP CHECK.
C
      IF(ICAEI-NDT35)232,232,236
232   IF((IDT35(ICAEI)*24)-(LDACPD*24+LHRCPD))233,233,236
233   IF(IDT35(ICAEI)-(INTDA+1))236,234,236
234   TAEI=VAL35(ICAEI)
      ICAEI=ICAEI+1
C
C  CHECK TO MAKE SURE AEI VALUE IS WITHIN VALID RANGE.
C
236   IF(TAEI-AEIWET)5237,238,238
238   IF(TAEI-AEIDRY)250,250,5238
C
C  CONVERT TODAYS NPER PERIODS OF RAIN/MELT FROM METRIC
C  INTO ENGLISH.
C
250   DO 255 I=1,NPER
        J=LOC+I-1
        PXX(I)=PX(J)/25.4
255   CONTINUE
      DRAIM=0.0
      DRO=0.0
      IF(IFDEB)260,260,4260
C
C  LOOP THROUGH EACH PERIOD OF THE DAY.
C
260   DO 330 I=1,NPER
C
C  FIRST, UPDATE THE HOUR OF THIS PERIOD.
C
        INTHR=INTHR+IDELTA
C
C  UPDATE TODAYS TOTAL RAIN/MELT.
C
        DRAIM=DRAIM+PXX(I)
C
C  UPDATE THE API FOR THIS PERIOD.
C
        RP=(I*IDELTA)/24.
        REC=R24**RP
        CAPI=YAPI*REC+DRAIM
C
C  CHECK FOR API CORRECTION TO BE APPLIED TO CURRENT COMPUTATIONAL HOUR.
C
C  IF ALL CORRECTIONS PASSED IN COMMON BLOCK MOD129 HAVE
C  BEEN CHECKED, OR IF CORRECTION IS FOR FORECAST DAY, SKIP CHECK.
C
261     IF(ICAPI-NDT29)262,262,268
262     IF(IDT29(ICAPI)-((LDACPD-1)*24+LHRCPD))263,263,268
263     IF(IDT29(ICAPI)-INTHR)268,264,268
264     CAPI=VAL29(ICAPI)
        ICAPI=ICAPI+1
C
C  RETROFIT YAPI BASED ON THIS MOD CORRECTION
C
        YAPI=(CAPI-DRAIM)/REC
C
C
C  CAPI MUST LIE BETWEEN 0.00 AND 15.00 INCLUSIVELY.
C
268     IF(CAPI-15.00)269,269,5268
269     IF(0.00-CAPI)270,270,5269
C
C  UPDATE RNSP ARRAY WITH RAIN/MELT FROM THIS PERIOD.
C
270     IF(NSPER-1)273,273,271
271     DO 272 III=2,NSPER
272     RNSP(III-1)=RNSP(III)
273     RNSP(NSPER)=PXX(I)
C
C  CHECK TO SEE IF A STORM BREAK HAS OCCURRED.
C
        RNS=0.0
        IF(NSPER-1)280,280,275
275     DO 277 III=1,NSPER
277     RNS=RNS+RNSP(III)
        GO TO 285
280     RNS=RNSP(NSPER)
285     IF(PMAX-RNS)290,295,295
C
C  IF NO STORM BREAK, STORM VARIABLES DON'T CHANGE.
C  CALCULATE RUNOFF (IF ANY) WITH PREVIOUS STORM VARIABLES.
C
290     IF(PXX(I))292,292,300
292     ROX(I)=0.0
        GO TO 320
C
C  IF THERE IS A STORM BREAK, UPDATE STORM VARIABLES
C  AND CALCULATE RUNOFF (IF ANY) WITH THESE NEW VARIABLES.
C
295     SRO=0.0
        SRAIM=0.0
        SAPI=CAPI
        SAEI=TAEI
        CALL HARSQ(AEIWET,BWET,CWET,AEIDRY,BDRY,CDRY,SAPI,SAEI,SAI)
        IF(PXX(I))299,299,300
299     ROX(I)=0.0
        GO TO 320
C
C  SINCE THERE IS RUNOFF, UPDATE STORM RAINFALL, CALCULATE
C  TOTAL STORM RUNOFF SO FAR, AND RUNOFF FOR THIS PERIOD.
C
300     SRAIM=SRAIM+PXX(I)
        CALL HARPQ(PA,PB,PC,PD,PE,SAI,SRAIM,RUNOFF)
        IF(RUNOFF.LT.0.)RUNOFF=0.
        ROX(I)=RUNOFF-SRO
        SRO=RUNOFF
320     AIX(I)=SAI
        APIX(I)=SAPI
        AEIX(I)=SAEI
        DRO=DRO+ROX(I)
        IF(IFDEB)330,330,4330
330   CONTINUE
C
C  AT THE END OF EACH DAY, UPDATE 12Z CARRYOVER VALUES.
C
      TAPI=CAPI
      CALL HARSQ(AEIWET,BWET,CWET,AEIDRY,BDRY,CDRY,TAPI,TAEI,TAI)
C
C  STORE PERIOD RUNOFF VALUES IN RO ARRAY.
C
335   DO 350 I=1,NPER
        J=LOC+I-1
        RO(J)=ROX(I)*25.4
350   CONTINUE
C
C  IF REQUESTED, STORE PERIOD AI, API AND AEI VALUES
C  IN THE AIS, APIS AND AEIS ARRAYS, RESPECTIVELY.
C
      IF(IOFAAA)358,358,355
355   DO 357 I=1,NPER
        J=LOC+I-1
        APIS(J)=APIX(I)*25.4
        AEIS(J)=AEIX(I)*25.4
        AIS(J)=AIX(I)*25.4
357   CONTINUE
358   IF(IFDEB)359,359,4359
C
C  CHECK TO SEE IF CARRYOVER IS TO BE SAVED FOR CURRENT DATE.
C
359   IF(IFILLC)380,380,360
360   IF(NCSTOR)380,380,361
361   IF(NOC-NCSTOR)362,362,380
362   IF(INTDA-ICDAY(NOC))380,370,380
C
C  IF CARRYOVER IS TO BE SAVED, STORE VALUES IN TEMPORARY
C  ARRAY AND CALL SAVE CARRYOVER ROUTINE.
C
370   CARY(1)=TAPI
      CARY(2)=TAEI
      CARY(3)=TAI
      CARY(4)=SAPI
      CARY(5)=SAEI
      CARY(6)=SAI
      CARY(7)=SRAIM
      CARY(8)=SRO
      CARY(9)=DRAIM
      CARY(10)=DRO
      DO 372 I=1,NSPER
372   CARY(10+I)=RNSP(I)
      CALL FCWTCO(INTDA,24,CARY,IUSEC)
C
C  UPDATE COUNTER FOR NUMBER OF DAYS CARRYOVER HAS BEEN STORED.
C
375   NOC=NOC+1
C
C  CHECK FOR LAST DAY OF RUN
C
380   IF(II-LAST)390,405,405
C
C  IF NEXT DATE IS TO BE PROCESSED, UPDATE INTERNAL DAY COUNTER,
C  MONTH, DAY AND YEAR.  ALSO, RESET YESTERDAYS AEI AND API VALUES.
C
390   INTDA=INTDA+1
      KMO=NMO
      KDA=NDA
      KYR=NYR
      MODA(2)=28
      YAEI=TAEI
      YAPI=TAPI
400   CONTINUE
405   IF(IFDEB)410,410,4405
C
C  IF LAST DATE HAS BEEN PROCESSED, CHECK TO SEE IF CARRYOVER
C  VALUES SHOULD BE UPDATED IN CO ARRAY.
C
410   IF(IFILLC)450,450,420
420   CO(1)=TAPI
      CO(2)=TAEI
      CO(3)=TAI
      CO(4)=SAPI
      CO(5)=SAEI
      CO(6)=SAI
      CO(7)=SRAIM
      CO(8)=SRO
      CO(9)=DRAIM
      CO(10)=DRO
      DO 425 I=1,NSPER
425   CO(10+I)=RNSP(I)
C
C  CHECK TO SEE IF AEI OR API VALUES HAVE EXCEEDED LEGAL BOUNDS.
C  IF SO, PRINT OUT WARNING MESSAGES.
C
450   IF(NAEIBW-1)455,5450,5450
455   IF(NAEITD-1)470,5455,5455
470   IF(NAPIT-1)475,5470,5470
475   IF(NAPIB-1)500,5475,5475
C
C  CHECK TO SEE IF REQUESTED AEI OR API MOD CORRECTIONS HAVE BEEN MADE.
C
500   IF(ICAEI-NDT35)5500,5500,510
510   IF(ICAPI-NDT29)5510,5510,9999
C
C#######################################################################
C
C  DEBUG WRITE STATEMENTS
C
C#######################################################################
C
4050  WRITE(IODBUG,8050)SUBNAM,IVERS
      WRITE(IODBUG,8060)
      WRITE(IODBUG,8061)IDARUN
      WRITE(IODBUG,8062)IHRRUN
      WRITE(IODBUG,8063)LDARUN
      WRITE(IODBUG,8064)LHRRUN
      WRITE(IODBUG,8065)LDACPD
      WRITE(IODBUG,8066)LHRCPD
      WRITE(IODBUG,8067)NOW(1)
      WRITE(IODBUG,8068)NOW(2)
      WRITE(IODBUG,8069)NOW(3)
      WRITE(IODBUG,8070)NOW(4)
      WRITE(IODBUG,8071)NOW(5)
      WRITE(IODBUG,8072)LOCAL
      WRITE(IODBUG,8073)NOUTZ
      WRITE(IODBUG,8074)NOUTDS
      WRITE(IODBUG,8075)NLSTZ
      WRITE(IODBUG,8076)IDA
      WRITE(IODBUG,8077)IHR
      WRITE(IODBUG,8078)LDA
      WRITE(IODBUG,8079)LHR
      WRITE(IODBUG,8080)IDADAT
      WRITE(IODBUG,8090)
      DO 4095 I=1,NWD1
        X1=PX(I)/25.4
4095  WRITE(IODBUG,8095)I,X1
      WRITE(IODBUG,8100)
      DO 4105 I=1,NWD2
        X1=PEV(I)/25.4
4105  WRITE(IODBUG,8105)I,X1
      WRITE(IODBUG,8150)
      WRITE(IODBUG,8151)RID,RNAME,IRNUM,RLAT,RLNG
      WRITE(IODBUG,8152)AEIWET,BWET,CWET,AEIDRY,BDRY,CDRY
      WRITE(IODBUG,8153)PA,PB,PC,PD,PE
      WRITE(IODBUG,8154)FIXPEV,PMAX,R24,IDELTA,NSW,NSPER,IUSEC,IOFAAA
      WRITE(IODBUG,8155)
      WRITE(IODBUG,8156)YAPI,YAEI,YAI,SAPI,SAEI,SAI,SRAIM,SRO,DRAIM,DRO
      WRITE(IODBUG,8157)
      WRITE(IODBUG,8158)(I,RNSP(I),I=1,NSPER)
      WRITE(IODBUG,8170)
      WRITE(IODBUG,8171)IFILLC,NCSTOR
      WRITE(IODBUG,8172)
      DO 4175 I=1,20
4175  WRITE(IODBUG,8175)I,ICDAY(I),ICHOUR(I)
      WRITE(IODBUG,8180)
      WRITE(IODBUG,8181)NDT29
      WRITE(IODBUG,8182)
      DO 4185 I=1,5
4185  WRITE(IODBUG,8185)I,IDT29(I),VAL29(I)
      WRITE(IODBUG,8190)
      WRITE(IODBUG,8191)NDT35
      WRITE(IODBUG,8192)
      DO 4195 I=1,5
4195  WRITE(IODBUG,8195)I,IDT35(I),VAL35(I)
      GO TO 150
4260  WRITE(IODBUG,8260)II,KMO,KDA,KYR,LOC,LOCPEV
      WRITE(IODBUG,8262)
      GO TO 260
4330  WRITE(IODBUG,8330)I,PXX(I),CAPI,TAEI,SAPI,SAEI,SAI,
     1                  SRAIM,SRO,ROX(I)
      GO TO 330
4359  WRITE(IODBUG,8359)II
      WRITE(IODBUG,8360)TAPI,TAEI,TAI,SAPI,SAEI,SAI,SRAIM,SRO,DRAIM,DRO
      WRITE(IODBUG,8361)(RNSP(I),I=1,NSPER)
      GO TO 359
4405  WRITE(IODBUG,8405)
      DO 4409 I=1,NWD1
        X1=PX(I)/25.4
        X2=RO(I)/25.4
        IF(IOFAAA)4408,4408,4407
4407    X3=AIS(I)/25.4
        X4=APIS(I)/25.4
        X5=AEIS(I)/25.4
        GO TO 4409
4408    X3=-99.99
        X4=-99.99
        X5=-99.99
4409    WRITE(IODBUG,8409)I,X1,X2,X3,X4,X5
        GO TO 410
C
C#######################################################################
C
C  ERROR AND WARNING PROCEDURES AND WRITE STATEMENTS
C
C#######################################################################
C
5237  NAEIBW=NAEIBW+1
      TAEI=AEIWET
      GO TO 250
5238  NAEITD=NAEITD+1
      TAEI=AEIDRY
      GO TO 250
5268  NAPIT=NAPIT+1
      CAPI=15.00
      GO TO 270
5269  NAPIB=NAPIB+1
      CAPI=0.00
      GO TO 270
5450  WRITE(IPR,9450)AEIWET,NAEIBW,AEIWET
      CALL WARN
      GO TO 455
5455  WRITE(IPR,9455)AEIDRY,NAEITD,AEIDRY
      CALL WARN
      GO TO 470
5470  WRITE(IPR,9470)NAPIT
      CALL WARN
      GO TO 475
5475  WRITE(IPR,9475)NAPIB
      CALL WARN
      GO TO 500
5500  WRITE(IPR,9500)
      CALL WARN
      GO TO 510
5510  WRITE(IPR,9510)
      CALL WARN
      GO TO 9999
C
C#######################################################################
C
C  DEBUG FORMAT STATEMENTS
C
C#######################################################################
C
8050  FORMAT(//5X,2A4,'DEBUG OUTPUT.',5X,'VERSION: ',I4)
8060  FORMAT(//,2X,'THE FOLLOWING TIME VARIABLES WERE RECEIVED BY ',
     1      'THE EX41 ROUTINE VIA THE FCTIME COMMON BLOCK:',
     2      //,7X,'NAME',6X,'DESCRIPTION',50X,'DAY/HOUR')
8061  FORMAT(7X,'IDARUN    INITIAL DAY OF THE ENTIRE RUN',
     1      33X,I6)
8062  FORMAT(7X,'IHRRUN    INITIAL HOUR OF THE ENTIRE RUN (INTERNAL ',
     1      'CLOCK)',15X,I6)
8063  FORMAT(7X,'LDARUN    LAST DAY OF THE ENTIRE RUN',36X,I6)
8064  FORMAT(7X,'LHRRUN    LAST HOUR OF THE ENTIRE RUN (INTERNAL ',
     1      'CLOCK)',18X,I6)
8065  FORMAT(7X,'LDACPD    LAST DAY WITH OBSERVED DATA',35X,I6)
8066  FORMAT(7X,'LHRCPD    LAST HOUR WITH OBSERVED DATA (INTERNAL ',
     1      'CLOCK)',17X,I6)
8067  FORMAT(7X,'NOW(1)    CURRENT MONTH FROM COMPUTERS CLOCK',
     1      30X,I4)
8068  FORMAT(7X,'NOW(2)    CURRENT DAY FROM COMPUTERS CLOCK',
     1      32X,I4)
8069  FORMAT(7X,'NOW(3)    CURRENT YEAR FROM COMPUTERS CLOCK',
     1      31X,I4)
8070  FORMAT(7X,'NOW(4)    CURRENT HOUR AND MINUTE FROM COMPUTERS ',
     1      'CLOCK',20X,I4)
8071  FORMAT(7X,'NOW(5)    CURRENT SECOND AND MILLISECOND FROM ',
     1      'COMPUTERS CLOCK',13X,I4)
8072  FORMAT(7X,'LOCAL     HOUR OFFSET TO LOCAL TIME',39X,I4)
8073  FORMAT(7X,'NOUTZ     DEFAULT TIME ZONE NUMBER',40X,I4)
8074  FORMAT(7X,'NOUTDS    DEFAULT DAYLIGHT SAVINGS TIME SWITCH',
     1      28X,I4)
8075  FORMAT(7X,'NLSTZ     TIME ZONE NUMBER OF LOCAL STANDARD TIME ',
     1      24X,I4)
8076  FORMAT(7X,'IDA       FIRST DAY TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE ',9X,I6,/,17X,'OPERATIONS TABLE')
8077  FORMAT(7X,'IHR       FIRST HOUR TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',11X,I4,/,17X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8078  FORMAT(7X,'LDA       LAST DAY TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',11X,I6,/,17X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8079  FORMAT(7X,'LHR       LAST HOUR TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',10X,I6,/,17X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8080  FORMAT(7X,'IDADAT    FIRST DAY OF TIME SERIES DATA',
     1      33X,I6)
8090  FORMAT(////4X,'THE FOLLOWING PX TIME SERIES DATA WAS ',
     1      'RECEIVED BY THE EX41 ROUTINE:',//24X,
     2      'PERIOD',9X,'PX',/36X,'(INCHES)',/)
8095  FORMAT(25X,I4,8X,F5.2)
8100  FORMAT(////2X,'THE FOLLOWING PEV TIME SERIES DATA WAS ',
     1      'RECEIVED BY THE EX41 ROUTINE:',//29X,'DAY        ',
     2      'PEV',/37X,'(INCHES)')
8105  FORMAT(28X,I4,6X,F5.2)
8150  FORMAT(////4X,'THE FOLLOWING PARAMETRIC DATA WAS RECEIVED BY ',
     1      'THE EX41 ROUTINE:')
8151  FORMAT(/25X,'RID   = ',2A4,/25X,'RNAME = ',5A4,
     1      /25X,'IRNUM = ',I4,/25X,'RLAT  = ',F5.2,
     2      /25X,'RLNG  = ',F5.2)
8152  FORMAT(/25X,'AEIWET = ',F6.2,/25X,'BWET   = ',F6.2,
     1       /25X,'CWET   = ',F6.2,/25X,'AEIDRY = ',F6.2,
     2       /25X,'BDRY   = ',F6.2,/25X,'CDRY   = ',F6.2)
8153  FORMAT(/25X,'PA = ',F6.2,/25X,'PB = ',F6.2,/25X,'PC = ',F6.2,
     1       /25X,'PD = ',F6.2,/25X,'PE = ',F6.2)
8154  FORMAT(/25X,'FIXPEV = ',F6.2,/25X,'PMAX   = ',F6.2,
     1       /25X,'R24    = ',F6.2,/25X,'IDELTA = ',I6,
     2       /25X,'NSW    = ',I6,/25X,'NSPER  = ',I6,
     3       /25X,'IUSEC  = ',I6,/25X,'IOFAAA = ',I6)
8155  FORMAT(////4X,'THE FOLLOWING CARRYOVER DATA WAS RECEIVED ',
     1      'BY THE EX41 ROUTINE:')
8156  FORMAT(/28X,'YAPI  = ',F5.2,/28X,'YAEI  = ',F5.2,
     1      /28X,'YAI   = ',F5.2,/28X,'SAPI  = ',F5.2,
     2      /28X,'SAEI  = ',F5.2,/28X,'SAI   = ',F5.2,
     3      /28X,'SRAIM = ',F5.2,/28X,'SRO   = ',F5.2,
     4      /28X,'DRAIM = ',F5.2,/28X,'DRO   = ',F5.2)
8157  FORMAT(/29X,'I',4X,'RNSP(I)')
8158  FORMAT(24(27X,I4,4X,F5.2,/))
8170  FORMAT(////4X,'THE FOLLOWING CARRYOVER SAVE PARAMETERS WERE ',
     1      'RECEIVED BY THE EX41 ROUTINE VIA THE FCARY COMMON BLOCK:')
8171  FORMAT(30X,'IFILLC = ',I4,/30X,'NCSTOR = ',I4,/)
8172  FORMAT(23X,'I    ICDAY(I)   ICHOUR(I)')
8175  FORMAT(21X,I4,4X,I6,5X,I6)
8180  FORMAT(////4X,'THE FOLLOWING API MOD PARAMETERS WERE RECEIVED ',
     1      'BY THE EX41 ROUTINE VIA THE MOD129 COMMON BLOCK:')
8181  FORMAT(30X,'NDT29 = ',I4)
8182  FORMAT(23X,'I    IDT29(I)    VAL29(I)')
8185  FORMAT(21X,I4,4X,I6,6X,F5.2)
8190  FORMAT(////4X,'THE FOLLOWING AEI MOD PARAMETERS WERE RECEIVED ',
     1      'BY THE EX41 ROUTINE VIA THE MOD135 COMMON BLOCK:')
8191  FORMAT(30X,'NDT35 = ',I4)
8192  FORMAT(23X,'I    IDT35(I)    VAL35(I)')
8195  FORMAT(21X,I4,4X,I6,6X,F5.2)
8260  FORMAT(/////28X,'CALCULATIONS FOR DAY ',I4,':  ',I2,'/',
     1      I2,'/',I2,//42X,'LOC = ',I4,/41X,'LOCPEV = ',I4,/)
8262  FORMAT(/4X,'PERIOD     PXX        CAPI    TAEI      SAPI    ',
     1      'SAEI    SAI    SRAIM    SRO          ROX')
8330  FORMAT(5X,I4,5X,F5.2,6X,2(F5.2,3X),2X,5(F5.2,3X),5X,F5.2)
8359  FORMAT(/36X,'CARRYOVER FOR DAY ',I4)
8360  FORMAT(9X,'TAPI    TAEI    TAI     SAPI    SAEI    ',
     1      'SAI    SRAIM    SRO    DRAIM    DRO',
     2      /8X,10(F5.2,3X))
8361  FORMAT(8X,'RAIM/MELT FOR EACH PERIOD WITHIN THE NEW STORM ',
     1      'WINDOW (OLDEST PERIOD IS FIRST):  ',
     2      /8X,12(F5.2,3X),/8X,12(F5.2,3X))
8405  FORMAT(////4X,'THE FOLLOWING TIME SERIES DATA WAS PASSED FROM ',
     1      'THE EX41 ROUTINE BACK INTO THE CALLING ROUTINE:',
     2      //15X,'PERIOD      PX          RO        AIS',
     3      '       APIS        AEIS',/24X,'(INCHES)    (INCHES)',
     4      13X,'(INCHES)    (INCHES)')
8409  FORMAT(16X,I4,5X,F5.2,7X,F5.2,5X,F6.2,4X,F6.2,6X,F6.2)
C
C#######################################################################
C
C  ERROR AND WARNING FORMAT STATEMENTS
C
C#######################################################################
C
9450  FORMAT(/10X,'** WARNING ** THE AEI DROPPED BELOW ',F5.2,
     1      ' INCH (LOWER LIMIT ON THE API/AEI/AI CURVE) ',I3,
     2      ' TIME(S)',/24X,'BETWEEN THE BEGINNING AND ENDING ',
     3      'TIME OF THIS RUN.  THE AEI WAS RESET TO ',F5.2,
     4      ' EACH TIME.')
9455  FORMAT(/10X,'** WARNING ** THE AEI EXCEEDED ',F5.2,' INCH ',
     1      '(UPPER LIMIT ON THE API/AEI/AI CURVE) ',I3,' TIME(S)',
     2      /24X,'BETWEEN THE BEGINNING AND ENDING TIME OF THIS RUN.',
     3      '  THE AEI WAS RESET TO ',F5.2,' EACH TIME.')
9470  FORMAT(/10X,'** WARNING ** THE API EXCEEDED 15.00 INCHES ',
     1      I3,' TIME(S) BETWEEN THE BEGINNING AND',/24X,
     2      'ENDING TIME OF THIS RUN.  THE API WAS RESET TO ',
     3      '15.00 EACH TIME.')
9475  FORMAT(/10X,'** WARNING ** THE API DROPPED BELOW 0.00 INCHES ',
     1      I3,' TIME(S) BETWEEN THE BEGINNING AND',/24X,
     2      'ENDING TIME OF THIS RUN.  THE API WAS RESET TO ',
     3      '0.00 EACH TIME.')
9500  FORMAT(/10X,'** WARNING ** THE NUMBER OF AEI CORRECTIONS ',
     1      'REQUESTED IN THE AEICQN MOD HAVE NOT BEEN PERFORMED.',
     2      /24X,'CHECK TO MAKE SURE DATES ENTERED INTO THE AEICQN ',
     3      'MOD ARE VALID.')
9510  FORMAT(/10X,'** WARNING ** THE NUMBER OF API CORRECTIONS ',
     1      'REQUESTED IN THE APICQN MOD HAVE NOT BEEN PERFORMED.',
     2      /24X,'CHECK TO MAKE SURE THE HOURS ENTERED INTO ',
     3      'THE APICQN MOD ARE VALID.')
C
C#######################################################################
C
9999  RETURN
      END
