C MEMBER EX35
C  (from old member FCEX35)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 04/12/95.09:42:44 BY $WC20SV
C
C @PROCESS LVL(77)
C
      SUBROUTINE EX35(PO,CO,PX,RO,PE,FIS,APIS,AEIS)
C
C######################################################################
C
C  THIS ROUTINE EXECUTES THE API - HAR OPERATION.
C
C######################################################################
C  LIST OF VARIABLES:
C
C  NAME    DEFINITION                                 S/D  I/O  UNITS
C  ______  _________________________________________  ___  ___  ________
C  AEIS    AEI TIME SERIES (IF REQUESTED)             TS    O   MM
C  APIS    API TIME SERIES (IF REQUESTED)             TS    O   MM
C  AEIX    ARRAY FOR TEMPORARY STORAGE OF AEI VALUES   L        INCHES
C  APIX    ARRAY FOR TEMPORARY STORAGE OF API VALUES   L        INCHES
C  BLIMS   MIN AEI VALUE ON SUMMER API/AEI/FI CURVE    P    I   INCHES
C  BLIMW   MIN AEI VALUE ON WINTER API/AEI/FI CURVE    P    I   INCHES
C  CAPI    API VALUE FOR THE CURRENT PERIOD            L        INCHES
C  CARY    ARRAY FOR TEMPORARY STORAGE OF CARRYOVER    L
C  CVS     DATA FOR API/AEI/FI SUMMER CURVE           SUB   I
C  CVW     DATA FOR API/AEI/FI WINTER CURVE           SUB   I
C  DRAIM   24 HOUR (DAILY) RAIN/MELT                   C    O   INCHES
C  DRO     24 HOUR (DAILY) RUNOFF                      C    O   INCHES
C  FIS     FI TIME SERIES (IF REQUESTED)              TS    O
C  FIX     ARRAY FOR TEMPORARY STORAGE OF FI VALUES    L
C  ICAEI   AEI MOD CORRECTION COUNTER                  L
C  ICAPI   API MOD CORRECTION COUNTER                  L
C  ICDAY   ARRAY OF DATES TO SAVE CARRYOVER           CM    I   JDAYS
C  IDADAT  FIRST DAY OF DATA IN TIME SERIES           CM    I   JDAYS
C  IDAY    FIRST DAY OF RUN                           CM    I   JDAYS
C  IDELTA  COMPUTATIONAL TIME STEP INTERVAL            P    I   HOURS
C  IDT29   ARRAY OF DATES FOR API CORRECTIONS         CM    I   JHOURS
C  IDT35   ARRAY OF DATES FOR AEI CORRECTIONS         CM    I   JDAYS
C  IFDEB   DEBUG OUTPUT SWITCH (0 OR 1)               SUB   I
C  IFFG    FLASH FLOOD GUIDANCE SWITCH                CM    I
C          0 = NO FFG, 1 = FFG ONLY, 2 = FFG & FCST
C  IFILLC  SAVE CARRYOVER SWITCH (0 OR 1)             CM    I
C  IKRV    SWITCH WHICH DIRECTS THE USE OF EITHER      L
C          THE WINTER OR SUMMER API/AEI/FI CURVES
C          FOR RUNOFF GENERATION
C  INTDA   INTERNAL DAY COUNTER                        L        DAYS
C  INTHR   INTERNAL HOUR COUNTER                       L        HOURS
C  IOFAAA  API/AEI/FI TIME SERIES OUTPUT FLAG          P    I
C  IRNUM   RUNOFF ZONE NUMBER                          P    I
C  IUSEC   NUMBER OF WORDS USED IN THE CO ARRAY        P    I
C  KDA     TODAYS DAY                                  L
C  KDAFFG  COMPUTATIONAL DAY FOR FFG OUTPUT            L
C  KHRFFG  COMPUTATIONAL HOUR FOR FFG OUTPUT           L
C  KMO     TODAYS MONTH                                L
C  KURV    API/AEI/FI CURVE NUMBER                     P    I
C  KYR     TODAYS YEAR                                 L
C  LAST    # OF DAYS FOR WHICH OPERATION IS TO BE RUN  L
C  LDA     LAST DAY OF RUN                            CM    I   JDAYS
C  LOC     ARRAY LOCATION FOR THE CURRENT PERIODS      L
C          RAIM, RO, FI, API & AEI TIME SERIES DATA
C  LOCPE   ARRAY LOCATION FOR THE CURRENT DAYS PE      L
C          TIME SERIES DATA
C  NAEIBS  NUMBER OF TIMES AEI HAS GONE BELOW LOWER    L
C          LIMIT (SUMMER CURVE)
C  NAEIBW  NUMBER OF TIMES AEI HAS GONE BELOW LOWER    L
C          LIMIT (WINTER CURVE)
C  NAEITS  NUMBER OF TIMES AEI HAS TOPPED THE UPPER    L
C          LIMIT (SUMMER CURVE)
C  NAEITW  NUMBER OF TIMES AEI HAS TOPPED THE UPPER    L
C          LIMIT (WINTER CURVE)
C  NAPIT   NUMBER OF TIMES API HAS TOPPED UPPER LIMIT  L
C          (NOW DEFINED AS 60.00)
C  NAPIB   NUMBER OF TIMES API HAS DROPPED BELOW       L
C          LOWER LIMIT (NOW DEFINED AS 0.10)
C  NCSTOR  NUMBER OF DAYS TO STORE CARRYOVER          CM    I
C  NDA     TOMORROWS DAY                               L
C  NDT29   NUMBER OF API CORRECTIONS TO BE MADE       CM    I
C  NDT35   NUMBER OF AEI CORRECTIONS TO BE MADE       CM    I
C  NMO     TOMORROWS MONTH                             L
C  NOC     SAVE CARRYOVER COUNTER                      L
C  NOP     NUMBER ASSIGNED TO THIS OPERATION           P    I
C  NPER    NUMBER OF PERIODS IN A DAY                  P    I
C  NSW     NEW STORM WINDOW                            P    I   HOURS
C  NSPER   NUMBER OF PERIODS IN NSHR                   P    I
C  NWD1    NUMBER OF WORDS USED IN PX, RO, AEIS,       L
C          APIS AND FIS TIME SERIES
C  NWD2    NUMBER OF WORDS USED IN PE TIME SERIES      L
C  NYR     TOMORROWS YEAR                              L
C  PMAX    MAX RAIN/MELT ALLOWED (WITHIN NSW) FOR      P    I
C          A NEW STORM TO BEGIN
C  PE      POTENTIAL ET TIME SERIES                   TS    I   MM
C  PX      RAIN/MELT TIME SERIES                      TS    I   MM
C  PXX     ARRAY FOR TEMPORARY STORAGE OF RAIN/MELT    L        INCHES
C  R24     24 HOUR API RECESSION COEFFICIENT           P    I
C  REC     INCREMENTAL API RECESSION COEFFICIENT       L
C  RFCTR   RUNOFF ADJUSTMENT FACTOR                    P    I
C  RID     RUNOFF ZONE ID                              P    I
C  RLAT    LATITUDE OF RUNOFF ZONE CENTROID            P    I   DEG DEC
C  RLNG    LONGITUDE OF RUNOFF ZONE CENTROID           P    I   DEG DEC
C  RNAME   RUNOFF ZONE NAME                            P    I
C  RNS     TOTAL RAIN/MELT WITHIN NEW STORM WINDOW     L        INCHES
C  RNSP    RAIN/MELT FOR EACH PERIOD WITHIN NEW        C    O   INCHES
C          STORM WINDOW
C  RO      GENERATED RUNOFF TIME SERIES               TS    O   MM
C  ROX     ARRAY FOR TEMPORARY STORAGE OF RUNOFF       L        INCHES
C  RUNOFF  GENERATED RUNOFF USING TOTAL STORM          L        INCHES
C          RAIN/MELT
C  SAEI    CURRENT STORM AEI VALUE                     C   I,O  INCHES
C  SAPI    CURRENT STORM API VALUE                     C   I,O  INCHES
C  SFI     CURRENT STORM FI VALUE                      C   I,O
C  SRAIM   CURRENT STORM RAIN/MELT                     C   I,O  INCHES
C  SRO     CURRENT STORM RUNOFF                        C   I,O  INCHES
C  TAEI    AEI VALUE AT 12Z TODAY                      C    O   INCHES
C  TAPI    API VALUE AT 12Z TODAY                      C    O   INCHES
C  TFI     FI VALUE AT 12Z TODAY                       C    O
C  ULIMS   MAX AEI VALUE ON SUMMER API/AEI/FI CURVE    P    I   INCHES
C  ULIMW   MAX AEI VALUE ON WINTER API/AEI/FI CURVE    P    I   INCHES
C  VAL29   ARRAY OF API CORRECTIONS                   CM    I   INCHES
C  VAL35   ARRAY OF AEI CORRECTIONS                   CM    I   INCHES
C  YAEI    YESTERDAYS 12Z AEI VALUE                    C    I   INCHES
C  YAPI    YESTERDAYS 12Z API VALUE                    C    I   INCHES
C  YFI     YESTERDAYS 12Z FI VALUE                     C    I
C
C
C       ABBREVIATIONS:
C
C          S/D = SOURCE/DESTINATION
C
C             TS = TIME SERIES
C             C  = CARRYOVER
C             P  = PARAMETRIC
C             L  = LOCAL
C             SUB = ROUTINE
C             CM = COMMON BLOCK
C
C
C          I/O = INPUT/OUTPUT
C
C             I  = INPUT
C             O  = OUTPUT
C
C
C#######################################################################
C  INITIALLY WRITTEN BY
C        MARFC
C  MODIFIED CARRYOVER SAVE FOR FLASH FLOOD GUIDANCE OPERATION
C      TIM SWEENEY, HRL - NOV 1993                       VERSION 1.01
C
C  CHANGED DEBUG LOGIC FOR FFG OPERATION
C      TIM SWEENEY, HRL - JAN 1995                       VERSION 2
C.......................................................................
C
      DIMENSION PO(*),CO(*),PX(*),RO(*),PE(*),FIS(*),APIS(*),AEIS(*),
     1          CARY(34),RNAME(5),RID(2),SUBNAM(2),MODA(12),
     2          PXX(24),ROX(24),FIX(24),APIX(24),AEIX(24)
      DIMENSION CVW(72),CVS(72),RNSP(24)
      COMMON /FDBUG/ IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON /FCTIME/ IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     1                NOW(5),LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,
     2                LDA,LHR,IDADAT
      COMMON /FCARY/ IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      INCLUDE 'common/ffgctl'
      COMMON/IONUM/ IN,IPR,IPU
      COMMON /MOD129/ NDT29,IDT29(5),VAL29(5)
      COMMON /MOD135/ NDT35,IDT35(5),VAL35(5)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_api/RCS/ex35.f,v $
     . $',                                                             '
     .$Id: ex35.f,v 1.1 1995/09/17 18:57:07 dws Exp $
     . $' /
C    ===================================================================
C
      DATA SUBNAM /4HEX35,4H    /,NOP/35/
      DATA MODA /31,28,31,30,31,30,31,31,30,31,30,31/
C
C  CALL DEBUG CHECK ROUTINE
C
      CALL FPRBUG(SUBNAM,1,NOP,IFDEB)
C
C  INITIALIZE COUNTER FOR THE NUMBER OF DAYS CARRYOVER
C  IS BEING SAVED.  THIS COUNTER IS INCREMENTED BY 1 EACH
C  DAY CARRYOVER IS SAVED.  ALSO, INITIALIZE
C  THE COUNTERS FOR THE AEI AND API MOD CORRECTIONS, AND FOR
C  AEI AND API ERROR COUNTERS.
C
C
      NOC=1
      ICAEI=1
      ICAPI=1
      NAEIBS=0
      NAEIBW=0
      NAEITS=0
      NAEITW=0
      NAPIT=0
      NAPIB=0
C
C  SELECT REQUIRED VARIABLES FROM THE PO AND CO ARRAYS.
C
      IVERS=PO(1)
      RID(1)=PO(2)
      RID(2)=PO(3)
      DO 100 I=1,5
100   RNAME(I)=PO(I+3)
      IRNUM=PO(9)
      RLAT=PO(10)
      RLNG=PO(11)
      RFCTR=PO(12)
      R24=PO(13)
      PMAX=PO(14)
      ULIMW=PO(15)
      BLIMW=PO(16)
      ULIMS=PO(17)
      BLIMS=PO(18)
      KURV=PO(19)
      IDELTA=PO(20)
      NSW=PO(21)
      NSPER=PO(22)
      IUSEC=PO(23)
      IOFAAA=PO(24)
      YAPI=CO(1)
      YAEI=CO(2)
      YFI=CO(3)
      SAPI=CO(4)
      SAEI=CO(5)
      SFI=CO(6)
      SRAIM=CO(7)
      SRO=CO(8)
      DO 125 I=1,NSPER
125   RNSP(I)=CO(10+I)
      NPER=24/IDELTA
      IF(IFDEB)130,130,4050
C
C  CALCULATE THE NUMBER OF WORDS USED IN THE TIME SERIES
C  PASSED INTO THIS ROUTINE.
C
130   NWD1=(LDA-IDADAT+1)*24/IDELTA
      NWD2=(LDA-IDADAT+1)
C
C  READ IN THE API/AEI/FI CURVES.  PLACE THE WINTER CURVE
C  INTO ARRAY CVW AND THE SUMMER CURVE INTO ARRAY CVS.
C
      CALL FIW35(KURV,CVW)
      CALL FIS35(KURV,CVS)
      IF(IFDEB)150,150,4060
C
C  CALL ROUTINE TO GET MONTH, DAY AND YEAR FOR FIRST DATE
C  BEING RUN.  SET THE NUMBER OF DAYS FOR THE RUN AND
C  INITIALIZE THE INTERNAL DAY COUNTER AND THE INTERNAL HOUR COUNTER.
C
150   CALL MDYH1(IDA,0,KMO,KDA,KYR,KHR,NLSTZ,0,TZ)
      KYR=KYR-((KYR/100)*100)
      LAST=LDA-IDA+1
      INTDA=IDA
      INTHR=(IDA-1)*24
C
C  CALCULATE COMPUTATIONAL PERIOD AT OR JUST BEFORE LSTCMPDY
C
      IF(IFDEB.GT.0) GOTO 4230
  190 IF(IFFG.EQ.0) GOTO 200
      KDAFFG = LDACPD
      KHRFFG = (LHRCPD/IDELTA)*IDELTA
      IF(KHRFFG.GT.0) GOTO 192
      KDAFFG = KDAFFG - 1
      KHRFFG = 24
192   IF(IFDEB.GT.0) GOTO 4240
C
C  BEGIN DAILY LOOP
C
200   DO 400 II=1,LAST
C
C  DETERMINE THE LOCATION OF THE FIRST VALUE NEEDED IN THE
C  PX ARRAY, AND THE FIRST VALUE TO BE OUTPUT IN THE
C  RO (AND THE FIS, APIS AND AEIS ARRAYS IF REQUESTED).
C
      LOC=(INTDA-IDADAT)*NPER+1
C
C  DETERMINE THE LOCATION OF TODAYS POTENTIAL EVAPOTRANSPIRATION
C  VALUE IN THE PE ARRAY.  REMEMBER, THIS IS A 24-HOUR TIME SERIES.
C
      LOCPE=(INTDA-IDADAT)+1
C
C  CHECK FOR LEAP YEAR
C
      IF(((KYR/4)*4)-KYR)207,206,207
206   MODA(2)=29
C
C  DETERMINE THE MONTH, DAY AND YEAR FOR THE NEXT DATE
C  TO BE CALCULATED.
C
207   IF(KDA-MODA(KMO))208,209,209
208   NMO=KMO
      NDA=KDA+1
      NYR=KYR
      GO TO 230
209   IF(KMO-12)210,211,211
210   NMO=KMO+1
      NDA=1
      NYR=KYR
      GO TO 230
211   NMO=1
      NDA=1
      NYR=KYR+1
C
C  DETERMINE WHICH OF THE API/AEI/FI SET OF CURVES (WINTER OR SUMMER)
C  IS NEEDED FOR THE NEXT DAYS FI CALCULATIONS.  IF SUMMER
C  CURVES ARE NEEDED, IKRV SWITCH IS SET TO 1.  IF WINTER
C  CURVES ARE NEEDED, IKRV SWITCH IS SET TO 0.  NOTE:  WINTER
C  CURVES ARE VALID FROM AUGUST 6 THROUGH FEBRUARY 1
C  (DAYS 218 THROUGH 32).  SUMMER CURVES ARE VALID FROM
C  FEBRUARY 2 THROUGH AUGUST 5 (DAYS 33 THROUGH 217).
C
230   IKRV=0
      IF(((NMO.GE.3).AND.(NMO.LT.8)).OR.((NMO.EQ.8).AND.(NDAY.LT.6))
     1.OR.((NMO.EQ.2).AND.(NDAY.GT.1)))IKRV=1
C
C  CALCULATE TODAYS AEI.
C
      TAEI=YAEI*0.98+PE(LOCPE)/25.4
C
C  CHECK FOR AEI CORRECTION TO BE APPLIED TO CURRENT COMPUTATIONAL
C  DAY.  IF ALL CORRECTIONS PASSED IN COMMON BLOCK MOD135 HAVE
C  BEEN CHECKED, OR CORRECTION IS FOR FORECAST DAY, SKIP CHECK.
C
      IF(ICAEI-NDT35)232,232,236
232   IF((IDT35(ICAEI)*24)-(LDACPD*24+LHRCPD))233,233,236
233   IF(IDT35(ICAEI)-(INTDA+1))236,234,236
234   TAEI=VAL35(ICAEI)
      ICAEI=ICAEI+1
C
C  CHECK TO MAKE SURE AEI VALUE IS WITHIN VALID RANGE.
C
236   IF(IKRV)237,237,243
237   IF(TAEI-BLIMW)5237,238,238
238   IF(TAEI-ULIMW)250,250,5238
243   IF(TAEI-BLIMS)5243,244,244
244   IF(TAEI-ULIMS)250,250,5244
C
C  CONVERT TODAYS NPER PERIODS OF RAIN/MELT FROM METRIC
C  INTO ENGLISH.
C
250   DO 255 I=1,NPER
        J=LOC+I-1
        PXX(I)=PX(J)/25.4
255   CONTINUE
      DRAIM=0.0
      DRO=0.0
      IF(IFDEB)260,260,4260
C
C  LOOP THROUGH EACH PERIOD OF THE DAY.
C
260   DO 330 I=1,NPER
C
C  FIRST, UPDATE THE HOUR OF THIS PERIOD.
C
        INTHR=INTHR+IDELTA
C
C  UPDATE TODAYS TOTAL RAIN/MELT.
C
        DRAIM=DRAIM+PXX(I)
C
C  UPDATE THE API FOR THIS PERIOD.
C
        RP=(I*IDELTA)/24.
        REC=R24**RP
        CAPI=YAPI*REC+DRAIM
C
C  CHECK FOR API CORRECTION TO BE APPLIED TO CURRENT COMPUTATIONAL HOUR.
C
C  IF ALL CORRECTIONS PASSED IN COMMON BLOCK MOD129 HAVE
C  BEEN CHECKED, OR IF CORRECTION IS FOR FORECAST DAY, SKIP CHECK.
C
        IF(ICAPI-NDT29)262,262,268
262     IF(IDT29(ICAPI)-((LDACPD-1)*24+LHRCPD))263,263,268
263     IF(IDT29(ICAPI)-INTHR)268,264,268
264     CAPI=VAL29(ICAPI)
        ICAPI=ICAPI+1
C
C  RETROFIT YAPI BASED ON THIS MOD CORRECTION
C
        YAPI=(CAPI-DRAIM)/REC
C
C
C  CAPI MUST LIE BETWEEN 0.10 AND 60.00 INCLUSIVELY.
C
268     IF(CAPI-60.00)269,269,5268
269     IF(0.10-CAPI)270,270,5269
C
C  UPDATE RNSP ARRAY WITH RAIN/MELT FROM THIS PERIOD.
C
270     IF(NSPER-1)273,273,271
271     DO 272 III=2,NSPER
272     RNSP(III-1)=RNSP(III)
273     RNSP(NSPER)=PXX(I)
C
C  CHECK TO SEE IF A STORM BREAK HAS OCCURRED.
C
        RNS=0.0
        IF(NSPER-1)280,280,275
275     DO 277 III=1,NSPER
277     RNS=RNS+RNSP(III)
        GO TO 285
280     RNS=RNSP(NSPER)
285     IF(PMAX-RNS)290,295,295
C
C  IF NO STORM BREAK, STORM VARIABLES DON'T CHANGE.
C  CALCULATE RUNOFF (IF ANY) WITH PREVIOUS STORM VARIABLES.
C
290     IF(PXX(I))292,292,300
292     ROX(I)=0.0
        GO TO 320
C
C  IF THERE IS A STORM BREAK, UPDATE STORM VARIABLES
C  AND CALCULATE RUNOFF (IF ANY) WITH THESE NEW VARIABLES.
C
295     SRO=0.0
        SRAIM=0.0
        SAPI=CAPI
        SAEI=TAEI
        IF(IKRV-1)296,297,297
296     SFI=FI35(CVW,SAPI,SAEI)
        GO TO 298
297     SFI=FI35(CVS,SAPI,SAEI)
298     IF(PXX(I))299,299,300
299     ROX(I)=0.0
        GO TO 320
C
C  SINCE THERE IS RUNOFF, UPDATE STORM RAINFALL, CALCULATE
C  TOTAL STORM RUNOFF SO FAR, AND RUNOFF FOR THIS PERIOD.
C
300     SRAIM=SRAIM+PXX(I)
310     CALL RO35(SFI,SRAIM,RUNOFF)
        ROX(I)=RUNOFF-SRO
        SRO=RUNOFF
        IF(RFCTR.GT.0.0)ROX(I)=RFCTR*ROX(I)
320     FIX(I)=SFI
        APIX(I)=SAPI
        AEIX(I)=SAEI
        DRO=DRO+ROX(I)
        IF(IFDEB.GT.0) GOTO 4330
C
C  SAVE CARRYOVER AT LSTCMPDY FOR FFG
C
325   IF(IFFG.EQ.0) GOTO 330
      KH = I*IDELTA
      IF(INTDA.EQ.KDAFFG.AND.KH.EQ.KHRFFG) THEN
        CO(1)  = YAPI
        CO(2)  = YAEI
        CO(3)  = YFI
        CO(4)  = SAPI
        CO(5)  = SAEI
        CO(6)  = SFI
        CO(7)  = SRAIM
        CO(8)  = SRO
        CO(9)  = DRAIM
        CO(10) = DRO
        DO 328 J=1,NSPER
328     CO(10+J) = RNSP(J)
        IF(IFDEB.GT.0) GOTO 4340
329     CONTINUE
      ENDIF
330   CONTINUE
C
C  AT THE END OF EACH DAY, UPDATE 12Z CARRYOVER VALUES.
C
      TAPI=CAPI
      IF(IKRV-1)331,332,332
331   TFI=FI35(CVW,TAPI,TAEI)
      GO TO 335
332   TFI=FI35(CVS,TAPI,TAEI)
C
C  STORE PERIOD RUNOFF VALUES IN RO ARRAY.
C
335   DO 350 I=1,NPER
        J=LOC+I-1
        RO(J)=ROX(I)*25.4
350   CONTINUE
C
C  IF REQUESTED, STORE PERIOD FI, API AND AEI VALUES
C  IN THE FIS, APIS AND AEIS ARRAYS, RESPECTIVELY.
C
      IF(IOFAAA)358,358,355
355   DO 357 I=1,NPER
        J=LOC+I-1
        APIS(J)=APIX(I)*25.4
        AEIS(J)=AEIX(I)*25.4
        FIS(J)=FIX(I)
357   CONTINUE
358   IF(IFDEB)359,359,4359
C
C  CHECK TO SEE IF CARRYOVER IS TO BE SAVED FOR CURRENT DATE.
C
359   IF(IFILLC)380,380,360
360   IF(NCSTOR)380,380,361
361   IF(NOC-NCSTOR)362,362,380
362   IF(INTDA-ICDAY(NOC))380,370,380
C
C  IF CARRYOVER IS TO BE SAVED, STORE VALUES IN TEMPORARY
C  ARRAY AND CALL SAVE CARRYOVER ROUTINE.
C
370   CARY(1)=TAPI
      CARY(2)=TAEI
      CARY(3)=TFI
      CARY(4)=SAPI
      CARY(5)=SAEI
      CARY(6)=SFI
      CARY(7)=SRAIM
      CARY(8)=SRO
      CARY(9)=DRAIM
      CARY(10)=DRO
      DO 372 I=1,NSPER
372   CARY(10+I)=RNSP(I)
      CALL FCWTCO(INTDA,24,CARY,IUSEC)
C
C  UPDATE COUNTER FOR NUMBER OF DAYS CARRYOVER HAS BEEN STORED.
C
      NOC=NOC+1
C
C  CHECK FOR LAST DAY OF RUN
C
380   IF(II-LAST)390,405,405
C
C  IF NEXT DATE IS TO BE PROCESSED, UPDATE INTERNAL DAY COUNTER,
C  MONTH, DAY AND YEAR.  ALSO, RESET YESTERDAYS AEI AND API VALUES.
C
390   INTDA=INTDA+1
      KMO=NMO
      KDA=NDA
      KYR=NYR
      MODA(2)=28
      YAEI=TAEI
      YAPI=TAPI
400   CONTINUE
405   IF(IFDEB)410,410,4405
C
C  IF LAST DATE HAS BEEN PROCESSED, CHECK TO SEE IF CARRYOVER
C  VALUES SHOULD BE UPDATED IN CO ARRAY.
C
410   IF(IFILLC.LE.0) GOTO 450
C  BYPASS CARRYOVER UPDATE IF FFG RUN (IFFG > 0 )
      IF(IFFG.NE.0) GOTO 450
      CO(1)=TAPI
      CO(2)=TAEI
      CO(3)=TFI
      CO(4)=SAPI
      CO(5)=SAEI
      CO(6)=SFI
      CO(7)=SRAIM
      CO(8)=SRO
      CO(9)=DRAIM
      CO(10)=DRO
      DO 425 I=1,NSPER
425   CO(10+I)=RNSP(I)
C
C  CHECK TO SEE IF AEI OR API VALUES HAVE EXCEEDED LEGAL BOUNDS.
C  IF SO, PRINT OUT WARNING MESSAGES.
C
450   IF(NAEIBW-1)455,5450,5450
455   IF(NAEITW-1)460,5455,5455
460   IF(NAEIBS-1)465,5460,5460
465   IF(NAEITS-1)470,5465,5465
470   IF(NAPIT-1)475,5470,5470
475   IF(NAPIB-1)500,5475,5475
C
C  CHECK TO SEE IF REQUESTED AEI OR API MOD CORRECTIONS HAVE BEEN MADE.
C
500   IF(ICAEI-NDT35)5500,5500,510
510   IF(ICAPI-NDT29)5510,5510,9999
C
C#######################################################################
C
C  DEBUG WRITE STATEMENTS
C
C#######################################################################
C
4050  WRITE(IODBUG,8050)SUBNAM,IVERS
      GO TO 130
4060  WRITE(IODBUG,8060)
      WRITE(IODBUG,8061)IDARUN
      WRITE(IODBUG,8062)IHRRUN
      WRITE(IODBUG,8063)LDARUN
      WRITE(IODBUG,8064)LHRRUN
      WRITE(IODBUG,8065)LDACPD
      WRITE(IODBUG,8066)LHRCPD
      WRITE(IODBUG,8067)NOW(1)
      WRITE(IODBUG,8068)NOW(2)
      WRITE(IODBUG,8069)NOW(3)
      WRITE(IODBUG,8070)NOW(4)
      WRITE(IODBUG,8071)NOW(5)
      WRITE(IODBUG,8072)LOCAL
      WRITE(IODBUG,8073)NOUTZ
      WRITE(IODBUG,8074)NOUTDS
      WRITE(IODBUG,8075)NLSTZ
      WRITE(IODBUG,8076)IDA
      WRITE(IODBUG,8077)IHR
      WRITE(IODBUG,8078)LDA
      WRITE(IODBUG,8079)LHR
      WRITE(IODBUG,8080)IDADAT
      WRITE(IODBUG,8090)
      DO 4095 I=1,NWD1
        X1=PX(I)/25.4
4095  WRITE(IODBUG,8095)I,X1
      WRITE(IODBUG,8100)
      DO 4105 I=1,NWD2
        X1=PE(I)/25.4
4105  WRITE(IODBUG,8105)I,X1
      WRITE(IODBUG,8150)
      WRITE(IODBUG,8151)RID,RNAME,IRNUM,RLAT,RLNG
      WRITE(IODBUG,8152)RFCTR,R24,PMAX,ULIMW,BLIMW,ULIMS,BLIMS
      WRITE(IODBUG,8153)KURV,IDELTA,NSW,NSPER,IUSEC,IOFAAA
      WRITE(IODBUG,8155)
      WRITE(IODBUG,8156)YAPI,YAEI,YFI,SAPI,SAEI,SFI,SRAIM,SRO,DRAIM,DRO
      WRITE(IODBUG,8157)
      WRITE(IODBUG,8158)(I,RNSP(I),I=1,NSPER)
      WRITE(IODBUG,8170)
      WRITE(IODBUG,8171)IFILLC,NCSTOR
      WRITE(IODBUG,8172)
      DO 4175 I=1,20
4175  WRITE(IODBUG,8175)I,ICDAY(I),ICHOUR(I)
      WRITE(IODBUG,8180)
      WRITE(IODBUG,8181)NDT29
      WRITE(IODBUG,8182)
      DO 4185 I=1,5
4185  WRITE(IODBUG,8185)I,IDT29(I),VAL29(I)
      WRITE(IODBUG,8190)
      WRITE(IODBUG,8191)NDT35
      WRITE(IODBUG,8192)
      DO 4195 I=1,5
4195  WRITE(IODBUG,8195)I,IDT35(I),VAL35(I)
      GO TO 150
4230  WRITE(IODBUG,8230) IFFG
      GOTO 190
4240  WRITE(IODBUG,8240) KDAFFG,KHRFFG
      GOTO 200
4260  WRITE(IODBUG,8260)II,KMO,KDA,KYR,LOC,LOCPE,IKRV
      WRITE(IODBUG,8262)
      GO TO 260
4330  WRITE(IODBUG,8330)I,PXX(I),CAPI,TAEI,SAPI,SAEI,SFI,
     1                  SRAIM,SRO,ROX(I)
      GO TO 325
4340  WRITE(IODBUG,8340) II,I
      WRITE(IODBUG,8342) (CO(J),J=1,10)
      GOTO 330
4359  WRITE(IODBUG,8359)II
      WRITE(IODBUG,8360)TAPI,TAEI,TFI,SAPI,SAEI,SFI,SRAIM,SRO,DRAIM,DRO
      WRITE(IODBUG,8361)(RNSP(I),I=1,NSPER)
      GO TO 359
4405  WRITE(IODBUG,8405)
      DO 4409 I=1,NWD1
        X1=PX(I)/25.4
        X2=RO(I)/25.4
        IF(IOFAAA)4408,4408,4407
4407    X3=APIS(I)/25.4
        X4=AEIS(I)/25.4
        X5=FIS(I)
        GO TO 4409
4408    X3=-999.
        X4=-999.
        X5=-999.
4409  WRITE(IODBUG,8409)I,X1,X2,X5,X3,X4
      GO TO 410
C
C#######################################################################
C
C  ERROR AND WARNING PROCEDURES AND WRITE STATEMENTS
C
C#######################################################################
C
5237  NAEIBW=NAEIBW+1
      TAEI=BLIMW
      GO TO 250
5238  NAEITW=NAEITW+1
      TAEI=ULIMW
      GO TO 250
5243  NAEIBS=NAEIBS+1
      TAEI=BLIMS
      GO TO 250
5244  NAEITS=NAEITS+1
      TAEI=ULIMS
      GO TO 250
5268  NAPIT=NAPIT+1
      CAPI=60.00
      GO TO 270
5269  NAPIB=NAPIB+1
      CAPI=0.10
      GO TO 270
5450  WRITE(IPR,9450)BLIMW,NAEIBW,BLIMW
      CALL WARN
      GO TO 455
5455  WRITE(IPR,9455)ULIMW,NAEITW,ULIMW
      CALL WARN
      GO TO 460
5460  WRITE(IPR,9460)BLIMS,NAEIBS,BLIMS
      CALL WARN
      GO TO 465
5465  WRITE(IPR,9465)ULIMS,NAEITS,ULIMS
      CALL WARN
      GO TO 470
5470  WRITE(IPR,9470)NAPIT
      CALL WARN
      GO TO 475
5475  WRITE(IPR,9475)NAPIB
      CALL WARN
      GO TO 500
5500  WRITE(IPR,9500)
      CALL WARN
      GO TO 510
5510  WRITE(IPR,9510)
      CALL WARN
      GO TO 9999
C
C#######################################################################
C
C  DEBUG FORMAT STATEMENTS
C
C#######################################################################
C
8050  FORMAT(/5X,2A4,'DEBUG OUTPUT.',5X,'VERSION: ',I4)
8060  FORMAT(//,21X,'THE FOLLOWING TIME VARIABLES WERE RECEIVED BY ',
     1      'THE EX35 ROUTINE VIA THE FCTIME COMMON BLOCK:',
     2      //,26X,'NAME',6X,'DESCRIPTION',50X,'DAY/HOUR')
8061  FORMAT(26X,'IDARUN    INITIAL DAY OF THE ENTIRE RUN',
     1      33X,I6)
8062  FORMAT(26X,'IHRRUN    INITIAL HOUR OF THE ENTIRE RUN (INTERNAL ',
     1      'CLOCK)',15X,I6)
8063  FORMAT(26X,'LDARUN    LAST DAY OF THE ENTIRE RUN',36X,I6)
8064  FORMAT(26X,'LHRRUN    LAST HOUR OF THE ENTIRE RUN (INTERNAL ',
     1      'CLOCK)',18X,I6)
8065  FORMAT(26X,'LDACPD    LAST DAY WITH OBSERVED DATA',35X,I6)
8066  FORMAT(26X,'LHRCPD    LAST HOUR WITH OBSERVED DATA (INTERNAL ',
     1      'CLOCK)',17X,I6)
8067  FORMAT(26X,'NOW(1)    CURRENT MONTH FROM COMPUTERS CLOCK',
     1      30X,I4)
8068  FORMAT(26X,'NOW(2)    CURRENT DAY FROM COMPUTERS CLOCK',
     1      32X,I4)
8069  FORMAT(26X,'NOW(3)    CURRENT YEAR FROM COMPUTERS CLOCK',
     1      31X,I4)
8070  FORMAT(26X,'NOW(4)    CURRENT HOUR AND MINUTE FROM COMPUTERS ',
     1      'CLOCK',20X,I4)
8071  FORMAT(26X,'NOW(5)    CURRENT SECOND AND MILLISECOND FROM ',
     1      'COMPUTERS CLOCK',13X,I4)
8072  FORMAT(26X,'LOCAL     HOUR OFFSET TO LOCAL TIME',39X,I4)
8073  FORMAT(26X,'NOUTZ     DEFAULT TIME ZONE NUMBER',40X,I4)
8074  FORMAT(26X,'NOUTDS    DEFAULT DAYLIGHT SAVINGS TIME SWITCH',
     1      28X,I4)
8075  FORMAT(26X,'NLSTZ     TIME ZONE NUMBER OF LOCAL STANDARD TIME ',
     1      24X,I4)
8076  FORMAT(26X,'IDA       FIRST DAY TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE ',9X,I6,/,36X,'OPERATIONS TABLE')
8077  FORMAT(26X,'IHR       FIRST HOUR TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',11X,I4,/,36X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8078  FORMAT(26X,'LDA       LAST DAY TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',11X,I6,/,36X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8079  FORMAT(26X,'LHR       LAST HOUR TO BE COMPUTED IN CURRENT PASS ',
     1      'THROUGH THE',10X,I6,/,36X,'OPERATIONS TABLE (INTERNAL ',
     2      'CLOCK)')
8080  FORMAT(26X,'IDADAT    FIRST DAY OF TIME SERIES DATA',
     1      33X,I6)
8090  FORMAT(////34X,'THE FOLLOWING TIME SERIES DATA WAS RECEIVED BY ',
     1      'THE EX35 ROUTINE:',//57X,'PERIOD',5X,'PX',/,
     2      64X,'(INCHES)',/)
8095  FORMAT(58X,I4,4X,F5.2,7X,F7.2,3(6X,F7.2))
8100  FORMAT(////32X,'THE FOLLOWING PE TIME SERIES DATA WAS ',
     1      'RECEIVED BY THE EX35 ROUTINE:',//59X,'DAY        ',
     2      'PE',/67X,'(INCHES)')
8105  FORMAT(58X,I4,6X,F5.2)
8150  FORMAT(////34X,'THE FOLLOWING PARAMETRIC DATA WAS RECEIVED BY ',
     1      'THE EX35 ROUTINE:')
8151  FORMAT(/55X,'RID   = ',2A4,/55X,'RNAME = ',5A4,
     1      /55X,'IRNUM = ',I4,/55X,'RLAT  = ',F5.2,
     2      /55X,'RLNG  = ',F5.2)
8152  FORMAT(/55X,'RFCTR = ',F5.3,/55X,'R24   = ',F5.3,
     1      /55X,'PMAX  = ',F5.3,/55X,'ULIMW = ',F5.2,
     2      /55X,'BLIMW = ',F5.2,/55X,'ULIMS = ',F5.2,
     3      /55X,'BLIMS = ',F5.2)
8153  FORMAT(/55X,'KURV  = ',I4,/55X,'IDELTA= ',I4,
     1      /55X,'NSW   = ',I4,/55X,'NSPER = ',I4,
     2      /55X,'IUSEC = ',I4,/55X,'IOFAAA= ',I4)
8155  FORMAT(////35X,'THE FOLLOWING CARRYOVER DATA WAS RECEIVED ',
     1      'BY THE EX35 ROUTINE:')
8156  FORMAT(/59X,'TAPI  = ',F5.2,/59X,'TAEI  = ',F5.2,
     1      /59X,'TFI   = ',F5.2,/59X,'SAPI  = ',F5.2,
     2      /59X,'SAEI  = ',F5.2,/59X,'SFI   = ',F5.2,
     3      /59X,'SRAIM = ',F5.2,/59X,'SRO   = ',F5.2,
     4      /59X,'DRAIM = ',F5.2,/59X,'DRO   = ',F5.2)
8157  FORMAT(/60X,'I',4X,'RNSP(I)')
8158  FORMAT(24(58X,I4,4X,F5.2,/))
8170  FORMAT(////15X,'THE FOLLOWING CARRYOVER SAVE PARAMETERS WERE ',
     1      'RECEIVED BY THE EX35 ROUTINE VIA THE FCARY COMMON BLOCK:')
8171  FORMAT(59X,'IFILLC = ',I4,/59X,'NCSTOR = ',I4,/)
8172  FORMAT(53X,'I    ICDAY(I)   ICHOUR(I)')
8175  FORMAT(51X,I4,4X,I6,5X,I6)
8180  FORMAT(////18X,'THE FOLLOWING API MOD PARAMETERS WERE RECEIVED ',
     1      'BY THE EX35 ROUTINE VIA THE MOD129 COMMON BLOCK:')
8181  FORMAT(60X,'NDT29 = ',I4)
8182  FORMAT(53X,'I    IDT29(I)    VAL29(I)')
8185  FORMAT(51X,I4,4X,I6,6X,F5.2)
8190  FORMAT(////18X,'THE FOLLOWING AEI MOD PARAMETERS WERE RECEIVED ',
     1      'BY THE EX35 ROUTINE VIA THE MOD135 COMMON BLOCK:')
8191  FORMAT(60X,'NDT35 = ',I4)
8192  FORMAT(53X,'I    IDT35(I)    VAL35(I)')
8195  FORMAT(51X,I4,4X,I6,6X,F5.2)
8230  FORMAT(//,50X,'FLASH FLOOD GUDANCE SWITCH=',I4)
8240  FORMAT(55X,'FFG COMPUTATIONAL DAY=',I6,/,
     1       55X,'FFG COMPUTATIONAL HOUR=',I4)
8260  FORMAT(/////47X,'CALCULATIONS FOR DAY ',I4,' :  ',I2,'/',
     1      I2,'/',I2,//61X,'LOC = ',I4,/60X,'LOCPE = ',
     2      I4,/60X,'IKRV = ',I4,/)
8262  FORMAT(/23X,'PERIOD     PXX        CAPI    TAEI      SAPI    ',
     1      'SAEI    SFI    SRAIM    SRO          ROX')
8330  FORMAT(24X,I4,5X,F5.2,6X,2(F5.2,3X),2X,5(F5.2,3X),5X,F5.2)
8340  FORMAT(/,30X,'CARRYOVER SAVED FOR FFG - DAY',I4,'  PERIOD',I4)
8342  FORMAT(28X,'YAPI    YAEI    YFI     SAPI    SAEI    ',
     1      'SFI    SRAIM    SRO    DRAIM    DRO',
     2      /27X,10(F5.2,3X),//)
8359  FORMAT(/55X,'CARRYOVER FOR DAY ',I4)
8360  FORMAT(28X,'TAPI    TAEI    TFI     SAPI    SAEI    ',
     1      'SFI    SRAIM    SRO    DRAIM    DRO',
     2      /27X,10(F5.2,3X))
8361  FORMAT(27X,'RAIM/MELT FOR EACH PERIOD WITHIN THE NEW STORM ',
     1      'WINDOW (OLDEST PERIOD IS FIRST):  ',
     2      24(/63X,F5.2))
8405  FORMAT(////19X,'THE FOLLOWING TIME SERIES DATA WAS PASSED FROM ',
     1      'THE EX35 ROUTINE BACK INTO THE CALLING ROUTINE:',
     2      //30X,'PERIOD      PX          RO        FIS',
     3      '       APIS        AEIS',/39X,'(INCHES)    (INCHES)',
     4      13X,'(INCHES)    (INCHES)')
8409  FORMAT(31X,I4,5X,F5.2,7X,F5.2,4X,F7.2,3X,F7.2,5X,F7.2)
C
C#######################################################################
C
C  ERROR AND WARNING FORMAT STATEMENTS
C
C#######################################################################
C
9450  FORMAT(/10X,'** WARNING ** THE AEI DROPPED BELOW ',F5.2,
     1      ' INCH (LOWER LIMIT ON WINTER API/AEI/FI CURVE) ',I3,
     2      ' TIME(S)',/24X,'BETWEEN THE BEGINNING AND ENDING ',
     3      'TIME OF THIS RUN.  THE AEI WAS RESET TO ',F5.2,
     4      ' EACH TIME.')
9455  FORMAT(/10X,'** WARNING ** THE AEI EXCEEDED ',F5.2,' INCH ',
     1      '(UPPER LIMIT ON WINTER API/AEI/FI CURVE) ',I3,' TIME(S)',
     2      /24X,'BETWEEN THE BEGINNING AND ENDING TIME OF THIS RUN.',
     3      '  THE AEI WAS RESET TO ',F5.2,' EACH TIME.')
9460  FORMAT(/10X,'** WARNING ** THE AEI DROPPED BELOW ',F5.2,
     1      ' INCH (LOWER LIMIT ON SUMMER API/AEI/FI CURVE) ',I3,
     2      ' TIME(S)',/24X,'BETWEEN THE BEGINNING AND ENDING ',
     3      'TIME OF THIS RUN.  THE AEI WAS RESET TO ',F5.2,
     4      ' EACH TIME.')
9465  FORMAT(/10X,'** WARNING ** THE AEI EXCEEDED ',F5.2,' INCH ',
     1      '(UPPER LIMIT ON SUMMER API/AEI/FI CURVE) ',I3,' TIME(S)',
     2      /24X,'BETWEEN THE BEGINNING AND ENDING TIME OF THIS RUN.',
     3      '  THE AEI WAS RESET TO ',F5.2,' EACH TIME.')
9470  FORMAT(/10X,'** WARNING ** THE API EXCEEDED 60.00 INCHES ',
     1      I3,' TIME(S) BETWEEN THE BEGINNING AND',/24X,
     2      ' ENDING TIME OF THIS RUN.  THE API WAS RESET TO ',
     3      '60.00 EACH TIME.')
9475  FORMAT(/10X,'** WARNING ** THE API DROPPED BELOW 0.10 INCHES ',
     1      I3,' TIME(S) BETWEEN THE BEGINNING AND',/24X,
     2      ' ENDING TIME OF THIS RUN.  THE API WAS RESET TO ',
     3      '0.10 EACH TIME.')
9500  FORMAT(/10X,'** WARNING ** THE NUMBER OF AEI CORRECTIONS ',
     1      'REQUESTED IN THE AEICQN MOD HAVE NOT BEEN PERFORMED.',
     2      /24X,'CHECK TO MAKE SURE DATES ENTERED INTO THE AEICQN ',
     3      'MOD ARE VALID.')
9510  FORMAT(/10X,'** WARNING ** THE NUMBER OF API CORRECTIONS ',
     1      'REQUESTED IN THE APICQN MOD HAVE NOT BEEN PERFORMED.',
     2      /24X,'CHECK TO MAKE SURE THE HOURS ENTERED INTO ',
     3      'THE APICQN MOD ARE VALID.')
C
C#######################################################################
C
9999  RETURN
      END
