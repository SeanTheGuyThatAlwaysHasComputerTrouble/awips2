C MEMBER EX33
C  (from old member FCEX33)
C-----------------------------------------------------------------------
C
C  PGM:  EX33 (PO,CO,PX,RO,WE,TE,CURAPI,CURAI)
C
C   IN: PO     .... PARAMETRIC DATA FROM P ARRAY
C   IN: CO     .... CARRYOVER DATA FROM C ARRAY
C   IN: PX     .... RAINFALL/MELT DATA
C  OUT: RO     .... RUNOFF ARRAY
C   IN: WE     .... WATER EQUIVALENT DATA
C   IN: TE     .... TEMPERATURE TIME SERIES DATA
C  OUT: CURAPI .... CURRENT API TIME SERIES
C  OUT: CURAI  .... CURRENT AI TIME SERIES
C  =====================================================================
C @PROCESS LVL(77)
C
      SUBROUTINE EX33 (PO,CO,PX,RO,WE,TE,CURAPI,CURAI)
C***********************************************************************
C  THIS ROUTINE EXECUTES THE API-CIN OPERATION.
C
C***********************************************************************
C INITIALLY WRITTEN BY
C        TIM SWEENEY - OHRFC    NOVEMBER 1984       VERSION 1
C
C  MODIFIED CARRYOVER FOR FFG OPERATION
C        TIM SWEENEY, HRL - NOV 1993  -  VERSION 2
C***********************************************************************
C  PRINCIPAL VARIABLES...
C
C  FOR DEFINITION OF VARIABLES IN COMMON BLOCKS, SEE SECTION IX.3.3C
C  OF THE NWSRFS USER'S MANUAL.
C
C     AI             CURRENT AI VALUE
C     AIADJ          AI ADJUSTMENT FACTOR
C     AICO           STORM AI
C     AIDURF         STORM AI UPDATE AS DURATION FACTOR
C     API            CURRENT API VALUE
C     CARY(8)        TEMPORARY ARRAY TO STORE CARRYOVER VALUES IN FOR
C                    TRANSFER TO ROUTINE FCWTCO
C     CO(1)          INPUT CARRYOVER DATA FROM C ARRAY
C     CURAI(1)       CURRENT AI ARRAY FOR OUTPUT TIME SERIES
C     CURAPI(1)      CURRENT API ARRAY FOR OUTPUT TIME SERIES
C     DESC           DESCRIPTION, ZONE NAME
C     DMIN           MINIMUM 6 HOURLY PRECIP TO CONTINUE STORM
C     DWE            CURRENT WE VALUE
C     IDAY           NUMBER OF DAYS SINCE JAN 1 OF CURRENT YEAR
C     IDELT          DELTA-T OF TIME SERIES FOR RAINFALL/MELT AND RUNOFF
C     IFDEB          DEBUG OUTPUT SWITCH, 0 = OFF, 1 = ON
C     IFFG           FLASH FLOOD GUIDANCE SWITCH
C                      (0 = NO FFG, 1 = FFG ONLY, 2 = FFG & FCST)
C     INTDA          INTERNAL DAY OF CURRENT DATE BEING PROCESSED.
C     INTHR          INTERNAL HOUR OF CURRENT DATE BEING PROCESSED
C     IPER           PERIOD COUNTER FOR 6-HOURLY TIME STEPS IN EACH
C                      COMPUTATIONAL DAY, PERIOD 1 ENDS 18Z
C     IVERS          VERSION NUMBER
C     KCQN           ARRAY ELEMENT IN API CORRECTION ARRAY
C     KDAFFG         COMPUTATIONAL DAY TO SAVE CARRYOVER FOR FFG
C     KHR            SPECIFIED HOUR FOR TODAY'S DATE, RANGE 1-24
C     KHRFFG         COMPUTATIONAL HOUR TO SAVE CARRYOVER FOR FFG
C     KMO,KDA,KYR    TODAY'S DATE (MONTH, DAY, AND YEAR, 2 DIGITS EACH)
C     LAST           NUMBER OF DAYS RUNOFF IS TO BE CALCULATED
C     LIK            LOCATION OF ELEMENT IN CURAPI AND CURAI ARRAYS
C                      FOR STORING CURRENT API AND/OR AI WHEN OUTPUT
C                      OF TIME SERIES IS REQUESTED
C     LOC            LOCATION OF CURRENT DAY'S FIRST ELEMENT IN THE
C                      INPUT TIME SERIES DATA FOR RAINFALL/MELT AND
C                      WATER EQUIVALENT
C     MODA(12)       NUMBER OF DAYS IN EACH MONTH
C     NEWSTM         STORM PERIOD COUNTER
C     NLSTZ          NUMBER DESIGNATING SPECIFIED TIME ZONE
C     NMO,NDA,NYR    TOMORROW'S DATE (MONTH, DAY, AND YEAR, 2 DIGITS
C                      EACH)
C     NOC            COUNTER FOR NUMBER OF DAYS TO SAVE CARRYOVER
C     NOP            NUMBER OF OPERATION ASSIGNED TO THIS OPERATION
C     NOUTDS         DAYLIGHT SAVINGS TIME SWITCH, 0  =  STANDARD,
C                      1  =  DAYLIGHT
C     NPER           NUMBER OF PERIODS IN A DAY
C     PO(1)          INPUT PARAMETRIC DATA FROM P ARRAY
C     PRO(4)         TEMPORARY ARRAY FOR STORING ONE DAY'S RUNOFF VALUES
C     PX(1)          INPUT RAINFALL/MELT TIME SERIES DATA
C     RAIN(4)        TEMPORARY ARRAY FOR 4 PERIODS OF RAINFALL/MELT
C                      FOR CURRENT DAY
C     RANCO,PCPN     STORM RAINFALL VALUE
C     RO(1)          OUTPUT RUNOFF TIME SERIES DATA
C     ROCO,PREVRO    STORM RUNOFF VALUE
C     STRO           TOTAL STORM RUNOFF
C     NAM(2)      ROUTINE NAME
C     TE(1)          INPUT TEMPERATURE TIME SERIES DATA
C     TZ             FOUR CHARACTER TIME ZONE CODE
C     TOT24,ITOT24   24-HOUR RAINFALL/MELT ENDING 12Z
C     WE(1)          INPUT WATER EQUIVALENT TIME SERIES DATA
C     WEEK           WEEK NUMBER FOR CURRENT DAY
C     XW             TERM IN THE API/AI EQUATION
C
C***********************************************************************
C
C
      DIMENSION PO(*),CO(*),PX(*),RO(*),WE(*),SUBNAM(2),MODA(12),
     1          RAIN(4),PRO(4),CARY(11),DMIN(12),TE(*),
     2          CURAPI(*),CURAI(*)
      DIMENSION DESC(6)
C
      COMMON/IONUM/IN,IPR,IPU
      COMMON/FDBUG/ IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/FCTIME/ IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     1               LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/FCARY/ IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON/MOD129/NDT29,IDT29(5),VAL29(5)
      COMMON /FFGCTL/ IFFG
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_api/RCS/ex33.f,v $
     . $',                                                             '
     .$Id: ex33.f,v 1.1 1995/09/17 18:57:03 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SUBNAM/4HEX33,4H    /,NOP/33/,EMPTY/4H    /,
     1     MODA/31,28,31,30,31,30,31,31,30,31,30,31/
      DATA AIDURF/0.0/
      DATA DMIN/3*.04,.05,.06,3*.08,.06,.05,2*.04/
C
C
C  CALL DEBUG CHECK ROUTINE.
C
      CALL FPRBUG (SUBNAM,1,NOP,IFDEB)
C
C  INITIALIZE COUNTER FOR NUMBER OF DAYS CARRYOVER IS BEING SAVED.
C  THIS COUNTER IS INCREMENTED BY 1 EACH DAY CARRYOVER IS SAVED.
C
      NOC = 1
C
C  INITIALIZE ARRAY ELEMENT COUNTER FOR API CORRECTIONS
C
      KCQN = 1
C
C  SELECT REQUIRED VARIABLES FROM PO AND CO ARRAYS.
C
      IVERS = PO(1)
      IVERS = 2
      DO 1000 I=1,6
 1000 DESC(I) = PO(I+1)
      AIADJ = PO(12)
      IDELT = PO(13)
      LAT   = PO(10)
      TCADJ = PO(26)
      PRECF = PO(27)
      ARECF = PO(28)
      ASRF  = PO(29)
      WERCR = PO(30)
      NEWSTM = CO(1)
      RANCO = CO(2)
      AICO  = CO(3)
      ROCO  = CO(4)
      API   = CO(5)
      AI    = CO(6)
      DWE   = CO(7)
      AVGT  = CO(9)
      AT    = CO(10)
      TC    = CO(11)
      NPER  =  24/IDELT
      IF(IFDEB.GT.0) GOTO 200
C
C  CALL ROUTINE TO GET MONTH, DAY, AND YEAR FOR FIRST DATE BEING RUN.
C  SET THE NUMBER OF DAYS FOR THE RUN AND INITIALIZE THE INTERNAL DAY
C  AND HOUR COUNTER.
C
  101 CALL MDYH1 (IDA,IDELT,KMO,KDA,KYR,KHR,NLSTZ,NOUTDS,TZ)
      KYR = KYR-((KYR/100)*100)
      LAST = LDA-IDA+1
      INTDA = IDA
      INTHR  =  (IDA-1)*24
      IF(IFDEB.GT.0) GOTO 201
C
C  CALCULATE COMPUTATIONAL PERIOD AT OR JUST BEFORE LSTCMPDY FOR FFG
  103 IF(IFDEB.GT.0) GOTO 202
  104 IF(IFFG.EQ.0) GOTO 107
      KDAFFG  =  LDACPD
      KHRFFG  =  (LHRCPD/IDELT)*IDELT
      IF(KHRFFG.GT.0) GOTO 105
      KDAFFG  =  KDAFFG - 1
      KHRFFG  =  24
  105 IF(IFDEB.GT.0) GOTO 203
C
C........................................................
C  BEGIN DAILY LOOP.
C........................................................
C
  107 DO 1005 II = 1,LAST
C
C  DETERMINE THE LOCATION OF THE FIRST VALUE NEEDED IN THE PX TE AND WE
C  ARRAYS AND THE FIRST VALUE TO BE OUTPUT IN THE RUNOFF ARRAY FOR
C  THIS DATE.
C
      LOC = ((INTDA-IDADAT)*NPER)+1
C
C  DETERMINE LOCATION IN CURAPI AND CURAI ARRAYS FOR STORING
C  API AND/OR AI VALUES FOR TIME SERIES OUTPUT
C
      LIK = (IDA-IDADAT)+II
C
C  CHECK FOR LEAP YEAR.
C
      IF(((KYR/4)*4).EQ.KYR) MODA(2) = 29
C
C  DETERMINE THE MONTH, DAY, AND YEAR FOR THE NEXT DATE TO BE
C  CALCULATED.
C
      IF(KDA.GE.MODA(KMO)) GOTO 109
      NMO = KMO
      NDA = KDA+1
      NYR = KYR
      GO TO 112
  109 IF(KMO.GE.12) GOTO 111
      NMO = KMO+1
      NDA = 1
      NYR = KYR
      GO TO 112
  111 NMO = 1
      NDA = 1
      NYR = KYR+1
C
C
C  DETERMINE THE WEEK NUMBER OF THE CURRENT DATE.
C
  112 IDAY = 0
      DO 1001 MM = 1,KMO
 1001 IDAY = IDAY+MODA(MM)
      IDAY = IDAY-MODA(KMO)+KDA
      WEEK = ((IDAY-1)/7)+1
      IF(IFDEB.GT.0) GOTO 204
C
C  CONVERT THE DAY'S NPER PERIODS OF RAINFALL/MELT FROM METRIC TO
C  ENGLISH THEN DETERMINE THE DAY'S TOTAL 24-HOUR AMOUNT.
C
  113 TOT24 = 0.0
      DO 1002 I = 1,NPER
      J = LOC+I-1
      RAIN(I) = PX(J)/25.4
 1002 TOT24 = TOT24 + RAIN(I)
      IF(IFDEB.GT.0) GOTO 205
C
C  CHECK FOR NO RAINFALL/MELT.
C
  114 IF(TOT24.GT.-1.0) GOTO 116
C 114 IF(TOT24.GE.0.01) GOTO 116
C
C  IF NO RAINFALL/MELT, INITIALIZE CARRYOVERS AND SET RUNOFF AMOUNTS
C  TO ZERO.
C
      NEWSTM = 4
      PCPN   = 0.0
      FI     = AI
      PREVRO = 0.0
      DO 1003 I = 1,NPER
 1003 PRO(I) = 0.0
      IF(IFDEB.GT.0) GOTO 207
      GOTO 137
C
C  BEGIN 6-HOURLY API/AI/RUNOFF COMPUTATION.
C
  116 IPER = 0
      SUM = 0.
C
C  CHECK FOR STORM BREAK.
C
      IF(NEWSTM.LT.4) THEN
C
C  IF STORM IS CONTINUING, USE STORM CARRYOVER VALUES.
         PCPN   = RANCO
         PREVRO = ROCO
         FI     = AICO
      ELSE
C
C  IF STORM IS BROKEN, INITIALIZE STORM VALUES.
         PCPN   = 0.0
         PREVRO = 0.0
         FI     = AI
      ENDIF
C
C  UPDATE PERIOD COUNTER AND CHECK FOR END OF DAY.
C
      IF(IFDEB.GT.0) GOTO 208
C
  119 IPER = IPER + 1
      IF(IPER.GT.NPER) GOTO 137
C 120 IF(IFDEB.GT.0) GOTO 209
C
C  CHECK FOR NO RAINFALL/MELT FOR THE PERIOD.
C
  121 NXTSTM = NEWSTM
      IF(RAIN(IPER).LT.0.01) THEN
        RAIN(IPER) = 0.0

      ELSE
C
C  IF ACCUMULATED 6-HOURLY RAINFALL/MELT EQUALS OR EXCEEDS A FRACTIONAL
C  PART OF DMIN(KMO) INCHES, STORM CONTINUES.
C
      SUM = SUM + RAIN(IPER)
      FACMIN = DMIN(KMO)*IPER/NPER
      IF(SUM.GE.FACMIN) NXTSTM = -1
      ENDIF
C
C  ADD 6-HOURLY AMOUNT TO STORM TOTAL.
C
  124 SRAIM = PCPN + RAIN(IPER)
C
C  IF 6-HOURLY RAINFALL/MELT EQUALS OR EXCEEDS 0.10 INCHES, UPDATE
C  STORM AI VALUE BY AIDURF AS A DURATION FACTOR.
C
      UFI = FI
      IF(RAIN(IPER).GE.0.1) UFI = FI + AIDURF
C
C  CALCULATE THE STORM TOTAL RUNOFF AND THE 6-HOURLY INCREMENTAL RUNOFF.
C
      CALL RO33(UFI,SRAIM,STRO)
      IF(STRO.LT.0.0) STRO = 0.0
      PRO(IPER) = STRO - PREVRO
      IF(PRO(IPER).LT.0.01) PRO(IPER) = 0.0
C
      IF(IFDEB.GT.0) WRITE(IODBUG,24) IPER,NEWSTM,PCPN,PREVRO,FI,
     +               RAIN(IPER),UFI,SRAIM,STRO,PRO(IPER)
C
C  UPDATE STORM VALUES
      NEWSTM = NXTSTM
      PCPN = SRAIM
      PREVRO = STRO
      FI = UFI
C
C  UPDATE STORM PERIOD COUNTER AND CHECK TO SEE IF STORM IS BROKEN.
C
  134 NEWSTM = NEWSTM + 1
      IF(NEWSTM.GE.4) THEN
C
C  IF STORM IS BROKEN, INITIALIZE STORM VALUES.
        NEWSTM = 4
        PCPN   = 0.0
        PREVRO = 0.0
        FI = AI
      ENDIF
C
C  CALCULATE COMPUTATIONAL PERIOD AT OR JUST BEFORE LSTCMPDY FOR FFG
      IF(IFFG.EQ.0) GOTO 119
      KH = IPER*IDELT
      IF(INTDA.EQ.KDAFFG.AND.KH.EQ.KHRFFG) THEN
C  SAVE CARRYOVER AT LSTCMPDY FOR FFG
        CO(1) = NEWSTM
        CO(2) = PCPN
        CO(3) = FI
        CO(4) = PREVRO
        CO(5) = API
        CO(6) = AI
        CO(7) = DWE
        IF(IFDEB.GT.0) GOTO 216
 2125   CONTINUE
      ENDIF
      GO TO 119
C
C  AT END OF EACH DAY, CONVERT 6-HOURLY RUNOFF TO METRIC
C  AND STORE IN RO ARRAY
C
C  CONVERT TO METRIC
C
  137 DO 1004 I = 1,NPER
      J = LOC+I-1
      RO(J) = PRO(I)
 1004 RO(J) = RO(J)*25.4
      IF(IFDEB.GT.0) GOTO 215
C
C  AT END OF EACH DAY, UPDATE STORM CARRYOVER VALUES.
C
  138 RANCO = PCPN
      IF(RANCO.LT.0.01) RANCO = TOT24
      AICO = FI
      ROCO = PREVRO
      IF(IFDEB.GT.0) GOTO 217
C
C  CONVERT WATER EQUIVALENT VALUE FOR CURRENT DATE FROM METRIC TO
C  ENGLISH AND STORE IN CARRYOVER VARIABLE.
C
  139 DWE = WE(LIK)/25.4
      IF(IFDEB.GT.0) GOTO 219
C
C  CHECK FOR API CORRECTION TO BE APPLIED TO CURRENT COMPUTATIONAL
C  DAY.  IF ALL CORRECTIONS PASSED IN COMMON BLOCK MOD129 HAVE BEEN
C  CHECKED, OR CORRECTION IS FOR FORECAST DAY, SKIP CHECK.
C
  140 IF(KCQN.GT.NDT29) GOTO 150
      IF(IDT29(KCQN).GT.(LDACPD*24)) GOTO 150
      IF(IDT29(KCQN).GT.(INTDA*24)) GOTO 150
      API = VAL29(KCQN)
C
C  CHECK THAT API IS WITHIN ALLOWABLE RANGE.  IF NOT, SET TO
C  CLOSEST LIMIT.  RANGE IS -4.00 TO 4.00.
C
      IF(API.GE.-4.00 .AND. API.LE.4.00) GOTO 148
      IF(API.LT.-4.00) API = -4.00
      IF(API.GT.4.00)  API = 4.00
      WRITE(IPR,38) VAL29(KCQN),API
      CALL WARN
C
  148 IF(IFDEB.GT.0) GOTO 221
  149 KCQN = KCQN+1
C
C  CALCULATE API VALUE FOR CURRENT DATE.
C
  150 CALL FCAI33(KMO,KDA,LOC,TOT24,PO,TE,AI,API,AVGT,AT,TC,DWE)
      IF(IFDEB.GT.0) GOTO 223
C
C  IF API OR AI VALUES ARE TO BE WRITTEN TO AN OUTPUT TIME SERIES,
C  STORE THEM IN CURAPI AND CURAI ARRAYS
C
  160 IF(PO(34).EQ.EMPTY) GOTO 162
      CURAPI(LIK) = API*25.4
      IF(IFDEB.GT.0) GOTO 225
  162 IF(PO(37).EQ.EMPTY) GOTO 164
      CURAI(LIK) = FI
      IF(IFDEB.GT.0) GOTO 227
C
C  CHECK TO SEE IF CARRYOVER IS TO BE SAVED FOR CURRENT DATE.
C
  164 IF(IFILLC.LE.0) GOTO 170
      IF(NCSTOR.LE.0) GOTO 170
      IF(NOC.GT.NCSTOR) GOTO 170
      IF(INTDA.NE.ICDAY(NOC)) GOTO 170
C
C  IF CARRYOVER IS TO BE SAVED, STORE VALUES IN TEMPORARY ARRAY AND
C  CALL SAVE CARRYOVER ROUTINE.
C
  168 CARY(1) = NEWSTM+0.01
      CARY(2) = RANCO
      CARY(3) = AICO
      CARY(4) = ROCO
      CARY(5) = API
      CARY(6) = AI
      CARY(7) = DWE
      CARY(8) = TOT24
      CARY(9) = AVGT
      CARY(10) = AT
      CARY(11) = TC
      CALL FCWTCO (INTDA,24,CARY,11)
      IF(IFDEB.GT.0) GOTO 229
C
C  UPDATE COUNTER FOR NUMBER OF DAYS CARRYOVER HAS BEEN STORED.
C
C
  169 NOC = NOC + 1
C
C  UPDATE MON, DAY, AND YEAR FOR PROCESSING NEXT DAY.
C  ALSO UPDATE THE INTERNAL DAY COUNTER.
C
  170 KMO = NMO
      KDA = NDA
      KYR = NYR
      MODA(2) = 28
      INTDA = INTDA+1
 1005 CONTINUE
C
C................................................................
C                             END DAILY LOOP
C................................................................
C
C  IF LAST DATE HAS BEEN PROCESSED, CHECK TO SEE IF CARRYOVER VALUES
C  SHOULD BE UPDATED IN CO ARRAY.
C
      IF(IFILLC.LE.0) GOTO 9999
C
C  BYPASS IF IFFG > 0
      IF(IFFG.NE.0) GOTO 9999
      CO(1) = NEWSTM + 0.01
      CO(2) = RANCO
      CO(3) = AICO
      CO(4) = ROCO
      CO(5) = API
      CO(6) = AI
      CO(7) = DWE
      CO(8) = TOT24
      CO(9) = AVGT
      CO(10) = AT
      CO(11) = TC
      IF(IFDEB.GT.0) GOTO 231
      GOTO 9999
C
C  DEBUG OUTPUT STATEMENTS.
C
  200 WRITE(IODBUG,11) SUBNAM,IVERS,DESC
      WRITE(IODBUG,12) IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW,
     1                 LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      WRITE(IODBUG,13) IFILLC,NCSTOR,ICDAY,ICHOUR
      WRITE(IODBUG,14) NDT29,IDT29,VAL29
      WRITE(IODBUG,15) AIADJ,IDELT,TCADJ,PRECF,ARECF,ASRF,WERCR
      WRITE(IODBUG,16) NEWSTM,RANCO,AICO,ROCO,API,AI,DWE,AVGT,AT,TC
      IB = ((IDA-IDADAT)*4)+1
      IE = ((LDA-IDADAT)+1)*4
      WRITE(IODBUG,17) (PX(I),I = 1,IE)
      JB = (IDA-IDADAT)+1
      JE = IE/4
      WRITE(IODBUG,18) (WE(I),I = 1,JE)
      WRITE(IODBUG,19) (TE(I),I = 1,IE)
      GO TO 101
  201 WRITE(IODBUG,20) LAST
      GO TO 103
  202 WRITE(IODBUG,50) IFFG
      GOTO 104
  203 WRITE(IODBUG,52) KDAFFG,KHRFFG
      GOTO 107
  204 WRITE(IODBUG,21) II,KMO,KDA,KYR,NMO,NDA,NYR,IDAY,WEEK,INTDA,LOC
      GO TO 113
  205 WRITE(IODBUG,22) RAIN,TOT24
      GO TO 114
  207 WRITE(IODBUG,23) NEWSTM,PCPN,PREVRO,FI
      GO TO 137
  208 WRITE(IODBUG,60)
      GOTO 119
C 209 WRITE(IODBUG,24) IPER,NEWSTM,PCPN,PREVRO,FI,RAIN(IPER)
C     GO TO 121
C 211 WRITE(IODBUG,25) FI
C     GO TO 126
C 213 WRITE(IODBUG,26) STRO,PRO(IPER)
C     GO TO 132
  215 IB = LOC
      IE = LOC+3
      WRITE(IODBUG,27) (RO(I),I = IB,IE)
      GO TO 138
  216 WRITE(IODBUG,55) KMO,KDA,KYR,INTDA,KH,II,IPER
      WRITE(IODBUG,35) (CO(I),I=1,11)
      GOTO 2125
  217 WRITE(IODBUG,28) II,NEWSTM,RANCO,AICO,ROCO
      GO TO 139
  219 WRITE(IODBUG,29) LIK,DWE
      GO TO 140
  221 WRITE(IODBUG,30) KCQN,VAL29(KCQN)
      GO TO 149
  223 WRITE(IODBUG,31) API,AI,AIADJ,AVGT,AT,TC
      GO TO 160
  225 WRITE(IODBUG,32) LIK,CURAPI(LIK)
      GO TO 162
  227 WRITE(IODBUG,33) LIK,CURAI(LIK)
      GO TO 164
  229 WRITE(IODBUG,34) KMO,KDA,KYR,ICDAY(NOC),ICHOUR(NOC),CARY
      GO TO 169
  231 WRITE(IODBUG,35) (CO(I),I = 1,11)
C
C
 9999 RETURN
C
C
   11 FORMAT(/5X,2A4,' DEBUG OUTPUT.',5X,'VERSION:',I4,
     1       //,10X,'ZONE NAME:  ',6A4)
   12 FORMAT(/10X,'IDARUN   IHRRUN   LDARUN   LHRRUN   LDACPD   ',
     1       'LHRCPD   NOW(1)   NOW(2)   NOW(3)   NOW(4)   NOW(5)'/
     2       7X,11I9//
     3       11X,'LOCAL    NOUTZ   NOUTDS    NLSTZ      IDA      ',
     4       'IHR      LDA      LHR   IDADAT'/
     5       7X,9I9)
   13 FORMAT(/10X,'IFILLC:',I3,5X,'NCSTOR:',I3,5X,'ICDAY:',10I7/
     1       46X,10I7/
     2       39X,'ICHOUR:',10I7/46X,10I7)
   14 FORMAT(/10X,'NDT29:',I3,5X,'IDT29:',5I10,/,24X,'VAL29:',5F10.2)
   15 FORMAT(/10X,'AIADJ     IDELT     TCADJ     PRECF     ',
     1       'ARECF      ASRF     WERCR'/
     2       11X,F4.1,6X,I4,6X,F4.1,3(6X,F4.2),5X,F5.2)
   16 FORMAT(/10X,'NEWSTM   RANCO    AICO    ROCO     API      ',
     1       'AI      WE    AVGT      AT      TC'/
     2       14X,I2,3X,F5.2,4X,F4.1,4X,F4.2,3X,F5.2,4X,F4.1,3X,
     3       F5.2,3(3X,F5.1))
   17 FORMAT(/10X,'PX ARRAY (METRIC):',2X,16F6.1/30X,16F6.1/30X,16F6.1/
     1       30X,16F6.1/30X,16F6.1/30X,16F6.1/30X,16F6.1/30X,16F6.1)
   18 FORMAT(/10X,'WE ARRAY (METRIC):',2X,16F6.1/30X,16F6.1)
   19 FORMAT(/10X,'TE ARRAY (METRIC):',2X,16F6.1/30X,16F6.1)
   20 FORMAT(10X,'LAST:',I4)
   21 FORMAT(10X,122('-')/10X,'DAY',I3,5X,'TODAY:',2X,3I2,
     1       5X,'TOMORROW:',2X,3I2,5X,'DAY OF YEAR:',I4,
     2       5X,'WEEK NO:',F4.0,5X,'INTERNAL DAY:',I6,5X,'LOC:',I4)
   22 FORMAT(15X,'6-HRLY RAIN:',4F8.2,5X,'24-HR TOTAL:',F8.2)
   23 FORMAT(15X,'NO RAIN TODAY     NEWSTM:',I3,5X,'STORM PCPN:',
     1       F6.2,5X,'STORM RUNOFF:',F6.2,5X,'FI:',F5.2)
C  24 FORMAT(15X,'PERIOD:',I3,5X,'NEWSTM:',I3,5X,'STORM PCPN:',F6.2,
C    1       5X,'STORM RUNOFF:',F6.2,5X,'FI:',F5.2,5X,'INC RAIN:',F6.2)
C  25 FORMAT(30X,'FI UPDATE:',F5.2)
C  26 FORMAT(30X,'NEW STORM RUNOFF:',F6.2,5X,'6-HRLY RUNOFF:',F5.2)
   24 FORMAT(15X,I3,3X,I3,3X,F6.2,1X,F6.2,2X,F5.2,2X,F5.2,1X,
     +       F5.2,1X,F6.2,1X,F6.2,1X,F6.2)
C  24 FORMAT(15X,I3,4X,I3,5X,F6.2,3X,F6.2,2X,F5.2,1X,F6.2)
C  25 FORMAT(64X,F5.2)
C  26 FORMAT(72X,F6.2,5X,F5.2)
   27 FORMAT(15X,'6-HOURLY METRIC RUNOFF VALUES STORED IN RO ARRAY:',
     1       4F8.2)
   28 FORMAT(15X,'DAY',I3,' FINAL C/O VALUES...     NEWSTM:',I3,
     1       5X,'RANCO:',F5.2,5X,'AICO:',F4.1,5X,'ROCO:',F5.2)
   29 FORMAT(15X,'WE FOR TODAY...     LIK:',I3,5X,'WE:',F5.2)
   30 FORMAT(15X,'KCQN:',I3,5X,'VAL29(KCQN):',F6.2)
   31 FORMAT(15X,'API:',F5.2,5X,'AI:',F4.1,5X,'AIADJ:',F4.1,
     1       5X,'AVGT:',F5.1,5X,'AT:',F5.1,5X,'TC:',F5.1)
   32 FORMAT(15X,'API TO TIME SERIES...     LIK:',I3,5X,'CURAPI:',F7.2)
   33 FORMAT(15X,'AI TO TIME SERIES...      LIK:',I3,5X,'CURAI:',F7.1)
   34 FORMAT(/15X,'CARRYOVER WAS SAVED FOR DATE:',2X,3I2,
     1       5X,'INTERNAL DAY/HOUR:',I6,'/',I2/
     2       20X,'CARY(1)  CARY(2)  CARY(3)  CARY(4)  CARY(5)  ',
     3       'CARY(6)  CARY(7)  CARY(8)  CARY(9) CARY(10) CARY(11)'/
     4       18X,F9.0,F9.2,F9.1,2F9.2,F9.1,2F9.2,3F9.1)
   35 FORMAT(/15X,'CO ARRAY HAS BEEN UPDATED.'/
     1       20X,'CO(1)    CO(2)    CO(3)    CO(4)    CO(5)    ',
     2       'CO(6)    CO(7)     CO(8)     ',
     3       'CO(9)   CO(10)     CO(11)'/
     4       16X,F9.0,F9.2,F9.1,2F9.2,F9.1,2F9.2,3F9.1)
   38 FORMAT(/,11X,'**WARNING** ILLEGAL API MOD:',F6.2,
     1       22X,'LIMITS ARE...  -4.00 THRU 4.00.  RESET TO:',F6.2)
   50 FORMAT(/,10X,'FLASH FLOOD GUIDANCE SWITCH=',I4)
   52 FORMAT(  15X,'FFG COMPUTATIONAL DAY=',I6,/,
     1         15X,'FFG COMPUTATIONAL HOUR=',I4)
   55 FORMAT(/,10X,'CARRYOVER SAVED FOR FFG FOR DATE: ',3I2,
     1       4X,'INTERNAL DAY/HOUR:',I6,'/',I2,
     2       4X,'DAY/PERIOD:',I4,'/',I2)
   60 FORMAT(/,15X,'IPER  NEWST   PCPN  PREVRO   FI   INCRA  UFI',
     +         '   SRAIM   STRO  INCRO',/,
     +         15X,'====  =====  =====  ======  ====  =====  ====',
     +         '  =====  =====  =====')
      END
