C MEMBER FPURC
C  (from old member FCFPURC)
C.......................................................................
C                             LAST UPDATE: 07/10/95.11:43:44 BY $WC21DT
C @PROCESS LVL(77)
C
C
      SUBROUTINE FPURC(OPTN,IPFMT)
C
C DESC - PUNCHES A RATING CURVE INPUT DECK
C.......................................................................
C
C ROUTINE FCPURC PUNCHES OUT A DEFINE RATING CURVE
C INPUT DECK FROM THE CONTENTS OF COMMON BLOCK/FRATNG/.
C
C ARGUMENT LIST
C   OPTN - UNITS TO PRINT OUTPUT IN
C            ='METR' FOR METRIC
C            ='ENGL' FOR ENGLISH
C            ='    ' (BLANK) TO DEFAULT TO UNITS ORIGINALLY USED
C  IPFMT - PUNCH FORMAT OPTION
C            =0, PUNCH IN RATING CURVE FORMAT FOR NWSRFS
C            =1, PUNCH OUT IN DATACOL FORMAT
C
C.......................................................................
C
C ROUTINE ORIGINALLY BY ED VANBLARGAN - HRL - DEC 83
c MODIFICATIONS -
c KWZ 10/24/05 Card 6a changed to write to more than one line.
C
C.......................................................................
C
C
      LOGICAL ENGUNT,EXHYD
      CHARACTER*8 OPCODE(11),OPBLNK
      DIMENSION SUBNAM(2),OLDSUB(2),NOYES(2),WORK(9),FPKEY(4),
     $ IDATE(2),ARRAY(100)
C
      INCLUDE 'common/ionum'
C
      INCLUDE 'common/fdbug'
C
      INCLUDE 'common/where'
C
      INCLUDE 'scommon/sugnlx'
C
      INCLUDE 'common/fratng'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob7/rfc/ofs/src/fcinit_top/RCS/fpurc.f,v $
     . $',                                                             '
     .$Id: fpurc.f,v 1.3 1999/04/23 19:53:50 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA ALT/4HT   /,LOG/4HLOG /,LIN/4HLIN /
      DATA AMETR,BLANK,IBLNK/4HMETR,4H    ,4H    /,
     * RTCV,SUBNAM/4HRTCV,4HFPUR,4HC   /,QUOTE/4H'   /,
     $ AE,AM,AL/1HE,1HM,4H  L /,SS,WS/4H'SS=,4H'WS=/,AMP/4H&   /,
     $ FPKEY/4H RR=,4H RV=,4H EX=,4H FF=/
      DATA OPCODE/'COMMENT ','USGS-ID ',' NWS-ID ','   BANKF',
     * 'ULL-STG ','      RI','VER-LOC ',' MOB-STG',' HSA-ID ',
     * '  E-19  ','  E-19A '/
      DATA OPBLNK/'        '/
      DATA LARRAY/100/
C
C SET /WHERE/ INFO
C
      DO 10 I=1,2
      OLDSUB(I)=OPNAME(I)
10    OPNAME(I)=SUBNAM(I)
      IOLDOP=IOPNUM
      IOPNUM=0
C
C SET DEBUG
C
      IBUG=0
      IF (IFBUG(RTCV).EQ.1) IBUG=1
      IF (ITRACE.GE.1) WRITE(IODBUG,801)
C
C..............DEBUG TIME...............................................
C
      IF (IBUG.EQ.0) GO TO 140
C
      WRITE(IODBUG,915) RTCVID,RIVERN,RIVSTA,RLAT,RLONG,
     * FPTYPE,AREAT,AREAL,FLDSTG,FLOODQ,PVISFS,SCFSTG,
     * WRNSTG,GZERO,NRCPTS,LOCQ,LOCH,STGMIN,NCROSS,LXTOPW,
     * LXELEV,ABELOW,FLOODN,SLOPE,FRLOOP,SHIFT,OPTION,
     * LASDAY,IPOPT,RFSTG,RFQ,IRFDAY,RFCOMT
C......................................................................
C
C SET CONVERSION FACTORS FOR UNITS
C
140   ENGUNT=.TRUE.
      IF (OPTN.EQ.AMETR) ENGUNT=.FALSE.
      IF (OPTN.EQ.BLANK .AND. OPTION.EQ.AMETR) ENGUNT=.FALSE.
C
      FACLEN=1.0
      FACVOL=1.0
      FACMKM=1.0
      IF(ENGUNT) CALL FRCUN(FACLEN,FACVOL,FACMKM,IER)
150   FACARE=FACLEN**2
      FACSKM=FACMKM**2
C
C INITIALIZE VARIABLES
C
      IERSUM=0
      SHIFT=SHIFT*FACLEN
C
C CARD 1
C
      IDATE(1)=IBLNK
      IDATE(2)=IBLNK
      IF (LASDAY.LE.0) GO TO 200
      CALL MDYH1(LASDAY,1,MO,IDAY,IYR,IDUM,24,0,IDUM1)
      IDUM=MO*1000000+IDAY*10000+IYR
      CALL UINTCH(IDUM,8,IDATE,N,IER)
      IERSUM=IER
200   WRITE(IPU,810) RTCVID,IDATE
C
C CARD 2
C
      IF (IUGFIL.EQ.0) CALL SUGTUG(LARRAY,ARRAY,IERR)
      IF (RLAT.LE.ULLMTS(1).AND.RLAT.GE.ULLMTS(2)) THEN
         ELSE
            WRITE(IPR,815) 'LATITUDE',RLAT,RTCVID,ULLMTS(2),ULLMTS(1)
815         FORMAT('0**WARNING** ',A,' ',F11.1,' FOR RATING CURVE ',2A4,
     *             ' IS IS NOT IN THE RANGE OF ',F7.1,
     *             ' THROUGH ', F7.1,'.')
            CALL WARN
            ENDIF
      IF (RLONG.LE.ULLMTS(4).AND.RLONG.GE.ULLMTS(3)) THEN
          ELSE
             WRITE(IPR,815) 'LONGITUDE',RLONG,RTCVID,ULLMTS(3),ULLMTS(4)
             CALL WARN
             ENDIF
      WRITE(IPU,820) RIVSTA,RIVERN,RLAT,RLONG
C
C CARD 3
C
      AREAT=AREAT*FACSKM
      AREAL=AREAL*FACSKM
      OPTION=AM
      IF (ENGUNT) OPTION=AE
      DO 250 I=1,9
250   WORK(I)=BLANK
      LOC=1
      DO 300 I=1,4
      IF (FPTYPE(I).EQ.BLANK) GO TO 300
      WORK(LOC)=FPKEY(I)
      WORK(LOC+1)=FPTYPE(I)
      LOC=LOC+2
300   CONTINUE
      IF (IFMSNG(FRLOOP).EQ.0) WORK(9)=AL
      LXOFF=EMPTY(2)+0.01
      NGSOFF=0
      IF (LXOFF.NE.0) NGSOFF=XRC(LXOFF)+0.01
      INT=LOG
      IF(EMPTY(4) .GT. 1.0) INT=LIN
      IF (LXOFF.EQ.0)
     $ WRITE(IPU,830) OPTION,NRCPTS,NCROSS,AREAT,AREAL,INT,WORK
      IF (NGSOFF.GE.10) WRITE(IPR,3232) NGSOFF
3232  FORMAT(1X,'ERROR TOO MANY GSOFF POINTS',I5)
      IF (LXOFF.NE.0)
     $ WRITE(IPU,831) OPTION,NRCPTS,NCROSS,AREAT,AREAL,NGSOFF,INT,WORK
C
C CARD 4
C
      IF (IFMSNG(FLDSTG).EQ.0) FLDSTG=FLDSTG*FACLEN
C  THE FOLLOWING CHANGE MADE 0N 4/16/90 -- MAIN. #493, #593
C      STGMIN=STGMIN*FACLEN
      IF (IFMSNG(STGMIN).EQ.0) STGMIN=STGMIN*FACLEN
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
      IF (IFMSNG(GZERO).EQ.0) GZERO=GZERO*FACLEN
      DO 350 I=1,9
350   WORK(I)=BLANK
      LOC=1
      IF (IFMSNG(SCFSTG).NE.0) GO TO 400
      WORK(1)=SS
      SCFSTG=SCFSTG*FACLEN
      CALL URELCH(SCFSTG,8,WORK(2),2,N,IER)
      IERSUM=IERSUM+IER
      WORK(4)=QUOTE
      LOC=5
400   IF (IFMSNG(WRNSTG).NE.0) GO TO 450
      WORK(LOC)=WS
      WRNSTG=WRNSTG*FACLEN
      CALL URELCH(WRNSTG,8,WORK(LOC+1),2,N,IER)
      IERSUM=IERSUM+IER
      WORK(LOC+3)=QUOTE
450   CONTINUE
      IF(NRCPTS.LE.0) GO TO 455
      IF (IFMSNG(FLDSTG).EQ.0.AND.IFMSNG(GZERO).EQ.0)
     $ WRITE(IPU,840) FLDSTG,PVISFS,GZERO,STGMIN,WORK
      IF (IFMSNG(FLDSTG).EQ.0.AND.IFMSNG(GZERO).EQ.1)
     $ WRITE(IPU,841) FLDSTG,PVISFS,STGMIN,WORK
      FLDHMS=AM
      IF (PVISFS.EQ.ALT) FLDHMS=ALT
      IF (IFMSNG(FLDSTG).EQ.1.AND.IFMSNG(GZERO).EQ.0)
     $ WRITE(IPU,842) FLDHMS,GZERO,STGMIN,WORK
      IF (IFMSNG(FLDSTG).EQ.1.AND.IFMSNG(GZERO).EQ.1)
     $ WRITE(IPU,843) FLDHMS,STGMIN,WORK
      GO TO 456
455   CONTINUE
      IF (IFMSNG(FLDSTG).EQ.0.AND.IFMSNG(GZERO).EQ.0)
     $ WRITE(IPU,1840) FLDSTG,PVISFS,GZERO,WORK
      IF (IFMSNG(FLDSTG).EQ.0.AND.IFMSNG(GZERO).EQ.1)
     $ WRITE(IPU,1841) FLDSTG,PVISFS,WORK
      FLDHMS=AM
      IF (PVISFS.EQ.ALT) FLDHMS=ALT
      IF (IFMSNG(FLDSTG).EQ.1.AND.IFMSNG(GZERO).EQ.0)
     $ WRITE(IPU,1842) FLDHMS,GZERO,WORK
      IF (IFMSNG(FLDSTG).EQ.1.AND.IFMSNG(GZERO).EQ.1)
     $ WRITE(IPU,1843) FLDHMS,WORK
456   CONTINUE
C
C CARD 5
C
      IF (IFMSNG(RFSTG).EQ.0) RFSTG=RFSTG*FACLEN
C  THE FOLLOWING CHANGE MADE 0N 4/16/90 -- MAIN. #493, #593
      IF (IFMSNG(RFQ).EQ.1) GO TO 460
C      IF (IFMSNG(RFQ).EQ.0) RFQ=RFQ*FACVOL
C      IF (RFQ.GE.0.0.OR.RFSTG.GE.0.0.OR.IRFDAY.GE.0)
      RFQ=RFQ*FACVOL
      IF (RFSTG.GE.0.0.OR.IRFDAY.GE.0)
     $ WRITE(IPU,850) RFSTG,RFQ,IRFDAY,RFCOMT
      GO TO 465
  460 IF (RFSTG.GE.0.0.OR.IRFDAY.GE.0)
     &WRITE(IPU,851) RFSTG,IRFDAY,RFCOMT
  465 CONTINUE
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
C
C CARD 6
C
C  THE FOLLOWING CHANGE MADE 0N 4/16/90 -- MAIN. #493, #593
      IF(NRCPTS.EQ.0) GO TO 498
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
      DO 490 N=1,NRCPTS
      XRC(LOCH+N-1)=XRC(LOCH+N-1)*FACLEN
      XRC(LOCQ+N-1)=XRC(LOCQ+N-1)*FACVOL
C  THE FOLLOWING LINE ADDED ON 10/3/89 -- MAIN. #552
C  NO longer make call to Sig Figs, NOT needed 10/22/96 - R. ERB
CCC      CALL FSIGFG(XRC(LOCQ+N-1),4,IER)
C  END OF CHANGE OF 10/3/89 -- MAIN. #552
490   CONTINUE
      I=0
      DO 500 N=1,NRCPTS,3
      I=I+3
      IF (I.GT.NRCPTS) I=NRCPTS
      WRITE(IPU,860) (XRC(LOCH-1+M),XRC(LOCQ-1+M),M=N,I)
500   CONTINUE
C
C CARD 6A
C
      IF (LXOFF.EQ.0) GO TO 498
      N=NGSOFF*2
      DO 495 I=1,N
      XRC(LXOFF+I)=XRC(LXOFF+I)*FACLEN
495   CONTINUE
      I=0
      do 496 N=1,NGSOFF,3
        I=I+3
        IF (I.GT.NGSOFF) I=NGSOFF
        WRITE(IPU,861) (XRC(LXOFF+M),XRC(LXOFF+NGSOFF+M),M=N,I)
496   CONTINUE
C
C CARD 7
C
498   CONTINUE
      IF (NCROSS.EQ.0) GO TO 600
      DO 540 N=1,NCROSS
      XRC(LXELEV+N-1)=XRC(LXELEV+N-1)*FACLEN
      XRC(LXTOPW+N-1)=XRC(LXTOPW+N-1)*FACLEN
540   CONTINUE
      I=0
      DO 550 N=1,NCROSS,3
      I=I+3
      IF (I.GT.NCROSS) I=NCROSS
      WRITE(IPU,860) (XRC(LXELEV-1+M),XRC(LXTOPW-1+M),M=N,I)
550   CONTINUE
C
C CARD 8
C
      ABELOW=ABELOW*FACARE
      WRITE(IPU,880) ABELOW,SLOPE,FLOODN
C
C CARD 9
C
      IF (IFMSNG(FRLOOP).NE.0) GO TO 600
      LOCFR=EMPTY(1)
      XRC(LOCFR+1)=XRC(LOCFR+1)*FACVOL
      XRC(LOCFR+2)=XRC(LOCFR+2)*FACVOL
      XRC(LOCFR+3)=XRC(LOCFR+3)*FACLEN
      XRC(LOCFR+4)=XRC(LOCFR+4)*FACLEN
      XRC(LOCFR+5)=XRC(LOCFR+5)*FACVOL
      XRC(LOCFR+6)=XRC(LOCFR+6)*FACLEN
      NOCS=XRC(LOCFR+7)
      WRITE(IPU,885) (XRC(LOCFR+I-1),I=1,7),NOCS
C
C CARD 10
C
      IF (NOCS.EQ.0) GO TO 600
      LXELOC=LOCFR+8
      LXTWOC=LXELOC+NOCS
      DO 580 N=1,NOCS
      XRC(LXELOC+N-1)=XRC(LXELOC+N-1)*FACLEN
      XRC(LXTWOC+N-1)=XRC(LXTWOC+N-1)*FACLEN
580   CONTINUE
      I=0
      DO 585 N=1,NOCS,3
      I=I+3
      IF (I.GT.NOCS) I=NOCS
      WRITE(IPU,860) (XRC(LXELOC-1+M),XRC(LXTWOC-1+M),M=N,I)
585   CONTINUE
C
C CARD 11
C
C GO THRU THE OPTIONAL INFORMATION.
C STEPS INVOLVED ARE:
C   A. SEE IF ANY OPTIONAL INFO EXISTS (1ST LOCATION NE -1)
C   B. DECIDE WHAT NUMBER CODE WE HAVE AND GO TO PROPER PLACE
C   C. FOR EACH CODE THEN;
C                -RESET NEXT LOCATION
C                -WRITE OUT CHARACTER CODE AND INFO
C                -GO BACK TO STEP B, STOP WHEN NEXT LOC=-1
C
600   LOCXRC=IPOPT
C STEP A
620   I=XRC(LOCXRC)
      IF (I.EQ.-1) GO TO 999
C STEP B
      GO TO (710,720,730,740,750,760,770,780,790),I
      WRITE(IPU,950)
      CALL ERROR
      GO TO 999
C NUMBER CODE = 1, THEREFORE HAVE A COMMENT
C STEP C
710   M=LOCXRC+1
      LOCXRC=XRC(M)
      K=LOCXRC-1
      WRITE(IPU,890) OPCODE(1),AMP
713   J=M+1
      M=J+14
      IF (K.LE.M) GO TO 715
      WRITE(IPU,891) (XRC(I),I=J,M),QUOTE,AMP
      GO TO 713
715   WRITE(IPU,891) (XRC(I),I=J,K),QUOTE
      GO TO 620
C NUMBER CODE = 2, THEREFORE HAVE A USGS-ID
C STEP C
720   J=LOCXRC+2
      LOCXRC=XRC(LOCXRC+1)
      K=J+1
      WRITE(IPU,892) OPCODE(2),(XRC(I),I=J,K)
      GO TO 620
C NUMBER CODE = 3, THEREFORE HAVE A NWS-ID
C STEP C
730   J=LOCXRC+2
      LOCXRC=XRC(LOCXRC+1)
      K=J+1
      WRITE(IPU,894) OPCODE(3),(XRC(I),I=J,K)
      GO TO 620
C NUMBER CODE = 4, THEREFORE HAVE A BANKFULL-STG
C STEP C
740   VAL=XRC(LOCXRC+2)*FACLEN
      LOCXRC=XRC(LOCXRC+1)
      WRITE(IPU,893) OPCODE(4),OPCODE(5),VAL
      GO TO 620
C NUMBER CODE = 5, THEREFORE HAVE A RIVER-LOC
C STEP C
750   VAL=XRC(LOCXRC+2)*FACMKM
      LOCXRC=XRC(LOCXRC+1)
      WRITE(IPU,893) OPCODE(6),OPCODE(7),VAL
      GO TO 620
C NUMBER CODE = 6, THEREFORE HAVE A MOB-STG
C STEP C
760   VAL=XRC(LOCXRC+2)*FACLEN
      LOCXRC=XRC(LOCXRC+1)
      WRITE(IPU,893) OPBLNK,OPCODE(8),VAL
      GO TO 620
C NUMBER CODE = 7, THEREFORE HAVE A HSA-ID
C STEP C
770   J=LOCXRC+2
      LOCXRC=XRC(LOCXRC+1)
      K=J+1
      WRITE(IPU,894) OPCODE(9),(XRC(I),I=J,K)
      GO TO 620
C NUMBER CODE = 9, THEREFORE HAVE A E-19
C STEP C
780   IVAL=XRC(LOCXRC+2)
      LOCXRC=XRC(LOCXRC+1)
      WRITE(IPU,895) OPCODE(10),IVAL
      GO TO 620
C NUMBER CODE = 10, THEREFORE HAVE A E-19A
C STEP C
790   IVAL=XRC(LOCXRC+2)
      LOCXRC=XRC(LOCXRC+1)
      WRITE(IPU,895) OPCODE(11),IVAL
      GO TO 620
C
C CHECK FOR ANY ERRORS
C
999   IF (IERSUM.EQ.0) GO TO 998
      WRITE(IPR,960)
      CALL ERROR
C
C RESET COMMON /WHERE/
C
998   OPNAME(1)=OLDSUB(1)
      OPNAME(2)=OLDSUB(2)
      IOPNUM=IOLDOP
C
      RETURN
C
C
C***************FORMAT STATEMENTS***************************************
C
801   FORMAT(1H0,18H ** ENTER FPURC **)
C
810   FORMAT(3H ID,1X,2A4,1X,4HREPL,1X,2A4)
820   FORMAT(2H ',5A4,1H',1X,1H',5A4,1H',1X,F7.2,1X,F7.2)
830   FORMAT(1X,A1,1X,I3,1X,I3,1X,F10.2,1X,F10.2,1X,'INT=',10A4)
831   FORMAT(1X,A1,1X,I3,1X,I3,1X,F8.0,1X,F8.0,1X,'OFF=',I1,
     *1X,'INT=',10A4)
840   FORMAT(1X,F8.2,A4,F8.2,1X,F8.2,1X,9A4)
841   FORMAT(1X,F8.2,A4,3H M ,1X,F8.2,1X,9A4)
842   FORMAT(1X,A4,F8.2,1X,F8.2,1X,9A4)
843   FORMAT(1X,A4,3H M ,1X,F8.2,1X,9A4)
1840  FORMAT(1X,F8.2,A4,F8.2,1X,9A4)
1841  FORMAT(1X,F8.2,A4,3H M ,1X,9A4)
1842  FORMAT(1X,A4,F8.2,1X,9A4)
1843  FORMAT(1X,A4,3H M ,1X,9A4)
850   FORMAT(4H RF ,F8.2,1X,F10.2,1X,I8,1X,1H',5A4,1H')
C  THE FOLLOWING CHANGE MADE 0N 4/16/90 -- MAIN. #493, #593
851   FORMAT(4H RF ,F8.2,5H   M ,I8,1X,1H',5A4,1H')
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
860   FORMAT(3(1X,F8.2,1X,F10.2))
861   FORMAT(3(1X,F8.2,1X,F8.2))
880   FORMAT(1X,F8.2,1X,F8.6,1X,F10.4)
885   FORMAT(1X,F4.0,2(1X,F10.2),2(1X,F8.2),1X,F10.2,1X,F10.2,1X,I5)
890   FORMAT(1X,A8,T72,A4)
891   FORMAT(2H ',16A4,T72,A4)
892   FORMAT(1X,A8,1H',2A4,1H')
893   FORMAT(1X,2A8,F8.2)
894   FORMAT(1X,A8,2A4)
895   FORMAT(1X,A8,I10)
C
915   FORMAT(1H0,32HCONTENTS OF COMMON FRATNG FOLLOW
     * / 1X,10(9X,1H+)
     * / 1X,2A4,2X,10A4,2F10.2,5A4,3F10.2
     * / 1X,F10.2,6X,A4,3F10.2,3I10,F10.2,3I10
     * / 1X,2F10.2,F10.6,2F10.2,6X,A4,2I10,2F10.2
     * / 1X,I10,5A4)
950   FORMAT(10X,29H**ERROR** IMPOSSIBLE LOCATION)
960   FORMAT(10X,34H**ERROR** IN CHARACTER CONVERSIONS)
C***********************************************************************
C
      END
