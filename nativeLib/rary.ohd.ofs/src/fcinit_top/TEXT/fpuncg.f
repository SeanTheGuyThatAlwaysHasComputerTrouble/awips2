C MODULE FPUNCG
C-----------------------------------------------------------------------
C
      SUBROUTINE FPUNCG
C
C
C  THIS SUBROUTINE IS USED TO PUNCH OUT THE CARRYOVER GROUP
C  DEFINITIONS (FCINIT COMMAND 'PUNCHCG') IN THE FORMAT   THE
C  FCINIT COMMANDS 'CGDEF'                 REQUIRED FOR FUTURE
C  USE.
C
C     THE SUBCOMMANDS FOR THIS ROUTINE ARE:
C
C       IDENTIFIER (ID, IDS) CGID1 CGID2 .... &
C                            CGIDM ...... CGIDN
C          OR
C       ALL
C
C  AN 'END' CARD INDICATES THE END OF THE INPUT OF 'PUNCHCG'.
C
C  IF AN 'ALL' SUBCMD USED, ALL CARRYOVER GROUP DEFINITIONS WILL
C  BE PUNCHED OUT EXCEPT THOSE WHICH WITH THE CGID 'OBSOLETE'.
C
C  ALL DATES SAVED CARRYOVER WILL BE ALSO PUNCHED OUT AS AN ITEM
C  OF 'CGDEF' INPUT.
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fcfgs'
C
      DIMENSION GLIST(2,100),GLISTA(5,100),CGID0(2),NUMC(100)
      DIMENSION OBSO(2),FGIDS(2,100),DATES(3,10)
C
      CHARACTER*8 RTNNAM,OLDOPN
      PARAMETER (MCARD=30)
      CHARACTER*80 NCARD(MCARD)
      CHARACTER*80 IBUF,WORD
      PARAMETER (NCOMD=4)
      CHARACTER*10 XCOMD(NCOMD)/'ID','IDS','IDENTIFIER','ALL'/
      CHARACTER*8 CMDNAM/'PUNCHCG'/
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_top/RCS/fpuncg.f,v $
     . $',                                                             '
     .$Id: fpuncg.f,v 1.3 2002/02/11 20:20:01 dws Exp $
     . $' /
C    ===================================================================
C
      DATA OBSO/4HOBSO,4HLETE/
      DATA BLNK/4H    /,FGSS/4HFG  /,ANDS/4H&   /,DATE/4HDATE/
C
C
      RTNNAM='FPUNCG'
      IOPNUM=0
      CALL FSTWHR (RTNNAM,IOPNUM,OLDOPN,IOLDOP)
C
      IBUG = IFBUG('PUCG')
C
      IALL = 0
      IIDS = 0
      NCGS = 0
      NVA = 2
      ICARD = 0
C
      IF (ITRACE.GE.1)  WRITE(IODBUG,*) 'ENTER FPUNCG'
C
C
      WRITE(IPR,600)
  600 FORMAT(1H1,80(1H*)/2H *,78X,1H*/2H *,21X,
     .36H PUNCH CARRYOVER GROUP DEFINITION   ,21X,1H*/,2H *,78X,1H*/,
     . 1H ,80(1H*)///)
C................................................................
C
C  THE FIRST STEP IS TO READ AND LOAD INTO STORAGE ALL THE CARD IMAGES
C  FOR THE PUNCHCG COMMAND (SEARCH UNTIL 'END' CARD IS FOUND OR THE
C  LAST CARD IN THE INPUT STREAM IS READ.)
C
C...............................................................
C
      CALL CDINPT (NCARD,30,LASTCD,CMDNAM,IERC)
      IF (IERC.GT.0) GO TO 900
C
C
C...................................
C
C  NOW HAVE STORED ALL INPUT CARDS FOR THE PUNCHCG COMMAND.
C
C....................................
C
C
C   NO 'ID' NOR 'ALL' INPUTED, SET TO DEFAULT 'ALL'
      IF (LASTCD.GT.0) GOTO 30
      WRITE(IPR,620)
  620 FORMAT('0**WARNING** THERE IS NO COMMAND FOUND IN THE INPUT FILE
     ., THE SUBCOMMAND SET TO DEFAULT VALUE -ALL- ')
      IALL = 1
      GOTO 300
C
C
   30 ICARD = ICARD+1
      IF (ICARD.GT.LASTCD) GO TO 300
C
      CALL UMEMOV(NCARD(ICARD),IBUF,20)
      CALL USCAN2(IBUF,' ',1,WORD,LWORD,IERR)
C
      IF (IBUG.GE.1) WRITE(IODBUG,1603) WORD
 1603 FORMAT(1X,A)
C
      IF (WORD.EQ.'$') GO TO 30
C
C.........................
C
C  THE FIRST FIELD MUST BE EITHER 'ID' OR 'ALL'
C
      IDEST=0
      DO 42 I=1,NCOMD
         IF (WORD.EQ.XCOMD(I)) IDEST=I
   42    CONTINUE
      IF (IDEST.EQ.0) THEN
         WRITE(IPR,602) IBUF(1:LENSTR(IBUF))
  602 FORMAT('0**ERROR** ',A,' IS AN INVALID OPTION.')
         CALL ERROR
         GO TO 900
         ENDIF
C
      IF (IDEST.LT.4) GOTO 100
      IALL=1
      IF (IIDS.EQ.0) GOTO 30
      WRITE (IPR,604)
  604 FORMAT ('0**WARNING** ''ID'' AND ''ALL'' ARE EXCLUSIVE. ',
     *  '''ALL'' WILL BE IGNORED.')
      CALL WARN
      IALL=0
      GOTO 30
C
C  AN 'ID' COMMAND FOUND
  100 IIDS=1
      IF (IALL.EQ.0) GOTO 110
         WRITE(IPR,604)
         IALL=0
  110 CALL RDLIST (ICARD,LASTCD,NCARD,GLISTA,NLIST,NVA,NUMC,IERX)
      IF (NLIST.EQ.0) GOTO 30
      DO 120 J=1, NLIST
         GLIST(1,NCGS+J)=GLISTA(1,J)
         GLIST(2,NCGS+J)=GLISTA(2,J)
  120    CONTINUE
      NCGS=NCGS+NLIST
      GOTO 30
C
C  PUNCH CARRYOVER GROUP DEFINITION
C
C  GET CG INFORMATION
C
  300 CALL UREADT (KFFGST,1,FGID,IERR)
      NFGREC=IDUMYG
      CALL UREADT (KFCGD,1,NSLOTS,IERR)
      IF(IALL.EQ.1) NCGS=NCG
      IF(NCGS.GT.0) GOTO 310
C
C  NO FORECAST GROUP FOUND
      WRITE (IPR,608)
  608 FORMAT ('0**WARNING** NOTHING REQUESTED TO BE PUNCHED.')
      CALL WARN
      GOTO 900
C
C  PUNCH HEADER AND THE COMMAND 'CGDEF'
C
  310 CONTINUE
      WRITE(IPU,700) NOW(1),NOW(2),NOW(3)
  700 FORMAT(80(1H$)/1H$,78X,1H$/1H$,18X,42HTHIS PUNCH IS GENERATED BY C
     .OMMAND PUNCHCG ,18X,1H$/1H$,24X,30HFOR CARRYOVER GROUP DEFINITION,
     .24X,1H$/1H$,78X,1H$/1H$,31X,6HDATE: ,I2,1H/,I2,1H/,I4,
     .31X,1H$/1H$,78X,1H$/80(1H$))
C................................................................
      WRITE(IPU,701)
  701 FORMAT(5HCGDEF)
C
C .... PUNCH THE SUBCOMMANDS OF CGDEF ....
C
      DO 500 KCG=1, NCGS
      IF (IALL.EQ.0) GOTO 400
      CGID0(1)=CGIDS(1,KCG)
      CGID0(2)=CGIDS(2,KCG)
      GOTO 405
  400 CGID0(1)=GLIST(1,KCG)
      CGID0(2)=GLIST(2,KCG)
  405 IF(CGID0(1).EQ.OBSO(1).AND.CGID0(2).EQ.OBSO(2)) GOTO 500
C
C   FIND THE LOCATION IN CGIDS
      IF (IALL.EQ.1) GOTO 415
      DO 410 I=1,NCG
      IF (CGID0(1).EQ.CGIDS(1,I).AND.CGID0(2).EQ.CGIDS(2,I)) GOTO 420
  410 CONTINUE
C
C   CGID0 NOT IN CGIDS, ERROR FOUND.
      WRITE(IPR,640) CGID0
  640 FORMAT('0**WARNING** ',2A4,' DOES NOT EXIST, THIS ID IS IGNOR
     .')
      CALL WARN
      GOTO 500
C
C   CGID0 FOUND, READ INFORMATION OUT
  415 I=KCG
  420 CALL UREADT (KFCGD,ICOREC(I),CGIDC,IERR)
C
C   PACK UP SAVED TIME FOR CARRYOVERS
      NSLOTU=0
      DO 440 ISLOT=1,NSLOTS
      IF (ICODAY(ISLOT).EQ.0) GOTO 445
         NSLOTU=NSLOTU+1
         CALL MDYH1(ICODAY(ISLOT),ICOTIM(ISLOT),ICM,ICD,ICY,ICHH,NOUTZ,
     *           NOUTDS,ZCODE)
         ICY=MOD(ICY,100)
C     CONVERT TIME FROM INTEGER TO CHARACTER
         CALL UFI2AZ (DATES(1,ISLOT),1,2,1,ICM)
         CALL UFI2AZ (DATES(1,ISLOT),3,2,1,ICD)
         CALL UFI2AZ (DATES(2,ISLOT),1,2,1,ICY)
         CALL UFI2AZ (DATES(2,ISLOT),3,2,1,ICHH)
         CALL UMOVE (ZCODE,DATES(3,ISLOT),4)
  440    CONTINUE
C
C   NOW, DEAL WITH THE FG NAMES.
C
  445 DO 450 IFG=1,NFGREC
      CALL UREADT (KFFGST,IFG,FGID,IERR)
      IF (CGID0(1).NE.CGIDF(1)) GOTO 450
      IF (CGID0(2).NE.CGIDF(2)) GOTO 450
      FGIDS(1,ICOSEQ)=FGID(1)
      FGIDS(2,ICOSEQ)=FGID(2)
  450 CONTINUE
C
C -------------------------------------------------
C
C   EVERYTHING HAS BEEN OKEY, BEGIN TO PUNCH
C
C  PUNCH ID AND TITLE
      WRITE(IPU,702) CGID0
  702 FORMAT(3HID ,2A4)
      WRITE(IPU,703) CGNAME
  703 FORMAT(6HTITLE ,1H',5A4,1H')
C
C  PUNCH FORECAST GROUPS
      K2=0
      AMPS=ANDS
      HEAD=FGSS
  470 K1=K2+1
      K2=K1+6
      IF(K2.GT.NFG) K2=NFG
      IF(K2.GE.NFG) AMPS=BLNK
      IF(K1.GT.1) HEAD=BLNK
      WRITE(IPU,704) HEAD,((FGIDS(J1,J2),J1=1,2),J2=K1,K2),AMPS
  704 FORMAT(A4,1X,7(2A4,1X),A4)
      IF(K2.LT.NFG) GOTO 470
C
C   PUNCH DATES
      K2=0
      AMPS=ANDS
      HEAD=DATE
  480 K1=K2+1
      K2=K1+4
      IF(K2.GT.NSLOTU) K2=NSLOTU
      IF(K2.GE.NSLOTU) AMPS=BLNK
      IF(K1.GT.1) HEAD=BLNK
      WRITE(IPU,705) HEAD,((DATES(J1,J2),J1=1,3),J2=K1,K2),AMPS
  705 FORMAT(A4,1X,5(3A4,1X),A4)
      IF(K2.LT.NSLOTU) GOTO 480
C
  500 CONTINUE
C
C   LOOP END,  PUNCH 'END' CARD AND RETURN
C
      WRITE(IPU,706)
  706 FORMAT(3HEND)
C
  900 CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (ITRACE.GE.1) WRITE(IODBUG,*) 'EXIT FPUNCG'
C
      RETURN
C
      END
