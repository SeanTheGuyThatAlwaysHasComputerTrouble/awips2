C MEMBER CGDSEG
C  (from old member FCCGDSEG)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 08/14/95.13:37:28 BY $WC21DT
C
C
C @PROCESS LVL(77)
C
      SUBROUTINE CGDSEG(SEGID,IER,NDAZE)
C
C DESC 'ADD A SEGMENT TO A C.O. GROUP BEING DEFINED'
C
C  SUBROUTINE ADDS A SEGMENT TO A CARRYOVER GROUP WHICH IS BEING
C  DEFINED.  BASICALLY, IT DOES TWO THINGS --
C    1.ADD THE C.O.GROUP IDENTIFIER TO THE RECORD ON FILE FCSEGSTS.
C    2.SORT THE DATES OF CARRYOVER ON FILE FCCARRY TO MATCH THE
C      DATES REQUIRED BY THE C.O.GROUP DEFINITION.
C
C  ROUTINE ORIGINALLY WRITTEN BY --
C    ED JOHNSON -- HRL -- 28 NOV 1979
C  CHANGED IN DO LOOPS 140 AND 220 TO STORE CO DATES IN
C   LOCATIONS 'IDAZE' OF ICDAYC AND ICHRC INSTEAD OF 'ISLOT'
C    GEORGE F. SMTIH -- HRL -- 4/10/86
C  CHANGED TO WORK WHEN ONLY ONE DATE OF CO IS WANTED IN NEW CGROUP.
C    IN PAST WOULD NOT SORT AND WOULD COPY 1ST SLOT ON EXISTING
C    CARRYOVER FILE INTO DATE WANTED (WHETHER DATES MATCHED OR NOT).
C    ADDED CODE IMMEDIATELY AFTER LABEL 150.
C     GEORGE F. SMITH -- HRL -- JAN 13, 1988.
C
C.......................................................................
      DIMENSION SEGID(2)
C
C  COMMONS FOR C ARRAY STORAGE
C
      INCLUDE 'common/fc'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fd'
      INCLUDE 'common/oldc'
      INCLUDE 'common/oldp'
      INCLUDE 'common/oldt'
      INCLUDE 'common/oldts'
      INCLUDE 'common/fp'
      INCLUDE 'common/resetc'
      INCLUDE 'common/ft'
      INCLUDE 'common/fts'
C
C  OTHER COMMON BLOCKS
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fcsegc'
      INCLUDE 'common/fcsegn'
C  NOTE-IT IS CONVENIENT TO MAKE ICGID REAL
      REAL ICGID
      INCLUDE 'common/fcunit'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/where'
C
C  LOCAL VARIABLES
C
      DIMENSION SUBNAM(2),OLDNAM(2),NGETCO(20)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_top/RCS/cgdseg.f,v $
     . $',                                                             '
     .$Id: cgdseg.f,v 1.3 1997/06/24 19:50:07 page Exp $
     . $' /
C    ===================================================================
C
      DATA SUBNAM/4HCGDS,4HEG  /,BLANK/4H    /
      DATA BUGOPT/4HCGDF/
C
C  NGETCO(I) WILL BE THE SLOT NUMBER OF EXISTING CARRYOVER USED
C  TO DEFINE CARRYOVER FOR SLOT I.  NGETCO(I) WILL BE IN THE RANGE
C  1 TO 20 , AND I WILL VARY FROM 1 TO NDAZE.
C
C  DEBUGGING OPTION = 'CGDF'
C
C  TRACE LEVEL = 1
C
      IF(ITRACE.GE.1)WRITE(IODBUG,10)
10    FORMAT(19H *** CGDSEG ENTERED)
      DO 20 I=1,2
      OLDNAM(I)=OPNAME(I)
      OPNAME(I)=SUBNAM(I)
20    CONTINUE
      IOLDOP=IOPNUM
      IOPNUM=0
      IF(IFBUG(BUGOPT).NE.1)GO TO 40
      WRITE(IODBUG,30)SEGID
30    FORMAT(21H --IN CGDSEG, SEGID =,2A4)
40    CALL FLOCSG(SEGID,IRSEG)
      IF(IRSEG.LE.0)GO TO 380
C
C  FGETSG FILLS COMMON BLOCK /FCSEGN/
C
      CALL FGETSG(SEGID,IRSEG,MP,P,MT,T,MTS,TS,1,1,IER)
      IF(IER.EQ.0)GO TO 60
      WRITE(IPR,50)SEGID
50    FORMAT(36H DUE TO ERROR IN FGETSG FOR SEGMENT ,2A4,
     .       29H SUBROUTINE CGDSEG TERMINATED)
      GO TO 380
60    IF(ICGID(1).EQ.BLANK.AND.ICGID(2).EQ.BLANK)GO TO 80
      WRITE(IPR,70)SEGID,ICGID,CGIDC
70    FORMAT('0**ERROR** IN CGDSEG, SEGMENT ',2A4,
     .       36H ALREADY BELONGS TO CARRYOVER GROUP ,2A4,/,1H ,10X,
     .       32HIT CANNOT BE ADDED TO C.O.GROUP ,2A4)
      CALL ERROR
      GO TO 380
C
C  AT THIS POINT, KNOW THAT SEGMENT CAN BE ADDED TO C.O.GROUP
C  IF NO OPERATIONS HAVE CARRYOVER, THEN NO NEED TO UPDATE CARRYOVER
C  FILE
C
80    CONTINUE
      IF (NCOPS .EQ. 0) GO TO 360
C
C  USE FCDATE TO FIND EXISTING DATES OF CARRYOVER FOR SEGMENT
C    FCDATE FILLS COMMON BLOCK /FCSEGC/
C
      CALL FCDATE(SEGID,0)
C
C  CHECK IF ANY SLOTS HAVE DATED CARRYOVER
C
      NUMDAT=0
      DO 100 I=1,NSLOTS
      IF(ICDAYC(I).GT.0)NUMDAT=NUMDAT+1
      IF (INCSEG(I).EQ.1) GO TO 100
      WRITE(IPR,90) I,IDSEGN
90    FORMAT('0**ERROR**',/22X,'SLOT NO. ',I2,' FOR SEGMENT ',
     .2A4,' IS INCOMPLETE.',/22X,'CARRYOVER GROUP WILL NOT BE DEFINED.')
      CALL ERROR
      GO TO 380
100   CONTINUE
C
C  NDAZE IS THE NUMBER OF CO SLOTS TO BE DATED IN NEW CO GROUP.
C  DATES WANTED ON NEW CO GROUP ARE IN ICODAY/ICOTIM.
C  DATES EXISTING ON CARRYOVER FILE FOR SEGMENT ARE IN ICDAYC/ICHRC.
C
      DO 110 I=1,NDAZE
110   NGETCO(I)=I
C
C  NOTE-IF ALL EXISTING DAYS ARE INITIAL VALUES, THEN CAN USE SAME
C       SLOTS TO DEFINE NEW DATES.
C
      IF(NUMDAT.EQ.0)GO TO 160
C
C  DEFINE NGETCO ARRAY
C
      DO 150 IDAZE=1,NDAZE
      ICLOSE=0
      NHCLOS=1000000000
      DO 120 I=1,NSLOTS
      IF(ICDAYC(I).LT.1)GO TO 120
      NH=24*(ICODAY(IDAZE)-ICDAYC(I)) + (ICOTIM(IDAZE)-ICHRC(I))
      IF(IABS(NH).GE.NHCLOS)GO TO 120
      NHCLOS=IABS(NH)
      ICLOSE=I
120   CONTINUE
      IF(ICLOSE.GT.0)GO TO 140
      WRITE(IPR,130)SEGID,(ICDAYC(I),ICHRC(I),I=1,NSLOTS)
130   FORMAT('0**ERROR** UNABLE TO DEFINE NGETCO ARRAY IN ',
     .       30HSUBROUTINE CGDSEG FOR SEGMENT ,2A4,/,1H ,10X,
     .       50HLIST OF CARRYOVER DAYS AND HOURS FOR SEGMENT IS --,/,
     .  1H ,10(I8,1X,I3,1X),/,1H ,10(I8,1X,I3,1X))
      CALL ERROR
      GO TO 380
140   NGETCO(IDAZE)=ICLOSE
150   CONTINUE
C
C  NGETCO ARRAY NOW DEFINED - CALL CSRSET TO INITIALIZE CARRYOVER
C  SORT ROUTINES.  NOTE THAT CARRYOVER SORTING IS NOT NEEDED IF
C  ALL EXISTING CARRYOVER IS UNDATED(NUMDAT.EQ.0)
C
160   IF(IFBUG(BUGOPT).NE.1)GO TO 190
      WRITE(IODBUG,170)NSLOTS,NDAZE,NUMDAT
170   FORMAT(35H --IN CGDSEG, NSLOTS,NDAZE,NUMDAT =,3I5,/,
     .  1H ,10H    NGETCO,10H    ICDAYC,5X,5HICHRC,4X,6HICODAY,
     .  4X,6HICOTIM)
      WRITE(IODBUG,180)(NGETCO(I),ICDAYC(I),ICHRC(I),ICODAY(I),
     .  ICOTIM(I),I=1,NSLOTS)
180   FORMAT(1H ,5I10)
190   IF(NUMDAT.EQ.0)GO TO 280
C
C  IF NDAZE EQ 1 (I.E., ONLY ONE DATED SLOT WANTED IN NEW CGROUP)
C  CAN SKIP USE OF INTERNAL SORTING SUBROUTINES (CSRSET, ETC.).
C
      IF(NDAZE.EQ.1)GO TO 270
C
      CALL CSRSET(C,NC,ISLOT,NDAZE,NARAYS,D,MD,P,MP,OLDP,MOLDP,TS,MTS,
     .  OLDTS,MOLDTS,T,MT,OLDT,MOLDT,OLDC,MOLDC,RESETC,MRSTC,
     .  ARAY10,0,IER)
      IF(IER.EQ.0)GO TO 210
      WRITE(IPR,200)
200   FORMAT(53H0 SUBROUTINE CGDSEG TERMINATED DUE TO ERROR IN CSRSET)
      GO TO 380
C
C  READY TO PUT EXISTING CARRYOVER ARRAYS INTO PROPER POSITIONS
C  IN INTERNAL SORTING PACKAGE
C
210   DO 230 IDAZE=1,NDAZE
      ISLOT=NGETCO(IDAZE)
      CALL FGETCO (IDSEGN,ICDAYC(ISLOT),ICHRC(ISLOT),C,MC,'ERROR',IRR)
      IF (IRR.GT.0) GO TO 380
      CALL CSAVE(C,NC,IDAZE,NDAZE,NARAYS,D,MD,P,MP,OLDP,MOLDP,TS,MTS,
     .  OLDTS,MOLDTS,T,MT,OLDT,MOLDT,OLDC,MOLDC,RESETC,MRSTC,
     .  ARAY10,0,IER)
      IF(IER.EQ.0)GO TO 230
      WRITE(IPR,220)
220   FORMAT(52H0 SUBROUTINE CGDSEG TERMINATED DUE TO ERROR IN CSAVE)
      GO TO 380
230   CONTINUE
C
C  NOW CARRYOVER FOR THE NDAZE REQUIRED DAYS IS SORTED INTO SLOTS
C  1 TO NDAZE IN THE INTERNAL SORT ROUTINES.  TIME TO RETRIEVE IT
C  AND MOVE IT TO FILE.
C
      DO 260 IDAZE=1,NDAZE
      CALL CRETRV(C,NC,IDAZE,NDAZE,NARAYS,D,MD,P,MP,OLDP,MOLDP,TS,MTS,
     .  OLDTS,MOLDTS,T,MT,OLDT,MOLDT,OLDC,MOLDC,RESETC,MRSTC,
     .  ARAY10,0,IER)
      IF(IER.EQ.0)GO TO 250
      WRITE(IPR,240)
240   FORMAT(53H0 SUBROUTINE CGDSEG TERMINATED DUE TO ERROR IN CRETRV)
      GO TO 380
250   CONTINUE
      NE1=NERRS
      CALL FPUTCO (IDSEGN,ICODAY(IDAZE),ICOTIM(IDAZE),NOW,IDAZE,
     .  IWOCRY,C,NC,1)
      IF (NERRS.GT.NE1) GO TO 260
      ICDAYC(IDAZE) = ICODAY(IDAZE)
      ICHRC(IDAZE) = ICOTIM(IDAZE)
260   CONTINUE
      GO TO 320
C
C  THIS SECTION USED WHEN ONLY ONE DATED SLOT WANTED IN NEW CGROUP.
C  (NDAZE EQ 1) - MUST STILL GET THE EXISTING CO THAT IS CLOSEST
C  IN TIME TO THE DATE WANTED.
C
270   ISLOT=NGETCO(1)
C
      CALL FGETCO (IDSEGN,ICDAYC(ISLOT),ICHRC(ISLOT),C,MC,'ERROR',IRR)
C
      IF(IRR.GT.0)GO TO 380
      NE1=NERRS
C
      CALL FPUTCO (IDSEGN,ICODAY(1),ICOTIM(1),NOW,1,IWOCRY,C,NC,1)
C
      IF(NERRS.GT.NE1)GO TO 320
      ICDAYC(1)=ICODAY(1)
      ICHRC(1)=ICOTIM(1)
      GO TO 320
C
C  THIS SECTION USED WHEN CARRYOVER SORTING NOT NEEDED
C
280   DO 310 IDAZE=1,NDAZE
      CALL FGETCO (IDSEGN,ICDAYC(IDAZE),ICHRC(IDAZE),C,NC,'ERROR',IRR)
      IF (IRR.GT.0) GO TO 380
      CALL FPUTCO (IDSEGN,ICODAY(IDAZE),ICOTIM(IDAZE),NOW,IDAZE,
     .  IWOCRY,C,NC,1)
      IF (IFBUG(BUGOPT).GE.1) WRITE(IODBUG,290) NE1,NERRS
290   FORMAT(4X,10H* * NE1 = ,I2,13H  ** NERRS = ,I2)
      ICDAYC(IDAZE) = ICODAY(IDAZE)
      ICHRC(IDAZE) = ICOTIM(IDAZE)
      IF (IFBUG(BUGOPT).GE.1) WRITE(IODBUG,300) (IM,ICDAYC(IM),IM,ICHRC(
     . IM),IM=1,NSLOTS)
300   FORMAT(4X,21H** COMMON /FCSEGC/ **,/(5X,07HICDAYC(,I2,04H) = ,I6,
     .    06HICHRC(,I2,04H) = ,I2/))
310   CONTINUE
C............................
C  REMOVE ANY DATES ON SLOTS IF EXISTING CO IS DATED AND FEWER DATES
C  ARE BEING ASSIGNED THAN EXIST ON THE SEGMENT.
C
320   IF (NUMDAT.LE.NDAZE) GO TO 360
C
      IF (IFBUG(BUGOPT).GE.1) WRITE(IODBUG,330)
330   FORMAT(5X,'*** REMOVING EXCESS DATES FROM SLOTS')
      NFSL = NDAZE + 1
      DO 350 I=NFSL,NSLOTS
      IF (ICDAYC(I).EQ.0.AND.ICHRC(I).EQ.0) GO TO 350
      IF (IFBUG(BUGOPT).GE.1) WRITE(IODBUG,340) I,ICDAYC(I),ICHRC(I)
340   FORMAT(10X,'*** SLOT NO.',I3,' JUL. DAY AND HR = ',2I5)
C..................
C GET CARRYOVER AND SET DATE TO ZERO
C
      CALL FGETCO (IDSEGN,ICDAYC(I),ICHRC(I),C,MC,'ERROR',IRR)
      IF (IRR.GT.0) GO TO 380
      CALL FPUTCO (IDSEGN,0,0,NOW,I,IWOCRY,C,NC,1)
350   CONTINUE
C
C  CARRYOVER SUCCESSFULLY SORTED -- NOW SET RECORD ON FILE FCSEGSTS
C
360   ICGID(1)=CGIDC(1)
      ICGID(2)=CGIDC(2)
      CALL FPUTSG(P,T,TS,0,1,0,1,0,IER)
      IF(IER.EQ.0)GO TO 390
      WRITE(IPR,370)SEGID
370   FORMAT(47H0 SUBROUTINE CGDSEG TERMINATED DUE TO ERROR IN ,
     .  19HFPUTSG FOR SEGMENT ,2A4)
      GO TO 380
C
C  ERROR RETURN
C
380   IER=1
      GO TO 400
C
C  NORMAL RETURN
C
390   IER=0
400   IOPNUM=IOLDOP
      OPNAME(1)=OLDNAM(1)
      OPNAME(2)=OLDNAM(2)
      RETURN
      END
