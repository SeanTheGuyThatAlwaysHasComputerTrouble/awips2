C MODULE FPUNFG
C-----------------------------------------------------------------------
C
      SUBROUTINE FPUNFG
C
C  THIS SUBROUTINE IS USED TO PUNCH OUT THE FORECAST GROUP
C  DEFINITIONS (FCINIT COMMAND 'PUNCHFG') IN THE FORMAT   THE
C  FCINIT COMMANDS 'FGDEF' AND 'SPECIALFG' REQUIRED FOR FUTURE
C  USE.
C
C     THE SUBCOMMANDS FOR THIS ROUTINE ARE:
C
C       IDENTIFIER (ID, IDS) FGID1 FGID2 .... &
C                            FGIDM ...... FGIDN
C          OR
C       ALL
C
C  AN 'END' CARD INDICATES THE END OF THE INPUT OF 'PUNCHFG'.
C
C  IF AN 'ALL' SUBCMD USED, ALL FORECAST GROUP DEFINITIONS WILL
C  BE PUNCHED OUT EXCEPT THOSE WHICH WITH THE FGID 'OBSOLETE'.
C
C  SPECIAL FORECAST GROUPS WILL BE ALSO PUNCHED OUT AFTER ALL OF
C  THE NORMAL FGS HAVE BEEN PUNCHED OUT, NO MATTER YOU USE 'ALL'
C  FOR ALL FGS OR USE 'ID' TO SPECIFY THE PARTICULAR FGS.
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fcfgs'
      INCLUDE 'common/fcfgid'
C
      DIMENSION GLIST(2,100),GLISTA(5,100),FGID0(2),NUMC(100)
      DIMENSION OBSO(2)
      DIMENSION SPECID(2,40),SPEDSC(5,40),ISPERC(40),NSPESG(40)
C
      CHARACTER*8 RTNNAM,OLDOPN
      PARAMETER (MCARD=30)
      CHARACTER*80 NCARD(MCARD)
      CHARACTER*80 IBUF,WORD
      PARAMETER (NCOMD=4)
      CHARACTER*10 XCOMD(NCOMD)/'ID','IDS','IDENTIFIER','ALL'/
      CHARACTER*8 CMDNAM/'PUNCHFG'/
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_top/RCS/fpunfg.f,v $
     . $',                                                             '
     .$Id: fpunfg.f,v 1.4 2002/02/11 20:20:13 dws Exp $
     . $' /
C    ===================================================================
C
      DATA OBSO/4HOBSO,4HLETE/
C
C
      RTNNAM='FPUNFG'
      IOPNUM=0
      CALL FSTWHR (RTNNAM,IOPNUM,OLDOPN,IOLDOP)
C
      IBUG = IFBUG('PUFG')
C
      IALL = 0
      IIDS = 0
      NFGS = 0
      NVA = 2
      ICARD = 0
      NSPEC = 0
C
      IF (ITRACE.GE.1)  WRITE(IODBUG,*) 'ENTER FPUNFG'
C
      WRITE(IPR,600)
  600 FORMAT(1H1,80(1H*)/2H *,78X,1H*/2H *,21X,
     .36H PUNCH FORECAST GROUP DEFINITION    ,21X,1H*/,2H *,78X,1H*/,
     . 1H ,80(1H*)///)
C................................................................
C
C  THE FIRST STEP IS TO READ AND LOAD INTO STORAGE ALL THE CARD IMAGES
C  FOR THE PUNCHFG COMMAND (SEARCH UNTIL 'END' CARD IS FOUND OR THE
C  LAST CARD IN THE INPUT STREAM IS READ.)
C
C...............................................................
C
      CALL CDINPT (NCARD,MCARD,LASTCD,CMDNAM,IERC)
      IF (IERC.GT.0) GO TO 9999
C
C
C...................................
C
C  NOW HAVE STORED ALL INPUT CARDS FOR THE PUNCHFG COMMAND.
C
C....................................
C
C
C   NO 'ID' NOR 'ALL' INPUTED, SET TO DEFAULT 'ALL'
      IF (LASTCD.GT.0) GOTO 30
         WRITE(IPR,620)
  620 FORMAT('0**WARNING** NO COMMAND FOUND. ''ALL'' WILL BE USED.')
         CALL WARN
         IALL = 1
         GOTO 300
C
C
   30 ICARD = ICARD+1
      IF (ICARD.GT.LASTCD) GO TO 300
C
      CALL UMEMOV (NCARD(ICARD),IBUF,20)
C
      CALL USCAN2 (IBUF,' ',1,WORD,LWORD,IERR)
C
      IF (WORD.EQ.'$') GO TO 30
C
C  THE FIRST FIELD MUST BE EITHER 'ID' OR 'ALL'
C
      IDEST=0
      DO 37 I=1,NCOMD
         IF (WORD.EQ.XCOMD(I)) IDEST=I
   37    CONTINUE
      IF (IDEST.EQ.0) THEN
         WRITE( IPR,602) IBUF(1:LENSTR(IBUF))
  602 FORMAT ('0**ERROR** ',A,' IS AN INVALID OPTION.')
         CALL ERROR
         GO TO 9999
         ENDIF
C
      IF (IDEST.LT.4) GOTO 100
      IALL=1
      IF (IIDS.EQ.0) GOTO 30
      WRITE(IPR,604)
  604 FORMAT ('0**WARNING** ''ID'' AND ''ALL'' ARE EXCLUSIVE. ',
     *  '''ALL'' WILL BE IGNORED.')
      IALL=0
      GOTO 30
C
C  AN 'ID' COMMAND FOUND
  100 IIDS=1
      IF (IALL.EQ.0) GOTO 110
         WRITE(IPR,604)
         IALL=0
  110 CALL RDLIST (ICARD,LASTCD,NCARD,GLISTA,NLIST,NVA,NUMC,IERX)
      IF (NLIST.EQ.0) GOTO 30
      DO 120 J=1, NLIST
         GLIST(1,NFGS+J)=GLISTA(1,J)
         GLIST(2,NFGS+J)=GLISTA(2,J)
  120    CONTINUE
      NFGS=NFGS+NLIST
      GOTO 30
C
C  PUNCH FORECAST GROUP DEFINITION
C
C  GET FG INFORMATION
C
  300 CALL UREADT (KFFGST,1,FGID,IERR)
      NFGREC=IDUMYG
      IF(IALL.EQ.1) NFGS=NFGREC
      IF(NFGS.GT.0) GOTO 310
C
C  NO FORECAST GROUP FOUND, ABORT COMMAND
C
      WRITE(IPR,608)
  608 FORMAT('0**WARNING** NOTHING REQUESTED TO BE PUNCHED.')
      CALL WARN
      GOTO 9999
C
C  PUNCH HEADER AND THE COMMAND 'FGDEF'
C
  310 CONTINUE
      WRITE(IPU,700) NOW(1),NOW(2),NOW(3)
  700 FORMAT(80(1H$)/1H$,78X,1H$/1H$,18X,42HTHIS PUNCH IS GENERATED BY C
     .OMMAND PUNCHFG ,18X,1H$/1H$,24X,30HFOR FORECAST GROUP DEFINITION ,
     .24X,1H$/1H$,78X,1H$/1H$,31X,6HDATE: ,I2,1H/,I2,1H/,I4,
     .31X,1H$/1H$,78X,1H$/80(1H$))
C................................................................
      WRITE(IPU,701)
  701 FORMAT(1H$/'$   NORMAL FORECAST GROUP DEFINITIONS'/1H$/5HFGDEF)
C
C .... PUNCH THE SUBCOMMANDS OF FGDEF ....
C
      DO 500 I=1, NFGS
         IF(IIDS.NE.1) GOTO 340
           IFLAG=1
           FGID0(1)=GLIST(1,I)
           FGID0(2)=GLIST(2,I)
           GOTO 350
  340    CONTINUE
           IFLAG=0
           NUMFG=I
C
C --- GET FORECAST GROUP INFORMATION ---
C
  350 CALL FGETFG(NUMFG,FGID0,IFLAG)
      IF(FGID(1).EQ.OBSO(1).AND.FGID(2).EQ.OBSO(2)) GOTO 500
      IF (NUMFG.LT.0) GOTO 9999
      IF (NUMFG.GT.0) GOTO 400
C
C  FG NOT FOUND
C
      WRITE(IPR,610) FGID0
  610 FORMAT('0**WARNING** FORECAST GROUP ',2A4,' NOT FOUND.')
      CALL WARN
      GOTO 500
C
  400 CONTINUE
C  CHECK FOR SPECIAL FORECAST GROUPS
C
      IF(ISPEC.EQ.0) GOTO 450
      NSPEC=NSPEC+1
      SPECID(1,NSPEC)=FGID(1)
      SPECID(2,NSPEC)=FGID(2)
      SPEDSC(1,NSPEC)=DESCR(1)
      SPEDSC(2,NSPEC)=DESCR(2)
      SPEDSC(3,NSPEC)=DESCR(3)
      SPEDSC(4,NSPEC)=DESCR(4)
      SPEDSC(5,NSPEC)=DESCR(5)
      ISPERC(NSPEC)=IREC
      NSPESG(NSPEC)=NSEG
      GOTO 500
C
C  PUNCH THE DEFINITION
  450 CALL FGSPUN(FGID,DESCR,NSEG,IREC)
C
CMGM  1/18/02 Separate 500 Continue and write statement
CMGM  Was writing 'END' too many times
CMGM  500 WRITE(IPU,705)

  500 CONTINUE
      WRITE(IPU,705)
  705 FORMAT('END')

C
C  ALL NORMAL FGS HAVE BEEN PUNCHED, LOOKING FOR SPECIAL FGS
C
      IF(NSPEC.EQ.0) GOTO 9999
      WRITE(IPU,720)
  720 FORMAT(1H$/'$   SPECIAL FG DEFINITIONS'/1H$/9HSPECIALFG)
      DO 520 I=1, NSPEC
         CALL FGSPUN (SPECID(1,I),SPEDSC(1,I),NSPESG(I),ISPERC(I))
  520    CONTINUE
      WRITE (IPU,705)
C
 9999 CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (ITRACE.GE.1) WRITE(IODBUG,*) 'EXIT FPUNFG'
C
      RETURN
C
      END
