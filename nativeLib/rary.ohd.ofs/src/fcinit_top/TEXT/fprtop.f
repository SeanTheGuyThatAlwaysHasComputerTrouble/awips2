C MEMBER FPRTOP
C  (from old member FCFPRTOP)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 08/14/95.11:20:38 BY $WC21DT
C
C @PROCESS LVL(77)
C
C DESC - FOR CARRYOVER PRINT OF SAC-SMA, SNOW-17, AND API-MKC OPERATIONS
C
C..................................................................
C
      SUBROUTINE FPRTOP
C
C..................................................................
C
C  NO ARGUMENTS NEEDED FOR THIS ROUTINE
C
C..................................................................
C
C  THIS ROUTINE USES THE FREE FORMAT INPUT ROUTINES DEVELOPED
C  BY TASC.
C
C  THIS ROUTINE IS CALLED WHEN A 'PRINTOPS' COMMAND IS ENCOUNTERED
C  IN PROGRAM FCINIT. THIS COMMAND IS USED TO PRINT CARRYOVER FOR THE
C  THREE OPERATIONS SAC-SMA, SNOW-17, AND API-MKC. ANY OR ALL OPER-
C  ATIONS' CARRYOVER CAN BE PRINTED FOR ANY NUMBER OF CARRYOVER AND/OR
C  FORECAST GROUPS FOR SPECIFIC DATES OR FOR ANY NUMBER OF THE MOST
C  RECENT DATES HELD ON THE CARRYOVER FILE. ALL THESE OPTIONS ARE
C  SPECIFIED BY THE FOLLOWING SUB COMMANDS:
C
C   SUBCOMMAND (ABBR.)   SUBSEQUENT FIELDS    PURPOSE
C   ------------------   -----------------    -------
C
C    OPERATIONS (OPS,O)  THE IDENTIFIER(S)    SPECIFIES FOR WHICH OPER-
C                        'SAC-SMA',           ATIONS CARRYOVER IS TO BE
C                        'SNOW-17', AND/OR    PRINTED.(THIS MUST BE THE
C                        'API-MKC'.           FIRST SUBCOMMAND ENTERED)
C
C    UNITS      (U)      ENGLISH( OR E) OR    SPECIFIES THE UNITS CARRY-
C                        METRIC (OR M)        OVER IS TO BE PRINTED IN.
C                                             (OPTIONAL; IF OMITTED, HCL
C                                             DEFAULT WILL BE USED)
C
C    CGROUPS (CGROUP,CG  LIST OF CARRYOVER    SPECIFIES THOSE CARRYOVER
C             OR C)      GROUP IDENTIFIERS.   GROUPS FOR WHICH CARRYOVER
C                                             IS TO BE PRINTED. A CGROUP
C                                             OR AN FGROUP SUBCMD MUST
C                                             BE ENTERED.
C
C    FGROUPS (FGROUP,FG  LIST OF FORECAST     SPECIFIES THOSE FORECAST
C             OR F)      GROUP IDENTIFIERS.   GROUPS FOR WHICH CARRYOVER
C                                             IS TO BE PRINTED. A FGROUP
C                                             OR A CGROUP SUBCMD MUST
C                                             BE ENTERED.
C
C    DATES (DATE,D)      LIST OF DATES OR     SPECIFY DATES OR HOW MANY
C                        LAST N, WHERE N      OF THE MOST RECENT DATES
C                        IS THE NUMBER OF     OF CARRYOVER ARE TO BE
C                        MOST RECENT DATES    PRINTED.
C                        TO BE PRINTED.       IF THIS SUBCMD IS OMITTED
C                                             ONLY THE MOST RECENT DATE
C                                             OF CARRYOVER IS PRINTED.
C
C    PAGESIZE            INTEGER              NUMBER OF LINES OF
C                                             PRINTOUT PER PAGE.
C                                             (DEFAULT = 80)
C
C......................................................................
C
C  OIGINALLY PROGRAMMED BY --
C      JOE OSTROWSKI -- HRL -- 820309
C  CHANGED TO ALLOW 100 ITEMS IN LIST TO RDLIST
C     GEORGE F. SMITH -- HRL -- 3/28/86
C
C.......................................................................
C
      INCLUDE 'common/where'
      INCLUDE 'common/fcdflt'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fcfgs'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fd'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/fcsegc'
      INCLUDE 'common/fdispl'
C
      CHARACTER*80 NCARD(30),IBUF,WORD
      CHARACTER*10 XCOMD(17)
      DIMENSION SUBNAM(2),OLDSUB(2),
     . NAMEOP(2),LIST(2,100),
     . LISTYP(100),NUMC(100),LISTA(5,100),JULIAN(50),IHRP(50),
     . IOPN(2),GROUP(3,2),IUNIT(4),JUL2(50),IHR2(50),NAME(2),IUN(2,2)
C
      LOGICAL RECENT,FIRST,FULSET,OPSCRD,FRSTCD
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_top/RCS/fprtop.f,v $
     . $',                                                             '
     .$Id: fprtop.f,v 1.2 1996/01/17 18:56:24 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA GROUP/4HCARR,4HYOVE,1HR,4HFORE,4HCAST,1H /
      DATA IBLNK/4H    /
      DATA SUBNAM/4HFPRT,4HOP  /,NCOMD/17/,NAMEOP/4HPRIN,4HTOPS/,
     .IUNIT/4HENGL,4HE   ,4HMETR,4HM   /,
     . IUN/4HENGL,4HISH ,4HMETR,4HIC  /
C
      DATA XCOMD/'OPERATIONS','OPS','O','UNITS','U','CGROUPS',
     .           'CGROUP','CG','C','FGROUPS','FGROUP','FG','F',
     .           'DATES','DATE','D','PAGESIZE'/
C
      DATA PROP/4HPROP/
C
C...................
C  SET WHERE INFO
C
      DO 10 I=1,2
      OLDSUB(I) = OPNAME(I)
10    OPNAME(I) = SUBNAM(I)
      IOLDOP = IOPNUM
      IOPNUM = 0
C
      IBUG = IFBUG(PROP)
C
      IF (ITRACE.GE.1) WRITE(IODBUG,20)
20    FORMAT(22H  *** ENTER FPRTOP ***)
C
      WRITE(IPR,30)
30    FORMAT(1H1,80(1H*),/2H *,78X,1H*/2H *,19X,
     .41HSAC-SMA/SNOW-17/API-MKC CARRYOVER DISPLAY,18X,1H*,
     ./2H *,78X,1H*/,
     . 1H ,80(1H*)///)
C........................................
C  STORE ALL INPUT CARDS FOR THIS COMMAND
C
      CALL CDINPT(NCARD,30,LASTCD,NAMEOP,IERI)
      IF (IERI.GT.0) GO TO 1040
C
      ICARD = 0
C
C........................................
C  SET DEFAULTS
C
40    CONTINUE
      FULSET = .TRUE.
      FIRST = .TRUE.
      FRSTCD = .TRUE.
      NUMLIS = 1
      LX = 80
C
50    ICARD = ICARD+1
      IF (ICARD.GT.1) FRSTCD = .FALSE.
      IDATCD = ICARD
      OPSCRD = .FALSE.
      IF (ICARD.GT.LASTCD) GO TO 630
C
C.......................................
C  FUNPAK BREAKS A CARD FROM A 20A4 FORMAT TO 80A1
C
      CALL UMEMOV(NCARD(ICARD),IBUF,20)
C
      CALL USCAN2(IBUF,' ',1,WORD,LWORD,IER)
      NCHAR=LWORD
C.................
C
      IF (IBUG.GE.1) WRITE(IODBUG,60) NCHAR,WORD
60    FORMAT(' FIELD STARTS, NO. OF CHARS = ',I3,' FIELD IS : ',A40)
C  SUBSTITUTIONS NEEDED FOR 'DATE' SUBCOMMAND
C
C.............................................
C  FUNCTION IFKYVL TRIES TO MATCH A CHARACTER STRING WITH AN ITEM
C  IN A LIST OF KEYWORDS.
C
C  IF IDEST= 0, NO MATCH FOUND
C            1,2,3, 'OPERATIONS' SUBCOMMAND FOUND
C            4,5,   'UNITS' SUBCOMMAND FOUND
C            6,7,8,9, 'CGROUPS' SUBCOMMAND FOUND
C            10,11,12,13, 'FGROUPS' SUBCOMMAND FOUND
C            14,15,16  'DATE' SUBCOMMAND FOUND
C            17 'PAGESIZE' SUBCOMMAND FOUND
C
C  A LIST OF ITEMS IS TO BE READ FOR ALL SUBCOMMANDS, EXCEPT
C  'PAGESIZE'. ONLY ONE FIELD NEEDS TO BE READ FOR IT.
C
C......................................................
C
      IDEST = 0
      DO 65 J=1,NCOMD
         IF (WORD.EQ.XCOMD(J)) IDEST=J
65    CONTINUE
C
      IF (IDEST.EQ.0) GO TO 970
      IF (IDEST .EQ. 17) GO TO 80
      NVA = 2
      IF (IDEST.GE.14) NVA = 5
      CALL RDLIST(ICARD,LASTCD,NCARD,LISTA,NLIST,NVA,NUMC,IERX)
      IF (IERX.EQ.0) GO TO 80
C
      WRITE(IPR,70)
70    FORMAT('0**ERROR** ERROR IN READING LIST ON ABOVE CARDS')
      CALL ERROR
      GO TO 990
C
80    GO TO (90,90,90,210,210,280,280,280,280,280,280,280,280,320
     .,320,320,580), IDEST
C
C......................
C  'OPERATIONS' SUBCOMMAND FOUND
C
90    CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,100) FIRST,FRSTCD,FULSET
100   FORMAT(36H  *** OPERATIONS SUBCOMMAND FOUND - ,
     . 09H  FIRST =,L2,09H FRSTCD =,L2,09H FULSET =,L2)
C
C  OPERATIONS SUBCOMMAND MUST BE THE FIRST OF ALL
C  INPUT CARDS. ALSO, IF MULTIPLE SUBCOMMAND SETS
C  ARE INPUT, THE PREVIOUS SET MUST BE COMPLETE BEFORE
C  ANOTHER 'OPERATION' SUBCOMMAND CAN BE PROCESSED.
C
      OPSCRD = .TRUE.
      IF (.NOT.FIRST) GO TO 120
      IF (FRSTCD) GO TO 140
C................
C  'OPERATIONS' SUBCOMMAND IS NOT FIRST SUBCOMMAND
C
      WRITE(IPR,110)
110   FORMAT('0**ERROR**',/20X,15H  'OPERATIONS' ,
     .52HSUBCOMMAND IS NOT FIRST SUBCOMMAND FOR THIS COMMAND.
     ./,22X,41HAN 'OPERATIONS' SUBCOMMAND MUST BE FIRST.)
      CALL ERROR
      GO TO 990
C
120   CONTINUE
      IF (FULSET) GO TO 630
C
C....................
C  THIS 'OPERATIONS' SUBCOMMAND STARTS ANOTHER SET, BUT THE
C  THE PREVIOUS SET WAS NOT COMPLETE(I.E. - DID NOT HAVE
C  AT LEAST ONE CARRYOVER OR FORECAST GROUP SPECIFIED)
C
      WRITE(IPR,130)
130   FORMAT('0**ERROR**',/22X,13HTHE PREVIOUS ,
     .  32HSUBCOMMAND SET WAS NOT COMPLETE.//22X,15HA COMPLETE SET ,
     .    55HMUST START WITH AN 'OPERATIONS' SUBCOMMAND AND HAVE AT ,
     .   44HLEAST ONE 'FGROUPS' OR 'CGROUPS' SUBCOMMAND.)
      CALL ERROR
      GO TO 990
C
140   CONTINUE
      NUMOP = 0
      FULSET = .FALSE.
      RECENT = .TRUE.
      LASLIS = 0
      NUMLIS = 1
      FIRST = .FALSE.
      NDATES = 1
      IOPN(1) = 0
      IOPN(2) = 0
C....................
C  SEE WHICH OPERATIONS ARE TO BE PRINTED. ONLY SAC-SMA, SNOW-17
C  API-MKC ARE ALLOWED.
C
      DO 190 I=1,NLIST
      IF (NUMOP.EQ.2) GO TO 190
      CALL FOPCDE(LISTA(1,I),NOP)
      IF (NOP.EQ.1.OR.NOP.EQ.19.OR.NOP.EQ.29) GO TO 160
C..........................................
C  NOT VALID OPERATION TYPES FOR THIS COMMAND
C
      WRITE(IPR,150) LISTA(1,I),LISTA(2,I)
150   FORMAT('0**WARNING**',/22X,20HTHE OPERATION TYPE ',2A4,
     . 42H' IS NOT ALLOWED FOR THE PRINTOPS COMMAND./22X,05HONLY ,
     .  50H'SAC-SMA', 'SNOW-17' AND/OR 'API-MKC' ARE ALLOWED.)
      CALL WARN
      GO TO 190
C
160   IF (NUMOP.EQ.0) GO TO 180
C......................
C  LOOK FOR REPEATED OPERATION TYPES
C
      DO 170 J=1,NUMOP
      IF (NOP.EQ.IOPN(NUMOP)) GO TO 190
170   CONTINUE
C
180   NUMOP = NUMOP+1
      IOPN(NUMOP) = NOP
190   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,200) (IOPN(NM),NM=1,NUMOP)
200   FORMAT(21H OPERATIONS NOS. ARE ,10(I3))
      GO TO 50
C........................................
C  'UNITS' SUBCOMMAND FOUND
C
210   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,220) (LISTA(I,1),I=1,2)
220   FORMAT(33H 'UNITS' SUBCOMMAND FOUND. ID IS ,2A4)
      IF (NLIST.GT.0) GO TO 230
      METRIC = IDEFLT(7)
      GO TO 50
C
230   DO 240 I=1,4
      IF (LISTA(1,1).EQ.IUNIT(I)) GO TO 260
240   CONTINUE
C......................
C  NO VALID UNITS ID FOUND
      WRITE(IPR,250) LISTA(1,1),LISTA(2,1)
250   FORMAT('0**WARNING**',/22X,16HTHE UNITS TYPE ',2A4,
     . 22H' IS NOT A VALID CODE./22X,28HIT SHOULD BE EITHER 'METRIC',
     .14H OR 'ENGLISH'./22X,35HHCL DEFAULT FOR UNITS WILL BE USED.)
      CALL WARN
      METRIC = IDEFLT(7)
      GO TO 50
C
260   CONTINUE
      METRIC = (I-1)/2
      IF (IBUG.GE.1) WRITE(IODBUG,270) METRIC
270   FORMAT(11H  METRIC = ,I2)
      GO TO 50
C.............................................
C  'CGROUPS' OR 'FGROUPS' SUBCOMMAND FOUND
C
280   CONTINUE
      IF (NLIST.EQ.0) GO TO 50
C
      FULSET = .TRUE.
      LASLIS = NUMLIS+NLIST-1
      DO 310 I=NUMLIS,LASLIS
      J = I-NUMLIS+1
      DO 290 K=1,2
290   LIST(K,I) = LISTA(K,J)
      LISTYP(I) = IDEST/10 + 1
      IF (IBUG.GE.1) WRITE(IODBUG,300) (LISTA(K,J),K=1,2),             (
     .GROUP(KM,LISTYP(I)),KM=1,3)
300   FORMAT(06H ID = ,2A4,09H TYPE IS ,2A4,A1,07H GROUP.)
310   CONTINUE
C
      NUMLIS = LASLIS+1
      GO TO 50
C........................................
C  DATES CARD FOUND
C
320   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,330)
330   FORMAT(30H *** 'DATES' SUBCOMMAND FOUND.)
      IF (NLIST.EQ.0) GO TO 550
C
      CALL UMEMOV(NCARD(IDATCD),IBUF,20)
      CALL USCAN2(IBUF,' ',2,WORD,LWORD,IERR)
      NCHAR=LWORD
      CALL UFA2I(WORD,1,LWORD,IDATE,0,IPR,IER)
      IF (IER.EQ.0.AND.IDATE.GT.0) GOTO 470
      IF (IBUG.GE.1) WRITE(IODBUG,340) WORD
340   FORMAT(26H  FIRST CHAR. IN FIELD IS ,A40)
C.....................
C  IF FIRST CHARACTER OF 2ND ITEM ON 'DATES' CARD IS NUMERIC, OR IS AN
C  ASTERISK FOR THE 'TODAY' FEATURE, A LIST OF DATES HAS BEEN INPUT
C
      IF (WORD.EQ.'*') GOTO 470
C
      CALL UFA2I(WORD,1,LWORD,IDATE,0,IPR,IER)
      IF (IER.EQ.0.AND.IDATE.GE.0) GOTO 470
C
C  IF NOT, THEN LOOK FOR 'LAST' TO INDICATE HOW MANY OF THE MOST RECENT
C  DATES OF CARRYOVER ARE TO BE DISPLAYED.
C
C.....................
C
      IF (WORD.EQ.'LAST') GOTO 370
      WRITE(IPR,350) WORD
350   FORMAT('0**WARNING**',/22X,'UNRECOGNIZABLE ITEM ',
     .  'WITHIN DATES SUBCOMMAND : ',A30)
      WRITE(IPR,360)
360   FORMAT(/22X,35HMOST RECENT DATE WILL BE DISPLAYED.)
      CALL WARN
      GO TO 550
C
370   CALL USCAN2(IBUF,' ',3,WORD,LWORD,IER)
      NCHAR=LWORD
      IF (NCHAR.LE.0) GO TO 450
C................................................
C  CONVERT CHARACTER STRING TO INTEGER VALUE
C
      NDATES = 0
      CALL UFA2I(WORD,1,LWORD,NDATES,0,IPR,IER)
      IF (IER.EQ.0) GOTO 420
C
      WRITE(IPR,400) WORD
400   FORMAT('0**WARNING**',/22X,28HSPECIFICATION FOR THE NUMBER
     ., 38H OF MOST RECENT DATES MUST BE NUMERIC./22X,14HTHE FOLLOWING ,
     .    41HSTRING CONTAINS A NON-NUMERIC CHARACTER: ,A10)
      WRITE(IPR,410)
410   FORMAT(22X,40HONLY MOST RECENT DATE WILL BE DISPLAYED.)
      CALL WARN
      GO TO 550
420   IF (IBUG.GE.1) WRITE(IODBUG,430) NDATES
430   FORMAT(13H ** NDATES = ,I2)
      IF (NDATES.GT.0) GO TO 560
      IF (NDATES.EQ.0) GO TO 450
      WRITE(IPR,440) NDATES
440   FORMAT('0**WARNING**',/22X,'NUMBER OF MOST RECENT DATES ',
     .'SPECIFICATION MUST BE A POSITIVE INTEGER VALUE. IT WAS ',I3,' .',
     ./,22X,'ONLY THE MOST RECENT DATE OF CARRYOVER WILL BE DISPLAYED.')
      CALL WARN
      GO TO 550
C
450   CONTINUE
      WRITE(IPR,460)
460   FORMAT(10X,48HNUMBER OF MOST RECENT DATES TO BE DISPLAYED WAS ,
     . 27HSPECIFIED AS BLANK OR ZERO./22X,31HTHE NUMBER HAS BEEN RESET T
     .O 1.)
      CALL WARN
      GO TO 550
C......................................
C LIST OF DATES HAS BEEN INPUT
C
470   NDATES = 0
      DO 530 I=1,NLIST
      CALL HDATEA (NUMC(I),LISTA(1,I),1,0,1,1,JUL,IH,JTHR,IERD)
      IF (IERD.LE.0) GO TO 490
      WRITE(IPR,480) (LISTA(K,I),K=1,5)
480   FORMAT('0**ERROR**',/22X,25HDUE TO ABOVE ERRORS, THE ,
     .  12HCHARACTERS ',5A4,37H' HAVE BEEN REMOVED FROM THE LIST OF ,
     .  06HDATES.)
      CALL WARN
      GO TO 530
C
490   CONTINUE
      IF (JUL.LE.0) GO TO 530
C........................
C  REMOVE ANY DUPLICATE DATES
C
      IF (NDATES.EQ.0) GO TO 510
      DO 500 KJ=1,NDATES
      IF (JUL.NE.JUL2(KJ).OR.IH.NE.IHR2(KJ)) GO TO 500
C
      GO TO 530
500   CONTINUE
510   NDATES = NDATES+1
      JUL2(NDATES) = JUL
      IHR2(NDATES) = IH
      RECENT = .FALSE.
      IF (IBUG.GE.1) WRITE(IODBUG,520) NDATES,JUL,IH
520   FORMAT(10H DATE NO. ,I2,04H IS ,2I5)
530   CONTINUE
C..........................
C  SEE IF AT LEAST ONE DATE REMAINS IN LIST
C
      IF (NDATES.GT.0) GO TO 50
      WRITE(IPR,540)
540   FORMAT('0**WARNING**',/22X,27HNO DATES REMAIN IN LIST OF ,
     .  12HTHOSE INPUT./22X,41HMOST RECENT DATE OF CARRYOVER WILL BE DIS
     .,   07HPLAYED.)
      CALL WARN
C
550   NDATES = 1
560   RECENT = .TRUE.
      IF (IBUG.GE.1) WRITE(IODBUG,570) NDATES,RECENT
570   FORMAT(15H NO. OF DATES =,I3,09H RECENT =,L2)
      GO TO 50
C
C************************************************************
C
C  'PAGESIZE' SUBCOMMAND FOUND. LOOK FOR NEXT FIELD.
C    IF NULL, THEN LEAVE PAGESIZE AT DEFAULT OF 80.
C    IF FOUND, FIELD MUST BE INTEGER, GT ZERO AND LE 80.
C
580   CONTINUE
C
C  GET NEXT FIELD
C
      CALL USCAN2(IBUF,' ',2,WORD,LWORD,IERR)
      NCHAR=LWORD
      IF (IBUG.GE.1) WRITE(IODBUG,60) NCHAR,WORD
C
C  IF NULL FIELD, JUST USE PAGESIZE DEFAULT
C
      IF (NCHAR .LE. 0) GO TO 50
C
C  FIELD FOUND. MUST BE INTEGER OF VALUE GT 0 AND LE 80.
C
      CALL UFA2I(WORD,1,LWORD,IX,0,IPR,IER)
C
      IF (IER.EQ.0) GOTO 600
C
      WRITE(IPR,590)
590   FORMAT('0**WARNING**  PAGESIZE SPECIFICATION MUST BE ',
     . 'INTEGER.',
     ./24X,'DEFAULT PAGESIZE OF 80 WILL BE USED.')
      CALL WARN
      GO TO 50
C
C  CHECK FOR VALUE BETWEEN 0 AND 80.
C
600   CONTINUE
      IF (IX.GT.0.AND.IX.LE.80) GOTO 620
C
      WRITE(IPR,610)
610   FORMAT('0**WARNING** PAGESIZE SPECIFICATION MUST BE ',
     . 'GREATER THAN ZERO',/24X,'AND LESS THAN OR EQUAL TO 80.',
     ./24X,'DEFAULT PAGESIZE OF 80 WILL BE USED.')
      CALL WARN
      GO TO 50
C
C  SET PAGESIZE VARIABLE IN /FDISPL/.
C
620   CONTINUE
      LX = IX
      GO TO 50
C*****************************************************************
C
C  EITHER A SECOND 'OPERATIONS' SUBCOMMAND HAS BEEN FOUND OR WE'RE
C  AT THE END OF INPUT FOR THE PRINTOPS COMMAND.
C
C  WE MUST CHECK FOR AT LEAST ONE CGROUP OR FGROUP AND AT LEAST ONE
C  OPERATION TYPE. ALSO, THE SUB COMMAND SET MUST BE COMPLETE(I.E. -
C   AN 'OPERATION' SUBBCOMMAND FOLLOWED BY AT LEAST ONE CGROUP OR
C   FGROUP SUBCOMMAND.
C
630   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,640) FULSET
640   FORMAT(35H ** TIME TO PROCESS INPUT, FULSET =,L2)
C.........................................
C  MAKE SURE SUBCOMMAND SET IS COMPLETE
C
      IF (FULSET) GO TO 660
      WRITE(IPR,650)
650   FORMAT('0**ERROR**',/22X,29HSUBCOMMAND SET IS INCOMPLETE.,
     .  49H IT MUST HAVE AN 'OPERATIONS' SUBCOMMAND FOLLOWED,/22X,
     . 51H BY AT LEAST ONE 'CGROUPS' OR 'FGROUPS' SUBCOMMAND.)
      CALL ERROR
      GO TO 990
C.....................................
C  MAKE SURE AT LEAST ONE 'CGROUP' OR 'FGROUP' SUBCOMMAND ENTERED
C
660   CONTINUE
      IF (LASLIS.GT.0) GO TO 680
      WRITE(IPR,670)
670   FORMAT('0**ERROR**',/22X,25HNO 'CGROUPS' OR 'FGROUPS',
     .    31H SUBCOMMANDS HAVE BEEN ENTERED./22X,23HAT LEAST ONE OF EITH
     .ER , 56HOF THE TWO MUST BE ENTERED FOR PROPER COMMAND EXECUTION.)
      CALL ERROR
      GO TO 990
C.......................................
C  MAKE SURE ONE VALID OPERATION TYPE HAS BEEN ENTERED
C
680   CONTINUE
      IF (NUMOP.GT.0) GO TO 700
      WRITE(IPR,690)
690   FORMAT('0**ERROR**',/22X,30HNO VALID OPERATION TYPES HAVE
     ., 13HBEEN ENTERED./22X,40HEITHER 'SAC-SMA', 'SNOW-17' OR 'API-MKC'
     .,016HMUST BE ENTERED.)
      CALL ERROR
      GO TO 990
C.......................................
C  NOW LOOP THROUGH OPERATIONS AND GROUPS TO PRINT THE CARRYOVER
C
700   CONTINUE
      DO 950 I=1,NUMOP
      IFIRST = 1
      DO 940 J=1,LASLIS
      CALL FCORDR(LISTYP(J),LIST(1,J),IERF,D,MD)
      IF (IERF.LE.0) GO TO 720
      WRITE(IPR,710) (GROUP(N,LISTYP(J)),N=1,3),LIST(1,J),LIST(2,J)
710   FORMAT('0**ERROR**',/22X,21HTHE SEGMENTS FOR THE ,2A4,A1,
     .  07H GROUP ,2A4,22H COULD NOT BE ORDERED./22X,20HCOMMAND PRINTOPS
     . IS ,11HTERMINATED.)
      CALL ERROR
      GO TO 990
C
720   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,730) (GROUP(KI,LISTYP(J)),KI=1,3),   (
     .LIST(KI,J),KI=1,2),ISPEC
730   FORMAT(15H ** PROCESSING ,2A4,A1,07H GROUP ,2A4,10H. ISPEC = ,I2)
C..............................................
C  FOR THE CASE WHERE A FORECAST GROUP IS A SPECIAL FGROUP AND THE
C  MOST RECENT DATES OF CARRYOVER ARE TO BE DISPLAYED, THE ROUTINE
C  FPROPS WILL FIND THE MOST RECENT DATES OF CARRYOVER ON A SEGMENT
C  BY SEGMENT BASIS.
C
      ISPGR = 0
      N2DATE = NDATES
      IF (LISTYP(J).EQ.1) GO TO 740
      IF (ISPEC.EQ.0) GO TO 740
      ISPGR = 1
      IF (.NOT.RECENT) GO TO 740
      N2DATE = -N2DATE
      GO TO 920
740   CONTINUE
      CALL FGETSG(IDSEGN,IRSGEX(1),0,X,0,X,0,X,1,1,IERS)
      IF (IERS.LE.0) GO TO 760
      WRITE(IPR,750) KSEG,IRSGEX(1)
750   FORMAT('0**ERROR**',/22X,08HSEGMENT ,2A4,11H AT RECORD ,
     .   I3,51H COULD NOT BE LOADED FOR USE IN COMMAND 'PRINTOPS'.)
      CALL ERROR
      GO TO 990
C
C..........................
C  GET MOST RECENT DATES OF CARRYOVER FOR THIS CGROUP OR FGROUP
C
760   CONTINUE
      CALL FCDATE(IDSEGN,0)
      CALL FCOBBL(ICDAYC,ICHRC,NSLOTS)
      IDC(1) = IBLNK
      IDC(2) = IBLNK
      IF (IBUG.GE.1) WRITE(IODBUG,770) (IJ,ICDAYC(IJ),ICHRC(IJ),IJ=1,  N
     .SLOTS)
770   FORMAT(17H  DATES ON SLOTS:/20(I5,I8,I3/))
C
C....................................
C  COUNT DATED CARRYOVER SLOTS
      NID = 0
      DO 780 ID=1,NSLOTS
      IF (ICDAYC(ID).LE.0) GO TO 780
      NID = NID+1
780   CONTINUE
C
C  SET START OF NON-ZERO DATES IN SORTED CARRYOVER SLOTS (ZERO DATES
C  ARE PLACED IN BEGINNING OF SORTED SLOTS)
C
      ISTRT = NSLOTS - NID + 1
C........................................
C  DATED CARRYOVER MUST EXIST ON THE FILE FOR THIS COMMAND TO WORK
C
      IF (NID.GT.0) GO TO 800
      WRITE(IPR,790)
790   FORMAT('0**ERROR**',/22X,31HALL CARRYOVER FOR THIS FORECAST
     ., 31H OR CARRYOVER GROUP IS UNDATED./22X,21HDATED CARRYOVER MUST ,
     .    44HEXIST FOR THE 'PRINTOPS' COMMAND TO BE USED.)
      CALL ERROR
      GO TO 990
C...................................................
C WHEN REQUESTING N MOST RECENT DATES, AT LEAST N DATED CARRYOVER SLOTS
C  MUST EXIST ON THE FILES.
C
800   CONTINUE
      IF (NDATES.LE.NID.OR..NOT.RECENT) GO TO 820
      WRITE(IPR,810) N2DATE,NID,NID
810   FORMAT('0**WARNING**',/22X,04HTHE ,I3,' MOST RECENT DATES ',
     * 45HOF CARRYOVER HAVE BEEN REQUESTED FOR DISPLAY./22X,05HONLY ,I
     *2,   48H DATES OF CARRYOVER EXIST ON THE FILES, SO ONLY ,I2,07H DA
     *TES ,  18HWILL BE DISPLAYED.)
      CALL WARN
      N2DATE = NID
C
C....................................
C ASSIGN THE N MOST RECENT DATES HERE.
C
820   IF(.NOT.RECENT) GO TO 840
      DO 830 L=1,N2DATE
      M = NSLOTS-L+1
      JULIAN(L) = ICDAYC(M)
      IHRP(L) = ICHRC(M)
830   CONTINUE
      GO TO 910
C................................
C  LOOK FOR MATCH BETWEEN DATES INPUT AND DATES ON THE FILE
C
840   CONTINUE
C........................
C  IF A SPECIAL FORECAST GROUP, DON'T REMOVE ANY DATES. JUST REASSIGN
C   THE ONES INPUT.
C
      IF (ISPGR.NE.1) GO TO 860
      DO 850 MX=1,N2DATE
      JULIAN(MX) = JUL2(MX)
850   IHRP(MX) = IHR2(MX)
      GO TO 910
C......................
C  NOW LOOK FOR MATCHES
860   NMATCH = 0
      DO 880 MX = 1,N2DATE
      DO 870 NX = ISTRT,NSLOTS
      IF (JUL2(MX).NE.ICDAYC(NX).OR.IHR2(MX).NE.ICHRC(NX)) GO TO 870
      NMATCH = NMATCH+1
      JULIAN(NMATCH) = JUL2(MX)
      IHRP(NMATCH) = IHR2(MX)
      GO TO 880
870   CONTINUE
880   CONTINUE
      IF (NMATCH.GT.0) GO TO 900
      WRITE(IPR,890)
890   FORMAT('0**ERROR**',/22X,29HNONE OF THE DATES INPUT MATCH,
     .  30H ANY OF THE DATES ON THE FILE./22X,27HPLEASE CHECK LATEST STA
     .TUS ,27HREPORT FOR CARRYOVER DATES.)
      CALL ERROR
      GO TO 990
900   CONTINUE
      N2DATE = NMATCH
C
C...............................
C  SORT DATES IN ASCENDING ORDER
C
910   CALL FCOBBL(JULIAN,IHRP,N2DATE)
      IF (IBUG.GE.1) WRITE(IODBUG,770) (IJ,JULIAN(IJ),IHRP(IJ),        I
     .J=1,N2DATE)
C
920   IDIM = 50
      IF (IBUG.GE.1) WRITE(IODBUG,930) IOPN(I),ISPGR,N2DATE,IDIM
930   FORMAT(13H ** OP. NO. =,I3,08H ISPGR =,I2,16H NO. OF DATES = ,I2,
     .   12H ARRAY DIM =,I3)
      CALL FOPCDX(NAME,IOPN(I))
C     MT = METRIC+1
C     WRITE(IPR,660) NAME,(GROUP(KI,LISTYP(J)),KI=1,3),
C    .(LIST(KI,J),KI=1,2),(IUN(KI,MT),KI=1,2)
C 660 FORMAT(//21X,40(1H*),/21X,1H*,38X,1H*,/21X,1H*,7X,11HOPERATION :,
C    . 1X,2A4,11X,1H*,/21X,2H* ,2A4,A1,09H GROUP : ,2A4,11X,1H*,/
C    .  21X,1H*,11X,08HUNITS : ,2A4,11X,1H*/21X,1H*,38X,1H*)
C     IF (LISTYP(J).EQ.2.AND.ISPGR.EQ.1.AND.RECENT) GO TO 1585
C
C     WRITE(IPR,661)
C 661 FORMAT(21X,1H*,11X,08HDATES : )
C     DO 1587 ND = 1,N2DATE
C     CALL MDYH1(JULIAN(ND),IHRP(ND),MM,MDA,MY,MH,NOUTZ,NOUTDS,NZ)
C     WRITE(IPR,662) MM,MDA,MY,MH,NZ
C 662 FORMAT(1H+,20X,1H*,19X,I2,01H/,I2,01H/,I4,01H-,I2,1X,A4,2H */)
C 587 CONTINUE
C 585 WRITE(IPR,663)
C 663 FORMAT(1H+,20X,1H*,38X,1H*/,21X,40(1H*)/)
C.....................................
C  CALL ROUTINE TO ACTUALLY PRINT CARRYOVER
C
      CALL FPROPS(IOPN(I),ISPGR,N2DATE,IDIM,JULIAN,IHRP,IFIRST)
940   CONTINUE
950   CONTINUE
C
C..........................................
C  IF PRINT WAS INITIATED BY FINDING ANOTHER 'OPERATIONS' SUBCOMMAND,
C  GO BACK TO DECODING INPUT. OTHERWISE END COMMAND.
C
      IF (IBUG.GE.1) WRITE(IODBUG,960) OPSCRD
960   FORMAT(12H ** OPSCRD =,L2)
      IF (OPSCRD) GO TO 140
      GO TO 1040
C
970   WRITE(IPR,980) IBUF
980   FORMAT('0**ERROR**',/22X,26HUNRECOGNIZABLE COMMAND ON ,
     .  23HFOLLOWING INPUT RECORD:,//22X,A/)
      CALL ERROR
C
990   CONTINUE
      WRITE(IPR,1000)
1000  FORMAT(/10X,46H*** PRINTOPS COMMAND TERMINATED DUE TO ERRORS./)
      IF (ICARD.GE.LASTCD) GO TO 1040
      WRITE(IPR,1010)
1010  FORMAT(36H  *** SCANNING FOR 'END' SUBCOMMAND./)
      ICARD = ICARD+1
      DO 1030 K=ICARD,LASTCD
      WRITE(IPR,1020) NCARD(K)
1020  FORMAT(1H ,A)
1030  CONTINUE
C
1040  CONTINUE
      IOPNUM = IOLDOP
      OPNAME(1) = OLDSUB(1)
      OPNAME(2) = OLDSUB(2)
C
      IF (ITRACE.GE.1) WRITE(IODBUG,1050)
1050  FORMAT(22H   *** EXIT FPRTOP ***)
      RETURN
      END
