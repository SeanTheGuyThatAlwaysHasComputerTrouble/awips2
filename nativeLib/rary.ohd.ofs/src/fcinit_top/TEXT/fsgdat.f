C MEMBER FSGDAT
C  (from old member FCFSGDAT)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 07/27/95.15:31:10 BY $WC21DT
C
C @PROCESS LVL(77)
C
C  DESC - USED IN THE DATING OF SEGMENTS OUTSIDE OF CGROUP COMMAND
C
C.....................................................................
C
      SUBROUTINE FSGDAT
C
C.....................................................................
C
C  FSGDAT IS USED TO INTERPRET THE INPUT TO THE 'SEGDATE' COMMAND.
C
C   THE CAPABILITIES OF THE 'SEGDATE' COMMAND ARE:
C
C       1) SINGLE SEGMENT DATING - ONE OR MORE DATES.
C       2) MULTIPLE SEGMENT DATING FOR A GROUP OTHER THAN A FORECAST
C          GROUP. LIST OF SEGMENTS MUST BE INPUT. ONE OR MORE DATES.
C       3) FORECAST GROUP DATING, ALL SEGMENTS IN A FGROUP. ONE OR
C          MORE DATES.
C
C  ANY SEGMENTS TO BE DATED WITH THIS COMMAND CAN NOT BE PART OF A
C   CARRYOVER GROUP. HOWEVER, ONCE DATED, THE SEGMENTS CAN BE MADE PART
C   OF A CARRYOVER GROUP.
C
C.....................................................................
C
C  ROUTINE ORIGINALLY WRITTEN BY -
C      JOE OSTROWSKI -- HRL -- 800717
C  FREE FORMAT INPUT ADDED -- JOE OSTROWSKI -- HRL -- 810423
C  CHANGED TO ALLOW 100 ITEMS IN LIST TO RDLIST
C     GEORGE F. SMITH -- HRL -- 3/28/86
C
C......................................................................
C
      INCLUDE 'common/where'
      INCLUDE 'common/fd'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fcrunc'
C
      CHARACTER*80 NCARD(30),IBUF,WORD
      CHARACTER*10 XCOMD(12)
      DIMENSION SUBNAM(2),OLDSUB(2),IDAY(20),IHR(20),NAME(2),
     .LIST(5,100),LISTF(5,100),NUMC(100),NUMD(100),
     .LISTD(5,100)
C
      LOGICAL REQD
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_top/RCS/fsgdat.f,v $
     . $',                                                             '
     .$Id: fsgdat.f,v 1.2 1996/01/17 18:57:35 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA SUBNAM,SEGD,BLANK/4HFSGD,4HAT  ,4HSEGD,4H    /
      DATA XCOMD/'SEGMENTS','SEGS','SEGMENT','SEG','S','FGROUPS',
     .           'FGROUP','FG','F','DATES','DATE','D'/
      DATA NCOMD/12/
      DATA NAME/4HSEGD,4HATE /
C
C
C  SET 'WHERE' INFORMATION
C
      DO 10 I=1,2
      OLDSUB(I) = OPNAME(I)
10    OPNAME(I) = SUBNAM(I)
      IOLDOP = IOPNUM
      IOPNUM = 0
C
C  SET DEBUG FLAG
      IBUG = 0
      IF (IFBUG(SEGD).EQ.1) IBUG = 1
C
      IF (ITRACE.GE.1) WRITE(IODBUG,20)
20    FORMAT(17H *** ENTER FSGDAT)
C
      WRITE(IPR,30)
30    FORMAT(1H1,80(1H*)/1H ,1H*,78X,1H*/1H ,1H*,31X,15HSEGDATE COMMAND,
     .  32X,1H*/1H ,1H*,78X,1H*/1H ,80(1H*))
C
C
C.............................
C  READ ALL INPUT RECORDS FOR THE 'SEGDATE' COMMAND.
C   END OF INPUT SIGNIFIED BY 'END' SUBCOMMAND OR END OF INPUT RECORDS.
C
      CALL CDINPT(NCARD,30,LASTCD,NAME,IERC)
      IF (IERC.GT.0) GO TO 480
C
C............................
C  AT LEAST ONE FGROUP OR SEGS RECORD MUST BE FOUND ALONG WITH
C  A DATE RECORD. THE DATE RECORD MUST FOLLOW THE FGROUP OR SEGS
C  RECORD.
C
      REQD = .FALSE.
      KERR = 0
C
      DO 100 I=1,LASTCD
      CALL UMEMOV(NCARD(I),IBUF,20)
40    CALL USCAN2(IBUF,' ',1,WORD,LWORD,IERR)
      NCHAR=LWORD
      IF (LWORD.EQ.0) NCHAR=-1
      IF (NCHAR) 100,40,50
C
50    DO 55 J=1,NCOMD
         IF (WORD.EQ.XCOMD(J)) IDEST=J+1
55    CONTINUE
C
      GO TO (100,60,60,60,60,60,60,60,60,60,70,70,70),IDEST
C
C......................
C  FGROUP OR SEGS SUBCOMMAND FOUND
C
60    REQD = .TRUE.
      GO TO 100
C
C......................
C  DATE RECORD FOUND. MUST FOLLOW FGROUP OR SEGS.
C
70    CONTINUE
      IF (.NOT.REQD) GO TO 80
      REQD = .FALSE.
      GO TO 100
C
C............................
C  DATE CARD PRECEDED SEGS OR FGROUP
C
80    KERR = KERR+1
      WRITE(IPR,90)
90    FORMAT(10X,'**ERROR, DATE SUBCOMMAND OUT OF SEQUENCE.',/,
     . 22X,42HIT MUST FOLLOW THE SEGMENT OR FGROUP LIST.)
      CALL ERROR
      REQD = .FALSE.
      GO TO 100
C
100   CONTINUE
      IF (KERR.EQ.0) GO TO 110
      ICARD = LASTCD
      GO TO 480
C................................
C  RESET VALUES AND SART SCANNING INPUT RECORDS FOR INSTRUCTIONS
C
110   CONTINUE
      ICARD = 0
120   NFGR = 0
      NSEGS = 0
      NDATES = 0
      KERR = 0
C
130   CONTINUE
      ICARD = ICARD+1
      IF (ICARD.GT.LASTCD) GO TO 530
C
      CALL UMEMOV(NCARD(ICARD),IBUF,20)
C
      CALL USCAN2(IBUF,' ',1,WORD,LWORD,IERR)
C
      IDEST=1
      DO 135 K=1,NCOMD
         IF (WORD.EQ.XCOMD(K)) IDEST=K+1
135   CONTINUE
C
C.............................
C  IDEST = 0, INVALID SUBCOMMAND FOUND
C        = 1,2,3,4,5 - LIST OF SEGMENTS TO BE READ
C        = 6,7,8,9 - LIST OF FORECAST GROUPS TO BE READ
C        = 10,11,12 - LIST OF DATES TO BE READ
C
      GO TO (140,160,160,160,160,160,200,200,200,200,240,240,240),IDEST
C
C  NO LEGAL SUBCOMMAND FOUND
C
140   WRITE(IPR,90) IBUF
150   FORMAT(10X,'**ERROR** - THE FOLLOWING INPUT RECORD DOES NOT',
     . 28H CONTAIN A VALID SUBCOMMAND:,//,1X,A,//,22X,12HTHE ALLOWED
     .,  16HSUBCOMMANDS ARE://(22X,10A1))
      CALL ERROR
      GO TO 480
C........................................
C  GET LIST OF SEGMENTS
160   CONTINUE
      REQD = .TRUE.
      NVAR = 2
      CALL RDLIST(ICARD,LASTCD,NCARD,LIST,NSEGS,NVAR,NUMC,IERR)
C
      IF (IERR.GT.0) GO TO 180
      IF (NSEGS.GT.0) GO TO 190
C...........................
C  NO SEGMENTS LISTED.
C
      WRITE(IPR,170)
170   FORMAT(10X,'**ERROR - NO SEGMENTS IDENTIFIERS ENTERED. AT LEAST',
     .33H ONE SEGMENT ID MUST BE PROVIDED.)
180   CALL ERROR
      GO TO 480
C
190   GO TO 130
C..........................
C  GET LIST OF FORECAST GROUPS
C
200   CONTINUE
      REQD = .TRUE.
      NVAR = 2
      CALL RDLIST(ICARD,LASTCD,NCARD,LISTF,NFGR,NVAR,NUMC,IERR)
      IF (IERR.GT.0) GO TO 220
      IF (NFGR.GT.0) GO TO 230
C
C.......................
C   NO FORECAST GROUP IDENTIFIERS ENTERED.
C
      WRITE(IPR,210)
210   FORMAT(10X,'**ERROR** - NO FORECAST GROUP IDENTIFIERS ENTERED.',
     . /22X,48HAT LEAST ONE FORECAST GROUP ID MUST BE PROVIDED.)
220   CALL ERROR
      GO TO 480
C
230   GO TO 130
C
C................................
C  GET LIST OF DATES. THE 'DATE' CARD MUST BE ENTERED AFTER THE SEGS
C   AND/OR FGROUP SUBCOMMAND.
C
240   CONTINUE
      IF (.NOT.REQD) GO TO 270
      NVAR = 5
      CALL RDLIST(ICARD,LASTCD,NCARD,LISTD,NDATES,NVAR,NUMD,IERD)
      IF (IERD.GT.0) GO TO 260
      IF (NDATES.GT.0) GO TO 280
C.........................
C  NO DATES ENTERED
C
      WRITE(IPR,250)
250   FORMAT(10X,'**ERROR** - NO DATES ENTERED. AT LEAST ONE DATE MUST'
     . ,13H BE PROVIDED.)
260   CALL ERROR
      GO TO 480
C
270   CONTINUE
      WRITE(IPR,90)
      CALL ERROR
      GO TO 480
C
C
280   CONTINUE
C..............................
C  NOW HAVE LISTS OF SEGS AND/OR FGROUPS AND DATES.
C   START DATING SEGMENTS
C
C............................
C  FIRST STEP - COMPUTE JULIAN DATES FOR ALL INPUT DATES.
C
      DO 300 I=1,NDATES
      CALL HDATEA (NUMD(I),LISTD(1,I),1,0,1,1,JULIAN,IHRP,JTHR,IERD)
      IF (IERD.GT.0) KERR = KERR+1
290   CONTINUE
      IDAY(I) = JULIAN
      IHR(I) = IHRP
300   CONTINUE
      IF (IBUG.GE.1) WRITE(IODBUG,310) NDATES,(IDAY(IL),IHR(IL),IL=1,NDA
     .TES)
310   FORMAT(2X,15HNO. OF DATES = ,I2,//3X,17HJULIAN DAY     HR/
     .  3X,10(1H-),5X,2H--,/(7X,I6,5X,I2/))
C
      IF (KERR.GT.0) GO TO 480
C..............................
C  IF DATES ARE OK, START DATING SEGMENTS.
C
C  START WITH LIST OF INDIVIDUAL SEGMENTS, IF INPUT.
C
      IF(NSEGS.EQ.0) GO TO 350
C
      DO 340 I=1,NSEGS
      WRITE(IPR,420) (LIST(K,I),K=1,2)
      CALL FCOSEG(LIST(1,I),NDATES,IDAY,IHR,IER)
      IF (IER.LE.0) GO TO 320
      GO TO 480
C
320   IF (IBUG.GE.1) WRITE(IODBUG,330) (LIST(K,I),K=1,2)
330   FORMAT(48H  *** DATING SUCCESSFULLY COMPLETED FOR SEGMENT ,2A4,
     .1H.)
340   CONTINUE
C
C.....................................
C  NOW LOOP THROUGH ALL FORECAST GROUPS, IF ANY INPUT.
C
350   IF (NFGR.EQ.0) GO TO 470
C
      DO 460 I=1,NFGR
       WRITE(IPR,360) (LISTF(KL,I),KL=1,2)
360   FORMAT(//1H0,47HFORECAST GROUP'S SEGMENTS TO BE DATED - FGID = ,
     .   2A4)
      ITY = 2
      CALL FCORDR(ITY,LISTF(1,I),IER,D,MD)
      IF (IER.EQ.0) GO TO 380
      WRITE(IPR,370) (LISTF(K,I),K=1,2)
370   FORMAT(10X,'**ERROR** - UNABLE TO GET LIST OF SEGMENTS FOR',
     .  16H FORECAST GROUP ,2A4,' IN ROUTINE FCORDR.')
      CALL ERROR
      GO TO 480
C
380   CONTINUE
      WRITE(IPR,390) NSEGEX
390   FORMAT(1H+,57X,02H( ,I2,11H SEGMENTS.))
      DO 440 J=1,NSEGEX
      CALL FGETSG(IDSEGN,IRSGEX(J),0,X,0,X,0,X,1,1,IER)
      IF (IER.EQ.0) GO TO 410
      WRITE (IPR,400) IRSGEX(J)
400   FORMAT(10X,43HERROR - UNABLE TO OBTAIN SEGMENT LOCATED AT,
     .  08H RECORD ,I3,24H ON SEGMENT STATUS FILE.)
      CALL ERROR
      GO TO 480
C
410   CONTINUE
      WRITE(IPR,420) IDSEGN
420   FORMAT(1H0,28H      SEGMENT BEING DATED = ,2A4)
      CALL FCOSEG(IDSEGN,NDATES,IDAY,IHR,IERC)
      IF (IERC.EQ.0) GO TO 430
      GO TO 480
C
430   IF (IBUG.GE.1) WRITE(IODBUG,330) IDSEGN
440   CONTINUE
C
      WRITE(IPR,450) (LISTF(KL,I),KL=1,2)
450   FORMAT(1H0,54H *** DATING SUCCESSFULLY COMPLETED FOR FORECAST GROU
     .P ,2A4)
C
460   CONTINUE
C
470   CONTINUE
      GO TO 120
C
480   WRITE(IPR,490)
490   FORMAT(10X,51H*** SEGDATE COMMAND ABORTED DUE TO ABOVE ERRORS ***)
      IF (ICARD.GE.LASTCD) GO TO 550
      WRITE(IPR,500)
500   FORMAT(10X,29H*** SCANNING FOR END CARD ***)
C
      ICARD = ICARD+1
      DO 510 I=ICARD,LASTCD
510   WRITE(IPR,520) NCARD(I)
520   FORMAT(1X,A)
      GO TO 550
530   CONTINUE
      WRITE(IPR,540)
540   FORMAT(///47H *** SEGDATE COMMAND SUCCESSFULLY PROCESSED ***)
C
C
      OPNAME(1) = OLDSUB(1)
      OPNAME(2) = OLDSUB(2)
      IOPNUM = IOLDOP
550   CONTINUE
      OPNAME(1) = OLDSUB(1)
      OPNAME(2) = OLDSUB(2)
      IOPNUM = IOLDOP
C
      IF (IBUG.GE.1) WRITE(IODBUG,560)
560   FORMAT(20H *** EXIT FSGDAT ***)
C
      RETURN
C
      END
