C MODULE FDEFRC
C-----------------------------------------------------------------------
C DESC DEFINE RATING CURVE INPUT ROUTINE
C
C
      SUBROUTINE FDEFRC
C.......................................................................
C
C      DEFINE RATING CURVE INPUT ROUTINE
C
C                  READS IN DATA FOR DEFINING A RATING CURVE,
C                  CHECKS FOR ERRORS IN THE INPUT DATA AND,
C                  IF NO ERRORS ARE DETECTED THEN PLACES DATA IN COMMON
C                  BLOCK /FRATNG/.
C IF ERRORS ARE DETECTED THEN AN ERROR MESSAGE IS PRINTED FOR EACH
C
C ONCE THE DATA IS IN /FRATING/, FCWTRC IS CALLED TO WRITE THE DATA
C TO THE FILE AND PRRC PRINTS THE CONTENTS OF /FRATNG/, IF AND
C ONLY IF THERE ARE NO ERRORS.
C
C DATA IS READ IN FRRE FORMAT USING DSI FREE FORMAT ROUTINES.
C
C.......................................................................
C
C ROUTINE ORIGINALLY BY JONATHAN WETMORE - HRL - OCT,1980
C MODIFICATIONS -
C EJV 12/82 TO ACCEPT FREE FORMAT AND ADDITIONAL INFORMATION
C EJV 02/87 TO HANDLE USGS OFFSET
C JML 10/91 TO ADD HSA-ID AS OPTIONAL INFO
C JML 11/92 TO ADD E-19 & E-19A AS OPTIONAL INFO
c kwz 10/05 Card 6a, values could be read from more than one line.
C
C NOTE: CONTENTS OF VARIABLE EMPTY
C EMPTY(1) - LOCATION OF FLOOPR INFO
C EMPTY(2) - LOCATION OF GSOFFSET INFO IN XRC
C EMPTY(3) - STAGE BELOW WHICH SHIFT VARIABLE GETS APPLIED
C EMPTY(4) - =0 FOR LOG-LOG INT/EXTRAPOLATION; =1 FOR LINEAR INT/EXT.
C......................................................................
C
C ** ROUTINES USED **
C
C NAME     DESCRIPTION
C ----     -------------------------
C INTERNAL ROUTINES
C FRCERR  ERROR HANDLING ROUTINE
C
C FREE FORMAT ROUTINES (SEE CHAP IX.3.OB)
C UFREE   READS A CARD IMAGE AND FILLS CB/UFREEI/
C UPACK1  CONVERTS A1 TO A4 WORD
C UPAKS   CONVERTS A4 TO A1
C UFIXED  RETURNS NUMERIC VALUE GIVEN STRING AND TYPE OF DATA
C UNUMIC  RETURNS INTEGER VALUE FROM CHAR STRING
C
C
C ** FREE FORMAT COMMON BLOCK/UFREEI/ (SEE CHAP IX.3.OC) **
C PURPOSE- CONTAINS FREE FORMAT INFO FOR A CARD...FILLED BY ROUTINE
C          UFREE.
C VARIABLE DIM. DESCRIPTION
C -------- ---- -----------------------------
C NFIELD     1  NUMBER OF FIELDS ON CARD
C IFTYPE    40  DATA TYPE OF EACH FIELD (1=INTEGR,2=REAL,3=ALPHA)
C IFCNT     40  (NOT USED)
C IFSTRT    40  START COLUMN OF EACH FIELD
C IFSTOP    40  END     "    "   "    "
C IBUF      80  CARD IMAGE ARRAY (80A1)
C KOUNT      1  (NOT USED)
C
C
C ** INTERNAL VARIABLES USED **
C ( CB/FRATNG/ AND INPUT VARIABLES ARE EXPLAINED INSIDE PROGRAM)
C
C VARIABLE DIM. DESCRIPTION
C -------- ---- ------------------------------
C INIT       1  STARTING LOCATION OR 1ST COLUMN IN A SPECIFIC FIELD
C IFIN       1  LAST LOCATION     "  LAST  "     "    "        "
C
C ADDING     1  =TRUE FOR ADDING  =FALSE FOR REPLACE OR UPDATE
C CODE       1  CODE READ IN
C ENGUNT     1  LOGICAL VARIABLE IF ENGLISH UNITS ON(TRUE) OR OFF(FALSE)
C ELMAX      1  LARGEST ELEVATION EXPECTED IN WORLD
C ELVMIN     1  SMALLEST   "       "           "
C FACARE     1      "        "    "   UNITS TO SQ M
C FACVOL     1      "        "    "   UNITS TO CUBIC M
C FACMKM     1      "        "    "   UNITS TO KM
C FACSKM     1      "        "    "   UNITS TO SQ KM
C FRLOOP     =-999. -- LOOP RATING NOT USED
C FRLOOP     >-999. -- LOOP RATING USED AND THE VALUE EQUALS TO
C FRLOOP        RATIO OF BOTTOM SLOPE TO AVE. WAVE SLOPE
C H1         1  FIRST STAGE
C HZERO      1  STAGE AT ZERO FLOW POINT
C IER        1  ERROR FLAG
C ISUMPT     1  RUNNING SUM OF POINTS READ IN SO FAR
C IWARN      1  WARNING FLAG
C KEYWRD     1  KEYWORD READ IN
C LOCXRC     1  POINTER TO LOCATION IN XRC ARRAY
C LH         1  LOCATION COUNTER FOR STAGES IN XRC
C LEV        1    "        "      "  ELEVATIONS IN XRC
C LTP        1    "        "      "  TOP WIDTHS IN XRC
C LOC2       1  2ND LOCATION IN OPTIONAL INFO THAT HAS LOCATION OF
C               NEXT NUMBER CODE
C LOC3       1  3RD LOCATION OF OPTIONAL INFO THAT STARTS ACTUAL INFO
C MAXPTS     1  MAX SPACE IN XRC ARRAY
C MOREC      1  MORE CARDS MAY NEED TO BE READ...=TRUE IF R.C ENDED
C               PREMATURELY, =FALSE IF ALL CARDS READ
C NCHR7      1  NUMBER OF CHARACTERS IN FIELD 7
C NFLEFT     1  NUMBER OF FIELDS LEFT
C NUMPAR     1  NUMBER OF PAIRS READ IN SO FAR
C NUMPTS     1  NUMBER OF POINTS (EITHER R.C. PTS OR X.S. OR BOTH
C               DEPENDING ON WHERE USED)
C NWORD      1  NUMBER OF WORDS
C Q1         1  FIRST DISCHARGE
C WORK     225  WORK SPACE ARRAY
C CKARAY     1  ARRAY CONTAINING MANNING N VALUES
C
C
      LOGICAL ADDING,ENGUNT,MOREC,RF
      CHARACTER*8 UPDATE,REPLHQ,TEMP
C
      DIMENSION SUBNAM(2),OLDSUB(2),NUNT(4),
     * FPCODS(12),KEY(4),ICPTR(5),
     * OPCODE(19),WORK(225)
      DIMENSION ARRAY(100)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fprog'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/where'
      INCLUDE 'ufreei'
      INCLUDE 'common/frcers'
      INCLUDE 'common/fratng'
      INCLUDE 'common/fxsctn'
      INCLUDE 'scommon/sugnlx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob7/rfc/ofs/src/fcinit_top/RCS/fdefrc.f,v $
     . $',                                                             '
     .$Id: fdefrc.f,v 1.6 2000/07/21 18:50:41 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA REPLHQ/'REPLHQ  '/
      DATA IADD/4HADD /,IREP/4HREPL/,UPDATE/'UPDATE  '/,LT/1HT/,
     * RTCV/4HRTCV/,SUBNAM/4HDEFR,4HC   /,TZCODE/4HINTL/,IR,IF/1HR,1HF/,
     * IA/1HA/,BLANK/4H    /,LOOP/4HLOOP/,L/1HL/,M/1HM/,
     $ NUNT/3H(FT,4HCFS),3H (M,4HCMS)/
C
      DATA IP/1HP/,PBBB/4HP   /,KSS/2HSS/,KWS/2HWS/,
     * KEY/2HRR,2HRV,2HEX,2HFF/,ICPTR/1,5,7,10,13/
      DATA KOFF/3HOFF/,LIN/3HLIN/,INT/3HINT/
C
      DATA FPCODS/4HDAOP,4HDAMA,4HFLUD,4HSPRT,4HRSQ ,4HINF ,4HSOOP,
     * 4HSOMA,4HWSUP,4HHWFF,4HFFON,4HHWON/,IC/1HC/,IH/1HH/,ICONT/1H&/,
     * OPCODE/4HNWS-,4HID  ,4HUSGS,4H-ID ,4HCOMM,4HENT ,4HRIVE,
     * 4HR-LO,4HC   ,4HBANK,4HFULL,4H-STG,4HMOB-,4HSTG ,4HHSA-,4HID  ,
     * 4HE-19,4HE-19,4HA   /,
     * ATB/4HT   /
C
      DATA LARRAY/100/
C
C SET /WHERE/ INFO AND DEBUG CODE
C
      DO 100 I=1,2
      OLDSUB(I)=OPNAME(I)
100   OPNAME(I)=SUBNAM(I)
      IOLDOP=IOPNUM
      IOPNUM=0
C
      IBUG=IFBUG(RTCV)
      IF (ITRACE.GE.1) WRITE(IODBUG,105)
105   FORMAT(1H0,21H *** ENTER FDEFRC ***)
C
C PRINT HEADING AND INITIALIZE VARIABLES
C
      WRITE(IPR,8000)
      IONE=1
      MAXPTS=225
      NCD=0
      MOREC=.FALSE.
C
C***********************************************************************
C
C FOLLOWING IS THE ANALYSIS OF EACH INPUT CARD.
C COMMENTS FOR EACH CARD INCLUDE THE CARD NUMBER ACCORDING TO THE INPUT
C SUMMARY AND A LIST OF VARIABLES WITH OPTIONAL VARIABLES IN ().
C
C THE TYPICAL SEQUENCE OF ANALYSIS IS:
C 1. CHECK IF CARD IS NEEDED (FOR OPTIONAL CARDS ONLY)
C 2. SET THE CARD NUMBERS (ACTUAL AND ACCORDING TO INPUT SUMMARY)
C 3. SET THE MAX AND MIN NUMBER OF FIELDS EXPECTED IF KNOWN
C 4. READ THE CARD FREE FORMAT
C 5. CHECK THE NUMBER OF FIELDS AGAINST THE MAX AND MIN (IF KNOWN)
C 6. GO THRU EACH FIELD ON THE CARD
C
C
C **********************************************************************
C
C ** CARD 1 ** IDENTIFIER CARD
C
C ID,RTCVID,ADDING,(LASDAY)
C
      CALL FRCRDC(IBUG,IFOUND)
C
150   NCIS=1
      MXF=4
      MNF=3
      IF (NFIELD.GT.MXF .OR. NFIELD.LT.MNF) CALL FRCERR(1)
C
C FIELD 1 - ID - 'IDENTIFIER' OR 'ID' INDICATOR
C
C CHECK THAT WE HAVE 'IDENTIFIER' OR 'ID'. IF NOT GO READ
C ANOTHER CARD.
C ONLY CHECK IF MOREC=FALSE WHICH MEANS EITHER IT IS THE FIRST R.C. OR
C FOR SUBSEQUENT R.C.'S 'ID' IN FIRST FIELD HASN'T BEEN CHECKED FOR YET
C
      IF (MOREC) GO TO 250
      NFC=1
      NFIS=1
      CALL FRCID(1,IFOUND)
      IF (IFOUND.EQ.1) GO TO 250
      CALL FRCERR(3)
      MOREC=.TRUE.
      GO TO 7300
C
C INITIALIZE VARIABLES
C
250   IERSUM=0
      IERTMP=0
      FLDSTG=-999.
      FLOODQ=-999.
      GZERO=-999.
      STGMIN=-999.
      RFQ=-999.
      RFSTG=-999.
      IRFDAY=-999
      DO 255 I=1,5
255   RFCOMT(I)=BLANK
      ABELOW=0.0
      SLOPE=0.01
      FLOODN=-999.
      FRLOOP=-999.
      DO 256 I=1,25
        EMPTY(I)=0.00001
256   CONTINUE
      SHIFT=0.0
      EMPTY(3)=0.0
      LXELEV=-999
      LXTOPW=-999
      RTCVID(1)=BLANK
      RTCVID(2)=BLANK
      DO 260 I=1,5
      RIVERN(I)=BLANK
      RIVSTA(I)=BLANK
      FPTYPE(I)=BLANK
      RFCOMT(I)=BLANK
260   CONTINUE
      DO 270 I=1,MAXPTS
270   XRC(I)=BLANK
C
C FIELD 2 - RTCVID - RATING CURVE ID
C
C CHECK THAT NCHAR LE 8 AND THEN CALL FUNCTION TO SEE IF THIS ID
C IS ALLOWED.
C
      NFC=2
      NFIS=2
      MXC=8
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      IF (NCHAR.GT.MXC) GO TO 7200
      CALL UPACK1(IBUF(INIT),RTCVID,NCHAR)
      WRITE(IPR,8005) RTCVID
      CALL FCIDCK(RTCVID,NCHAR,1,3,1,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 3 - ADDING - 'ADD', 'REPL', 'REPLHQ' OR 'UPDATE' INDICATOR
C
      NFC=3
      INIT=IFSTRT(NFC)
      IFLAG=0
C
C BEFORE DETERMINING INDICATOR; LOCATE ID AND RECORD LOCATION(LOCREC).
C CHECK RETURN CODE TO SEE IF IT AGREES WITH THE INDICATOR
C   (EVEN THOUGH WE DONT KNOW THE EXACT INDICATOR-CAN JUST
C   CHECK IF 1ST LETTER IS 'A' FOR ADD).
C
C 1ST CHECK IF IN OPERATIONAL PROGRAM(MAINUM LE 2).
C IF SO, USE PERMANENT FILE...OTHERWISE USE SCRATCH FILE.
C
      IF (MAINUM.GT.2) GO TO 290
C
C HAVE OPERATIONAL PROGRAM AND USES PERMANENT FILES.
C CHECK EXISTENCE OF R.C. AND RETURN FLAG.
C IT IS ERROR IF:
C   1. ADDING AND R.C. EXISTS (IRC=1)
C   2. ADDING AND NO ROOM EXISTS (IRC=-1)
C   3. REPLACING OR UPDATING AND R.C. NOT FOUND (IRC=0)
C
      CALL FINDRC(RTCVID,LOCREC,IRC)
C
      TEMP='        '
      CALL UPACK1(IBUF(INIT),TEMP,8)
      IF (TEMP(1:1).EQ.'R'.AND.TEMP(5:5).EQ.' '.AND.IRC.EQ.0) THEN
         WRITE (IPR,8335) RTCVID
         CALL WARN
         IFLAG=1
         GOTO 274
         ENDIF
C
C      IF (IBUF(INIT).NE.IA) GO TO 285
      IF (IBUF(INIT).NE.IA) GO TO 300
C ADD
274   IF (IRC) 280,300,275
C
275   WRITE(IPR,8295)
      GO TO 295
C
280   WRITE(IPR,8315)
      GO TO 295
C
C REPLACE OR UPDATE
C
C 285   IF (IRC.GT.0) GO TO 300
C      WRITE(IPR,8335) RTCVID
C      GO TO 300
C
C HAVE CALIBRATION PROGRAM AND USES SCRATCH FILE.
C CHECK EXISTENCE OF R.C. AND RETURN FLAG.
C
290   CALL FUPSCR(RTCVID,LOCREC,IER)
      IF (IER.EQ.0) GO TO 300
      WRITE(IPR,8355)
C
C ERROR IF IT CAME HERE
295   CALL ERROR
      IERSUM=IERSUM+1
      MOREC=.TRUE.
      GO TO 7300
C
C CHECK THAT WE HAVE 'ADD', 'REPL', 'REPLHQ' OR 'UPDATE'
C
300   NFIS=3
      MXC=6
      NCHAR=IFSTOP(NFC)-INIT+1
      ADDING=.FALSE.
      N=NCHAR-2
      IF (IFLAG.EQ.1.AND.IRC.EQ.0) N=N-1
      GO TO (330,340,310,360),N
C
310   CALL FRCERR(2)
      GO TO 450
C
C NCHAR=3, THERFORE CHECK FOR 'ADD'
C
330   CALL UPACK1(IBUF(INIT),KEYWRD,NCHAR)
      IF (KEYWRD.NE.IADD.AND.IFLAG.EQ.0) CALL FRCERR(3)
      ADDING=.TRUE.
      GO TO 450
C
C NCHAR=4, THEREFORE CHECK FOR 'REPL'
C
340   CALL UPACK1(IBUF(INIT),KEYWRD,NCHAR)
      IF (KEYWRD.NE.IREP) CALL FRCERR(3)
      IF(IRC.EQ.0) WRITE(IPR,8335) RTCVID
      GO TO 450
C
C NCHAR=6, CHECK FOR 'REPLHQ' OR 'UPDATE'. SINCE WE HAVE UPDATE
C USE ROUTINE FOR UPDATING THEN GO WAY DOWN TO WHERE ERRORS ARE
C CHECKED AND R.C. IS WRITTEN TO FILE.
C
C EV MODIFY-CAN HAVE UPDATE OR REPLHQ. UPDATE KEEPS ANY OLD POINTS
C HIGHER THAN HIGHEST NEW POINT (KEEPOP=1) WHILE REPLHQ WON'T
C KEEP ANY OLD POINTS (KEEPOP=0)
C
360   CONTINUE
      KEEPOP=0
      CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      ISAME=IUSAME(REPLHQ,WORK,2)
C
C  IF ISAME.EQ.1 KEYWORD IS 'REPLHQ' SO LEAVE KEEPOP=0
C
      IF(ISAME.EQ.1)GO TO 361
C
C ONLY THING LEFT IS UPDATE
C
      KEEPOP=1
      ISAME=IUSAME(UPDATE,WORK,2)
      IF (ISAME.EQ.0) THEN
        CALL FRCERR(3)
	GO TO 7300
      ENDIF	
C CALL ROUTINE TO FILL CB/FRATNG/ THEN CALL UPDATE, THEN READ NEXT CARD.
361   CONTINUE
      CALL FCRDRC(LOCREC,RTCVID,IFOUND)
      IF (IFOUND.NE.0) GO TO 7300
      IF(IRC.EQ.0) KEEPOP = -1
      CALL FRCUPD(WORK,MAXPTS,IFOUND,KEEPOP)
      IF(IRC.EQ.0) THEN
        WRITE(IPR,8002)
	IERSUM = IERSUM+1
c	GO TO 7300
      ENDIF	
      IF (IFOUND.NE.0) GO TO 7800
      MOREC=.FALSE.
      CALL FRCRDC(IBUG,IFOUND)
      GO TO 7500
C
C FIELD 4 - LASDAY - LAST DAY TO USE RC(MMDDYYYY), OPTIONAL...ONLY FOR
C                    CALIBRATION
C
C IF FIELD IS EMPTY OR PROGRAM IS OPERATIONAL (OR ESP-MAINUM .LE. 2)
C   THEN LASDAY=0,
C   ELSE CONVERT TO JULIAN DAY...NCHAR MUST = 8.
C
450   IF (NFIELD.GT.3 .AND. MAINUM.GT.2) GO TO 500
      LASDAY=0
      GO TO 600
C
500   NFC=4
      NFIS=4
      MXC=8
      NCHAR=IFSTOP(NFC)-IFSTRT(NFC)+1
      IF (NCHAR.GT.MXC .OR. NCHAR.LT.7) CALL FRCERR(2)
C
C CONVERT TO JULIAN HOUR
C
      IF (IFTYPE(NFC).EQ.1) GO TO 510
      CALL FRCERR(3)
      GO TO 600
510   CALL UNUMIC(IBUF,IFSTRT(NFC),IFSTOP(NFC),LASDAY)
      MO=LASDAY/1000000
      IDAY=LASDAY/10000
      IDAY=MOD(IDAY,100)
      IYEAR=MOD(LASDAY,10000)
      CALL FCITZC(N,N,TZCODE)
      CALL JULDA(LASDAY,N,MO,IDAY,IYEAR,1,N,N,TZCODE)
C...................DEBUG TIME..........................................
600   IF(IBUG.GT.0) WRITE(IODBUG,8915) RTCVID,KEYWRD,LASDAY
C.......................................................................
C
C
C **********************************************************************
C
C ** CARD 2 ** STATION IDENTIFICATION INFORMATION
C
C RIVSTA,RIVERN,RLAT,RLONG
C
      NCIS=2
      MXF=4
      MNF=4
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF (NFIELD.NE.MXF) CALL FRCERR(1)
C
C FIELD 1 - RIVSTA - RIVER STATION NAME
C
C CHECK NCHAR AND IFTYPE
C
      NFC=1
      NFIS=1
      MXC=20
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      IF (NCHAR.GT.MXC) GO TO 7200
      IF (IFTYPE(NFC).NE.3) CALL FRCERR(3)
C
      CALL UPACK1(IBUF(INIT),RIVSTA,NCHAR)
C
C FIELD 2 - RIVERN - RIVER NAME
C
C JUST CHECK NCHAR AND IFTYPE
C
      NFC=2
      NFIS=2
      MXC=20
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      IF (NCHAR.GT.MXC) GO TO 7200
      IF (IFTYPE(NFC).NE.3) CALL FRCERR(3)
C
      CALL UPACK1(IBUF(INIT),RIVERN,NCHAR)
C
C FIELD 3 - RLAT - LATITUDE (DEGREES DECIMAL)
C
C JUST CHECK NCHAR AND THEN CONVERT TO REAL NUMBER
C
      NFC=3
      NFIS=3
      MXC=6
      NCHAR=IFSTOP(NFC)-IFSTRT(NFC)+1
      IF (NCHAR.GT.MXC) CALL FRCERR(2)
      IF (IUGFIL.EQ.0) CALL SUGTUG(LARRAY,ARRAY,IERR)
C
      CALL UFIXED(IBUF,RLAT,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (RLAT.LE.ULLMTS(1).AND.RLAT.GE.ULLMTS(2)) THEN
         ELSE
            WRITE(IPR,444) 'LATITUDE',RLAT,RTCVID,ULLMTS(2),ULLMTS(1)
            CALL ERROR
            IER=1
            ENDIF
444   FORMAT('0**ERROR** ',A,' ',F10.2,' FOR RATING CURVE ',2A4,
     *       ' IS NOT IN THE RANGE OF ',F7.1,' THROUGH ',F7.1,'.')
C
C FIELD 4 - RLONG - LONGITUDE (DEGREES DECIMAL)
C
C JUST CHECK NCHAR AND CONVERT TO REAL NUMBER
C
      NFC=4
      NFIS=4
      MXC=6
      IF (NCHAR.GT.MXC) CALL FRCERR(2)
C
      CALL UFIXED(IBUF,RLONG,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (RLONG.LE.ULLMTS(4).AND.RLONG.GE.ULLMTS(3)) THEN
         ELSE
            WRITE(IPR,444) 'LONGITUDE',RLONG,RTCVID,ULLMTS(3),ULLMTS(4)
            CALL ERROR
            IER=1
            ENDIF
C..........................DEBUG TIME...................................
      IF(IBUG.GT.0) WRITE(IODBUG,8925) RIVSTA,RIVERN,RLAT,RLONG
C.......................................................................
C
C **********************************************************************
C
C ** CARD 3 ** - INDICATORS
C
C OPTION,NRCPTS,NCROSS,AREAT,AREAL,(FPTYPE),(LOOP),(NGSOFF)
C
      NCIS=3
      MXF=11
      MNF=5
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF (NFIELD.GT.MXF .OR. NFIELD.LT.MNF) CALL FRCERR(1)
C
C FIELD 1 - OPTION - UNITS USED
C
C CHECK FOR 'ENGL' OR 'METR' (OR 'E' OR 'M')
C
      NFC=1
      NFIS=1
      MXC=4
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      CALL FRCOPT(INIT,ENGUNT,OPTION)
C
C SET UP CONVERSION FACTORS TO GET INTO METRIC(=1 FOR 'METR')
C
      FACLEN=1.0
      FACVOL=1.0
      FACMKM=1.0
      COEFMN=1.0
      IF (ENGUNT) THEN
         COEFMN=1.486
         CALL FRCUN(FACLEN,FACVOL,FACMKM,IER)
      ENDIF
      IERSUM=IERSUM+IER
      FACARE=FACLEN**2
      FACSKM=FACMKM**2
      ELVMIN= -220.
      IF (ENGUNT) ELVMIN= -722.
      ELVMAX=8900.
      IF (ENGUNT) ELVMAX=29200.
C
C FIELD 2 - NRCPTS - NUMBER OF POINTS IN RATING CURVE
C
C CHECK IFTYPE, CONVERT TO INTEGER.
C
      NFC=2
      IER=0
      IF (IFTYPE(NFC).NE.1) IER=1
      CALL UNUMIC(IBUF,IFSTRT(NFC),IFSTOP(NFC),NRCPTS)
C
C FIELD 3 - NCROSS - NUMBER OF VALUES IN X.S. DATA TABLE
C
C CHECK IFTYPE, CONVERT TO INTEGER.
C
      NFC=3
      IF (IFTYPE(NFC).NE.1) IER=1
      CALL UNUMIC(IBUF,IFSTRT(NFC),IFSTOP(NFC),NCROSS)
C
C SUM UP TOTAL NUMBER OF POINTS TO MAKE SURE IT DOES NOT EXCEED LIMIT
C MULTIPLY BY 2 BECAUSE R.C. AND X.C. ARE IN PAIRS
C
      NUMPTS=NRCPTS*2 + NCROSS*2
C
C FIELD 4 - AREAT - TOTAL DRAINAGE AREA
C
C JUST CONVERT TO REAL NUMBER
C
900   NFC=4
      NFIS=4
      CALL UFIXED(IBUF,AREAT,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 5 - AREAL - LOCAL DRAINAGE AREA
C
C CONVERT TO REAL NUMBER
C
      NFC=5
      NFIS=5
      CALL UFIXED(IBUF,AREAL,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C CHECK ABOVE 2 AREAS TO SEE IF AREAL IS SMALLER AND POSITIVE.
C
      IF (AREAT.GE.AREAL .AND. AREAL.GE.0) GO TO 1000
      WRITE(IPR,8035) AREAT,AREAL
      CALL WARN
C
C ONLY OPTIONAL FIELDS LEFT.  LOOP THRU EACH REMAINING FIELD AND SEE
C WHICH OPTION IT IS BY CHECKING KEYWORD
C
1000  CONTINUE
      IWARN=0
      MXC=7
      NFIS=6
      NGSOFF=0
      DO 1100 I=1,5
1100  FPTYPE(I)=BLANK
      IF (NFIELD.LT.NFIS) GO TO 2001
C
      DO 2000 NFC=6,NFIELD
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
C CHECK FOR LOOP (NCHAR=1 OR 4)
      IF (NCHAR.EQ.1 .OR. NCHAR.EQ.4) GO TO 1650
C CHECK FOR USGS OFFSET (KEYWRD = OFF)
      CALL UPACK1(IBUF(INIT),KEYWRD,3)
      IF (KEYWRD.EQ.KOFF) GO TO 1990
C CHECK FOR INTERPOLATION/EXTRAPOLATION OPTION (KEYWRD = INT)
      CALL UPACK1(IBUF(INIT),KEYWRD,3)
      IF (KEYWRD.EQ.INT) GO TO 1991
C ASSUME FIELD IS FPTYPE
C FIELD 6 - FPTYPE - FORECAST PRODUCT TYPES
C THIS FIELD CAN BE REPEATED UP TO 4 TIMES AND CONTAINS A 4-CHAR
C CODE INDICATORS FOR FORECAST PRODUCT TYPES.
C FORMAT OF INPUT IS KEYWORD(A2)=CODE(A4)
C EACH TYPE IS OPTIONAL AND THE FIELD CAN BE LEFT BLANK.
C STEPS:
C  - CHECK THE KEYWORD (FORECAST TYPE) TO SEE WHICH TYPE IT IS
C  - CHECK THE 4 CHARACTER CODE TO SEE IF IT IS A SUGGESTED CODE
C
C VARIABLES:
C   FPTYPE(5) - ARRAY TO CONTAIN FORECAST PRODUCT CODES. EACH ELEMENT
C               CORRESPONDS TO A KEYWORD (THE 5TH ONE IS FOR FUTURE USE)
C   KEYWRD    - KEYWORD THAT IS READ IN (A2)
C   CODE      - CODE    THAT IS READ IN (A4)
C   KEY(4)    - ARRAY CONTAINING THE ALLOWABLE KEYWORDS
C   FPCODS(16)- ARRAY CONTAINING THE SUGGESTED CODES
C   ICPTR(8)  - ARRAY CONTAINING THE BEGINING ELEMENTS IN
C               FPCODS ARRAY CORRESPONDING TO EACH KEYWORD
C   KTYPE     - POINTER OF WHICH KEYWORD WE HAVE 1,2,3, OR 4
C   ICWARN    - COUNTER OF NUMBER OF WARNINGS INCURRED CAUSE CODE
C               READ IN WAS NOT A SUGGESTED CODE.
C
C   USE NESTLED LOOP TO CHECK WHICH FPTYPE IT IS BASED ON KEYWORD.
C   USE ANOTHER NESTLED LOOP TO CVHECK IF CODE IS A SUGGESTED ONE.
C
      IF (NCHAR.LT.6 .OR. NCHAR.GT.MXC) CALL FRCERR(2)
      CALL UPACK1(IBUF(INIT),KEYWRD,2)
      INIT=INIT+3
      NCHAR=NCHAR-3
      CALL UPACK1(IBUF(INIT),CODE,NCHAR)
C
C GO THRU NESTLED LOOP AS MANY TIMES AS THERE ARE VALID KEYS.
C EXIT WHEN VALID KEYWORD IS FOUND, IF NONE THEN ERROR.
C KTYPE IS LOOP COUNTER AND WILL ALSO BE THE ELEMENT IN FPTYPE
C ARRAY THAT CODE GETS STORED
C
      DO 1300 K=1,4
      KTYPE=K
      IF (KEYWRD.EQ.KEY(KTYPE)) GO TO 1400
1300  CONTINUE
      CALL FRCERR(3)
C
C PLACE CODE INTO THE FPTYPE ARRAY AT PROPER LOCATION(KTYPE).
C ALSO GO THRU NESTLED LOOP TO CHECK IF CODE IS A SUGGESTED ONE
C IF NOT INCREMNET CODE WARNING FLAG BY ONE, IF SO RETURN
C TO OUTER LOOP.
C J AND K ARE POINTERS GOTTEN OUT OF IC ARRAY WHICH SHOW THE BEGINNING
C AND ENDING ELEMENTS OF THE CODES IN FPCODS ARRAY FOR THIS KEYWORD
C
1400  FPTYPE(KTYPE)=CODE
C
      J=ICPTR(KTYPE)
      K=ICPTR(KTYPE+1)-1
      DO 1500 I=J,K
      IF(CODE.EQ.FPCODS(I)) GO TO 2000
1500  CONTINUE
C INCREMENT WARNING COUNTER FOR NUMBER OF UNSUGGESTED CODES
      IWARN=IWARN+1
      GO TO 2000
C
C FIELD 7 - LOOP RATING OPTION USED
C SET FRLOOP TO 100.0 TO INDICATE LOOP RATING HAS BEEN USED
C CHECK THAT WE HAVE 'L' OR 'LOOP' AS INPUT.
C VARIABLES:
C   LOOP,L - 'LOOP' AND 'L'
C   LINFO  - CONTAINS THE CHARACTERS READ IN
C
1650  FRLOOP=100.0
      NFIS=7
C CHECK NCHAR
      GO TO (1800,1700,1700,1900),NCHAR
C ERROR
1700  CALL FRCERR(2)
      GO TO 2000
C CHECK FOR 'L' SINCE NCHAR=1
1800  IF(IBUF(INIT).EQ.L) GO TO 1980
      CALL FRCERR(3)
      GO TO 2000
C CHECK FOR 'LOOP' SINCE NCHAR=4
1900  CALL UPACK1(IBUF(INIT),LINFO,4)
      IF(LINFO.EQ.LOOP) GO TO 1980
      CALL FRCERR(3)
      GO TO 2000
C MAKE SURE NUMBER OF X.S. POINTS (NCROSS) IS DEFINED
1980  IF (NCROSS.GT.0) GO TO 2000
      WRITE(IPR,8075)
      CALL ERROR
      IERSUM=IERSUM+1
      GO TO 2000
C
C FIELD 8 NGSOFF NUMBER OF USGS OFFSET POINTS
C KEYWORD IS OFF (HAS ALREADY BEEN CHECKED)
C
1990  CONTINUE
      NFIS=8
      INIT=INIT+4
      CALL UNUMIC(IBUF,INIT,IFSTOP(NFC),NGSOFF)
      GO TO 2000
C
C FIELD 9 LIN -- = LIN TO USE LINEAR INTERPOLATION/EXTRAPOLATION
C KEYWORD IS INT; DEFAULT TO LOG-LOG INTERPOLATION/EXTRAPOLATION
C
1991  CONTINUE
      NFIS=8
      INIT=INIT+4
      CALL UPACK1(IBUF(INIT),LINFO,3)
      IF(LINFO .EQ. LIN) EMPTY(4)=1.01
C
2000  CONTINUE
C  ** END OF LOOP THRU OPTIONAL FIELDS
C
C CHECK WARNING FLAG TO SEE HOW MANY CODES WERE UNSUGGESTED.
C
      IF (IWARN.EQ.0) GO TO 2001
      WRITE(IPR,8055) IWARN,FPTYPE
      CALL WARN
2001  CONTINUE
      IF(NGSOFF .EQ. 0) GO TO 2002
      IF(EMPTY(4) .LT. 1.0) GO TO 2002
      WRITE(IPR,8085)
      CALL ERROR
      IERSUM=IERSUM+1
C..............DEBUG TIME...............................................
 2002 IF(IBUG.EQ.0) GO TO 2050
      WRITE(IODBUG,8935) OPTION,FACLEN,FACVOL,FACMKM,NRCPTS,NCROSS,
     $ AREAT,AREAL,FPTYPE
      IF(IFMSNG(FRLOOP).EQ.0) WRITE(IODBUG,8936)
C.......................................................................
C
C***********************************************************************
C
C ** CARD 4 ** FLOOD STAGE INFOMATION
C
C FLDSTG,(PVISFS),GZERO,STGMIN,(SCFSTG),(WRNSTG)
C
2050  NCIS=4
      MXF=6
      MNF=2
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF (NFIELD.GT.MXF .OR. NFIELD.LT.MNF) CALL FRCERR(1)
C
C FIELD 1 - FLDSTG AND (PVISFS) - PRIMARY FLOOD STAGE AND/OR TAILWATER
C             RATING (OPTIONAL). FOLLOWED BY A 'P' IF IT IS PROVISIONAL
C                         OR BY A 'T' FOR TAILWATER RATING, OR T ONLY.
C ALLOW M FOR MISSING
C CHECK IF END CHARACTER IS A 'P'
C IF 'P', PUT IN PVISFS AND REDUCE IFIN BY ONE,
C     OTHERWISE PVISFS=BLANK. IF 'T' CHECK IF IFELDS 1,2 ARE PRESENT.
C THEN CONVERT FIELD TO REAL NUMBER
C NOTE: FLOODQ WILL BE COMPUTED AT THE END OF ROUTINE
C
      NFC=1
      NFIS=1
      INIT=IFSTRT(NFC)
      IFIN=IFSTOP(NFC)
      NCHAR=IFIN-INIT
C CHECK FOR M
      PVISFS=BLANK
      IF (IBUF(INIT).EQ.M) GO TO 2120
C CHECK FOR 'T'
      IF (IBUF(IFIN).NE.LT) GO TO 2060
      PVISFS=ATB
      IFIN=IFIN-1
      IF (NCHAR.EQ.0) GO TO 2120
      GO TO 2100
C CHECK FOR P
2060  PVISFS=BLANK
      IF(IBUF(IFIN).NE.IP) GO TO 2100
      PVISFS=PBBB
      IFIN=IFIN-1
C FLDSTG IS PRESENT
C CONVERT TO NUMERIC, CHECK THAT IT IS POSITIVE
C
2100  CALL UFIXED(IBUF,FLDSTG,INIT,IFIN,2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 2 - GZERO- GAGE ZERO DATUM (MSL)
C
C CONVERT TO NUMERIC AND ALLOW FOR MISSING IF NCROSS =0
C
2120  NFC=NFC+1
      NFIS=2
      INIT=IFSTRT(NFC)
      IF (IBUF(INIT).EQ.M) GO TO 2125
      CALL UFIXED(IBUF,GZERO,INIT,IFSTOP(NFC),2,0,IER)
      IF (IER.EQ.0 .AND. IFMSNG(GZERO).EQ.1) GO TO 2125
      IF (GZERO.LE.ELVMIN .OR. GZERO.GE.ELVMAX) IER=1
      IF (IER.NE.0) CALL FRCERR(3)
      GO TO 2127
C COMES HERE FOR MISSING , NCROSS MUST BE 0
2125  IF(NCROSS.EQ.0) GO TO 2127
      WRITE(IPR,8159)
      CALL ERROR
      IERSUM=IERSUM+1
C
C FIELD 3 - STGMIN - MINIMUM ALLOWABLE STAGE
C NOT PRESENT IF NRCPTS =0
C CONVERT TO REAL NUMBER
C
2127  IF (NRCPTS.EQ.0) GO TO 2129
      NFC=NFC+1
      NFIS=3
      CALL UFIXED(IBUF,STGMIN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. IFMSNG(STGMIN).NE.0) CALL FRCERR(3)
C
C FIELD 4 - SCFSTG - SECONDARY FLOOD STAGE (OPTIONAL) AND
C FIELD 5 - WRNSTG- WARNING STAGE (OPTIONAL)
C
C ANALYZE BOTH FIELDS TOGETHER SINCE BOTH ARE OPTIONAL AND HAVE SAME
C FORMAT... FORNAT IS KEYWORD(A2)=VALUE
C   WHERE KEYWORD OF 'SS' IS FOR SECONDARY FLOOD STAGE
C   AND              'WS' IS FOR WARNING STAGE
C
C STEPS ARE TO DETERMINE WHICH KEYWORDS ARE INPUT AND CONVERT THE
C VALUES TO REAL NUMBERS AND TO METRIC
C
C FIRST, INITIALIZE THE VALUES (SET INPUT VARIABLES TO MISSING)
C
C
2129  SCFSTG=-999.
      WRNSTG=-999.
C
C SEE HOW MANY FIELDS ARE LEFT(NFLEFT). IF NLEFT=0 SIMPLY GO ONTO NEXT
C CARD.
C
      NFLEFT=NFIELD-NFC
      IF (NFLEFT.EQ.0) GO TO 2300
      NFC=NFC+1
      NFIS=4
C
C NEXT UNPACK AND CHECK THE KEYWORD.
C IF ONLY 1 FIELD LEFT, THEN CHECK FOR EITHER 'WS' OR 'SS'.
C IF 2 FIELDS ARE LEFT, THEN 1ST FIELD MUST BE 'SS'.
C
      INIT=IFSTRT(NFC)
      CALL UPACK1(IBUF(INIT),KEYWRD,2)
      IF (NFLEFT.EQ.1 .AND. KEYWRD.EQ.KWS) GO TO 2200
C
C WE HAVE A SECONDARY FLOOD STG...UNPACK VALUE
C
      INIT=INIT+3
      CALL UFIXED(IBUF,SCFSTG,INIT,IFSTOP(NFC),2,0,IER)
      IF (KEYWRD.NE.KSS .OR. IER.NE.0) CALL FRCERR(3)
      IF (NFLEFT.EQ.1) GO TO 2300
C
C 2 FIELDS WERE LEFT THEREFORE CHECK TO BE SURE 2ND FIELD IS 'WS'
C
      NFC=NFC+1
      NFIS=5
      INIT=IFSTRT(NFC)
      CALL UPACK1(IBUF(INIT),KEYWRD,2)
C
C WARNING STAGE FIELD- UNPACK VALUE
C
2200  NFIS=5
      INIT=INIT+3
      CALL UFIXED(IBUF,WRNSTG,INIT,IFSTOP(NFC),2,0,IER)
      IF (KEYWRD.NE.KWS .OR. IER.NE.0) CALL FRCERR(3)
C
C CHECK THE MAGNITUDE OF THE VALUES ON THIS CARD...
C STGMIN SHOULD BE THE LOWEST AND FLDSTG SHOULD BE GREATER THAN SCFSTG.
C IF NOT, WRITE WARNING.
C
      IWARN=0
      IF (IFMSNG(WRNSTG).EQ.0 .AND. WRNSTG.LT.STGMIN) IWARN=IWARN+1
      IF (IFMSNG(SCFSTG).EQ.0 .AND. SCFSTG.LT.STGMIN) IWARN=IWARN+1
      IF (IFMSNG(FLDSTG).NE.0) GO TO 2250
      IF (FLDSTG.LT.STGMIN) IWARN=IWARN+1
      IF (FLDSTG.LT.SCFSTG .OR. FLDSTG.LT.WRNSTG) IWARN=IWARN+1
2250  IF (IWARN.EQ.0) GO TO 2300
      WRITE(IPR,8095) FLDSTG,SCFSTG,WRNSTG,STGMIN
      CALL WARN
C..............DEBUG TIME...............................................
2300  IF(IBUG.GT.0) WRITE(IODBUG,8945) FLDSTG,PVISFS,GZERO,
     * STGMIN,SCFSTG,WRNSTG
C.......................................................................
C
C***********************************************************************
C
C ** CARD 5 ** FLOOD OF RECORD INFO  (OPTIONAL)
C
C 'RF',RFSTG,RFQ,IRFDAY,RFCOMT(5)
C
      NCIS=5
      MXF=5
      MNF=4
      RF=.FALSE.
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.EQ.0) GO TO 2310
C ID OR END FOUND THERFORE END IF NRCPTS=0 OTHERWISE GIVE ERROR
      IF (NRCPTS.NE.0) GO TO 7800
      IPOPT=1
      XRC(1)=-1.001
      GO TO 7000
C
C FIELD 1 - 'RF'
C
2310  NFC=1
      NFIS=1
      INIT=IFSTRT(NFC)
      IF (IBUF(INIT).NE.IR .OR. IBUF(INIT+1).NE.IF) GO TO 2420
      RF=.TRUE.
      IF (NFIELD.GT.MXF .OR. NFIELD.LT.MNF) CALL FRCERR(1)
C
C FIELD 2 - RFSTG - RECORD FLOOD STAGE
C
C CONVERT TO REAL NUMBER
C
      NFC=2
      NFIS=2
      CALL UFIXED(IBUF,RFSTG,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 3 - RFQ - RECORD FLOOD DISCHARGE
C
C CONVERT TO REAL NUMBER AND ALLOW M FOR MISSING
C
      NFC=3
      NFIS=3
      INIT=IFSTRT(NFC)
      IF (IBUF(INIT).EQ.M) GO TO 2340
      CALL UFIXED(IBUF,RFQ,INIT,IFSTOP(NFC),2,0,IER)
      IF (RFQ.LE.0.0 .AND. IFMSNG(RFQ).EQ.0) IER = 1
      IF (IER.NE.0) CALL FRCERR(3)
C
C FILED 4 - IRFDAY - RECORD FLOOD DATE (FORM IS MMDDYYYY)
C
C SIMPLY CONVERT TO INTEGER. ALLOW M FOR MISSING AND 4,7, OR 8 CHARACTER
C
2340  NFC=4
      NFIS=4
      INIT=IFSTRT(NFC)
      IF (IBUF(INIT).EQ.M) GO TO 2350
      IFIN=IFSTOP(NFC)
      NCHAR=IFIN-INIT+1
      CALL UFIXED(IBUF,IRFDAY,INIT,IFIN,1,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      IF (NCHAR.EQ.4 .OR. NCHAR.EQ.8) GO TO 2350
      IF (NCHAR.NE.7) CALL FRCERR(2)
C
C FIELD 5 - RFCOMT(5)(OPTIONAL) - RECORD FLOOD COMMENT, 20 CHARACTER MAX
C
C FIRST CHECK IF COMMENT FIELD IS PRESENT
C THEN CHECK NCHAR AND UNPACK IBUF INTO 5 A4 WORDS
C
2350  IF (NFIELD.EQ.MNF) GO TO 2410
      NFC=5
      NFIS=5
      INIT=IFSTRT(NFC)
      MXC=20
      NCHAR=IFSTOP(NFC)-INIT+1
      IF (NCHAR.GT.MXC) GO TO 7200
      CALL UPACK1(IBUF(INIT),RFCOMT,NCHAR)
C.............DEBUG TIME................................................
2410  IF(IBUG.GT.0) WRITE(IODBUG,8955) RFSTG,RFQ,IRFDAY,RFCOMT
C.......................................................................
C
C***********************************************************************
C
C ** CARD 6 ** STAGE,DISCHARGE PAIRS
C CARD NOT NEEDED IF NRCPTS IS 0
C
C  THE FOLLOWING CHANGE MADE ON 4/16/90 -- MAIN. #493, #593
C2420  IF (NRCPTS.EQ.0) GO TO 5400
 2420 LOCH=1
      LOCQ=1
      LOCXRC=0
      JUMP=1
      IF(RF) JUMP=0
      IF (NRCPTS.EQ.0) GO TO 5400
      JUMP=0
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
      NCIS=6
      MXF=2
      MNF=2
      IWARN=0
      IERTMP=IERSUM
      IERSUM=0
C
C FIELD 1,2 - STAGE,DISCHARGE PAIRS
C
C READ INPUT VALUES UNTIL NUMBER OF VALUES EXPECTED (NRCPTS*2) HAS BEEN
C SATISFIED. CONVERT EACH VALUE TO METRIC, PUT INTO XRC ARRAY
C SEQUENTIALLY, AND CHECK THAT VALUES ARE ASCENDING AND Q'S ARE POSITIVE
C
C PROCEDURE IS TO CONTINUE READING CARDS UNTIL THE NUMBER OF POINTS
C EXPECTED IS SATISFIED. FOR EACH CARD ANALYZE THE PAIRS OF H,Q VALUES
C BY USING A NESTLED LOOP. THE OUTER LOOP SIMPLY LOOPS TWICE FOR FIELD 1
C OR FIELD 2 AND THE INNER LOOP CHECKS EACH VALUE USING AN LOOP
C INCREMENTOR OF 2 SO THAT ON ON PASS THE 1ST VALUES (H) IN THE PAIR
C ARE GOTTEN AND ON 2ND PASS THE 2ND VALUES IN THE PAIRS (Q) ARE
C GOTTEN.
C
C FIRST SET STARTING LOCATIONS (LOCH,LOCQ), THE NUMBER OF VALUES EXPECTE
C (NPTS), THE LOCATION IN XRC(LOCXRC) TO START, AND SUM OF POINTS READ
C COUNTER(ISUMPT=2 SINCE IST PAIR IS TREATED SEPARATLEY AS EXPLAINED BEL
C
      LOCH=1
      LOCQ=NRCPTS+1
      NPTS=NRCPTS*2
      ISUMPT=2
      LOCXRC=1
C
C CHECK IF CARD WAS READ AS FLOOD OF REC
C
      K=NCD
      IF (.NOT.RF) GO TO 2510
      K=NCD+1
C
C READ CARD AND CHECK THAT NFIELD IS AN EVEN NUMBER.
C
2500  CALL FRCRDC(IBUG,IFOUND)
 2505 IF (IFOUND.NE.0) GO TO 7800
2510  IF (NFIELD.EQ.0) GO TO 2500
      IF (MOD(NFIELD,2).EQ.0) GO TO 2515
      CALL FRCERR(1)
      GO TO 3000
2515  NUMPAR=ISUMPT/2
C
C OUTER LOOP FOLLOWS THAT WILL LOOP THRU CARD TWICE, ONCE FOR H VALUES
C AND ONCE FOR Q VALUES.
C
C ** START OUTER LOOP **
      DO 2800 NFIS=1,2
      INIT=NFIS
C
C COULD SIMPLY SET POINTERS FOR NESTLED LOOP BELOW EXCEPT FOR 1ST PAIR
C BECAUSE ASCENDING ORDER IS CHECKED IN NESTLED LOOP AND 1ST PAIR
C CAN'T BE CHECKED. THEREFORE IF ON 1ST CARD(NCD=K) THEN ANALYZE
C IST PAIR SEPARATELY(CONVERT TO REAL AND METRIC) AND SET POINTERS
C TO 2ND PAIR (INIT=3 OR 4), THEN GO TO NESTLED LOOP.
C
      IF (NCD.NE.K) GO TO 2520
      INIT=INIT+2
      IF(NFIS.EQ.2) LOCXRC=LOCQ
      CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFIS),IFSTOP(NFIS),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      GO TO 2550
C
C THIS IS NOT FIRST CARD, THEREFORE SIMPLY SET LOCXRC AND GO INTO
C NESTLED LOOP BELOW.
C LOCXRC IS SET= NUMBER OF PAIRS READ SO FAR FOR FIELD 1(H VALUES) OR
C LOCXRC IS SET= PAIRS READ PLUS TOTAL PAIRS EXPECTED(NRCPTS)
C
2520  LOCXRC=NUMPAR
      IF (NFIS.EQ.2) LOCXRC=NUMPAR+NRCPTS
C
C NESTLED LOOP FOLLOWS TO GO THRU THE FIELDS. LOOP INCREMENTER=2 SINCE
C WE WANT 1 VALUE FROM EACH PAIR. INITIAL COUNTER (INIT)=1 TO GO THRU
C H VALUES AND INIT=2 TO GO THRU Q VALUES. THIS WAS SET ABOVE IN
C OUTER LOOP (EXCEPTION IS FOR VERY 1ST CARD, INIT IS 3 OR 4).
C FIRST THING INSIDE LOOP IS TO INCREMENT LOCATION AND SUM OF POINTS
C READ COUNTERS.
C
C ** START INNER LOOP **
2550  DO 2700 NFC=INIT,NFIELD,2
      LOCXRC=LOCXRC+1
      ISUMPT=ISUMPT+1
C
C NO. OF POINTS READ MUST BE .LE. NUMBER OF VALUES EXPECTED, OTHERWISE
C GIVE WARNING AND STOP ANALYSIS. ONLY WARN IF 1ST TIME(IWARN=0).
C
      IF ((ISUMPT/2+2-NFIS).LE.NRCPTS) GO TO 2600
      IF (IWARN.EQ.1) GO TO 2800
      WRITE(IPR,8115) NRCPTS,NCIS
      CALL WARN
      IWARN=1
      GO TO 2800
C
C CONVERT EACH VALUE TO REAL AND THEN CHECK IF IT IS IN
C ASCENDING ORDER. IF NOT GIVE ERROR.
C
2600  CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      IF (XRC(LOCXRC).GT.XRC(LOCXRC-1)) GO TO 2700
      WRITE(IPR,8135)
      CALL FRCERR(3)
C
2700  CONTINUE
C ** END INNER LOOP **
2800  CONTINUE
C ** END OUTER LOOP **
C
C CARD IS NOW DONE, THEREFORE CHECK IF ALL RC POINTS ARE IN. IF NOT,
C GO BACK UP AND LOOP THRU FIELDS ON THE NEXT CARD.
C
      IF (ISUMPT.LT.NPTS) GO TO 2500
C
C CHECK THAT FIRST DISCHARGE IS POSITIVE
C
      NFC=1
      IF (XRC(LOCQ).GE.0.0) GO TO 3000
      WRITE(IPR,8145) XRC(LOCQ)
      CALL ERROR
      IERSUM=IERSUM+1
C
C.............DEBUG TIME................................................
C CHECK FOR ERRORS- IF ANY SKIP TO NEXT ID
C
3000  IF(IBUG.GT.0) WRITE(IODBUG,8965) LOCH,LOCQ,(XRC(I),I=1,LOCXRC)
      IF (IERSUM.EQ.0) GO TO 3120
      MOREC=.TRUE.
      GO TO 7300
3120  CONTINUE
C.......................................................................
C
C***********************************************************************
C
C CARD 6A USGS OFFSET POINTS
C OFFSETS ARE USED BY USGS TO SHIFT RATING STAGES SO THAT LOG-LOG PLOT
C IS A STRAIT LINE
C READ IN PAIRS OF Y VALUES AND OFFSETS
C  Y VALUE = STAGE ABOVE WHICH THE OFFSET IS APPLIES
C  OFFSET = VALUE TO SUBTRACT FROM STAGES BEFORE DOING INTERPOLATION
C RULES
C - OFFSET MUST BE LESS THAN THE Y VALUE TO WHICH IT IS APPLIED
C   EX 3.00 3.00 IS NOT ALLOWED , NEED 3.00 2.99 TO PREVENT STAGE=0
C      -1.0 -1.0 "  "    "      , NEED -1.0 -1.01
C - IF MORE THAN 1 PAIR THEN
C   1. THERE MUST BE A R.C. POINT DEFINED AT THE BREAKPOINT
C   2. MUST BE AT LEAST 2 POINTS IN EACH OFFSET RANGE (I.E., RC POINT
C      FOR EACH OFFSET MUST BE GT LAST RC POINT)
C STORE INFO IN XRC AS
C   1ST VAL=NUMBER OF OFFSET PAIRS
C   THE YVALUES
C   FOLLOWED BY THE OFFSETS
C
      IF (NGSOFF.EQ.0) GO TO 3499
      LOCXRC=LOCXRC+1
      LOCOFF=LOCXRC
      EMPTY(2)=LOCOFF+0.01
      XRC(LOCOFF)=NGSOFF+0.01
      isYvalue=1 !is this field for YVALUE? 1=yes, 0=no
	  iFieldSum=0
	  index=0
C
3200  CONTINUE
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF(EMPTY(4) .LT. 1.0) GO TO 3202
      NGSOFF=0
      EMPTY(2)=0.01
      LOCXRC=LOCXRC-1
      GO TO 3499
 3202 NFC=0
      iFieldSum=iFieldSum+NFIELD
      DO 3210 IOF=1,NFIELD
        NFC=NFC+1
	  if (isYvalue.EQ.1) then
	    index=index+1
		isYvalue=0 ! next one should be offset
C GET Y VALUE
        CALL UFIXED(IBUF,YVALUE,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
        IF (IER.NE.0) CALL FRCERR(3)
        XRC(LOCXRC+index)=YVALUE
	  else
         isYvalue=1 ! next one should be yvalue if any
C GET OFFSET
        CALL UFIXED(IBUF,OFFSET,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
        IF (IER.NE.0) CALL FRCERR(3)
        XRC(LOCXRC+NGSOFF+index)=OFFSET
C CHECK RULES
        IER=0
        IF (OFFSET.GT.YVALUE) IER=1
        DO 3205 II=1,NRCPTS
          HPRE=HVAL
          HVAL=XRC(LOCH+II-1)
          LXGS=II
          IF(YVALUE.GT.HVAL-.001 .AND.
     $       YVALUE.LT.HVAL+.001) GO TO 3206
3205    CONTINUE
C OFFSET NOT AT RC POINT
        IER=1
3206    CONTINUE
        IF (LXGS.GE.NRCPTS) IER=1
        IF (IOF.NE.2 .AND. HVAL.LE.HPRE) IER=1
3209    CONTINUE
        IF (IER.EQ.0) GO TO 3210
        WRITE(IPR,3211) YVALUE,OFFSET
        CALL FRCERR(3)
C END OF CHECKING RULES
C
        endif
3210  CONTINUE
	  if (iFieldSum.LT.(NGSOFF*2)) go to 3200
      LOCXRC=LOCXRC+NGSOFF*2
3211  FORMAT(1X,'** ERR FDEFRC-BAD OFFSET PAIR',2F7.2,
     $ ' CHECK DOCUMENTATION RULES')
C
C***********************************************************************
C
C ** CARD 7 ** ELEVATION,TOP WIDTH PAIRS FOR CROSS SECTIONS
C
C THIS CARD ONLY USED IF NCROSS .GT. 0
C
3499  CONTINUE
      IF (NCROSS.EQ.0) GO TO 5400
      K=NCD+1
      NCIS=7
      MXF=2
      MNF=2
      IWARN=0
C
C FIELD 1,2 - ELEVATION,TOP WIDTH PAIRS FOR CROSS SECTIONS
C
C READ INPUT VALUES UNTIL NUMBER OF VALUES EXPECTED (NCROSS*2) HAS BEEN
C SATISFIED. CONVERT EACH VALUE TO METRIC, PUT INTO XRC ARRAY
C AND CHECK THAT VALUES ARE ASCENDING AND TOP WIDTHS ARE POSITIVE
C
C PROCEDURE IS TO CONTINUE READING CARDS UNTIL THE NUMBER OF POINTS
C EXPECTED IS SATISFIED. FOR EACH CARD ANALYZE THE X.S. PAIR VALUES
C BY USING A NESTLED LOOP. THE OUTER LOOP SIMPLY LOOPS TWICE FOR FIELD 1
C OR FIELD 2 AND THE INNER LOOP CHECKS EACH VALUE USING AN LOOP
C INCREMENTOR OF 2 SO THAT ON ONE PASS THE 1ST VALUES IN THE XS PAIR
C ARE GOTTEN AND ON 2ND PASS THE 2ND VALUES IN THE PAIR ARE
C GOTTEN.
C
C FIRST SET STARTING LOCATIONS , THE NUMBER OF VALUES EXPECTED
C (NPTS), THE LOCATION IN XRC(LOCXRC) TO START, AND SUM OF POINTS READ
C COUNTER(ISUMPT=2 SINCE IST PAIR IS TREATED SEPARATLEY AS EXPLAINED BEL
C
      LOCXRC=LOCXRC+1
      LXELEV=LOCXRC
      LXTOPW=LXELEV+NCROSS
      NPTS=NCROSS*2
      ISUMPT=2
C
C READ CARD, SET NUMBER OF PAIRS READ SO FAR (NOT REALLY VALID FOR FIRST
C CARD) AND CHECK THAT NFIELD IS AN EVEN NUMBER.
C
3500  CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF (NFIELD.EQ.0) GO TO 3500
      IF (MOD(NFIELD,2).EQ.0) GO TO 3515
      CALL FRCERR(1)
      GO TO 4000
3515  NUMPAR=ISUMPT/2
C
C OUTER LOOP FOLLOWS THAT WILL LOOP THRU CARD TWICE, ONCE FOR
C ELEVATIONS AND THEN FOR TOP WIDTHS.
C
C ** START OUTER LOOP **
      DO 3800 NFIS=1,2
      INIT=NFIS
C
C COULD SIMPLY SET POINTERS FOR NESTLED LOOP BELOW EXCEPT FOR 1ST PAIR
C BECAUSE ASCENDING ORDER IS CHECKED IN NESTLED LOOP AND 1ST PAIR
C CAN'T BE CHECKED. THEREFORE IF ON 1ST CARD(NCD=K) THEN ANALYZE
C IST PAIR SEPARATELY(CONVERT TO REAL ) AND SET POINTERS
C TO 2ND PAIR (INIT=3 OR 4), THEN GO TO NESTLED LOOP.
C
      IF (NCD.NE.K) GO TO 3520
      INIT=INIT+2
      IF(NFIS.EQ.2) LOCXRC=LXTOPW
      CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFIS),IFSTOP(NFIS),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      GO TO 3550
C
C THIS IS NOT FIRST CARD, THEREFORE SIMPLY SET LOCXRC AND GO INTO
C NESTLED LOOP BELOW.
C LOCXRC IS SET= NUMBER OF PAIRS READ SO FAR FOR FIELD 1(ELV VALUES) OR
C LOCXRC IS SET= PAIRS READ PLUS TOTAL PAIRS EXPECTED(NCROSS)
C
3520  LOCXRC=NUMPAR+LXELEV-1
      IF (NFIS.EQ.2) LOCXRC=NUMPAR+NCROSS+LXELEV-1
C
C NESTLED LOOP FOLLOWS TO GO THRU THE FIELDS. LOOP INCREMENTER=2 SINCE
C WE WANT 1 VALUE FROM EACH PAIR. INITIAL COUNTER (INIT)=1 TO GO THRU
C H VALUES AND INIT=2 TO GO THRU Q VALUES. THIS WAS SET ABOVE IN
C OUTER LOOP (EXCEPTION IS FOR VERY 1ST CARD, INIT IS 3 OR 4).
C FIRST THING INSIDE LOOP IS TO INCREMENT LOCATION AND SUM OF POINTS
C READ COUNTERS.
C
C ** START INNER LOOP **
3550  DO 3700 NFC=INIT,NFIELD,2
      LOCXRC=LOCXRC+1
      ISUMPT=ISUMPT+1
C
C NO. OF POINTS READ MUST BE .LE. NUMBER OF VALUES EXPECTED, OTHERWISE
C GIVE WARNING AND STOP ANALYSIS. ONLY WARN IF 1ST TIME(IWARN=0).
C
      IF ((ISUMPT/2+2-NFIS).LE.NCROSS) GO TO 3600
      IF (IWARN.EQ.1) GO TO 3800
      WRITE(IPR,8115) NCROSS,NCIS
      CALL WARN
      IWARN=1
      GO TO 3800
C
C CONVERT EACH VALUE TO REAL , THEN CHECK IF IT IS IN
C ASCENDING ORDER. IF NOT GIVE ERROR.
C
3600  CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      IF(NFIS.EQ.2) THEN
        IF (XRC(LOCXRC).GE.XRC(LOCXRC-1)) GO TO 3700
      ELSE
        IF (XRC(LOCXRC).GT.XRC(LOCXRC-1)) GO TO 3700
      END IF
      WRITE(IPR,8135)
      CALL FRCERR(3)
C
3700  CONTINUE
C ** END INNER LOOP **
3800  CONTINUE
C ** END OUTER LOOP **
C
C CARD IS NOW DONE, THEREFORE CHECK IF ALL X.S. POINTS ARE IN. IF NOT,
C GO BACK UP AND LOOP THRU FIELDS ON THE NEXT CARD.
C
      IF (ISUMPT.LT.NPTS) GO TO 3500
C
C CHECK THAT FIRST TOP WIDTH IS POSITIVE
C AND THAT 1ST ELEVATION AND LAST ARE WITHIN ELEVATION RANGE.
C
      NFC=1
      IER=0
      IF (XRC(LXTOPW).LT.0.) IER=1
      IF (XRC(LXELEV).LE.ELVMIN) IER=1
      IFIN=LXELEV+NCROSS-1
      IF (XRC(IFIN).GE.ELVMAX) IER=1
      IF (IER.EQ.0) GO TO 3810
      WRITE(IPR,8147) XRC(LXTOPW),XRC(LXELEV),XRC(IFIN)
      CALL ERROR
      IERSUM=IERSUM+1
C
C CHECK THAT TOP WIDTH CHANGE RATE IS LESS THAN 150 FT/FT
C FOR LOOP RATING OPTION
C
 3810 IF(IFMSNG(FRLOOP).EQ.1) GO TO 4000
      NINT=NCROSS-1
      DO 3830 N=1,NINT
      DH=XRC(LXELEV+N)-XRC(LXELEV+N-1)
      DB=XRC(LXTOPW+N)-XRC(LXTOPW+N-1)
      DBH=DB/DH
      IF(DBH.LE.150.) GO TO 3830
      WRITE(IPR,8148) DBH,N,
     & XRC(LXTOPW+N-1),XRC(LXTOPW+N),XRC(LXELEV+N-1),XRC(LXELEV+N)
      CALL ERROR
      IERSUM=IERSUM+1
      GO TO 3850
 3830 CONTINUE
C
C CHECK THAT 1ST CROSS SECTION ELEV. <= 1ST ELEV. OF RATING CURVE
C
 3850 ELRQ1=XRC(LOCH)+GZERO+0.01
      IF(XRC(LXELEV).LE.ELRQ1) GO TO 4000
      WRITE(IPR,8149) XRC(LXELEV),ELRQ1,XRC(LXELEV)
      CALL WARN
      GO TO 4000
C
C ..............DEBUG TIME..............................................
C CHECK FOR ERRORS-IF ANY SKIP TO NEXT ID
C
4000  IF (IBUG.GT.0) WRITE(IODBUG,8975) LXELEV,LXTOPW,
     $ (XRC(I),I=LXELEV,LOCXRC)
      IF (IERSUM.EQ.0) GO TO 4020
      MOREC=.TRUE.
      GO TO 7300
4020  CONTINUE
C.......................................................................
C
C **********************************************************************
C
C CARD 8 - INFO FOR HYDRUALIC EXTENSION AND LOOP RATING
C
C ABELOW,SLOPE,(FLOODN)
C
C THIS CARD IS INPUT ONLY IF NCROSS .GT. 0 (THIS WAS CHECKED IN
C CARD 7 ANALYSIS).
C
C
      NCIS=8
      MNF=2
      MXF=3
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
C
C CHECK NFIELD
C SHOULD BE = 2 OR 3
C
      IF (NFIELD.LT.MNF .OR. NFIELD.GT.MXF) CALL FRCERR(1)
C
C FIELD 1 - ABELOW - X.S. AREA BELOW FIRST ELEVATION
C
C CONVERT TO REAL
C
      NFC=1
      NFIS=1
      CALL UFIXED(IBUF,ABELOW,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. ABELOW.LT.0.0) CALL FRCERR(3)
C
C FIELD 2 - SLOPE - BOTTOM SLOPE OF CHANNEL
C
C CONVERT TO REAL. ALSO CHECK THAT SLOPE IS IN
C (0.0< VALUE <=0.2) OTHERWISE WRITE ERROR AND SET SLOPE=0.01.
C
      NFC=NFC+1
      NFIS=2
      CALL UFIXED(IBUF,SLOPE,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (SLOPE.LE.0.0 .OR. SLOPE.GT.0.2) IER=1
      IF (IER.EQ.0) GO TO 4290
      CALL FRCERR(3)
C
C FIELD 3 - FLOODN - MANNING N FOR FLOOD PLAIN
C
C THIS FIELD MAY BE BLANK, THEREFORE FIRST CHECK THE NUMBER OF FIELDS.
C IF NFIELD=2 THEN FIELD IS BLANK AND GO TO NEXT CARD
C OTHERWISE WE HAVE THIS FIELD SO CONVERT IT TO REAL
C
4290  FLOODN=-999.
      IF (NFIELD.NE.3) GO TO 4300
      NFC=NFC+1
      NFIS=3
      CALL UFIXED(IBUF,FLOODN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF(FLOODN.GE.1.0) THEN
         READ(IN,4291) (XRC(LOCXRC+I),I=1,NCROSS)
 4291    FORMAT(8F10.0)
         LOCX=LOCXRC
         LOCXRC=LOCXRC+NCROSS
         DO I=1,NCROSS
            II=I
            IF(XRC(LOCX+I).LE.0.0) GO TO 4295
         ENDDO
         GO TO 4300
 4295    DO I=II,NCROSS
            XRC(LOCX+I)=XRC(LOCX+I-1)
         ENDDO
         GO TO 4300
      ENDIF
      IF (FLOODN.LT.0.010 .OR. FLOODN.GT.0.30) THEN
         WRITE(IPR,8158) FLOODN
        CALL WARN
         FLOODN=-999.
      END IF
C................DEBUG TIME.............................................
4300  IF(IBUG.GT.0) WRITE(IODBUG,8982) ABELOW,SLOPE,FLOODN
C.......................................................................
C
C **********************************************************************
C
C CARD 9 - INFO FOR LOOP RATING
C
C TP,QBGN,QMAX,HBGN,HMAX,QMIN,HMIN,NOCS
C
C THIS CARD IS INPUT ONLY IF LOOP RATING OPTION USED
C
      IF (IFMSNG(FRLOOP).EQ.1) GO TO 5400
      NUMPTS=NUMPTS+8
C
C
      NCIS=9
      NXF=8
      CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
C
C
      IF (NFIELD.NE.NXF) CALL FRCERR(1)
C
C FIELD 1 - TP - TIME TO PEAK FOR TYPICAL FLOOD (IN HOURS)
C
C JUST CONVERT TO REAL. BE SURE IT IS GE 1
C
      NFC=1
      NFIS=1
      CALL UFIXED(IBUF,TP,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. TP.LT.1.0) CALL FRCERR(3)
C
C FIELD 2 - QBGN - INITIAL DISCHARGE FOR TYPICAL FLOOD
C
C JUST CONVERT TO REAL
C
      NFC=NFC+1
      NFIS=2
      CALL UFIXED(IBUF,QBGN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. QBGN.LT.0.0) CALL FRCERR(3)
C
C FIELD 3 - QMAX - MAX DISCHARGE FOR TYPICAL FLOOD
C
C CONVERT TO REAL
C CHECK IF .GT. QBGN
C
      NFC=NFC+1
      NFIS=3
      CALL UFIXED(IBUF,QMAX,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. QMAX.LE.QBGN) CALL FRCERR(3)
C
C
C FIELD 4 - HBGN - INITIAL STAGE FOR TYPICAL FLOOD
C
C JUST CONVERT TO REAL
C
      NFC=NFC+1
      NFIS=4
      CALL UFIXED(IBUF,HBGN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 5 - HMAX - MAX STAGE FOR TYPICAL FLOOD
C
C CONVERT TO REAL
C CHECK THAT HMAX IS .GT. HBGN
C
      NFC=NFC+1
      NFIS=5
      CALL UFIXED(IBUF,HMAX,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0 .OR. HMAX.LE.HBGN) CALL FRCERR(3)
C
      AVGEL=(HMAX+HBGN)/2.0 + GZERO
C
C NEXT COMPUTE AREA ASSOCIATED WITH AVGEL
C
      LTP=LXTOPW
      LEV=LXELEV
      WORK(1)=ABELOW
C
      DO 4350 I=2,NCROSS
      LTP=LTP+1
      LEV=LEV+1
      WORK(I)=(XRC(LTP)+XRC(LTP-1))/2.0 *(XRC(LEV)-XRC(LEV-1))
      WORK(I)=WORK(I)+WORK(I-1)
      IF (AVGEL.GT.XRC(LEV)) GO TO 4350
      DELTAA=(WORK(I)-WORK(I-1)) / (XRC(LEV)-XRC(LEV-1))
      AVAREA=WORK(I-1) +DELTAA*(AVGEL-XRC(LEV-1))
      GO TO 4370
4350  CONTINUE
C COMPUTE FRLOOP VALUE
 4370 IF (AVAREA.LT.1.E-7) GO TO 4375
      FRLOOP=56200.*(QMAX+QBGN)*TP*SLOPE/AVAREA/(HMAX-HBGN)
      LOCFR=LOCXRC+1
      EMPTY(1)=LOCFR+0.00001
      XRC(LOCFR)=TP
      LOCXRC=LOCXRC+5
C...............DEBUG TIME.................
4375  IF(IBUG.GT.0) WRITE(IODBUG,8984) FRLOOP,TP,QBGN,QMAX,HBGN,HMAX,
     * AVAREA
C.......................................................................
C
C FIELD 6 - QMIN - MIN DISCHARGE LOOP RATING COMPUTATION STOPS
C
C CONVERT TO REAL
C
      NFC=NFC+1
      NFIS=6
      CALL UFIXED(IBUF,QMIN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 7 - HMIN - MIN STAGE LOOP RATING EFFECT IGNORED
C
      NFC=NFC+1
      NFIS=7
      CALL UFIXED(IBUF,HMIN,IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
C
C FIELD 8 - NOCS - NUMBER OF POINTS WITH OFF-CHANNEL STORAGE
C
C
C
C CHECK IFTYPE, CONVERT TO INTEGER.
C
      NFC=NFC+1
      NFIS=8
      IF (IFTYPE(NFC).NE.1) IER=1
      CALL UNUMIC(IBUF,IFSTRT(NFC),IFSTOP(NFC),NOCS)
      LOCXRC=LOCXRC+3
C................DEBUG TIME.............................................
      IF(IBUG.GT.0) WRITE(IODBUG,8983) QMIN,HMIN,NOCS
C.......................................................................
C
C RESET QMIN AND HMIN IF NEEDED
C
      IF(IFMSNG(QMIN).NE.0) QMIN=QBGN
      IF(IFMSNG(HMIN).NE.0) HMIN=HBGN
C
C
C***********************************************************************
C
C ** CARD 10 ** ELEVATION,TOP WIDTH PAIRS FOR OFF-CHANNEL CROSS SECTIONS
C
C THIS CARD ONLY USED IF NOCS .GT. 0 (FROM CARD 9 FIELD 1)
C
4499  CONTINUE
      IF (NOCS.EQ.0) GO TO 5400
      NUMPTS=NUMPTS+NOCS*2
      K=NCD+1
      NCIS=10
      MXF=2
      MNF=2
      IWARN=0
C
C FIELD 1,2 - ELEVATION,TOP WIDTH PAIRS FOR OFF-CHANNEL CROSS SECTIONS
C
C READ INPUT VALUES UNTIL NUMBER OF VALUES EXPECTED (NOCS*2) HAS BEEN
C SATISFIED. CONVERT EACH VALUE TO METRIC, PUT INTO XRC ARRAY
C AND CHECK THAT VALUES ARE ASCENDING AND TOP WIDTHS ARE POSITIVE
C
C PROCEDURE IS TO CONTINUE READING CARDS UNTIL THE NUMBER OF POINTS
C EXPECTED IS SATISFIED. FOR EACH CARD ANALYZE THE X.S. PAIR VALUES
C BY USING A NESTLED LOOP. THE OUTER LOOP SIMPLY LOOPS TWICE FOR FIELD 1
C OR FIELD 2 AND THE INNER LOOP CHECKS EACH VALUE USING AN LOOP
C INCREMENTOR OF 2 SO THAT ON ONE PASS THE 1ST VALUES IN THE XS PAIR
C ARE GOTTEN AND ON 2ND PASS THE 2ND VALUES IN THE PAIR ARE
C GOTTEN.
C
C FIRST SET STARTING LOCATIONS , THE NUMBER OF VALUES EXPECTED
C (NPTS), THE LOCATION IN XRC(LOCXRC) TO START, AND SUM OF POINTS READ
C COUNTER(ISUMPT=2 SINCE IST PAIR IS TREATED SEPARATLEY AS EXPLAINED BEL
C
      LOCXRC=LOCXRC+1
      LXELOC=LOCXRC
      LXTWOC=LXELOC+NOCS
      NPTS=NOCS*2
      ISUMPT=2
C
C READ CARD, SET NUMBER OF PAIRS READ SO FAR (NOT REALLY VALID FOR FIRST
C CARD) AND CHECK THAT NFIELD IS AN EVEN NUMBER.
C
4500  CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      IF (NFIELD.EQ.0) GO TO 4500
      IF (MOD(NFIELD,2).EQ.0) GO TO 4515
      CALL FRCERR(1)
      GO TO 5000
4515  NUMPAR=ISUMPT/2
C
C OUTER LOOP FOLLOWS THAT WILL LOOP THRU CARD TWICE, ONCE FOR
C ELEVATIONS AND THEN FOR TOP WIDTHS.
C
C ** START OUTER LOOP **
      DO 4800 NFIS=1,2
      INIT=NFIS
C
C COULD SIMPLY SET POINTERS FOR NESTLED LOOP BELOW EXCEPT FOR 1ST PAIR
C BECAUSE ASCENDING ORDER IS CHECKED IN NESTLED LOOP AND 1ST PAIR
C CAN'T BE CHECKED. THEREFORE IF ON 1ST CARD(NCD=K) THEN ANALYZE
C IST PAIR SEPARATELY(CONVERT TO REAL ) AND SET POINTERS
C TO 2ND PAIR (INIT=3 OR 4), THEN GO TO NESTLED LOOP.
C
      IF (NCD.NE.K) GO TO 4520
      INIT=INIT+2
      IF(NFIS.EQ.2) LOCXRC=LXTWOC
      CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFIS),IFSTOP(NFIS),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      GO TO 4550
C
C THIS IS NOT FIRST CARD, THEREFORE SIMPLY SET LOCXRC AND GO INTO
C NESTLED LOOP BELOW.
C LOCXRC IS SET= NUMBER OF PAIRS READ SO FAR FOR FIELD 1(ELV VALUES) OR
C LOCXRC IS SET= PAIRS READ PLUS TOTAL PAIRS EXPECTED(NOCS)
C
4520  LOCXRC=NUMPAR+LXELOC-1
      IF (NFIS.EQ.2) LOCXRC=NUMPAR+NOCS+LXELOC-1
C
C NESTLED LOOP FOLLOWS TO GO THRU THE FIELDS. LOOP INCREMENTER=2 SINCE
C WE WANT 1 VALUE FROM EACH PAIR. INITIAL COUNTER (INIT)=1 TO GO THRU
C H VALUES AND INIT=2 TO GO THRU Q VALUES. THIS WAS SET ABOVE IN
C OUTER LOOP (EXCEPTION IS FOR VERY 1ST CARD, INIT IS 3 OR 4).
C FIRST THING INSIDE LOOP IS TO INCREMENT LOCATION AND SUM OF POINTS
C READ COUNTERS.
C
C ** START INNER LOOP **
4550  DO 4700 NFC=INIT,NFIELD,2
      LOCXRC=LOCXRC+1
      ISUMPT=ISUMPT+1
C
C NO. OF POINTS READ MUST BE .LE. NUMBER OF VALUES EXPECTED, OTHERWISE
C GIVE WARNING AND STOP ANALYSIS. ONLY WARN IF 1ST TIME(IWARN=0).
C
      IF ((ISUMPT/2+2-NFIS).LE.NOCS) GO TO 4600
      IF (IWARN.EQ.1) GO TO 4800
      WRITE(IPR,8115) NOCS,NCIS
      CALL WARN
      IWARN=1
      GO TO 4800
C
C CONVERT EACH VALUE TO REAL , THEN CHECK IF IT IS IN
C ASCENDING ORDER. IF NOT GIVE ERROR.
C
4600  CALL UFIXED(IBUF,XRC(LOCXRC),IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
cc      IF(NFIS.EQ.2) THEN
cc        IF (XRC(LOCXRC).GE.XRC(LOCXRC-1)) GO TO 4700
cc      ELSE
cc        IF (XRC(LOCXRC).GT.XRC(LOCXRC-1)) GO TO 4700
cc      END IF
cc      WRITE(IPR,8135)
cc      CALL FRCERR(3)
C
4700  CONTINUE
C ** END INNER LOOP **
4800  CONTINUE
C ** END OUTER LOOP **
C
C CARD IS NOW DONE, THEREFORE CHECK IF ALL X.S. POINTS ARE IN. IF NOT,
C GO BACK UP AND LOOP THRU FIELDS ON THE NEXT CARD.
C
      IF (ISUMPT.LT.NPTS) GO TO 4500
C
C CHECK THAT FIRST TOP WIDTH IS POSITIVE
C AND THAT 1ST ELEVATION AND LAST ARE WITHIN ELEVATION RANGE.
C
      NFC=1
      IER=0
      IF (XRC(LXTWOC).LT.0.) IER=1
      IF (XRC(LXELOC).LE.ELVMIN) IER=1
      IFIN=LXELOC+NOCS-1
      IF (XRC(IFIN).GE.ELVMAX) IER=1
      IF (IER.EQ.0) GO TO 5000
      WRITE(IPR,8147) XRC(LXTWOC),XRC(LXELOC),XRC(IFIN)
      CALL ERROR
      IERSUM=IERSUM+1
C
C CHECK FOR ERRORS-IF ANY SKIP TO NEXT ID
C
5000  IF (IERSUM.EQ.0) GO TO 5020
      MOREC=.TRUE.
      GO TO 7300
C ..............DEBUG TIME..............................................
5020  IF (IBUG.GT.0) WRITE(IODBUG,8976) LXELOC,LXTWOC,
     $ (XRC(I),I=LXELOC,LOCXRC)
C.......................................................................
C
C CHECK IF TOTAL NUMBER OF POINTS ABOVE EXCEEDS LIMIT
C (ALSO CHECK FOR LT MAXPTS NOT LE TO ALLOW FOR -1 INSERTION AT XRC END)
C
 5400 IF (NUMPTS.LT.MAXPTS) GO TO 5410
      MOREC=.TRUE.
      WRITE(IPR,8015) NUMPTS,MAXPTS
      CALL ERROR
      IERSUM=IERSUM+1
      GO TO 7300
C
C
C***********************************************************************
C
C CARD 11 - OPTIONAL INFORMATION (OPTIONAL)
C
C   XRC(AFTER ALL R.C. AND X.S. INFO)
C
C SET POINTER FOR START POSITION IN XRC FOR OPTIONAL INFO
C
5410  IERSUM=IERTMP+IERSUM
      LOCXRC=LOCXRC+1
      IPOPT=LOCXRC
      NCIS=11
C
C PROCEDURE IS TO KEEP READING A CARD UNTIL 'END' OR ID IS FOUND.
C CHECK FOR POSSIBLITY OF END IF 1ST CHARACTER = 'E', OR
C POSSIBILITY OF NEW 'IDENTIFIER' IF FIRST CHARACTER='I'.
C ALSO PUT A -1 IN CURRENT XRC LOCATION IN CASE THIS IS THE END.
C
5500  XRC(LOCXRC)= -1.0001
C  THE FOLLOWING CHANGE MADE ON 4/16/90 -- MAIN. #493, #593
C      CALL FRCRDC(IBUG,IFOUND)
      IF(JUMP.EQ.0) CALL FRCRDC(IBUG,IFOUND)
      JUMP=0
C  END OF CHANGE OF 4/16/90 -- MAIN. #493, #593
      NFIS=1
      IF (IFOUND.NE.0) GO TO 7000
      INIT=IFSTRT(NFIS)
      NFC=0
      IWARN=0
C
C NOW GO THRU EACH FIELD ON THE CARD.
C FIRST DETERMINE WHICH KEYWORD IS PRESENT,THEN GO TO APPROPRIATE
C PLACE (BASIS IS THE NUMBER OF CHARACTERS).
C ALSO, THIS CARD IS FINISHED WHEN NFC EXCEEDS THE NUMBER OF FIELDS.
C
5550  NFC=NFC+1
      IF(NFC.GT.NFIELD) GO TO 5500
      IF (MOD(NFIELD,2).EQ.0 .OR. IBUF(IFSTRT(NFIELD)).EQ.ICONT)
     $ GO TO 5553
      IF (IWARN.GE.1) GO TO 5553
C WARN THERE ARE NOT EVEN PAIRS OF FIELDS
      WRITE(IPR,8240)
      CALL WARN
      IWARN=1
      NFIELD=NFIELD-1
5553  INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      N=NCHAR-3
      NFIS=1
      MXC=12
      GO TO (5625,5650,5700,5800,5600,5900,5600,5600,6000),N
C
C BAD NCHAR
C
5600  CALL FRCERR(2)
      GO TO 5550
C E-19
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 8
C   -MOVE AHEAD TO  SET LOCATIONS
C
 5625 CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(17),1)
 5630 IF ((LOCXRC+2).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=8.001
      GO TO 5675
C
C E-19A
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 9
C
 5650 CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(18),2)
 5655 IF ((LOCXRC+3).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=9.001
C
C LINES COMMON TO SINGLE VALUED CODES
C
C   -SET LOC2 AND LOC3 (FIRST CHECK IF ROOM EXISTS IN XRC).
C   -UNPACK THE OPTIONAL INFO(E-19/E-19A) INTO THE 3RD LOCATION (LOC3)
C   -SET THE 2ND LOC(LOC2) TO BE LOCATION THAT STARTS NEXT SET
C    OF OPTIONAL INFO, RESET LOCXRC TO NEXT LOC, AND GO BACK UP TO
C    ANALYZE NEXT FIELD
C
 5675 IF (IER.EQ.0) CALL FRCERR(3)
      LOC2=LOCXRC+1
      LOC3=LOCXRC+2
      NFIS=2
      NFC=NFC+1
      CALL UFIXED(IBUF,IDATE,IFSTRT(NFC),IFSTOP(NFC),1,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      XRC(LOC3)=IDATE+0.01
C
      XRC(LOC2)=LOCXRC+3.001
      LOCXRC=LOCXRC+3
      GO TO 5550
C
C NCHAR=6 .. THEREFORE CAN BE NWS-ID OR HSA-ID . CHECK FIRST
C CHARACTER, IF ='N' GO TO NWS-ID SUBSECTION. GO TO HSA-ID IF ='H'.
C
5700  IF (IBUF(INIT).EQ.IH) GO TO 5770
C
C NWS-ID
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 3
C   -MOVE AHEAD TO  SET LOCATIONS
C
      CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE,2)
5750  IF ((LOCXRC+4).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=3.001
      MXC=5
      GO TO 5880
C
C HSA-ID
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 7
C   -MOVE AHEAD TO  SET LOCATIONS
C
 5770 CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(15),2)
5775  IF ((LOCXRC+4).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=7.001
      MXC=8
      GO TO 5880
C
C NCHAR=7 .. THEREFORE CAN BE COMMENT, USGS-ID OR MOB-STG. CHECK FIRST
C CHARACTER, IF ='C' GO TO COMMENT SUBSECTION. GO TO MOB-STG IF ='M'.
C
5800  IF (IBUF(INIT).EQ.IC) GO TO 6100
      IF (IBUF(INIT).EQ.M ) GO TO 6070
C
C USGS-ID
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 2
C
      CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(3),2)
5850  IF ((LOCXRC+4).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=2.001
      MXC=8
C
C LINES FOR NWS-ID, USGS-ID AND HSA-ID TO SET LOCATIONS
C
C   -SET LOC2 AND LOC3 (FIRST CHECK IF ROOM EXISTS IN XRC).
C   -UNPACK THE OPTIONAL INFO(ID, 8 CHAR MAX) INTO THE 3RD LOCATION
C    (LOC3) AND INTO 4TH LOCATION IF NECESSARY
C   -SET THE 2ND LOC(LOC2) TO BE LOCATION THAT STARTS NEXT SET
C    OF OPTIONAL INFO, RESET LOCXRC TO NEXT LOC, AND GO BACK UP TO
C    ANALYZE NEXT FIELD
C
5880  IF (IER.EQ.0) CALL FRCERR(3)
      LOC2=LOCXRC+1
      LOC3=LOCXRC+2
      NFC=NFC+1
      INIT=IFSTRT(NFC)
      NFIS=2
      NCHAR=IFSTOP(NFC)-INIT+1
      IF (NCHAR.GT.MXC) GO TO 7200
      XRC(LOC3+1) = BLANK
      CALL UPACK1(IBUF(INIT),XRC(LOC3),NCHAR)
C
      XRC(LOC2)=LOCXRC+4.001
      LOCXRC=XRC(LOC2)
      GO TO 5550
C
C RIVER-LOC
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 5
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C
5900  CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(7),3)
5950  IF ((LOCXRC+3).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=5.001
      DENOM=FACMKM
      GO TO 6090
C
C BANKFULL-STG
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 4
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -MOVE AHEAD TO LINES COMMON TO SINGLE VALUE CODES
C
6000  CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(10),3)
6050  IF ((LOCXRC+3).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=4.001
      DENOM=FACLEN
      GO TO 6090
C
C MOB-STG
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 6
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -MOVE AHEAD TO LINES COMMON TO SINGLE VALUE CODES
C
6070  CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(13),2)
6080  IF ((LOCXRC+3).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=6.001
      DENOM=FACLEN
C
C LINES COMMON TO SINGLE VALUED CODES
C
C   -SET LOC2 AND LOC3 (FIRST CHECK IF ROOM EXISTS IN XRC).
C   -UNPACK THE OPTIONAL INFO(BANKFULL STAGE) INTO THE 3RD LOCATION
C     (LOC3) AND CONVERT TO METRIC
C   -SET THE 2ND LOC(LOC2) TO BE LOCATION THAT STARTS NEXT SET
C    OF OPTIONAL INFO, RESET LOCXRC TO NEXT LOC, AND GO BACK UP TO
C    ANALYZE NEXT FIELD
C
6090  IF (IER.EQ.0) CALL FRCERR(3)
      LOC2=LOCXRC+1
      LOC3=LOCXRC+2
      NFIS=2
      NFC=NFC+1
      CALL UFIXED(IBUF,XRC(LOC3),IFSTRT(NFC),IFSTOP(NFC),2,0,IER)
      IF (IER.NE.0) CALL FRCERR(3)
      XRC(LOC3)=XRC(LOC3)/DENOM
C
      XRC(LOC2)=LOCXRC+3.001
      LOCXRC=LOCXRC+3
      GO TO 5550
C
C COMMENT
C   -CHECK THE KEYWORD(PUT IN WORK) TO BE SURE IT IS RIGHT ONE
C   -SET 1ST LOCATION(LOCXRC) IN XRC = NUMBER CODE OF 1
C    AND SET LOC2 AND LOC3 (FIRST CHECK IF ROOM EXISTS IN XRC).
C    (CHECK FOR GE MAXPTS NOT JUST GT TO ALLOW FOR -1 IN NEXT LOCATION)
C   -UNPACK EACH FIELD INTO XRC UNTIL ANOTHER KEYWORD IS FOUND OR
C    LAST FIELD ON CARD IS ENCOUNTERED
C   -CHECK LAST FIELD TO SEE IF IT IS A CONTINUATION
C
6100  CALL UPACK1(IBUF(INIT),WORK,NCHAR)
      IER=IUSAME(WORK,OPCODE(5),2)
      IF (IER.EQ.0) CALL FRCERR(3)
C
      IF ((LOCXRC+2).GE.MAXPTS) GO TO 7100
      XRC(LOCXRC)=1.001
      LOC2=LOCXRC+1
      LOC3=LOCXRC+2
C
C ANALYZE REMAINING FIELDS ON CARD UNTIL AN OPTIONAL KEYWORD IS FOUND
C
C FIRST UNPACK THE NEXT FIELD INTO XRC
C ALSO CHECK IF ENOUGH ROOM EXISTS IN XRC-NEED LOC3+NCHAR/4 (FOR
C 4 CHAR WORDS) + 2 (1 IF NOT MULTIPLE OF 4 PLUS 1 FOR THE -1 AT END)
C
6200  NFC=NFC+1
      INIT=IFSTRT(NFC)
      NCHAR=IFSTOP(NFC)-INIT+1
      IF ((LOC3+NCHAR/4+2).GT.MAXPTS) GO TO 7100
      CALL UPACK1(IBUF(INIT),XRC(LOC3),NCHAR)
C
C NEXT, CHECK IF THE FIELD IS A NEW KEYWORD. DO THIS BY:
C   -CHECK FOR POSSIBILITY OF NEW KEY IF NCHAR=4,5,6,7,9, OR 12
C   -IF NCHAR= ONE OF ABOVE THE JUMP AHEAD AND CHECK THE POSSIBLE KEYWRD
C   -OTHERWISE, ADD FIELD TO COMMENT
C
      N=NCHAR-3
      GO TO (6350,6375,6400,6500,6250,6600,6250,6250,6700),N
C
C FIELD IS PART OF COMMENT, NOT ANOTHER KEYWORD
C
C NOW UPDATE LOC3 AND CHECK IF THIS IS LAST FIELD
C IF NOT LAST FIELD THEN SIMPLY GO BACK WITHIN COMMENT SUBSECTION AND
C    ANALYZE NEXT FIELD.
C IF LAST FIELD THEN,
C    1. CHECK IF LAST IS A CONTINUATION(=&). IF NOT SIMPLY GO BACK
C       UP TO READ ANOTHER CARD WITHIN OPTIONAL INFO SECTION
C    2. IF LAST IS CONTINUATION THEN READ THE NEXT CARD AND GO BACK
C       WITHIN COMMENT SUBSECTION TO ANALYZE EACH FIELD.
C
6250  N=1
      IF (MOD(NCHAR,4).EQ.0) N=0
      LOC3=LOC3 + NCHAR/4 + N
C
      IF (NFC.LT.NFIELD) GO TO 6200
C
C WE ARE AT LAST FIELD. CHECK FOR CONTINUATION
C
      IFIN=IFSTOP(NFC)
      IF (IBUF(IFIN).EQ.ICONT) GO TO 6300
C
C LAST FIELD IS NOT A CONTINUATION. THEREFORE SET LOCATION OF NEXT PIECE
C OF OPTIONAL INFO AND UPDATE LOCXRC.
C
      XRC(LOC2)=LOC3 + 0.001
      LOCXRC=LOC3
      GO TO 5500
C
C LAST FIELD IS A CONTINUATION. THEREFORE READ NEXT CARD HERE AND GO
C BACK UP TO ANALYZE FIELDS FOR COMMENTS.
C FIRST, REDUCE LOC3 BY 1 SO THAT & IS NOT PART OF COMMENT.
C
6300  CALL FRCRDC(IBUG,IFOUND)
      IF (IFOUND.NE.0) GO TO 7800
      LOC3=LOC3-1
      NFC=0
      GO TO 6200
C
C FOR ANY OF THE FOLLOWING , CHECK IF THE FIELD IS A CODE. IF SO,
C THEN GO BACK UP TO LINES FOR THAT CODE. OTHERWISE
C FIELD IS PART OF COMMENT SO GO BACK INTO COMMENT SECTION.
C
C NCHAR=4, CHECK IF FIELD IS E-19.
6350  IER=IUSAME(XRC(LOC3),OPCODE(17),1)
      GO TO 6900
C NCHAR=5, CHECK IF FIELD=E-19A.
6375  IER=IUSAME(XRC(LOC3),OPCODE(18),2)
      GO TO 6900
C NCHAR=6, THEREFORE CHECK IF FIELD=NWS-ID OR HSA-ID.
C IF HSA-ID CHANGE N=5 TO DIFFERENTIATE THE TWO.
6400  IER=IUSAME(XRC(LOC3),OPCODE,2)
      IF (IER.NE.0) GO TO 6900
      N=5
      IER=IUSAME(XRC(LOC3),OPCODE(15),2)
      GO TO 6900
C NCHAR=7, THEREFORE CHECK IF FIELD=USGS-ID OR MOB-STG.
C IF MOB-STG CHANGE N=3 TO DIFFERENTIATE THE TWO.
6500  IER=IUSAME(XRC(LOC3),OPCODE(3),2)
      IF (IER.NE.0) GO TO 6900
      N=3
      IER=IUSAME(XRC(LOC3),OPCODE(13),2)
      GO TO 6900
C NCHAR=9, CHECK IF FIELD IS RIVER-LOC.
6600  IER=IUSAME(XRC(LOC3),OPCODE(5),3)
      GO TO 6900
C NCHAR=12, CHECK IF FIELD=BANKFULL-STG.
6700  IER=IUSAME(XRC(LOC3),OPCODE(10),3)
C
C FOLLOWING LINES ARE FOR ALL CODES ABOVE
C
6900  IF (IER.EQ.0) GO TO 6250
      XRC(LOC2)=LOC3 + 0.001
      LOCXRC=LOC3
      GO TO (5630,5655,5750,5850,6080,5950,5775,6250,6050),N
C
C
C***************END OF INPUT FOR THIS RATING CURVE**********************
C
C
C COMES HERE WHEN EVERYTHING FIT INTO XRC OK AND AN 'I' OR 'E' WAS
C ENCOUNTERED AS FIRST CHARCATER INDICATING POSSIBLE NEW IDENTIFIER
C OR END. THERFORE SET MOREC=FALSE SINCE NO MORE CARDS NEED TO
C BE READ.
C
7000  MOREC=.FALSE.
      GO TO 7300
C
C COMES HERE WHEN NOT ENOUGH SPACE LEFT IN XRC FOR OPTIONAL INFO
C THERFORE WRITE WARNING, AND SET MOREC=TRUE SINCE MORE CARDS MAY
C NEED TO BE READ.
C ALSO PUT A -1 IN NEXT LOCATION OF XRC TO INDICATE END.
C
7100  MOREC=.TRUE.
      WRITE(IPR,8235) LOCXRC,MAXPTS
      CALL WARN
      XRC(LOCXRC)= -1.0001
      GO TO 7300
C
C COMES HERE WHEN NUMBER OF CHARACTERS(NCHAR) ON ANY CARD EXCEEDED
C MAXIMUM NCHAR EXPECTED AND COULD NOT CONTINUE BECAUSE OF POSSIBILITY
C OF EXCEEDING SOME ARRAY BOUNDS.
C THEREFORE WRITE ERROR AND SET MOREC=TRUE SINCE MORE CARDS MAY NEED
C TO BE READ.
C
7200  CALL FRCERR(2)
      WRITE(IPR,8255)
      MOREC=.TRUE.
C
C************WRITE RATING CURVE TO FILE*********************************
C SO, MAKE NECESSARY CONVERSIONS TO METRIC
C
7300  IF (IERSUM.NE.0) GO TO 7500
      AREAT=AREAT/FACSKM
      AREAL=AREAL/FACSKM
      IF (IFMSNG(FLDSTG).EQ.0) FLDSTG=FLDSTG/FACLEN
      IF (IFMSNG(FLOODQ).EQ.0) FLOODQ=FLOODQ/FACVOL
      IF (IFMSNG(STGMIN).EQ.0) STGMIN=STGMIN/FACLEN
      IF (IFMSNG(GZERO).EQ.0) GZERO=GZERO/FACLEN
      IF (IFMSNG(SCFSTG).EQ.0) SCFSTG=SCFSTG/FACLEN
      IF (IFMSNG(WRNSTG).EQ.0) WRNSTG=WRNSTG/FACLEN
      IF (IFMSNG(RFSTG).EQ.0) RFSTG=RFSTG/FACLEN
      IF (IFMSNG(RFQ).EQ.0) RFQ=RFQ/FACVOL
      ABELOW=ABELOW/FACARE
      IF (NRCPTS.EQ.0) GO TO 7450
      DO 7420 N=1,NRCPTS
      XRC(LOCH+N-1)=XRC(LOCH+N-1)/FACLEN
7420  XRC(LOCQ+N-1)=XRC(LOCQ+N-1)/FACVOL
      IF (NGSOFF.EQ.0) GO TO 7423
      LXOFF=EMPTY(2)
      DO 7421 N=1,NGSOFF
        XRC(LXOFF+N)=XRC(LXOFF+N)/FACLEN
        XRC(LXOFF+N+NGSOFF)=XRC(LXOFF+N+NGSOFF)/FACLEN
7421  CONTINUE
7423  CONTINUE
C CALL ROUTINE TO COMPUTE FLOODQ
      IF(IFMSNG(FRLOOP).EQ.1) CALL FRCFQ(FACVOL,IBUG)
      IF (NCROSS.EQ.0) GO TO 7440
      DO 7430 N=1,NCROSS
      XRC(LXELEV+N-1)=XRC(LXELEV+N-1)/FACLEN
7430  XRC(LXTOPW+N-1)=XRC(LXTOPW+N-1)/FACLEN
      IF (IFMSNG(FRLOOP).EQ.1) GO TO 7440
      XRC(LOCFR+1)=QBGN/FACVOL
      XRC(LOCFR+2)=QMAX/FACVOL
      XRC(LOCFR+3)=HBGN/FACLEN
      XRC(LOCFR+4)=HMAX/FACLEN
      XRC(LOCFR+5)=QMIN/FACVOL
      XRC(LOCFR+6)=HMIN/FACLEN
      XRC(LOCFR+7)=NOCS
      IF (NOCS.EQ.0) GO TO 7440
      DO 7435 N=1,NOCS
      XRC(LXELOC+N-1)=XRC(LXELOC+N-1)/FACLEN
7435  XRC(LXTWOC+N-1)=XRC(LXTWOC+N-1)/FACLEN
C CALL ROUTINE TO CHECK MIN STAGE AND COMPUTE SHIFT
7440  CALL FRCSHF(1.0,WORK)
      IF (IFMSNG(FRLOOP).EQ.1) GO TO 7450
C.......................................................................
C
C RESET QMIN AND HMIN IF NEEDED
C
      IREP=0
      IDUM=0
      DUMMY=0.
      HMNXS=XRC(LXELEV)-GZERO
      CALL FHQS1(HMNXS,QMNXS,1,IBUG,IDUM,IDUM,IDUM,
     & IDUM,IDUM,IDUM,DUMMY)
      IF(QMNXS.GT.QMIN) THEN
        QMIN=QMNXS
        XRC(LOCFR+5)=QMIN/FACVOL
        IREP=1
      END IF
      IF(HMNXS.GT.HMIN) THEN
        HMIN=HMNXS
        XRC(LOCFR+6)=HMIN/FACLEN
        IREP=1
      END IF
      IF(IREP.EQ.1) THEN
        WRITE(IPR,8162) HMIN,QMIN
        CALL WARN
      END IF
C
C CHECK MANNING N VALUES FOR EACH STAGE AND X.S. ELEVATION TO BE SURE
C THEY ARE WITHIN RANGE 0.010-0.30, OTHERWISE GIVE WARNING OR
C ERROR IF OUTSIDE RANGE 0.010-0.30.
C THESE N VALUES WILL BE USED BY BOTH HYDRAULIC EXTENSION AND LOOP
C RATING ROUTINES AND ERRORS MAY RESULT THERE IF STAGES AND FLOWS
C COMPUTED DO NOT AGREE WITH X.S. DATA.
C
C FIRST CALL FMNING WHICH COMPUTES AND CHECKS MANNING N VALUES.
C IT ACTUALLY STORES N VALUES AS IN FORM OF CONVEYANCE(1/N*SQRT(SLOPE)
C IN CKARAY. SO TO GET N VALUES BELOW MUST COMPUTE FROM CKARAY.
C
7450  IF (NCROSS.EQ.0 .OR. FLOODN.GE.1.0) GO TO 7500
      CALL FMNING(IER,IBUG,COEFMN)
      IF (IER.EQ.0) GO TO 7500
C CHECK IF OUT OF ERROR RANGE 0.010-0.30
      WRITE(IPR,8226) IER
      CALL ERROR
      IERSUM=IERSUM+1
C
C CHECK IF ANY ERRORS ENCOUNTERED BEFORE WRITING TO FILE
C
7500  IF (IERSUM.EQ.0) GO TO 7520
      IF (MOREC) WRITE (IPR,8360)
      WRITE(IPR,8275) IERSUM,RTCVID
      RTCVID(1)=BLANK
      RTCVID(2)=BLANK
      GO TO 7600
C
C CHECK IF WE HAVE CALIBRATION (MAINUM GE 3) OR OPERATIONAL, SINCE
C CALIB USES SCRATCH FILES AND OPERATIONAL USES PERMANENT FILES.
C
7520  IF (MAINUM.GE.3) GO TO 7530
C
C RATING CURVE IS OK. CAN NOW WRITE TO PERMANENT FILE AND PRINT CONTENTS
C
      IRCPT=0
      IF (ADDING) IRCPT=2
      CALL FCWTRC(LOCREC,RTCVID,IRCPT)
      CALL FPRRC(OPTION)
      GO TO 7590
C
C R.C. IS O.K...CAN NOW WRITE TO SCRATCH FILE AND PRINT CONTENTS
C
7530  CALL FWTSCR(LOCREC,RTCVID)
      CALL FPRRC(OPTION)
C
C RATING CURVE WAS WRITTEN TO FILE...PRINT MESSAGE TO THAT EFFECT.
C
 7590 WRITE(IPR,8007) RTCVID
C
C**********CHECK FOR NEW ID OR END**************************************
C
C THIS RATING CURVE IS FINISHED FOR THIS RTCVID
C NOW SEE IF END OR ANOTHER RTCVID (READ ANOTHER CARD IF MOREC=TRUE).
C
7600  IF (MOREC) CALL FRCRDC(IBUG,IFOUND)
      NCIS=1
      NFC=1
C CHECK IF WE REACHED 'END' YET.
      IF (IFOUND.EQ.2) GO TO 9900
C
C SINCE WE ARE NOT AT 'END' CHECK IF MOREC=TRUE OR FALSE
C IF MOREC=FALSE THEN WE HAD NORMAL END ABOVE AND NO MORE CARDS NEED
C BE READ FOR THIS RTCVID...THEREFORE CARD JUST READ SHOULD START
C WITH 'ID' SO GO BACK UP TO CARD 1 ANALYSIS.
C
      IF (.NOT.MOREC) GO TO 150
C
C MOREC=TRUE
C THIS MEANS WE HAD ERROR OR SPACE PROBLEM WITH OPTIONAL INFO AND SOME
C CARDS MAY NOT HAVE BEEN READ DUE TO PREMATURE ENDING. THERFORE
C THEREFORE NEED TO SCAN THRU REMAINING CARDS UNTIL A NEW 'ID' IS FOUND
C
      IF (IFOUND.EQ.1) GO TO 150
      GO TO 7600
C
C ERROR- ID OR END UNEXPECTEDLY ENCOUNTERED ABOVE SOMEWHERE.
C
7800  WRITE(IPR,8285)
      NFC=1
      NFIS=1
      CALL FRCERR(3)
      WRITE(IPR,8275) IERSUM,RTCVID
      MOREC=.TRUE.
      IF (IFOUND.EQ.2) GO TO 9900
      IF (IFOUND.EQ.1) GO TO 250
C
C***********END OF FDEFRC***********************************************
C
9900  WRITE(IPR,8375)
C
C RESET CB/WHERE/
C
      IOPNUM=IOLDOP
      DO 9910 I=1,2
9910  OPNAME(I)=OLDSUB(I)
C
      RETURN
C
C
C
C
C
C..............FORMATS..................................................
C
8000  FORMAT(1H1 // 1X,80(1H*) / 1X,1H*,27X,23HRATING CURVE DEFINITION,
     * 28X,1H* / 1X,80(1H*) )
C
8002  FORMAT(1H0,10X,'**ERROR** RATING CURVE NOT FOUND, CAN NOT UPDATE')
C
8005  FORMAT(// 11X,39HTHIS IS THE RATING CURVE DEFINTION FOR ,2A4
     * / 11X,47HIT WILL BE WRITTEN TO FILE IF A MESSAGE TO THAT,
     * 49H EFFECT APPEARS BELOW WITHOUT ANY ERROR MESSAGES.)
C
8007  FORMAT(// 11X,2A4,38H RATING CURVE WAS DEFINED PROPERLY AND,
     * 17H WRITTEN TO FILE. // 4X,50(1H*))
C
8015  FORMAT(1H0,10X,36H**ERROR** NUMBER OF RATING CURVE AND,
     * ' X.S. POINTS USED= ',I3, '  EXCEEDS MAX ALLOWED= ',I3)
C
8035  FORMAT(1H0,10X,38H**WARNING** TOTAL AREA IS SMALLER THAN,
     * 12H LOCAL AREA.,4X,6HTOTAL=,F10.2,8H  LOCAL=,F10.2)
C
8055  FORMAT(1H0,10X,18H**WARNING** FOUND ,I2,14H FORECAST TYPE,
     * 45H CODE(S) NOT SUGGESTED. THE CODES INPUT WERE:
     * / 23X,5(1X,A4))
C
8075  FORMAT(1H0,10X,10H**ERROR** ,
     $ 'LOOP RATING OPTION USED BUT NUMBER OF X.S. POINTS=0.')
C
8085  FORMAT(1H0,10X,'**ERROR** MEANINGLESS USGS OFFSET USED ',
     *'IN LINEAR INTERPOLATION METHOD! RESET TO NO OFFSET')
8095  FORMAT(1H0,10X,45H**WARNING** FLOOD STAGE INFORMATION IS NOT IN,
     * 29H ASCENDING ORDER. VALUES ARE:
     * / 11X,8HFLOOD H=,F10.2,20H  SECONDARY FLOOD H=,F10.2,
     * 12H  WARNING H=,F10.2,12H  MINIMUM H=,F10.2)
C
8115  FORMAT(1H0,10X,41H**WARNING** TOO MANY POINTS ENTERED. ONLY,
     * 9H EXPECTED,I4,30H POINTS FOR INPUT SUMMARY CARD,I3)
C
8135  FORMAT(1H0,10X,10H**ERROR** ,
     $ 39HINPUT PAIRS ARE NOT IN ASCENDING ORDER.,
     * 46H CHECK INPUT VALUES ON THIS AND PREVIOUS CARD.
     $ / 11X,18HMORE INFO FOLLOWS:)
C
8145  FORMAT(1H0,10X,10H**ERROR** ,
     $ 43HSECOND VALUE IN 1ST INPUT PAIR IS NEGATIVE=,F10.2)
C
8147  FORMAT(1H0,10X,10H**ERROR** ,
     $ 23HEITHER FIRST TOP WIDTH=,F10.2,15H IS NEGATIVE OR,
     * 17H FIRST ELEVATION=,F10.2,9H OR LAST=,F10.2,
     * 17H IS OUT OF RANGE.)
8148  FORMAT(1H0,10X,10H**ERROR** ,
     $ 'TOP WIDTH CHANGE RATE= ',F10.2,2X,
     $ ' > 150 FT/FT FOR PAIR NO: ',I5,
     * /10X,'TOP WIDTH= ',2F10.2,5X,'ELEVATION=',2F10.2,
     * /10X,'REDUCE ACTIVE FLOW TOP WIDTH AND',
     * ' INCREASE OFF-CHANNEL TOP WIDTH ')
8149  FORMAT(1H0,10X,'**WARNING**',
     * ' FIRST CROSS SECTION ELEV.=',F10.2,' M',
     * 4X,'GREATER THAN FIRST ELEV. OF RATING CURVE=',F10.2,' M',
     $ /22X,'LOOP RATING STOPS AT FIRST X.S. ELEV.=',F10.2,' M',2X,
     $ 'ANY LOWER VALUES ARE INTER/EXTRAPOLATED FROM RATING CURVE')
8158  FORMAT(1H0,10X,'**WARNING** FLOODN=',F7.5,2X,
     & 'OUT OF RANGE (0.010 < FLOODN <0.30).',
     & /22X,'IT WILL BE EXTRAPOLATED FROM CROSS SECTION ',
     & 'AND STAGE-DISCHARGE CRVE.')
8159  FORMAT(1H0,10X,10H**ERROR** ,
     * 'GAGE ZERO REQUIRED IN HYDRAULIC EXT. OR LOOP RATING OPTION')
8162  FORMAT(1H0,10X,'**WARNING** ',
     & 'STAGE/DISCHARGE CORRESPONDING TO LOWEST CHANNEL CROSS SECION',
     & /22X,' WILL BE USED AS LOWER LIMIT TO IGNORE LOOP EFFECT.',
     & /22X,'MINIMUM STAGE= ',F10.2,5X,'MINIMUM DISCHARGE= ',F10.2)
C
8226  FORMAT(1H0,10X,'**ERROR** MANNING N OUT OF ALLOWABLE ',
     * 'RANGES OF 0.01 - 0.30 FOR SECTION NO. ',I2,
     * /15X,'CORRECT RATING CURVE OR CROSS SECTION DATA OR ',
     * 'CHANNEL SLOPE')
C
8235  FORMAT(1H0,10X,46H**WARNING** NOT ENOUGH SPACE LEFT IN XRC ARRAY,
CCC  * 59H FOR ALL OPTIONAL INFO. PROGRAM WILL TRUNCATE OPTIONAL INFO
     * / 11X,21H TO FIT AND CONTINUE.,
     * 17H LOCATION IN XRC=,I5,8H MAXPTS=,I3)
C
 8240 FORMAT(1H0,10X,68H**WARNING** OPTIONAL INFORMATION NEEDS PAIRS OF
     .KEYWORDS AND VALUES./22X,37HCHECK THAT ALL OPTIONAL KEYWORDS HAVE,
     . 34H VALUES. LAST FIELD WAS TRUNCATED.)
C
8255  FORMAT(11X,51HNUMBER OF CHARACTERS EXCEEDED MAX EXPECTED. PROGRAM,
     * 27H IGNORES THIS RATING CURVE.)
C
8275  FORMAT(// 4X,I4,32H ERRORS WERE ENCOUNTERED. RATING,
     * 7H CURVE ,2A4,41H WILL NOT BE WRITTEN TO FILE UNTIL ERRORS,
     * 15H ARE CORRECTED. // 4X,50(1H*))
C
8285  FORMAT(1H0,10X,32H**ERROR** ID OR END UNEXPECTEDLY,
     * 51H ENCOUNTERED. PROGRAM CONTINUES. MORE INFO FOLLOWS:)
C
8295  FORMAT(1H0,10X,40H**ERROR** ADD REQUESTED BUT RATING CURVE,
     * 42H EXISTS. CHANGE ID OR MAKE REPL OR UPDATE.)
C
8315  FORMAT(1H0,10X,40H**ERROR** NO SPACE AVAILABLE ON FILE FOR,
     * 14H RATING CURVE.)
C
8335  FORMAT(1H0,10X,'**WARNING** REPL REQUESTED FOR',2X,2A4,
     * ' BUT RATING CURVE DOES NOT EXIST. RATING CURVE WILL BE ADDED.')
C
8355  FORMAT(1H0,10X,43H**ERROR** IN FUPSCR PREVENTS WRITING RATING,
     * 23H CURVE TO SCRATCH FILE.)
C
8360  FORMAT(11X,46HLOOKING FOR NEXT ID...REMAINING CARDS SKIPPED.)
C
8375  FORMAT(// 28X,29HEND OF RATING CURVE DEFINTION)
C
C DEBUG FORMATS
C
8915  FORMAT(1X,21HRTCVID,KEYWRD,LASDAY=,2A4,1X,A4,4X,I8)
C
8925  FORMAT(1X,25HRIVSTA,RIVERN,RLAT,RLONG=,5A4,1X,5A4,2F7.2)
C
8935  FORMAT(1X,47HOPTION,FACLEN,FACVOL,FACMKM,NRCPTS,NCROSS,AREAT,
     $ 6HAREAL: / 1X,A4,3F9.4,2I4,2F10.2,5A4
     * / 1X,55HLOOP IS ON ONLY IF MESSAGE TO THAT EFFECT PRINTED BELOW)
8936  FORMAT(1X,10HLOOP IS ON)
C
8945  FORMAT(1X,40HFLDSTG,PVISFS,GZERO,STGMIN,SCFSTG,WRNSTG
     * / 1X,F10.2,1X,A4,4F10.2)
C
8955  FORMAT(1X,24HRFSTG,RFQ,IRFDAY,RFCOMT=,2F10.2,I9,1X,5A4)
C
8965  FORMAT(1X,22HLOCH,LOCQ,XRC(NRCPTS)=,2I4 / (1X,10F10.2 /))
C
8975  FORMAT(1X,26HLXELEV,LXTOPW,XRC(NCROSS)=,2I4 / 10(1X,F10.2) )
8976  FORMAT(1X,'LXELOC,LXTWOC,XRC(NOCS)=',2I4 / 10(1X,F10.2) )
C
8982  FORMAT(1X,20HABELOW,SLOPE,FLOODN=,3F10.2)
8983  FORMAT(1X,'QMIN,HMIN,NOCS=',F10.2,F10.2,I3)
C
8984  FORMAT(1X,37HFRLOOP,TP,QBGN,QMAX,HBGN,HMAX,AVAREA=,7F10.2)
C
C.......................................................................
C
      END
