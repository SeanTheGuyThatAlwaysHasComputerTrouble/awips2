C MEMBER LDRV50
C  (from old member FCEX50)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 10/03/95.10:03:56 BY $WC21DT
C
C @PROCESS LVL(77)
      SUBROUTINE LDRV50(P,MP,C,MC,T,MT,TS,MTS,D,MD,IHZERO)
C.......................................
C     THIS IS THE FORECAST COMPONENT ROUTINE THAT EXECUTES THE
C        OPERATIONS TABLE FROM INTERNAL TIME IDA,IHR TO LDA,LHR.
C             IT WAS MODIFIED FROM FDRIVE INORDER TO ALLOW A LOOPING
C        OPERATION
C.......................................
C     ROUTINE INITIALLY WRITTEN BY. . .
C            ERIC ANDERSON - HRL     JULY 1979
C            ERIC MARKSTROM - RTI    JAN  1995
C            MODIFIED AND MOVED TO LDRV50 JANUARY 1995
C
C     UPDATED TO ADD VARIABLE OPN(2) BEFORE CALLS TO MODS
C            GEORGE SMITH - HRL - SEPTEMBER 1988
C.......................................
      DIMENSION P(MP),C(MC),TS(MTS),D(MD)
      INTEGER T(MT)
      DIMENSION SNAME(2),OPN(2)
C
C     COMMON BLOCKS.
      INCLUDE 'common/fcassm'


      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/IONUM/IN,IPR,IPU
      COMMON/WHERE/ISEG(2),IOPNUM,OPNAME(2)
C      COMMON/FPROG/MAINUM,VERS,VDATE(2),PNAME(5),NDD
      COMMON/FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     1LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/FCARY/IFILLC,NCSTOR,ICDAY(20),ICHOUR(20)
      COMMON/ERRDAT/IOERR,NWARN,NERRS
      COMMON/FCOPPT/LOCT,LPM,LCO
      COMMON/FCPUCK/ICPUT
C      COMMON/MODCTL/IWHERE,IBTWEN,IAFTER
      INCLUDE 'common/modscb'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_assim/RCS/ldrv50.f,v $
     . $',                                                             '
     .$Id: ldrv50.f,v 1.2 1996/01/17 21:49:16 page Exp $
     . $' /
C    ===================================================================
C
C      COMMON /FSACCO/ NUMCOS,SACCOS(15,10)
C      COMMON /FAPICO/ NAPICS,APICOS(12,10)
C      COMMON /FRARSW/ NRARSW,RARESW(6,10)
C      COMMON /FCHGRS/ NCHGRS,ICHGRS(5,20)
C      COMMON/MOD127/NTS27,TSID27(2,10),DTYP27(10),IDT27(10),
C     1 ISTR27(10),NVAL27(10)
C
C      COMMON/MOD102/NDT02,IDT02(5),VAL02(5)
C      COMMON/MOD126/M126ON,MJ126,NVM126,VM126(124)
C      LOGICAL M126ON
C      COMMON/MOD129/NDT29,IDT29(5),VAL29(5)
C      COMMON/MOD135/NDT35,IDT35(5),VAL35(5)
C      COMMON/FIGNOR/NIGNOR,IGNOPT(10),IGSDAT(10),IGEDAT(10)
C
C     DATA STATEMENTS
      DATA IBUG,JBUG,KBUG/4HSEGX,4HPCT ,4HPRD /
      DATA LBUG/4HCPU /,PRDO/4HPRDO/
      DATA SP,SC,ST,SD/2HP ,2HC ,2HT ,2HD /
      DATA BLANK/4H    /
      DATA SNAME/4HFDRI,4HVE  /
C.......................................
C     TRACE LEVEL FOR THIS ROUTINE=1.
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
  900 FORMAT (1H0,17H** LDRV50 ENTERED)

C
C.......................................
C     CHECK FOR DEBUG OUTPUT.
C      MBUG=IFBUG(PRDO)
C      IF (IFBUG(JBUG).EQ.1) GO TO 96
C   98 IF (IFBUG(KBUG).EQ.1) GO TO 97
C      GO TO 99
C   96 CALL FDMPA(SP,P,MP)
C      CALL FDMPA(SC,C,MC)
C      CALL FDMPT(ST,T,MT)
C      GO TO 98
C   97 CALL FDMPA(SD,D,MD)


C
C.......................................  EJM MOD 11/21/94
C    IF WE ARE IN AN ASSIMILATION RUN, GO TO
C    THE FIRST OPERATION AFTER BEGINASSIM
C
      IF (LWORKMX.EQ.0) THEN
        IFILLC_OLD = IFILLC
        IFILLC = 0
      END IF
      LOCT = 1
      NUMOP = T(LOCT)
      DO WHILE (NUMOP.NE.49)
        LOCT = T(LOCT + 1)
        NUMOP = T(LOCT)
      END DO
      GOTO 99



C
C     INITIALIZE VALUE OF NPRVOP - NUMBER OF LAST OPERATION.
C
   99 NPRVOP=0
C.......................................
C     EXECUTE THE OPERATIONS TABLE.
C        FIND NUMBER OF NEXT OPERATION.
  100 NUMOP=T(LOCT)
C
C     CHECK FOR CPU TIME CHECK.
C     IF (IFBUG(LBUG).EQ.0) GO TO 110
C      CALL URTIMR(LAPSE,ICPUT)
C      ELAPSE=LAPSE*0.01
C      CPUT=ICPUT*0.01
C      WRITE(IODBUG,903) ELAPSE,CPUT,NUMOP,IDA
C  903 FORMAT (1H0,24HCPU CHECK--ELAPSED TIME=,F10.2,2X,11HTOTAL TIME=,
C     1F10.2,2X,21HJUST BEFORE OPERATION,I4,2X,4HIDA=,I6)
C
C     CHECK FOR DEBUG PRINT OF D ARRAY
C     PRINT ONLY IF ('PRDO' SYSTEM DEBUG CODE IS ON) .AND.
C       (DEBUG IS ON FOR PREVIOUS OR NEXT OPERATION)
C     NOTE:  DO NOT PRINT BEFORE FIRST OPERATION IF D() JUST DUMPED ABOV
C
C  110 IF(MBUG.EQ.0)GO TO 115
C      IF(NPRVOP.EQ.0.AND.IFBUG(KBUG).EQ.1)GO TO 113
C      IF(IDBALL.EQ.1)GO TO 112
C      IF(NDEBUG.EQ.0)GO TO 113
C
C      DO 111 I=1,NDEBUG
C      IF(IDEBUG(I).EQ.NPRVOP.OR.IDEBUG(I).EQ.NUMOP)GO TO 112
C  111 CONTINUE
C      GO TO 113
C
C  112 CALL FDMPA(SD,D,MD)
C
  113 NPRVOP=NUMOP
  115 CONTINUE
C
C     CHECK FOR STOP OPERATION.
      IF(NUMOP.EQ.-1) GO TO 195
C
      IF (NUMOP.EQ.4) GO TO 91
C
C     DETERMINE WHERE PARAMETERS ARE IN P ARRAY AND THE NAME
C        ASSIGNED TO THE OPERATION.
      LPM=T(LOCT+2)
      LCO=0
      IOPNUM=NUMOP
      OPNAME(1)=P(LPM-5)
      OPNAME(2)=P(LPM-4)
      GO TO 90
C
C     SPECIAL OPERATIONS.
   91 LPM=0
      LCO=0
      IOPNUM=NUMOP
      OPNAME(1)=BLANK
      OPNAME(2)=BLANK
C
C
 90   OPN(1)=OPNAME(1)
      OPN(2)=OPNAME(2)
C
C     CHECK FOR DEBUG OUTPUT
  195 CONTINUE
C  195 IF (IFBUG(IBUG).EQ.1) GO TO 95
C      GO TO 92
C   95 WRITE (IODBUG,902) ISEG,IOPNUM,OPN,LOCT,LPM,IFILLC
C  902 FORMAT (1H0,22HDRIVER DEBUG--SEGMENT=,2A4,3X,14HOPERATION NUM=,
C     1I3,3X,5HNAME=,2A4,5X,7HLOC.-T=,I5,3X,2HP=,I5,3X,7HIFILLC=,I1)
C.......................................
C     GO TO THE PROPER DRIVE ROUTINE FOR THE OPERATION.
   92 NERROR=NERRS


C     CHECK FOR OPERATIONS THAT CAN USE WATER YEAR SCRATCH FILE.
      IF ((NUMOP.GE.16).AND.(NUMOP.LE.18)) GO TO 150
      IF (NUMOP.EQ.40) GO TO 150
      IF (NUMOP.GT.19) GO TO 151
      CALL FDRIV1(P,MP,C,MC,T,MT,D,MD,IHZERO,NUMOP,IERR)
      GO TO 180
  151 IF (NUMOP.GT.40) GO TO 152
      CALL FDRIV2(P,MP,C,MC,T,MT,D,MD,IHZERO,NUMOP,IERR)
      GO TO 180
  152 CALL FDRIV3(P,MP,C,MC,T,MT,D,MD,IHZERO,NUMOP,IERR, TS,MTS)
      GO TO 180
  150 CALL FDRVWY(P,MP,C,MC,T,MT,D,MD,IHZERO,NUMOP,IERR)
  180 IF (IERR.EQ.1) GO TO 190
      IF (NERRS.GT.NERROR) GO TO 195
C.......................................
C     INCREMENT TO THE NEXT OPERATION.
      LOCT=T(LOCT+1)




C    IF PERFORMING THE OPERATIONS TABLE ON THE OPERATIONS
C    BETWEEN BEGINASSIM AND ASSIM AND WE REACH THE ASSIM
C    OPERATION THEN RETURN
      NUMOP = T(LOCT)
      IF ((NUMOP.EQ.50).AND.(LWORKMX.EQ.0)) THEN
          IFILLC = IFILLC_OLD
      END IF

      IF (NUMOP.EQ.50) THEN
          RETURN
      END IF

      IF(LOCT.LE.MT) GO TO 100
      CALL ERROR
      WRITE(IPR,*) 'ERROR IN LDRV50'
      RETURN
C.......................................
C     OPERATION IS NOT INCLUDED IN FDRIVE.
  190 IOPNUM=0
      OPNAME(1)=SNAME(1)
      OPNAME(2)=SNAME(2)
      WRITE(IPR,901) NUMOP
  901 FORMAT(1H0,10X,81H**FATAL ERROR** THE LDRV50    ROUTINE DOES NOT C
     1ONTAIN A CALL TO OPERATION NUMBER,I4,1H.)
      CALL KILLPM
C.......................................
C     END OF THE OPERATIONS TABLE.
C
      RETURN
      END
