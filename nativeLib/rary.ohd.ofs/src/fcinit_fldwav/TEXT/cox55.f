C MEMBER COX55
C
C DESC -- THE FUNCTION OF THIS SUBROUTINE IS TO DO THE CARRYOVER
C DESC    TRANSFER FOR THE FLDWAV OPERATION.
C
C
C @PROCESS LVL(77)
C
      SUBROUTINE COX55(POLD,IPOLD,COLD,PONEW,IPONEW,CONEW)
C
C      THIS SUBROUTINE WAS WRITTEN BY:
C      JANICE LEWIS      HRL   DECEMBER,1998      VERSION NO. 1.0.0
C
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/IONUM/IN,IPR,IPU
C
      DIMENSION POLD(*),IPOLD(*),COLD(*),PONEW(*),IPONEW(*),CONEW(*)

      CHARACTER*8 SNAME
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_fldwav/RCS/cox55.f,v $
     . $',                                                             '
     .$Id: cox55.f,v 1.4 2004/04/30 17:47:35 jgofus Exp $
     . $' /
C    ===================================================================
C
C
C
      DATA SNAME/'COX55   '/
C
C
      CALL FPRBUG(SNAME,1,55,IBUG)
C
      IWARN=0
      K2=POLD(102)
C
      IF(IBUG.EQ.0) GO TO 20
      ISIZEO=POLD(2)
      ISIZEN=PONEW(2)
CC      WRITE(6,9999) ISIZEO,ISIZEN,POLD(2),IPOLD(2)
CC 9999 FORMAT(2X,7HISIZEO=,I4,2X,7HISIZEN=,I4,2X,5HPOLD=,F5.0,2X,
CC     1 6HIPOLD=,I10)
      IF(IBUG.GT.1) THEN
        WRITE(IODBUG,2)
    2   FORMAT(/10X,47H**********  CONTENTS OF THE OLD PARAMETER ARRAY)
        CALL ARRY21(POLD,POLD,ISIZEO)
        WRITE(IODBUG,4)
    4   FORMAT(/10X,47H**********  CONTENTS OF THE NEW PARAMETER ARRAY)
        CALL ARRY21(PONEW,PONEW,ISIZEN)
      ENDIF
C
C        CHECK TO SEE IF NO. OF RIVERS IS THE SAME
C
   20 JNO=0
      IF(POLD(17).EQ.PONEW(17)) GO TO 25
      JNO=1
      WRITE(IPR,8020)
 8020 FORMAT(/10X,'**WARNING** THE JN PARAMETER ON DATA GROUP 2 HAS BEEN
     * CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF STILL IN SIMULATION MODE
C
   25 IF(POLD(38).EQ.PONEW(38)) GO TO 27
      WRITE(IPR,8025)
 8025 FORMAT(/10X,'**WARNING** THE NP PARAMETER ON DATA GROUP 5 HAS BEEN
     * CHANGED.')
      CALL WARN
      IWARN=IWARN+1

C        CHECK TO SEE IF NO. OF TABLE VALUES (BS VS HS) ARE THE SAME
C
   27 NCSO=POLD(31)
      NCSN=PONEW(31)

      IF(NCSO.EQ.NCSN) GO TO 30
      WRITE(IPR,8027)
 8027 FORMAT(/10X,'**WARNING** THE NCS PARAMETER ON DATA GROUP 4 HAS BEE
     *N CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        FIND STARTING LOCATIONS OF OLD AND NEW PARAMETERS
C
   30 IF(JNO.EQ.1) GO TO 600
      JN=PONEW(17)
      IY=0
      IQ=POLD(315)
      LONBT=POLD(68)-1
      LNNBT=PONEW(68)-1
      LOXT =POLD(127)-1
      LNXT =PONEW(127)-1
      LONN =POLD(281)-1
      LNNN =PONEW(281)-1
      LODXM=POLD(128)-1
      LNDXM=PONEW(128)-1
      LONB=POLD(126)-1
      LNNB=PONEW(126)-1
      LONQL=POLD(69)-1
      LNNQL=PONEW(69)-1
      LONLD=POLD(130)-1
      LNNLD=PONEW(130)-1
      LOLAD=POLD(151)-1
      LNLAD=PONEW(151)-1
      LONQCM=POLD(77)-1
      LNNQCM=PONEW(77)-1
      LONM1=POLD(74)-1
      LNNM1=PONEW(74)-1
      LONCM=POLD(263)-1
      LNNCM=PONEW(263)-1
      LOYCM=POLD(264)-1
      LNYCM=PONEW(264)-1
      LOCM =POLD(265)-1
      LNCM =PONEW(265)-1
      LOX  =POLD(235)-1
      LNX  =PONEW(235)-1
      LOFKC=POLD(260)-1
      LNFKC=PONEW(260)-1
      LOBS =POLD(241)-1
      LNBS =PONEW(241)-1
      LOHS =POLD(240)-1
      LNHS =PONEW(240)-1
      LOAS =POLD(239)-1
      LNAS =PONEW(239)-1
      LOBSS=POLD(242)-1
      LNBSS=PONEW(242)-1
      LOLQ1=POLD(132)-1
      LNLQ1=PONEW(132)-1
      LOGZ1=POLD(221)-1
      LNGZ1=PONEW(221)-1
      LOSLFI=POLD(229+IQ-1)
      LNSLFI=PONEW(229+IQ-1)
C
C        CHECK TO SEE IF BOTTOM SLOPE IS THE SAME
C

      IF(ABS(POLD(LOSLFI)-PONEW(LNSLFI)).LE.0.000001) GO TO 40
      WRITE(IPR,8030)
 8030 FORMAT(/10X,'**WARNING** THE SLFI PARAMETER ON DATA GROUP 63 HAS B
     *EEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1

C        CHECK TO SEE IF FLOODPLAIN OPTION IS THE SAME
C
   40 IF(ABS(POLD(21)-PONEW(21)).LE.0.000001) GO TO 50
      WRITE(IPR,8035)
 8035 FORMAT(/10X,'**WARNING** THE SLFI PARAMETER ON DATA GROUP 9 HAS BE
     *EN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
   50 KFLP=POLD(21)
      IF(KFLP.GT.0) THEN
        LOBSL=POLD(243)-1
        LNBSL=PONEW(243)-1
        LOBSR=POLD(244)-1
        LNBSR=PONEW(244)-1
        LOCML=POLD(266)-1
        LNCML=PONEW(266)-1
        LOCMR=POLD(267)-1
        LNCMR=PONEW(267)-1
        LOSNC=POLD(261)-1
        LNSNC=PONEW(261)-1
        LOSNM=POLD(262)-1
        LNSNM=PONEW(262)-1
      ENDIF
C
C         PRINT THE STARTING LOCATIONS OF OLD AND NEW PARAMETERS
C
      IF(IBUG.EQ.0) GO TO 84
      WRITE(IODBUG,81)
   81 FORMAT(/10X,'      JN     LNB    LNQL    LNLD    LLAD   LNQCM    L
     .NM1    LNCM    LYCM     LCM      LX    LFKC')
      WRITE(IODBUG,82) JN,LONB,LONQL,LONLD,LOLAD,LONQCM,LONM1,LONCM,
     . LOYCM,LOCM,LOX,LOFKC
   82 FORMAT(10X,23I8)
      WRITE(IODBUG,82) JN,LNNB,LNNQL,LNNLD,LNLAD,LNNQCM,LNNM1,LNNCM,
     . LNYCM,LNCM,LNX,LNFKC
      WRITE(IODBUG,83)
   83 FORMAT(/10X,'     LBS     LHS     LAS    LBSS    LLQ1    LGZ1   LS
     .LFI')
      WRITE(IODBUG,82) LOBS,LOHS,LOAS,LOBSS,LOLQ1,LOGZ1,LOSLFI
      WRITE(IODBUG,82) LNBS,LNHS,LNAS,LNBSS,LNLQ1,LNGZ1,LNSLFI
C
   84 DO 550 J=1,JN
C
C        CHECK TO SEE IF NO. OF SECTIONS ON EACH RIVER ARE THE SAME
C
      NB0=0
      IF(IPOLD(LONB+J).EQ.IPONEW(LNNB+J)) GO TO 85
      WRITE(IPR,8080) J
 8080 FORMAT(/10X,'**WARNING** NB(',I2,') (INPUT AND INTERPOLATED -DATA
     *GROUPS 12 AND 19) HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
      NB0=1
C
C        CHECK TO SEE IF NO. OF LATRAL FLOWS ARE THE SAME ON EACH RIVER
C
   85 NQL=IPOLD(LONQL+J)
      IF(IPOLD(LONQL+J).EQ.IPONEW(LNNQL+J)) GO TO 90
      WRITE(IPR,8085) J
 8085 FORMAT(/10X,'**WARNING** NQL(',I2,') ON DATA GROUP 13 HAS BEEN CHA
     *NGED.')
      CALL WARN
      IWARN=IWARN+1
      GO TO 100
C
C        CHECK TO SEE IF LATERAL FLOWS ARE LOCATED IN SAME PLACE ON RIVER
C
   90 IF(NQL.EQ.0) GO TO 120
      DO 95 I=1,NQL
      IF(IPOLD(LOLQ1+I).EQ.IPONEW(LNLQ1+I)) GO TO 95
      WRITE(IPR,8090) I,J
 8090 FORMAT(/10X,'**WARNING** LQ1(',I2,1H,,I2,') ON DATA GROUP 48 HAS B
     *EEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
   95 CONTINUE
C
  100 LOLQ1=LOLQ1+NQL
      LNLQ1=LNLQ1+NQL
C
C        CHECK TO SEE IF NO. OF LOCKS & DAMS ARE THE SAME ON EACH RIVER
C
  120 IF(IPOLD(LONLD+J).EQ.IPONEW(LNNLD+J)) GO TO 130
      WRITE(IPR,8120) J
 8120 FORMAT(/10X,'**WARNING** NUMBER OF LOCKS AND DAMS (KRCHT(I,J)=28 O
     *N DATA GROUP 20) HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
      GO TO 140
C
C        CHECK TO SEE IF LOCKS & DAMS ARE LOCATED IN SAME PLACE ON RIVER
C
  130 NUM=IPOLD(LONLD+J)
      IF(NUM.EQ.0) GO TO 150
      DO 135 K=1,NUM
      IF(IPOLD(LOLAD+K).EQ.IPONEW(LNLAD+K)) GO TO 135
      WRITE(IPR,8130) K,J
 8130 FORMAT(/10X,'**WARNING** LAD(',I2,1H,,I2,') ON DATA GROUP 44 HAS B
     *EEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
  135 CONTINUE
C
  140 LOLAD=LOLAD+NUM
      LNLAD=LNLAD+NUM
C
C        CHECK TO SEE IF NO. OF MANNING'S N REACHES ARE SAME ON EACH RIVER
C
  150 NCMO=0
      NCMLO=IPOLD(LONQCM+J)
      NCMLN=IPONEW(LNNQCM+J)
      IF(IPOLD(LONM1+J).EQ.IPONEW(LNNM1+J)) GO TO 160
      WRITE(IPR,8150) J
 8150 FORMAT(/10X,'**WARNING** NRCM1(',I2,') ON DATA GROUP 13 HAS BEEN C
     *HANGED.')
      CALL WARN
      IWARN=IWARN+1
      NCMO=1
C
C        CHECK TO SEE IF MANNING'S N IS A FUNCTION OF SAME PARAMETER
C	AND NO. OF POINTS IN THE CURVE ARE THE SAME
C
  160 NYQO=0
      NCMLO=IABS(NCMLO)
      NCMLN=IABS(NCMLN)
      IF(IPOLD(LONQCM+J).EQ.IPONEW(LNNQCM+J)) GO TO 170
      WRITE(IPR,8160) J
 8160 FORMAT(/10X,'**WARNING** NQCM(',I2,') ON DATA GROUP 13 HAS BEEN CH
     *ANGED.')
      CALL WARN
      IWARN=IWARN+1
      NYQO=1
C
  170 IF(NB0.EQ.1) GO TO 550
      N=IPOLD(LONB+J)
      IF(NYQO.EQ.1) GO TO 270
      IF(NCMO.EQ.1) GO TO 270
      NRCM=IPOLD(LONM1+J)
      NNYQ=IPOLD(LONQCM+J)
C
C        CHECK TO SEE IF MANNING'S N REACH VALUES ARE SAME ON EACH RIVER
C
      IST=1
      IF(NRCM.EQ.0) GO TO 270
      DO 265 LL=1,NRCM
      IF(IPOLD(LONCM+LL).EQ.IPONEW(LNNCM+LL)) GO TO 180
      WRITE(IPR,8170) LL,J
 8170 FORMAT(/10X,'**WARNING** NCM(',I2,1H,,I2,') ON DATA GROUP 80 HAS B
     *EEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
      GO TO 260
C
C                  CHECK TO SEE IF MANNING'S N TABLE IS THE SAME
C
C        FIND THE MAXIMUM INITIAL ELEVATION OR DISCHARGE (YQ) IN THE
C        MANNING'S N REACH
C
  180 YQMAXO=COLD(IST+IY)
      IF(NNYQ.LT.0) YQMAXO=COLD(IST+IQ)
      YQMAXN=CONEW(IST+IY)
      IF(NNYQ.LT.0) YQMAXN=CONEW(IST+IQ)
C
      IEND=IPOLD(LL+LONCM)
      DO 190 I=IST,IEND
      IF(NNYQ.EQ.1) GO TO 185
      IF(COLD(I+IY).GT.YQMAXO) YQMAXO=COLD(I+IY)
      IF(CONEW(I+IY).GT.YQMAXN) YQMAXN=COLD(I+IY)
      GO TO 190
  185 IF(COLD(I+IQ).GT.YQMAXO) YQMAXO=COLD(I+IQ)
      IF(CONEW(I+IQ).GT.YQMAXN) YQMAXN=COLD(I+IQ)
  190 CONTINUE
C
C        FIND THE MAXIMUM TABLE VALUE OF YQ IN THE OLD PARAMETER ARRAY
C
      DO 195 K=1,NCMLO
      KO=K
      IF(YQMAXO.LT.POLD(K+LOYCM)) GO TO 200
  195 CONTINUE
C
C        FIND THE MAXIMUM TABLE VALUE OF YQ IN THE NEW PARAMETER ARRAY
C
  200 DO 225 K=1,NCMLN
      KN=K
      IF(YQMAXN.LT.PONEW(K+LNYCM)) GO TO 230
  225 CONTINUE
C
C        CHECK TO SEE IF SAME NO. OF POINTS IN BOTH TABLES
C
  230 IF(KO.EQ.KN) GO TO 235
      IF(NCMLO.EQ.NCMLN.AND.KN.GT.KO) KO=KN
      IF(NCMLO.EQ.NCMLN) GO TO 235
      WRITE(IPR,8230) J
 8230 FORMAT(/10X,'**WARNING** THE NQCM(',I2,') PARAMETER ON DATA GROUP
     *13 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
      GO TO 260
C
C        CHECK TO SEE IF YQ VALUES ARE THE SAME IN BOTH TABLES
C
  235 DO 250 L=1,KO
      IF(ABS(POLD(L+LOYCM)-PONEW(L+LNYCM)).LE.0.00001) GO TO 240
      WRITE(IPR,8235) L,I,J
 8235 FORMAT(/10X,'**WARNING** YQCM(',I2,1H,,I2,1H,,I2,') ON DATA GROUP
     *NO. 84 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF MANNING'S N VALUES ARE THE SAME IN BOTH TABLES
C
  240 IF(ABS(POLD(LOCM+L)-PONEW(LNCM+L)).LE.0.0001) GO TO 242
      WRITE(IPR,8240) L,I,J
 8240 FORMAT(/10X,'**WARNING** CM(',I2,1H,,I2,1H,,I2,') ON DATA GROUP NO
     * 81 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1

  242 IF(KFLP.EQ.0) GO TO 250
      IF(ABS(POLD(LOCML+L)-PONEW(LNCML+L)).LE.0.0001) GO TO 244
      WRITE(IPR,8242) L,I,J
 8242 FORMAT(/10X,'**WARNING** CML(',I2,1H,,I2,1H,,I2,') ON DATA GROUP N
     *O 82 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1

  244 IF(ABS(POLD(LOCMR+L)-PONEW(LNCMR+L)).LE.0.0001) GO TO 250
      WRITE(IPR,8244) L,I,J
 8244 FORMAT(/10X,'**WARNING** CMR(',I2,1H,,I2,1H,,I2,') ON DATA GROUP N
     *O 83 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
  250 CONTINUE
C
  260 LOYCM=LOYCM+NCMLO
      LNYCM=LNYCM+NCMLN
      LOCM =LOCM +NCMLO
      LNCM =LNCM +NCMLN
      IF(KFLP.GT.0) THEN
        LOCML=LOCML+NCMLO
        LNCML=LNCML+NCMLN
        LOCMR=LOCMR+NCMLO
        LNCMR=LNCMR+NCMLN
      ENDIF
      IST=IEND+1
  265 CONTINUE
C
  270 LONCM=LONCM+NRCM
      LNNCM=LNNCM+NRCM

      NBTO=0
      LXTO=0
      LDXO=0
      LNNO=0

C        CHECK TO SEE IF ACTUAL NO. OF SECTIONS ARE SAME ON EACH RIVER

      N2O=IPOLD(LONBT+J)
      N2N=IPONEW(LNNBT+J)
      IF(N2O.NE.N2N) THEN
        WRITE(IPR,8270) J
 8270   FORMAT(/10X,'**WARNING** NBT(',I2,') ON DATA GROUP NO 12 HAS ',
     .      'BEEN CHANGED.')
        CALL WARN
        IWARN=IWARN+1
        GOTO 550
      ENDIF

C        CHECK TO SEE IF ACTUAL RIVER MILES ARE SAME ON EACH RIVER

      DO 272 I=1,N2O
        IF(ABS(POLD(LOXT+I)-PONEW(LNXT+I)).GT.0.0001) THEN
          WRITE(IPR,8272) I,J
 8272     FORMAT(/10X,'**WARNING** XT(',I3,',',I2,
     .      ') ON DATA GROUP NO 18 HAS BEEN CHANGED.')
          CALL WARN
          IWARN=IWARN+1
          LXTO=1
        ENDIF

C        CHECK TO SEE IF NEW SECTION NOS. ARE SAME ON EACH RIVER

        IF(ABS(POLD(LONN+I)-PONEW(LNNN+I)).GT.0.0001) THEN
          WRITE(IPR,8274) I,J
 8274     FORMAT(/10X,'**WARNING** NN(',I3,',',I2,') HAS BEEN CHANGED.')
          CALL WARN
          IWARN=IWARN+1
          LNNO=1
        ENDIF

        IF(I.EQ.N20) GO TO 272

C        CHECK TO SEE IF ACTUAL DISTANCE INTERVALS ARE SAME ON EACH RIVER

        IF(ABS(POLD(LODXM+I)-PONEW(LNDXM+I)).GT.0.0001) THEN
          WRITE(IPR,8276) I,J
 8276     FORMAT(/10X,'**WARNING** DXM(',I3,',',I2,
     .      ') ON DATA GROUP NO 19 HAS BEEN CHANGED.')
          CALL WARN
          IWARN=IWARN+1
          LDXO=1
        ENDIF
  272 CONTINUE
      IF(LXTO.EQ.1.OR.LDXO.EQ.1.OR.LNNO.EQ.1) GO TO 550


C
      LHSO=LOHS
      LHSN=LNHS
      LBSO=LOBS
      LBSN=LNBS
      LASO=LOAS
      LASN=LNAS
      LBSSO=LOBSS
      LBSSN=LNBSS
      IF(KFLP.GT.0) THEN
        LBSLO=LOBSL
        LBSLN=LNBSL
        LBSRO=LOBSR
        LBSRN=LNBSR
        LSNMO=LOSNM
        LSNMN=LNSNM
      ENDIF
      DO 500 II=1,N2O
      I=IPOLD(LONN+II)
      LOHS=LHSO+(I-1)*NCSO
      LNHS=LHSN+(I-1)*NCSN
      LOBS=LBSO+(I-1)*NCSO
      LNBS=LBSN+(I-1)*NCSN
      LOAS=LASO+(I-1)*NCSO
      LNAS=LASN+(I-1)*NCSN
      LOBSS=LBSSO+(I-1)*NCSO
      LNBSS=LBSSN+(I-1)*NCSN
      IF(KFLP.GT.0) THEN
        LOBSL=LBSLO+(I-1)*NCSO
        LNBSL=LBSLN+(I-1)*NCSN
        LOBSR=LBSRO+(I-1)*NCSO
        LNBSR=LBSRN+(I-1)*NCSN
        LOSNM=LSNMO+(I-1)*NCSO
        LNSNM=LSNMN+(I-1)*NCSN
      ENDIF

      YO=COLD(IY+I)
      QO=COLD(IQ+I)
C
C        CHECK TO SEE IF RIVER MILES ARE SAME ON EACH RIVER
C
CC      IF(ABS(POLD(LOX+I)-PONEW(LNX+I)).LE.0.0001) GO TO 280
CC      WRITE(IPR,8275) I,J
CC 8275 FORMAT(/10X,'**WARNING** X(',I2,1H,,I2,') ON DATA GROUP 25 HAS B
CC     *EEN CHANGED.')
CC      CALL WARN
CC      IWARN=IWARN+1
C
C        CHECK TO SEE IF EXPANSION-CONTRACTION COEFFICIENTS ARE SAME ON
C        EACH RIVER
C
  280 IF(ABS(POLD(LOFKC+I)-PONEW(LNFKC+I)).LE.0.0001) GO TO 290
      WRITE(IPR,8280) II,J
 8280 FORMAT(/10X,'**WARNING** FKEC(',I2,1H,,I2,') ON DATA GROUP 79 HAS
     *BEEN CHANGED.')
       CALL WARN
       IWARN=IWARN+1
C
C        CHECK TO SEE IF TABLES OF TOP WIDTH VS ELEVATION ARE THE SAME
C        FOR EACH CROSS SECTION
C
C        FIND THE MAXIMUM TABLE VALUE OF HS IN THE OLD PARAMETER ARRAY
C
  290 IF(NCSO.NE.NCSN) GO TO 500
      DO 295 K=1,NCSO
      KO=K
      IF(YO.LT.POLD(K+LOHS)) GO TO 300
  295 CONTINUE
C
C        FIND THE MAXIMUM TABLE VALUE OF HS IN THE NEW PARAMETER ARRAY
C
  300 DO 305 K=1,NCSN
      KN=K
      IF(YO.LT.PONEW(K+LNHS)) GO TO 310
  305 CONTINUE
C
C        CHECK TO SEE IF SAME NO. OF POINTS IN BOTH TABLES
C
  310 IF(KN.GT.KO) KO=KN
C
C        CHECK TO SEE IF ACTIVE TOP WIDTHS ARE THE SAME IN BOTH TABLES
C
  320 DO 400 L=1,KO
      IF(ABS(POLD(LOBS+L)-PONEW(LNBS+L)).LE.0.0001) GO TO 325
      WRITE(IPR,8320) L,I,J
 8320 FORMAT(/10X,'**WARNING** BS(',I2,1H,,I2,1H,,I2,') ON DATA GROUP NO
     * 72 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF INACTIVE TOP WIDTHS ARE THE SAME IN BOTH TABLES
C
  325 IF(ABS(POLD(LOBSS+L)-PONEW(LNBSS+L)).LE.0.0001) GO TO 330
      WRITE(IPR,8320) L,I,J
 8325 FORMAT(/10X,'**WARNING** BSS(',I2,1H,,I2,1H,,I2,') ON DATA GROUP N
     *O 77 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF ELEVATIONS ARE THE SAME IN BOTH TABLES
C
  330 IF(ABS(POLD(LOHS+L)-PONEW(LNHS+L)).LE.0.0001) GO TO 340
      WRITE(IPR,8330) L,I,J
 8330 FORMAT(/10X,'**WARNING** HS(',I2,1H,,I2,1H,,I2,') ON DATA GROUP NO
     * 27 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF ACTIVE AREAS ARE THE SAME IN BOTH TABLES
C
  340 IF(ABS(POLD(LOAS+L)-PONEW(LNAS+L)).LE.0.0001) GO TO 350
      WRITE(IPR,8340) L,I,J
 8340 FORMAT(/10X,'**WARNING** AS(',I2,1H,,I2,1H,,I2,') ON DATA GROUP NO
     * 28 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1

  350 IF(KFLP.EQ.0) GO TO 400
C
C        CHECK TO SEE IF LEFT FLOODPLAIN TOPWIDTHS ARE THE SAME IN BOTH TABLES
C
      IF(ABS(POLD(LOBSL+L)-PONEW(LNBSL+L)).LE.0.0001) GO TO 360
      WRITE(IPR,8350) L,I,J
 8350 FORMAT(/10X,'**WARNING** BSL(',I2,1H,,I2,1H,,I2,') ON DATA GROUP NO
     * 73 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF RIGHT FLOODPLAIN TOPWIDTHS ARE THE SAME IN BOTH TABLES
C
  360 IF(ABS(POLD(LOBSR+L)-PONEW(LNBSR+L)).LE.0.0001) GO TO 370
      WRITE(IPR,8360) L,I,J
 8360 FORMAT(/10X,'**WARNING** BSR(',I2,1H,,I2,1H,,I2,') ON DATA GROUP 74
     * HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1
C
C        CHECK TO SEE IF SINUOSITY COEFFICIENTS ARE THE SAME IN BOTH TABLES
C
  370 IF(ABS(POLD(LOSNM+L)-PONEW(LNSNM+L)).LE.0.0001) GO TO 400
      WRITE(IPR,8370) L,I,J
 8370 FORMAT(/10X,'**WARNING** SNM(',I2,1H,,I2,1H,,I2,') ON DATA GROUP N
     *O 78 HAS BEEN CHANGED.')
      CALL WARN
      IWARN=IWARN+1

  400 CONTINUE
C
  500 CONTINUE
      LOX=LOX+K2
      LNX=LNX+K2
      LOFKC=LOFKC+K2
      LNFKC=LNFKC+K2
      IY=IY+K2
      IQ=IQ+K2
  550 CONTINUE
C
C jgg  600 NUMC=POLD(330) // HSD bug r25-13  4/26/04
C
  600 NUMC=POLD(3)
C jgg end 
C
      IF(IWARN.GT.0) GO TO 700
C
C        TRANSFER THE OLD CARRYOVER VALUES INTO THE NEW CARRYOVER VALUES
C
      DO 610 I=1,NUMC
      CONEW(I)=COLD(I)
  610 CONTINUE
      GO TO 800
C
  700 WRITE(IPR,750)
  750 FORMAT(/10X,'**WARNING** CARRYOVER CANNOT BE TRANSFERRED IN THIS O
     1PERATION BECAUSE OF PREVIOUS WARNINGS.')
      CALL WARN
C
  800 IF(IBUG.LE.1) GO TO 900
      WRITE(IODBUG,8900)
 8900 FORMAT(/10X,35HCONTENTS OF THE OLD CARRYOVER ARRAY)
      CALL ARRY21(COLD,COLD,NUMC)
C jgg      NUMC=PONEW(330)    //  HSD bug r25-13  4/26/04
      NUMC=PONEW(3)
C jgg      
      WRITE(IODBUG,8910)
 8910 FORMAT(///10X,35HCONTENTS OF THE NEW CARRYOVER ARRAY)
      CALL ARRY21(CONEW,CONEW,NUMC)
C
  900 IF(ITRACE.EQ.1) WRITE(IODBUG,9000) SNAME
 9000 FORMAT(/2H**,1X,2A4,8H EXITED.)
      RETURN
      END
