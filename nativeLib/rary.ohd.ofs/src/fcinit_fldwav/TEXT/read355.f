C MODULE READ355
C-----------------------------------------------------------------------
C
c  THIS SUBROUTINE READS IN CROSS-SECTION AND MANNING'S N DATA
C
      SUBROUTINE READ355(PO,IUSEP,LEFTP,NBT,NGAGE,NQCM,NRCM1,IFXC,
     1 NGS,XT,SLFI,XFACT,JN,NCS,NP,NODESC,IERR,K1,K2,K4,K9,K23)
C
      CHARACTER*8 SNAME
      CHARACTER*80 DESC

      INCLUDE 'updaio'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ofs55'
      INCLUDE 'common/fldmap55'
      COMMON/MXVAL55/MXNB,MXNGAG,MXNCM1,MXNCML,MXNQL,MXINBD,MXRCH,
     .               MXMGAT,MXNXLV,MXROUT,MXNBT,MXNSTR,MXSLC
      COMMON/FLP55/KFLP
      COMMON/IDOS55/IDOS,IFCST

      DIMENSION PO(*),NBT(K1),NGAGE(K1),NQCM(K1),NRCM1(K1)
      DIMENSION IFXC(K2,K1),NGS(K4,K1),XT(K23,K1),SLFI(K2,K1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_fldwav/RCS/read355.f,v $
     . $',                                                             '
     .$Id: read355.f,v 1.5 2004/02/02 20:41:31 jgofus Exp $
     . $' /
C    ===================================================================
C

      SNAME='READ355'
      CALL FPRBUG(SNAME, 1, 55, IBUG)

      LBUG=0

      IERR=0
      LOX=IUSEP+1
      LOFLST=LOX+JN*MXNB
CC      LXYDI=LOFLST+JN*MXNB
CC      LXQDI=LXYDI+JN*MXNB
CC      LOAS=LXQDI+JN*MXNB
      LOAS=LOFLST+JN*MXNB
      LOHS=LOAS+JN*MXNB*NCS
      LOBS=LOHS+JN*MXNB*NCS
      LOBSS=LOBS+JN*MXNB*NCS
      IUSEP=LOBSS+JN*MXNB*NCS-1

      IF(KFLP.EQ.1) THEN
        LOBSL=IUSEP+1
        LOBSR=LOBSL+JN*MXNB*NCS
        LOASL=LOBSR+JN*MXNB*NCS
        LOASR=LOASL+JN*MXNB*NCS
        IUSEP=LOASR+JN*MXNB*NCS-1
      ENDIF
      IF(KFLP.GE.1) THEN
        LOHKC=IUSEP+1
        LOQKC=LOHKC+30*MXNB*JN
        IUSEP=LOQKC+30*MXNB*JN-1
      ENDIF
      IF(NMAP.GT.0) THEN
        LOXLAT=IUSEP
        LOXLON=LOXLAT+MXNB*JN
        IUSEP=LOXLON+MXNB*JN
      ENDIF
      IF(NP.EQ.-3.OR.NP.EQ.-4) THEN
        LOFKC=IUSEP+1
        LOFMC=LOFKC+MXNGAG*JN
        LOFKF=LOFMC+MXNGAG*JN
        LOFMF=LOFKF+MXNGAG*JN
        LOFKO=LOFMF+MXNGAG*JN
        LOFMO=LOFKO+MXNGAG*JN
        LOCHMN=LOFMO+MXNGAG*JN
        LOCHMX=LOCHMN+MXNGAG*JN
        IUSEP=LOCHMX+MXNGAG*JN-1
      ENDIF

      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) THEN
        IUSEP=0
        GO TO 5000
      ENDIF

C.......................................................................
C        X      --  CROSS SECTION LOCATION (MILE)
C        FLST   --  FLOOD STAGE (EL. WHEN REACHED TIME WILL BE PRINTED
CCC        YDI    --  INITIAL WATER SURFACE ELEVATIONS
CCC        QDI    --  INITIAL DISCHARGE AT TIME T=0.0
C        HS     --  ELEVATION ASSOCIATED WITH BS
C        AS     --  CROSS SECTIONAL AREA OF MAIN CHANNEL (ACTIVE)
C        BS     --  TOP WIDTH OF MAIN CHANNEL (ACTIVE)
C                   ALSO TOTAL TOP WIDTH OF COMPOSITE CHANNEL (ACTIVE)
C        BSS    --  CROSS SECTIONAL TOP WIDTH (INACTIVE)
C        BSL    --  CROSS SECTIONAL TOP WIDTH OF LEFT FLOOD PLAIN
C        BSR    --  CROSS SECTIONAL TOP WIDTH OF RIGHT FLOOD PLAIN
C        ASL    --  CROSS SECTIONAL AREA OF LEFT FLOOD PLAIN
C        ASR    --  CROSS SECTIONAL AREA OF RIGHT FLOOD PLAIN
C        HKC    --  ELEVATION CORRESPONDING TO THE CONVEYANCE
C        QKC    --  CONVEYANCE CORRESPONDING TO ELEVATION
C        XLAT   --  LATITUDE OF CHANNEL INVERT
C        XLON   --  LONGITUDE OF CHANNEL INVERT
C.......................................................................
      PO(235) =LOX+0.01
      PO(236) =LOFLST+0.01
CC      PO(237) =LXYDI+0.01
CC      PO(238) =LXQDI+0.01
      PO(239) =LOAS+0.01
      PO(240) =LOHS+0.01
      PO(241) =LOBS+0.01
      PO(242) =LOBSS+0.01
      PO(243) =LOBSL+0.01
      PO(244) =LOBSR+0.01
      PO(245) =LOASL+0.01
      PO(246) =LOASR+0.01
      PO(247) =LOHKC+0.01
      PO(248) =LOQKC+0.01
      PO(249) =LOFKC+0.01
      PO(250) =LOFMC+0.01
      PO(251) =LOFKF+0.01
      PO(252) =LOFMF+0.01
      PO(253) =LOFKO+0.01
      PO(254) =LOFMO+0.01
      PO(255) =LOCHMN+0.01
      PO(256) =LOCHMX+0.01
      PO(373) =LOXLAT+0.01
      PO(374) =LOXLON+0.01
      IF(NODESC.EQ.0)THEN
      IF(IBUG.EQ.1) WRITE(IODBUG,1209)
 1209 FORMAT(//
     .9X,'X   = CROSS SECTION LOCATION (MILE)'/
     .9X,'FLST= FLOOD STAGE (EL. WHEN REACHED TIME WILL BE PRINTED'/
CC     .9X,'YDI = INITIAL WATER SURFACE ELEVATIONS'/
CC     .9X,'QDI = INITIAL DISCHARGE AT TIME T=0.0'/
     .9X,'XLAT= LATITUDE OF CHANNEL INVERT'/
     .9X,'XLON= LONGITUDE OF CHANNEL INVERT'/
     .9X,'HS  = ELEVATION ASSOCIATED WITH BS'/
     .9X,'AS  = CROSS SECTIONAL AREA OF MAIN CHANNEL (ACTIVE)'/
     .9X,'BS  = TOP WIDTH OF MAIN CHANNEL (ACTIVE)'/
     .9X,'BSS = CROSS SECTIONAL TOP WIDTH (INACTIVE)'/
     .9X,'BSL = CROSS SECTIONAL TOP WIDTH OF LEFT FLOOD PLAIN'/
     .9X,'BSR = CROSS SECTIONAL TOP WIDTH OF RIGHT FLOOD PLAIN '/
     .9X,'ASL = CROSS SECTIONAL AREA OF LEFT FLOOD PLAIN'/
     .9X,'ASR = CROSS SECTIONAL AREA OF RIGHT FLOOD PLAIN'/
     .9X,'HKC = ELEVATION CORRESPONDING TO THE CONVEYANCE'/
     .9X,'QKC = CONVEYANCE CORRESPONDING TO ELEVATION'/)
      END IF
      IF(NP.EQ.-3.OR.NP.EQ.-4) THEN
      IF(NODESC.EQ.0)THEN
      IF(IBUG.EQ.1) WRITE(IODBUG,714)
  714 FORMAT(//
     .13X,'INVERT ELEVATION AT THE MOST UPSTREAM SECTION'/
     .13X,'SWITCH INDICATING IF SECTION HAS SPECIAL PROPERTIES'/
     .13X,'ELEVATION AT WHICH FLOODING COMMENCES'/
     .13X,'INITIAL WATER SURFACE ELEVATIONS'/
     .13X,'INITIAL DISCHARGES'/
     .13X,'ACTIVE AREA BELOW THE LOWEST HS ELEVATION'//)
      ENDIF
      END IF
C.......................................................................
C        HSC  = INVERT ELEVATION AT THE MOST UPSTREAM SECTION
C        IFXC = SWITCH INDICATING IF SECTION HAS SPECIAL PROPERTIES
C        FLST = ELEVATION AT WHICH FLOODING COMMENCES
CCC        YDI  = INITIAL WATER SURFACE ELEVATIONS
CCC        QDI  = INITIAL DISCHARGES
C        HS   = ACTIVE AREA BELOW THE LOWEST HS ELEVATION
C.......................................................................

      DO 620 J=1,JN
      IF (LBUG.EQ.1) WRITE (UE,*) 'IN READ355 - RIVER NO=',J
      IF(IBUG.EQ.1) WRITE(IODBUG,2020) J
      N=NBT(J)
      LHS1=LOHS+(J-1)*MXNB*NCS
      DO 60 I=1,N
      IFXC(I,J)=1
   60 CONTINUE
      IF(NP.NE.-3.AND.NP.NE.-4) GO TO 100
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (IFXC(I,J),I=1,N)
      IF(IBUG.EQ.1) WRITE(IODBUG,2045) (IFXC(I,J),I=1,N)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) HSC
      IF(IBUG.EQ.1) WRITE(IODBUG,2046) HSC
      IF(IFXC(1,J).EQ.0) PO(LHS1)=HSC
      NGAG=NGAGE(J)
      NGAGM=NGAG-1
      IF(NGAGM.EQ.0) NGAGM=1
      DO 540 L=1,NGAGM
      L1=L+1
      I1=NGS(L,J)
      IN1=NGS(L1,J)
      IF(NP.EQ.-4)
     1CALL RDCLXS55(XFACT,J,I1,IN1,L,PO(LOHS),PO(LOFKC),PO(LOFMC),
     2 PO(LOFKF),PO(LOFMF),PO(LOFKO),PO(LOFMO),SLFI,PO(LOCHMN),
     3 PO(LOCHMX),NODESC,K2,K4,K9)
  540 CONTINUE

  100 LFLST=LOFLST+(J-1)*MXNB-1
CC      LYDI=LXYDI+(J-1)*MXNB-1
CC      LQDI=LXQDI+(J-1)*MXNB-1
      IF(NMAP.GT.0) THEN
        LLAT=LOXLAT+(J-1)*MXNB-1
        LLON=LOXLON+(J-1)*MXNB-1
      ENDIF

      DO 570 II=1,N
      IF (LBUG.EQ.1) WRITE (UE,*) 'IN READ355 - II=',II
      I=II
      IM=I-1
      LAS=LOAS+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LHS=LOHS+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LMHS=LOHS+(J-1)*MXNB*NCS+(IM-1)*NCS-1
      LBS=LOBS+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LBSS=LOBSS+(J-1)*MXNB*NCS+(I-1)*NCS-1

      READ(IN,'(A)',END=1000) DESC
      IF(NMAP.EQ.0) THEN
        READ(IN,*) PO(LFLST+I),PO(LAS+1)
        IF(IBUG.EQ.1) WRITE(IODBUG,2075) I,PO(LFLST+I),PO(LAS+1)
      ELSE
        READ(IN,*) PO(LFLST+I),PO(LAS+1),PO(LLAT+I),PO(LLON+I)
        IF(IBUG.EQ.1) WRITE(IODBUG,2074) I,PO(LFLST+I),PO(LAS+1),
     .    PO(LLAT+I),PO(LLON+I)
      ENDIF

      IF(IFXC(I,J).EQ.1) GO TO 550
      IF(I.LE.1) GO TO 570
      DXA=ABS(XT(IM,J)-XT(I,J))*XFACT
      DH=SLFI(IM,J)*DXA
      PO(LHS+1)=PO(LMHS+1)-DH
      DO 545 K=2,NCS
      PO(LHS+K)=PO(LHS+1)+(PO(LMHS+K)-PO(LMHS+1))
 545  CONTINUE
      GO TO 570
  550 READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=551)  (PO(LHS+K),K=1,NCS)
      GO TO 553
551   WRITE (IPR,552) II,J
552   FORMAT ('0**ERROR** READING VALUES FOR ? NUMBER ',I2,
     * ' FOR RIVER NUMBER ',I2,'.')
      CALL ERROR
553   IF(IBUG.EQ.1) WRITE(IODBUG,2071) (PO(LHS+K),K=1,NCS)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=554)  (PO(LBS+K),K=1,NCS)
      GO TO 555
554   WRITE (IPR,552) II,J
      CALL ERROR
555   IF(IBUG.EQ.1) WRITE(IODBUG,2072) (PO(LBS+K),K=1,NCS)
cc      IF(NFGRF.EQ.0) THEN
cc        WRITE(JFHS)(PO(LHS+K),K=1,NCS)
cc        WRITE(JFBS)(PO(LBS+K),K=1,NCS)
cc      ENDIF
      DO 1562 K=2,NCS
      L=K-1
      PO(LAS+K)=PO(LAS+L)+0.5*(PO(LBS+L)+PO(LBS+K))*(PO(LHS+K)-
     * PO(LHS+L))
 1562 CONTINUE

      IF(KFLP.NE.1) GO TO 563
      LASL=LOASL+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LASR=LOASR+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LBSL=LOBSL+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LBSR=LOBSR+(J-1)*MXNB*NCS+(I-1)*NCS-1

      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (PO(LBSL+K),K=1,NCS)
      IF(IBUG.EQ.1) WRITE(IODBUG,2076)(PO(LBSL+K),K=1,NCS)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (PO(LBSR+K),K=1,NCS)
      IF(IBUG.EQ.1) WRITE(IODBUG,2077)(PO(LBSR+K),K=1,NCS)
cc      IF(NFGRF.EQ.0) THEN
cc        WRITE(JFBSL)(PO(LBSL+K),K=1,NCS)
cc        WRITE(JFBSR)(PO(LBSR+K),K=1,NCS)
cc      ENDIF
      PO(LASL+1)=0.
      PO(LASR+1)=0.
      DO 1563 K=2,NCS
      L=K-1
      PO(LASL+K)=PO(LASL+L)+0.5*(PO(LBSL+L)+PO(LBSL+K))*(PO(LHS+K)-
     * PO(LHS+L))
      PO(LASR+K)=PO(LASR+L)+0.5*(PO(LBSR+L)+PO(LBSR+K))*(PO(LHS+K)-
     * PO(LHS+L))
 1563 CONTINUE

  563 READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=556)  (PO(LBSS+K),K=1,NCS)
      GO TO 557
556   WRITE (IPR,552) II,J
      CALL ERROR
557   IF(IBUG.EQ.1) WRITE(IODBUG,2073) (PO(LBSS+K),K=1,NCS)
cc      IF(NFGRF.EQ.0) WRITE(JFBSS)(PO(LBSS+K),K=1,NCS)
      IF(KFLP.LE.1) GO TO 570
      LHKC=LOHKC+(J-1)*MXNB*30+(I-1)*30-1
      LQKC=LOQKC+(J-1)*MXNB*30+(I-1)*30-1

      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=558) (PO(LHKC+K),K=1,KFLP)
      GO TO 559
558   WRITE (IPR,552) II,J
      CALL ERROR
559   IF(IBUG.EQ.1) WRITE(IODBUG,2081)(PO(LHKC+K),K=1,KFLP)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=561) (PO(LQKC+K),K=1,KFLP)
      GO TO 562
561   WRITE (IPR,552) II,J
      CALL ERROR
562   IF(IBUG.EQ.1) WRITE(IODBUG,2082)(PO(LQKC+K),K=1,KFLP)
  570 CONTINUE
  620 CONTINUE

      LOFKEC=IUSEP+1
      LOSNC=LOFKEC+JN*MXNB
      LOSNM=LOSNC+JN*MXNB*NCS
      LONCM=LOSNM+JN*MXNB*NCS
      IUSEP=LONCM+JN*MXNCM1-1
        LOYQCM=IUSEP+1
        LOCM=LOYQCM+JN*MXNCM1*MXNCML
        IUSEP=LOCM+JN*MXNCM1*MXNCML-1
          IF(KFLP.EQ.1) THEN
          LOCML=IUSEP+1
          LOCMR=LOCML+JN*MXNCM1*MXNCML
          IUSEP=LOCMR+JN*MXNCM1*MXNCML-1
          ENDIF

      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) THEN
        IUSEP=0
        GO TO 5000
      ENDIF

      PO(260) =LOFKEC+0.01
      PO(261) =LOSNC+0.01
      PO(262) =LOSNM+0.01
      PO(263) =LONCM+0.01
      PO(264) =LOYQCM+0.01
      PO(265) =LOCM+0.01
      PO(266) =LOCML+0.01
      PO(267) =LOCMR+0.01

      IF(NODESC.EQ.0)THEN
      IF(IBUG.EQ.1) WRITE(IODBUG,330)
  330 FORMAT(//
     .10X,'NCM = CROSS SECTION NUMBER JUST D/S OF A MANNING N REACH'/
     .10X,'SNM  = SINUOSITY COEFFICIENT'/
     .10X,'FKEC = EXPANSION OR CONTRACTION COEFFICIENT'/
     .10X,'CML  = MANNING N FOR LEFT FLOODPLAIN'/
     .10X,'CMR  = MANNING N FOR RIGHT FLOODPLAIN'/
     .10X,'YQCM = WSEL OR DISCHARGES ASSOCIATED WITH MANNING N'/)
      ENDIF
C......................................................................
C        NCM  = CROSS SECTION NUMBER JUST U/S OF A MANNING N REACH
C        SNM  = SINUOSITY COEFFICIENT
C        FKEC = EXPANSION OR CONTRACTION COEFFICIENT
C        CML  = MANNING N FOR LEFT FLOODPLAIN
C        CMR  = MANNING N FOR RIGHT FLOODPLAIN
C        YQCM = WSEL OR DISCHARGES ASSOCIATED WITH MANNING N
C......................................................................

      DO 870 J=1,JN
      N=NBT(J)
      NM=N-1
      IF (LBUG.EQ.1) WRITE (UE,*) 'IN READ355 - REACH INFO RIVER NO=',J
      IF(IBUG.EQ.1) WRITE(IODBUG,2010) J
      DO 740 I=1,NM
      LSNC=LOSNC+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LSNM=LOSNM+(J-1)*MXNB*NCS+(I-1)*NCS-1
      DO 740 K=1,NCS
      PO(LSNC+K)=1.0
      PO(LSNM+K)=1.0
  740 CONTINUE
C
C  SINUOSITY COEFF READ IN AS FLOW-PATH LENGTH
C  THEREFORE, SNC AND SNM ARE EQUAL INITIALLY, SNM(K,I,J) AND
C  SNM(K,I,J) ARE FOR ELEV. HS(K-1,I,J) AND HS(K,I,J) FOR REACH I
C  THEY ARE MODIFIED TO BECOME WEIGHTED AVERAGE VALUE
C  BELOW ELEV HS(K,I,J)
C
      IF(KFLP.NE.1) GO TO 750
      DO 741 I=1,NM
      LSNC=LOSNC+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LSNM=LOSNM+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LBSL=LOBSL+(J-1)*MXNB*NCS+(I-1)*NCS-1
      LBSR=LOBSR+(J-1)*MXNB*NCS+(I-1)*NCS-1

      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (PO(LSNM+K),K=1,NCS)
      IF(IBUG.EQ.1) WRITE(IODBUG,2078)(PO(LSNM+K),K=1,NCS)
      DO 743 K=1,NCS
      IF(PO(LSNM+K).LT.0.99) PO(LSNM+K)=1.0
      SC=PO(LSNM+K)
      IF(PO(LBSL+K).GT.0.01) SC=1.0
      IF(PO(LBSR+K).GT.0.01) SC=1.0
      PO(LSNC+K)=SC
  743 CONTINUE
      IF(IBUG.EQ.1) WRITE(IODBUG,2079)(PO(LSNC+K),K=1,NCS)
  741 CONTINUE

  750 CONTINUE
      LFKEC=LOFKEC+(J-1)*MXNB-1
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=567) (PO(LFKEC+I),I=1,NM)
      GO TO 568
567   WRITE (IPR,552) II,J
      CALL ERROR
568   IF(IBUG.EQ.1) WRITE(IODBUG,757) J,J
  757 FORMAT (/3X,'FKEC(I,',I1,13H), I = 1, NM(,I1,1H))
      IF(IBUG.EQ.1) WRITE(IODBUG,2042) (PO(LFKEC+I),I=1,NM)

      IF(KFLP.GE.2) GO TO 870
      IF(IBUG.EQ.1) WRITE(IODBUG,197) J,J
  197 FORMAT (/3X,'NCM(K,',I2,'), K=1,NRCM1(',I2,1H))
      NRCM=NRCM1(J)
      LNCM=LONCM+(J-1)*MXNCM1
      CALL REDA55(PO(LNCM),NRCM)

      IF(KFLP.GE.1) NQCM(J)=0
C  KFLP>0, USE CONVEYANCE; IMPLY NQCM=0
C  NQCM=>0 MANNING N IS FCN OF H; <0 MANNING N IS FCN OF Q
      NQCMJ=NQCM(J)
      NCML=ABS(NQCMJ)
      IF(NCML.EQ.0) NCML=NCS
      NRCM=NRCM1(J)
      DO 769 II=1,NRCM
      LCM=LOCM+(J-1)*MXNCM1*MXNCML+(II-1)*MXNCML-1
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=761) (PO(LCM+K),K=1,NCML)
      GO TO 762
761   WRITE (IPR,552) II,J
      CALL ERROR
762   IF(IBUG.EQ.1) WRITE(IODBUG,2091) II,J,(PO(LCM+K),K=1,NCML)
      IF(NQCMJ.NE.0) GO TO 764
C  NQCM<>0, USE MANNING EQUATION, IMPLY KFLP=0
      IF(KFLP.EQ.0) GO TO 769
      LCML=LOCML+(J-1)*MXNCM1*MXNCML+(II-1)*MXNCML-1
      LCMR=LOCMR+(J-1)*MXNCM1*MXNCML+(II-1)*MXNCML-1
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (PO(LCML+K),K=1,NCML)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (PO(LCMR+K),K=1,NCML)
      IF(IBUG.EQ.1) WRITE(IODBUG,2092) II,J,(PO(LCML+K),K=1,NCML)
      IF(IBUG.EQ.1) WRITE(IODBUG,2093) II,J,(PO(LCMR+K),K=1,NCML)
      GO TO 769
  764 LYQCM=LOYQCM+(J-1)*MXNCM1*MXNCML+(II-1)*MXNCML-1
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*,ERR=565) (PO(LYQCM+K),K=1,NCML)
      GO TO 566
565   WRITE (IPR,552) II,J
      CALL ERROR
566   IF (IBUG.EQ.0) GOTO 769
      IF(NQCMJ.LT.0) WRITE(IODBUG,2094) II,J,(PO(LYQCM+K),K=1,NCML)
      IF(NQCMJ.GE.0) WRITE(IODBUG,2095) II,J,(PO(LYQCM+K),K=1,NCML)
  769 CONTINUE
  870 CONTINUE
C
CCC-----------------   RE-DEFINE INITIAL QDI/YDI  FOR NWSRFS  -----------------------
CC      IF (IDOS.LE.2) GOTO 9000
CC      DO 3200 J=1,JN
CC      LYDI=LXYDI+(J-1)*MXNB-1
CC      LQDI=LXQDI+(J-1)*MXNB-1
CC      N=NBT(J)
CC      IF(IBUG.EQ.1) WRITE(IODBUG,3101) J
CC      READ(IN,*) (PO(LQDI+KK),KK=1,N)
CC      IF(IBUG.EQ.1) WRITE(IODBUG,'(8F10.0)')  (PO(LQDI+KK),KK=1,N)
CC      IF(IBUG.EQ.1) WRITE(IODBUG,3102) J
CC      READ(IN,*) (PO(LYDI+KK),KK=1,N)
CC      IF(IBUG.EQ.1) WRITE(IODBUG,'(8F10.2)')  (PO(LYDI+KK),KK=1,N)
CC 3200 CONTINUE
CC 3101 FORMAT(/32H INITIAL DISCHARGES FOR RIVER J=,I4/)
CC 3102 FORMAT(/46H INITIAL WATER SURFACE ELEVATIONS FOR RIVER J=,I4/)
CCC-------------------------------------------------------------------------------------
 2010 FORMAT(//1X,'REACH INFO RIVER NO.',I3)
 2020 FORMAT(//1X,'RIVER NO.',I3)
 2042 FORMAT(8F10.2)
 2045 FORMAT(5X,5HIFXC=,20I5)
 2046 FORMAT(/5X,'INVERT ELEV AT U/S END OF RIVER, HSC=',F10.2)
 2071 FORMAT(5X,4H HS=,5(10F10.2/9X))
 2072 FORMAT(5X,4H BS=,5(10F10.1/9X))
 2073 FORMAT(5X,4HBSS=,5(10F10.1/9X))
 2074 FORMAT(/2X,'I=',I5,5X,'FLDSTG=',F8.2,5X,'AS1=',F10.0,5X,
     .        'LAT=',F10.4,5X,'LON=',F10.4)
 2075 FORMAT(/2X,'I=',I5,3X,7HFLDSTG=,F8.2,3X,4HAS1=,F10.0)
CC 2075 FORMAT(/2X,'I=',I5,3X,7HFLDSTG=,F8.2,3X,
CC     * 4HYDI=,F8.2,3X,4HQDI=,F10.0,3X,4HAS1=,F10.0)
 2076 FORMAT( 5X,4HBSL=,5(10F10.1/9X))
 2077 FORMAT( 5X,4HBSR=,5(10F10.1/9X))
 2078 FORMAT(/5X,4HSNM=,5(10F10.3/9X))
 2079 FORMAT( 5X,4HSNC=,5(10F10.3/9X))
 2081 FORMAT(/5X,4HHKC=,5(10F10.1/9X))
 2082 FORMAT( 5X,4HQKC=,5(10F10.1/9X))
 2091 FORMAT(/3X,'  CM(K,',I2,1H,,I2,')=',5(10F10.4/17X))
 2092 FORMAT( 3X,' CML(K,',I2,1H,,I2,')=',5(10F10.4/17X))
 2093 FORMAT( 3X,' CMR(K,',I2,1H,,I2,')=',5(10F10.4/17X))
 2094 FORMAT( 3X,'YQCM(K,',I2,1H,,I2,')=',5(10F10.0/17X))
 2095 FORMAT( 3X,'YQCM(K,',I2,1H,,I2,')=',5(10F10.2/17X))
      GO TO 9000
C
 1000 WRITE(IPR,1010)
 1010 FORMAT('0**ERROR** END OF FILE ENCOUNTERED WHILE READING INPUT.')
      CALL ERROR
C
 5000 IERR=1
C
 9000 RETURN
C
      END
