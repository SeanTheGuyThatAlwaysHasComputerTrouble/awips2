      SUBROUTINE REDBRG55 (K,J,EMBEL1,BRGW,HFDD,TFH,BBD,ZBCH,YBMIN,LAD,
     1  DTHDB,BREXP,EMBEL2,CDBRG,BRGBS,BRGHS,NFAILD,EMBW2,EMBW1,CPIP,
     2  TOPN,DTFMN,NODESC,IERR,K1,K16)

      CHARACTER*80 DESC
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/IONUM/IN,IPR,IPU
      DIMENSION EMBEL1(K16,K1),BRGW(K16,K1),HFDD(K16,K1),TFH(K16,K1)
      DIMENSION BBD(K16,K1),ZBCH(K16,K1),YBMIN(K16,K1),LAD(K16,K1)
      DIMENSION DTHDB(K16,K1),BREXP(K16,K1),EMBEL2(K16,K1),CDBRG(K16,K1)
      DIMENSION BRGBS(8,K16,K1),BRGHS(8,K16,K1),NFAILD(K16,K1)
      DIMENSION EMBW2(K16,K1),EMBW1(K16,K1),CPIP(K16,K1),TOPN(K16,K1)
      DIMENSION SNAME(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_fldwav/RCS/redbrg55.f,v $
     . $',                                                             '
     .$Id: redbrg55.f,v 1.2 2000/07/21 16:51:41 page Exp $
     . $' /
C    ===================================================================
C
      DATA SNAME/4HREDB,4HRG55/

      CALL FPRBUG(SNAME, 1, 55, IBUG)

      IERR=0

C  THIS SUBROUTINE READS BRIDGE PARAMETERS
C  CDBRG= DISCHARGE COEF. THROUGH BRIDGE
C  EMBEL1= CREST ELEV. OF LOWER ROAD EMBANKMENT OF BRIDGE
C  EMBEL2= CREST ELEV. OF LEVEL UPPER ROAD EMBANKMENT OF BRIDGE
C  EMBW1= CREST LENGTH OF LOWER ROAD EMBANKMENT OF BRIDGE
C  EMBW2= CREST LENGTH OF LEVEL UPPER ROAD EMBANKMENT OF BRIDGE
C  BRGW= WIDTH OF UPPER AND LOWER BRGANKMENT // TO FLOW
C
C      IF(IBUG.EQ.1) WRITE(IODBUG,11110)
11110 FORMAT(1X,'** ENTER REDBRG **')
      IF(IBUG.EQ.1) WRITE(IODBUG,*)
      NFAILD(K,J)=1
C......................................................................
C     LAD   --  REACH NO. CORRESPONDING TO INTERNAL BOUNDARY
C     EMBEL2--  CREST ELEVATION OF UPPERMOST PORTION OF ROAD EMBANKMENT
C     EMBW2 --  CREST LENGTH OF UPPERMOST PORTION OF ROAD EMBANKMENT
C     EMBEL1--  CREST ELEVATION OF LOWER PORTION OF ROAD EMBANKMENT
C     EMBW1 --  CREST LENGTH OF LOWER PORTION OF ROAD EMBANKMENT
C     BRGW  --  WIDTH OF TOP OF ROAD EMBANKMENT
C     CDBRG --  DISCHARGE COEFFICIENT OF FLOW THROUGH BRIDGE OPENING
C.......................................................................
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) LAD(K,J),EMBEL2(K,J),EMBW2(K,J),EMBEL1(K,J),EMBW1(K,J),
     * BRGW(K,J),CDBRG(K,J)
      IF(NODESC.EQ.0)THEN
      IF(IBUG.EQ.1)
     * WRITE(IODBUG,11) LAD(K,J),EMBEL2(K,J),EMBW2(K,J),EMBEL1(K,J),
     * EMBW1(K,J),BRGW(K,J),CDBRG(K,J)
   11 FORMAT(//
     .5X,'REACH NO. CORRESPONDING TO INTERNAL BOUNDARY      LAD',6X,I10/
     .5X,'CREST ELEVATION OF UPPER ROAD EMBANKMENT          EMBEL2',3X,
     .F10.2/5X,'CREST LENGTH OF UPPER OF ROAD EMBANKMENT          EMBW2'
     .,4X,F10.2/5X,'CREST ELEVATION OF LOWER ROAD EMBANKMENT          EM
     .BEL1',3X,F10.2/5X,'CREST LENGTH OF LOWER ROAD EMBANKMENT',13X,
     .'EMBW1',4X,F10.2/5X,'WIDTH OF TOP OF ROAD EMBANKMENT',19X,
     .'BRGW',5X,F10.2/5X,'COEFFICIENT OF FLOW THROUGH BRIDGE OPENING',8X
     .,'CDBRG',4X,F10.2/)
      ELSE
      IF(IBUG.EQ.1)
     * WRITE(IODBUG,808) LAD(K,J),EMBEL2(K,J),EMBW2(K,J),EMBEL1(K,J),
     *EMBW1(K,J),BRGW(K,J),CDBRG(K,J)
      ENDIF
C.......................................................................
C     BRGHS --  ELEVATIONS ASSOCIATED WITH WIDTHS OF BRIDGE OPENING
C     BRGBS --  WIDTH ASSOCIATED WITH BRIGDE OPENING
C.......................................................................
      IF(NODESC.EQ.0.AND.IBUG.EQ.1) WRITE(IPR,960)
  960 FORMAT(//
     .9X,'BRGHS = ELEVATIONS ASS. W/ WIDTH OF BRIGDE OPENING'/
     .9X,'BRGBS = WIDTH ASSOCIATED WITH BRIGDE OPENING'/)
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (BRGHS(L,K,J),L=1,8)
      IF(NODESC.EQ.0) THEN
        IF(IBUG.EQ.1) WRITE(IODBUG,13)(BRGHS(L,K,J),L=1,8)
      ELSE
        IF(IBUG.EQ.1) WRITE(IODBUG,113) K,J,(BRGHS(L,K,J),L=1,8)
  113   FORMAT(/5X,'BRGHS(L,',I2,',',I2,'), L=1,8)'/8F10.2)
      ENDIF
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) (BRGBS(L,K,J),L=1,8)
      IF(NODESC.EQ.0) THEN
        IF(IBUG.EQ.1) WRITE(IODBUG,14)(BRGBS(L,K,J),L=1,8)
      ELSE
        IF(IBUG.EQ.1) WRITE(IODBUG,114) K,J,(BRGBS(L,K,J),L=1,8)
  114   FORMAT(/5X,'BRGBS(L,',I2,',',I2,'), L=1,8)'/8F10.2)
      ENDIF
C.......................................................................
C     TFH   --  TIME OF FAILURE OF THE STRUCTURE
C     DTHDB --  COMPUTATIONAL TIME STEP AFTER DAM/BRIDGE FAILURE
C     HFDD  --  ELEVATION OF WATER WHEN DAM FAILURE COMMENCES
C     BBD   --  FINAL WIDTH AT BOTTOM OF BREACH
C     ZBCH  --  SLIDE SLOPE OF BREACH
C     YBMIN --  LOWEST ELEVATION THAT BOTTOM BREACH REACHES
C     BREXP --  EXPONENT USED IN DEVELOPMENT OF BREACH
C     CPIP  --  CENTERLINE ELEVATION OF PIPING BREACH
C.......................................................................
      READ(IN,'(A)',END=1000) DESC
      READ(IN,*) TFH(K,J),DTHDB(K,J),HFDD(K,J),BBD(K,J),ZBCH(K,J),
     1YBMIN(K,J),BREXP(K,J),CPIP(K,J)
      IF(NODESC.EQ.1)THEN
      IF(IBUG.EQ.1)
     *WRITE(IODBUG,17) TFH(K,J),DTHDB(K,J),HFDD(K,J),BBD(K,J),ZBCH(K,J),
     1YBMIN(K,J),BREXP(K,J),CPIP(K,J)
      ELSE
      IF(IBUG.EQ.1) WRITE(IODBUG,117) TFH(K,J),DTHDB(K,J),HFDD(K,J),
     * BBD(K,J),ZBCH(K,J),YBMIN(K,J),BREXP(K,J),CPIP(K,J)
  117 FORMAT(/
     .3X,'TIME OF FAILURE OF THE STRUCTURE                 TFH',9X,
     .F10.2/3X,'COMPUTATIONAL TIME STEP AFTER DAM/BRIDGE FAILURE DTHDB',
     .7X,F10.2/3X,'ELEVATION OF WATER WHEN DAM FAILURE COMMENCES    HFDD
     .',8X,F10.2/3X,'FINAL WIDTH AT BOTTOM OF BREACH                  BB
     .D',9X,F10.2/3X,'SLIDE SLOPE OF BREACH                            Z
     .BCH',8X,F10.2/3X,'LOWEST ELEVATION THAT BOTTOM BREACH REACHES',6X,
     .'YBMIN',7X,F10.2/3X,'EXPONENT USED IN DEVELOPMENT OF BREACH',11X,
     .'BREXP',7X,F10.2/3X,'CENTERLINE ELEVATION OF PIPING BREACH',12X,
     .'CPIP',8X,F10.2)
      ENDIF
      IF(HFDD(K,J).LT.0.001) HFDD(K,J)=100000.
      IF(DTHDB(K,J).LT.0.001) DTHDB(K,J)=TFH(K,J)/20
cc      IF(DTHDB(K,J).LT.0.001) DTHDB(K,J)=12.0
      IF(DTFMN.GT.DTHDB(K,J).AND.TFH(K,J).GT.0.0001) DTFMN=DTHDB(K,J)
      IF(BREXP(K,J).LE.0.1) BREXP(K,J)=1.0

      DO 20 L=8,2,-1
      IF(BRGHS(L,K,J).GT.0.0001) GO TO 22
20    CONTINUE
22    TOPN(K,J)=BRGHS(L,K,J)

C   1 FORMAT(8F10.2)
C   2 FORMAT(I10,7F10.2)
  808 FORMAT(/7X,3HLAD,4X,6HEMBEL2,5X,5HEMBW2,4X,6HEMBEL1,5X,5HEMBW1,
     & 6X,4HBRGW,5X,5HCDBRG,/I10,8F10.2)
   13 FORMAT(/5X,'BRGHS= ',8F10.2)
   14 FORMAT(5X,'BRGBS= ',8F10.2)
   15 FORMAT(/5X,'EMBEL= ',8F10.2)
   16 FORMAT(5X,'EMBW= ',8F10.2)
   17 FORMAT(/7X,3HTFH,5X,5HDTHDB,6X,4HHFDD,7X,3HBBD,6X,4HZBCH,
     & 5X,5HYBMIN,5X,5HBREXP,6X,4HCPIP,/8F10.2)

C      IF(IBUG.EQ.1) WRITE(IODBUG,11111)
11111 FORMAT(1X,'** EXIT REDBRG **')
      GO TO 9000
 1000 IF(IBUG.EQ.1) WRITE(IODBUG,1010)
 1010 FORMAT(/5X,'**ERROR** END OF FILE ENCOUNTERED WHILE READING INPUT
     *FOR BRIDGE INFO.'/)
      CALL ERROR
      IERR=1
 9000 RETURN
      END
