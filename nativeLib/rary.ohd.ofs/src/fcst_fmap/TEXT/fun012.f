C MODULE FUN012
C-----------------------------------------------------------------------
C
      SUBROUTINE FUN012
C 
C  THIS IS THE MAIN CONTROL ROUTINE FOR THE FUTURE MAP FUNCTION..
C
C  FUTURE MAP PROCESSES DAILY OR SIX HOURLY FUTURE AREAL PRECIPITATION
C  AND CREATES A FUTURE MAP TIME SERIES.
C
C  THE MAJOR ROUTINES ARE:
C     DRIVER: XFMAP
C     DECODE: XFMAPD AND XFMAP6
C     ARRAY SIZING: XFMAPS
C     COMPUTATIONAL ORDER LISTING: XFMAPC
C     TIME DISTRIBUTION: XFMAPT
C     ARRAY WRITING: XFMAPW AND XFMAPP
C
C   VERSION 1.0 - 1/28/83 VICKI WARKER
C
C   IMPORTANT VARIABLES INCLUDE:
C     IARGD = ARGUMENT VALUES OF THE PPDEBUG TECHNIQUE
C       ID1 = FIRST IDENTIFIER IN A RANGE
C       ID2 = SECOND IDENTIFIER IN A RANGE
C     IFFHR = THE HOUR (1 TO 24) OF THE LAST COMPUTATIONAL HOUR
C             IF THE COMPUTATIONAL PERIOD DOES NOT END AT THE END
C             OF A DAY
C     ILFHR = THE HOUR (1 TO 24) OF THE LAST FUTURE PERIOD IF THE
C             FUTURE PERIOD DOES NOT END AT THE LAST HOUR OF THE
C             DAY
C    NOFP24 = FLAG INDICATING THE PRESENCE OF 24 HOUR DATA
C     VALUE = INPUT 24 HOUR PRECIP VALUE
C    IDTDIS = TIME DISTRIBUTION ENTERED ON THE IDENTIFIER CARD
C     CTDIS = TIME DISTRIBUTION ENTERED ON THE COMMAND CARD
C       FPX = FUTURE PRECIP WORK ARRAY
C     INDEX = LOCATION IN THE FPX ARRAY FOR THE INPUT TIME
C
      CHARACTER*4 PARMTP
      CHARACTER*4 IARGS
      CHARACTER*8 OLDOPN,PARMID,TECHNAME
C
      INTEGER PDBUG
      REAL INCHES,MM,METFLG
      REAL FMAPIN,IDTDIS
C
      PARAMETER (LARRAY=1000)
      DIMENSION ARRAY(LARRAY)
      PARAMETER (LFMAPIN=120000)
      DIMENSION FMAPIN(LFMAPIN)      
      PARAMETER (MAXCO=2500)
      DIMENSION COLST(MAXCO)
      PARAMETER (MAXMOD=9000)
      CHARACTER*80 IMGMOD(MAXMOD)
      PARAMETER (MAXID=9000)
      DIMENSION FPX(MAXID,128)
      PARAMETER (LARGD=70)
      DIMENSION IARGD(LARGD)
      DIMENSION CTDIS(4),AREA1(2),AREA2(2)
      DIMENSION IDTDIS(4),FP(4)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/errdat'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      COMMON/HDFLTS/IXHCL(2),LINPTZ,YHCL(18),LCLHCL,LTZHCL,NPDHCL,NCAHCL
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fmap/RCS/fun012.f,v $
     . $',                                                             '
     .$Id: fun012.f,v 1.8 2004/08/11 13:24:18 wkwock Exp $
     . $' /
C    ===================================================================
C
      DATA IBLNK/4H    /
      DATA INCHES/4HIN  /,MM/4HMM  /
C 
C
      IOPNUM=-1
      CALL FSTWHR ('FUN012  ',IOPNUM,OLDOPN,IOLDOP)
      IPALL=0
      NWARN=0
      NERRS=0
      IERR=0
C
C  FILL COMMONS USED BY THE READ WRITE ROUTINES
      CALL RPPPCO (ISTAT)
      IF (ISTAT.NE.0) THEN
      WRITE (IPR,1110) ISTAT
         CALL ERROR
         IERR=1
         GO TO 975
         ENDIF
C      
C  READ 'ORDR' PARAMETERS
      IPTR=0
      PARMID=' '
      PARMTP='ORDR'
      CALL RPPREC (PARMID,PARMTP,IPTR,LARRAY,ARRAY,NFILL,IPTRNX,ISTAT)
      IF (ISTAT.NE.0) THEN
         CALL PSTRDC (ISTAT,PARMTP,PARMID,IPTR,LARRAY,NFILL)
         WRITE (IPR,5) PARMTP
5     FORMAT ('0**WARNING** IN FUN012 - ',A,' PARAMETERS NOT ',
     *   'SUCCESSFULLY READ.') 
         CALL WARN
         ELSE
            IBUG=0
            IF (IBUG.EQ.1) CALL PDUMPA (NFILL,ARRAY,PARMTP,PARMID,1)
            NAFMAP=ARRAY(8)
            IF (NAFMAP.GT.0) THEN
               WRITE (IPR,7) NAFMAP
7     FORMAT ('0**WARNING** ',I3,' FMAP AREAS HAVE BEEN ADDED SINCE ',
     *   'THE PROGRAM PPINIT COMMAND ORDER WAS RUN.')     
               CALL WARN
               ENDIF
         ENDIF
C
      IOUNT=0
      IF (IOUNT.EQ.1) THEN
C
C  GET I/O UNIT NUMBERS FOR INPUT, PRINT, PUNCH AND DEBUG
C  THESE ARE IN TECHS READ, PRINT, PUNCH AND DEBUGPR RESPECTIVELY
      TECHNAME='PRINT'
      CALL HPAST (TECHNAME,IPR,ISTAT)
      IF (ISTAT.NE.0) CALL FPHPWN (ISTAT,TECHNAME)
      IF (IPR.EQ.6.OR.IPR.EQ.8.OR.IPR.EQ.9) THEN
         ELSE
            IPR=6
            WRITE (IPR,1130) TECHNAME,IPR
            CALL WARN
         ENDIF
      TECHNAME='PPPRINT'
      CALL HPAST (TECHNAME,IPPPR,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      IF (IPPPR.EQ.6.OR.IPPPR.EQ.8.OR.IPPPR.EQ.9) THEN
         ELSE
            IPPPR=0
            WRITE (IPR,1130) TECHNAME,IPR
            CALL WARN
         ENDIF
      IF (IPPPR.GT.0) IPR=IPPPR
      TECHNAME='DEBUGPR'
      CALL HPAST (TECHNAME,IOPDBG,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      IF (IOPDBG.EQ.6.OR.IOPDBG.EQ.8.OR.IOPDBG.EQ.9) THEN
         ELSE
            IOPDBG=6
            WRITE (IPR,1130) TECHNAME,IOPDBG
            CALL WARN
         ENDIF
C
C  SET I/O UNIT NUMBER FOR ERROR MESSAGE PRINTOUT -TECH ERRORPR
      TECHNAME='ERRORPR'
      CALL HPAST (TECHNAME,IOERR,ISTAT)
      IF (ISTAT.NE.0) CALL FPHPWN (ISTAT,TECHNAME)
      IF (IOERR.EQ.6.OR.IOERR.EQ.8.OR.IOERR.EQ.9) THEN
         ELSE
            IOERR=9
            WRITE (IPR,1130) TECHNAME,IOERR
            CALL WARN
         ENDIF
C
      ENDIF
C
C  SET TRACE LEVEL WITH THE VALUE OF TECHNIQUE PPTRACE
      TECHNAME='PPTRACE'
      CALL HPAST (TECHNAME,IPTRCE,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
C  ROUTINE FTEKCK CHECKS TO SEE IF THE VALUE OF A TECH IS WITHIN
C  VALID LIMITS AND RETURNS THE VALUE IF IT IS AND A DEFAULT VALUE
C  IF IT IS NOT
      CALL FTEKCK (IPTRCE,TECHNAME,0,IPTRCE,0,3)
C
40    IF (IPTRCE.GT.0) WRITE (IOPDBG,*) 'ENTER FUN012'
C
C   CALL HPASTA TO GET THE PPDEBUG TECHNIQUE AND ARGUMENT VALUES
      NDBUG=0
      DO 50 I=1,20
         PDBUG(I)=IBLNK
50       CONTINUE
      TECHNAME='PPDEBUG'
      CALL HPASTA (TECHNAME,LARGD,ITVAL,NARGD,IARGD,ISTAT)
      IF (ISTAT.EQ.0) GO TO 60
         WRITE (IPR,990)
         WRITE (IPR,1000) TECHNAME,LARGD,NARGD
         CALL ERROR
         IERR=1
         GO TO 975
C   GET DEBUG CODES
60    LIARGS=LEN(IARGS)/4
      DO 80 I=1,NARGD/4
         CALL HGTSTR (LIARGS,IARGD(1+(I-1)*3),IARGS,NARGS,ISTAT)
         IF (ISTAT.NE.0) THEN
            WRITE (IPR,1010)
            CALL ERROR
            IERR=1
            GO TO 975
            ENDIF
         IF (IARGS.EQ.' ') GO TO 100
         NDBUG=NDBUG+1
         CALL UMEMOV (IARGS,PDBUG(NDBUG),1)
         IF (IARGS.EQ.'ALL') THEN
            IPALL=1
            GO TO 100
            ENDIF
80       CONTINUE
100   IBUG=IPBUG('XF  ')
      IF (IBUG.GT.0) WRITE (IOPDBG,110) PDBUG
110   FORMAT (' THE FOLLOWING DEBUG CODES WERE ENTERED : ',
     $ 20(A4,1X))
C
C  SET VALUES IN COMMON BLOCKS /FCTIME/ AND /FCTIM2/
      LOCAL=LCLHCL
      NLSTZ=LTZHCL
      INPTZC=LINPTZ
      NHOPDB=NPDHCL
C
C  SET THE DEFAULT UNITS CODE
      TECHNAME='METRIC'
      CALL HPAST (TECHNAME,ITVAL,ISTAT)
      IF (ISTAT.NE.0) then
         WRITE (IPR,1020) TECHNAME
         CALL ERROR
         IERR=1
         CALL STOPFN ('FMAP    ')
         GO TO 975
         ENDIF
      DUNITS=INCHES
      IF (ITVAL.NE.0) DUNITS=MM
C
C  SET THE DAYLIGHT SAVINGS TIME SWITCH FOR OUTPUT
      TECHNAME='NOUTDS'
      CALL HPAST (TECHNAME,ITVAL,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,1020) TECHNAME
         CALL ERROR
         IERR=1
         CALL STOPFN ('FMAP    ')
         GO TO 975
         ENDIF
      NOUTDS=ITVAL
C
C  SET THE OUTPUT TIME ZONE CODE
      TECHNAME='NOUTZ'
      CALL HPAST (TECHNAME,ITVAL,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,1020) TECHNAME
         CALL ERROR
         IERR=1
         GO TO 975
         ENDIF
      NOUTZ=ITVAL
C
C  SET UP THE PRECIP ARRAY
C  FIND THE NUMBER OF FUTURE DAYS AND THE FIRST HOUR OF THE FIRST FUTURE
C  PERIOD
      CALL XFMAPS (NUMDAY,IFFHR,ILFHR,IFFPRD,ILFPRD,IERR)
      IF (IERR.NE.0) GO TO 975
C
C  FIND THE NUMBER OF FUTURE MAP AREAS DEFINED AND GET THE COMPUTATIONAL
C  ORDER LIST FROM THE PREPROCESSOR PARAMETRIC DATA BASE
      CALL XFMAPC (COLST,MAXCO,MAXCON,IERR)
      IF (IERR.NE.0) GO TO 975
C
C  INITIALIZE THE PRECIP ARRAY AND INIT THE MOD CARD COUNTER
      NUMFPX = 0
      DO 190 K=1,MAXID
         DO 180 J=1,128
            FPX(K,J)=-999.99
180         CONTINUE
190      CONTINUE
C
C  DECODE THE FMAP24 MODS
      CALL XFMAPD (FMAPIN,LFMAPIN,MAXMOD,NUMMOD,IMGMOD,IERR)
      NOFP24=0
      IF (NUMMOD.EQ.0) THEN
         NOFP24=1
         GO TO 540
         ENDIF
      IF (IERR.NE.0) GO TO 975
      NMOD=FMAPIN(1)
      IF (NMOD.EQ.0) THEN
         WRITE (IPR,220)
220   FORMAT ('0**ERROR** NO COMMAND CARDS SUCCESSFULLY ',
     1 'DECODED FOR .FMAP24 MODS.')
         CALL ERROR
         NOFP24=1
         GO TO 540
         ENDIF
C
      NTID=0
      NUMFPX=1
C
      DO 530 I=1,NMOD
         N=(I-1)*8+NTID*10+2
         NIDENT=FMAPIN(N)
         IF (NIDENT.GE.1) GO TO 240
            WRITE (IPR,1030)
            CALL ERROR
            GO TO 530
C     CHECK THAT THE DATE FOR THE MOD FALLS WITHIN THE FUTURE PERIOD
240      IPRD=FMAPIN(N+1)-18.
         IF (IPRD.GT.IFFPRD.AND.IPRD.LE.ILFPRD) GO TO 280
            IDAY=(FMAPIN(N+1))/24
            IF (IBUG.GT.0) WRITE (IOPDBG,250) IPRD,IDAY,FMAPIN(N+1),
     $         INPTZC
250   FORMAT (' IPRD= ',I10,' IDAY= ',I10,' FMAPIN= ',F10.0,
     $ ' INPTZC= ',A4)
            CALL MDYH2 (IDAY,24,MO,ID,IY,IH,NLXX,NTDS,INPTZC)
            IF (IBUG.GT.0) WRITE (IOPDBG,250) IPRD,IDAY,FMAPIN(N+1),
     $         INPTZC
            WRITE (IPR,1040) '24',MO,ID,IY,IH,INPTZC,'24',I
            CALL ERROR
            NTID=NTID+NIDENT
            GO TO 530
C     COMPUTE THE PROPER LOCATION FOR THIS DATE IN THE PRECIP ARRAY
280      JHR=FMAPIN(N+1)
         INDEX=(JHR/6)-(IFFPRD/6)+4-3
         IF (IBUG.GT.0) WRITE (IOPDBG,290) INDEX,JHR
290   FORMAT (' FOR 24 HOUR PRECIP INDEX = ',I8,' JHR = ',I8)
C     SET VALUES FOR THE COMPUTATIONAL ORDER FLAG, METRIC FLAG AND 
C     COMMAND CARD TIME DISTRIBUTIONS
         CONFLG=FMAPIN(N+2)
         METFLG=FMAPIN(N+3)
         IF (IBUG.GT.0) WRITE (IOPDBG,310) CONFLG,METFLG
310      FORMAT (' CONFLG = ',F5.2,' METFLG =',F5.2)
         DO 330 JJ=1,4
            CTDIS(JJ)=FMAPIN(N+3+JJ)
330         CONTINUE
C     PROCESS THE IDENTIFIER CARDS FOR THIS MOD
         DO 520 J=1,NIDENT
C        CHECK THE IDENTIFIERS FOR VALIDITY
            NN=N+8+(J-1)*10
            IRNGFG=FMAPIN(NN)
            IF (CONFLG.LT.1.0) GO TO 400
C        COMPUTATIONAL ORDER NUMBERS ARE BEING USED
            IF (IRNGFG.LT.1) GO TO 390
C        A RANGE HAS BEEN SPECIFIED
            ID1=FMAPIN(NN+2)
            IF (ID1.GE.1.AND.ID1.LE.MAXCON) GO TO 340
               WRITE (IPR,1060) ID1
               CALL ERROR
               GO TO 520
340         ID2=FMAPIN(NN+4)
            IF (IBUG.GT.0) WRITE (IOPDBG,*) 'ID2=',ID2,' MAXCON=',MAXCON
            IF (ID2.GE.1.AND.ID2.LE.MAXCON) GO TO 370
               WRITE (IPR,1060) ID2
               CALL ERROR
               GO TO 520
370         IF (ID2.GE.ID1) GO TO 380
               WRITE (IPR,1070) ID1,ID2
               CALL ERROR
               GO TO 520
380         GO TO 490
C        A RANGE HAS NOT BEEN SPECIFIED
390         ID1=FMAPIN(NN+2)
            ID2=ID1
            IF (ID1.GE.1.AND.ID1.LE.MAXCON) GO TO 490
               WRITE (IPR,1060) ID1
               CALL ERROR
               GO TO 520
C        FUTURE MAP AREA IDENTIFIERS ARE BEING USED
400         IF (IRNGFG.LT.1) GO TO 460
C        A RANGE HAS BEEN SPECIFIED
            DO 410 JJ=1,2
               AREA1(JJ)=FMAPIN(NN+JJ)
               AREA2(JJ)=FMAPIN(NN+2+JJ)
410            CONTINUE
            ID1=0
            ID2=0
            DO 420 JJ=1,MAXCON
               CALL UNAMCP (AREA1,COLST(JJ*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID1=JJ
               CALL UNAMCP (AREA2,COLST(JJ*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID2=JJ
               IF (ID1.NE.0.AND.ID2.NE.0) GO TO 430
420            CONTINUE
430         IF (ID1.NE.0) GO TO 440
               WRITE (IPR,1080) AREA1
               CALL ERROR
               GO TO 520
440         IF (ID2.NE.0) GO TO 450
               WRITE (IPR,1080) (AREA2(KK),KK=1,2)
               CALL ERROR
               GO TO 520
450         IF (ID1.GT.ID2) THEN
               WRITE (IPR,1090) (AREA2(KK),KK=1,2),AREA1
               CALL ERROR
               GO TO 520
               ENDIF
C        A RANGE WAS NOT SPECIFIED
460         DO 470 JJ=1,2
               AREA1(JJ)=FMAPIN(NN+JJ)
470            CONTINUE
            ID1=0
            DO 480 JJ=1,MAXCON
               CALL UNAMCP (AREA1,COLST(JJ*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID1=JJ
480            CONTINUE
            ID2=ID1
            IF (ID1.NE.0) GO TO 490
               WRITE (IPR,1080) AREA1
               CALL ERROR
               GO TO 520
490         VALUE=FMAPIN(NN+5)
            DO 500 JJ=1,4
               IDTDIS(JJ)=FMAPIN(NN+5+JJ)
500            CONTINUE
C        COMPUTE AREAL VALUES FOR THIS IDENTIFIER
            CALL XFMAPT (ID1,ID2,CTDIS,IDTDIS,VALUE,COLST,FP)
C        BEGIN FILLING THE FUTURE PRECIP ARRAY
            FPX(NUMFPX,1)=ID1+0.01
            FPX(NUMFPX,2)=ID2+0.01
            FPX(NUMFPX,3)=INCHES
            IF (METFLG.GT.1.0) FPX(NUMFPX,3)=MM
            IEND=INDEX+3
            KK=1
            DO 510 JJ=INDEX,IEND
               FPX(NUMFPX,JJ)=FP(KK)
               KK=KK+1
510            CONTINUE
            NUMFPX=NUMFPX+1
            NTID=NTID+NIDENT
520         CONTINUE
530      CONTINUE
C
C  DECODE THE FMAP6 MODS
540   CALL XFMAP6 (FMAPIN,LFMAPIN,MAXMOD,NUMMOD,IMGMOD,IERR)
      IF (IBUG.GT.0) WRITE (IOPDBG,*) 'NUMMOD=',NUMMOD
      NOFP06=0
      IF (NUMMOD.EQ.0) THEN
         NOFP06=1
         GO TO 960
         ENDIF
      IF (IERR.NE.0) GO TO 975
      NMOD=FMAPIN(1)
      NTID=0
      NTPX6=0
      IF (NOFP24.LT.1) GO TO 590
      NUMFPX=1
590   IF (IBUG.GT.0) WRITE (IOPDBG,*) 'NMOD=',NMOD
      IF (NMOD.EQ.0) THEN
         WRITE (IPR,610)
610   FORMAT ('0**ERROR** NO COMAND CARDS SUCCESSFULLY ',
     1 'DECODED FOR .FMAP6 MODS.')
         CALL ERROR
         GO TO 960
         ENDIF
      DO 950 J=1,NMOD
         N=(J-1)*4+NTID*6+NTPX6+2
         NIDENT=FMAPIN(N)
         IF (NIDENT.GE.1) GO TO 630
            WRITE (IPR,1030)
             CALL ERROR
            GO TO 950
C     CHECK THAT THE DATE FOR THE MOD FALLS WITHIN THE FUTURE PERIOD
630      IPRD=FMAPIN(N+1)
         IF (IPRD.GT.IFFPRD.AND.IPRD.LE.ILFPRD) GO TO 650
            IDAY=IPRD/24+1
            IHOUR=IPRD-(IDAY-1)*24
            CALL MDYH2 (IDAY,IHOUR,MO,ID,IY,IH,NLXX,NTDS,INPTZC)
            WRITE (IPR,1040) '6',MO,ID,IY,IH,INPTZC,'6',J
            CALL ERROR
            DO 640 JJ=1,NIDENT
               NPX6=FMAPIN(N+4)
               NTID=NTID+1
               NTPX6=NTPX6+NPX6
               N=N+6+NPX6
640            CONTINUE
            GO TO 950
C     COMPUTE THE PROPER LOCATION FOR THIS DATE IN THE PRECIP ARRAY
650      JHR=FMAPIN(N+1)
         INDEX=(JHR/6)-(IFFPRD/6)+4
C     SET VALUES FOR THE COMPUTATIONAL ORDER FLAG AND METRIC FLAG
         CONFLG=FMAPIN(N+2)
         METFLG=FMAPIN(N+3)
C     PROCESS ON THE IDENTIFIER CARDS FOR THIS MOD
         DO 940 K=1,NIDENT
C        CHECK THE IDENTIFIERS FOR VALIDITY
            NN=J*4+NTID*6+NTPX6+2
            IRNGFG=FMAPIN(NN+1)
            NPX6=FMAPIN(NN)
            IF (CONFLG.LT.1.0) GO TO 710
C        COMPUTATIONAL ORDER NUMBERS ARE BEING USED
            IF (IRNGFG.LT.1) GO TO 680
C        A RANGE HAS BEEN SPECIFIED
            ID1=FMAPIN(NN+3)
            IF (ID1.GE.1.AND.ID1.LE.MAXCON) GO TO 660
               WRITE (IPR,1060) ID1
               CALL ERROR
               GO TO 920
660         ID2=FMAPIN(NN+5)
            IF (ID2.GE.1.AND.ID2.LE.MAXCON) GO TO 670
               WRITE (IPR,1060) ID2
               CALL ERROR
               GO TO 920
670         IF (ID2.GE.ID1) GO TO 850
               WRITE (IPR,1070) ID1,ID2
               CALL ERROR
               GO TO 920
C        A RANGE WAS NOT SPECIFIED
680         ID1=FMAPIN(NN+3)
            ID2=ID1
            IF (IBUG.GT.0) WRITE (IOPDBG,*) 'ID1=',ID1
            IF (ID1.GE.1.AND.ID1.LE.MAXCON) GO TO 850
               WRITE (IPR,1060) ID1
               CALL ERROR
               GO TO 920
C        FUTURE MAP AREA IDENTIFIERS ARE BEING USED
710         IF (IRNGFG.LT.1) GO TO 810
C        A RANGE HAS BEEN SPECIFIED
            IF (IBUG.GT.0) WRITE (IOPDBG,*) 'IDENTIFIER RANGE SPECIFIED'
            DO 740 KK=1,2
               AREA1(KK)=FMAPIN(NN+1+KK)
               AREA2(KK)=FMAPIN(NN+3+KK)
740            CONTINUE
            IF (IBUG.GT.0) WRITE (IOPDBG,750) AREA1(1),AREA1(2),
     $         AREA2(1),AREA2(2)
750   FORMAT (' AREA1 = ',2A4,' AREA2 = ',2A4)
            ID1=0
            ID2=0
            DO 770 KK=1,MAXCON
               CALL UNAMCP (AREA1,COLST(KK*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID1=KK
               CALL UNAMCP (AREA2,COLST(KK*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID2=KK
               IF (ID1.NE.0.AND.ID2.NE.0) GO TO 780
770            CONTINUE
780         IF (ID1.NE.0) GO TO 790
               WRITE (IPR,1080) AREA1
               CALL ERROR
               GO TO 920
790         IF (ID2.NE.0) GO TO 800
               WRITE (IPR,1080) AREA2
               CALL ERROR
               GO TO 920
800         IF (ID1.GT.ID2) THEN
               WRITE (IPR,1090) AREA2,AREA1
               CALL ERROR
               GO TO 920
               ENDIF
ckwz.r25-15.RANGE WAS SPECIFIED.so go to 850.8/4/04
            go to 850
C        A RANGE WAS NOT SPECIFIED
810         DO 820 KK=1,2
               AREA1(KK)=FMAPIN(NN+1+KK)
820            CONTINUE
            ID1=0
            DO 830 JJ=1,MAXCON
               CALL UNAMCP (AREA1,COLST(JJ*2-1),ISTAT)
               IF (ISTAT.EQ.0) ID1=JJ
               IF (ID1.GT.0) GO TO 840
830            CONTINUE
840         ID2=ID1
            IF (ID1.NE.0) GO TO 850
               WRITE (IPR,1080) AREA1
               CALL ERROR
               GO TO 920
C        BEGIN FILLING THE FUTURE PREPCIP ARRAY
850         FPX(NUMFPX,1)=ID1+0.01
            FPX(NUMFPX,2)=ID2+0.01
            FPX(NUMFPX,3)=INCHES
            IF (METFLG.GT.1.0) FPX(NUMFPX,3)=MM
C        IEND IS THE LOCATION OF THE LAST PRECIP VALUE IN THE FPX ARRAY
C        FOR THIS FUTURE PRECIP AREA OR RANGE OF AREAS
            IEND=INDEX+NPX6-1
C        ISTART IS THE LOCATION OF THE FIRST PRECIP VALUE IN THE FMAPIN 
C        ARRAY FOR THIS FUTURE PRECIP AREA OR RANGE OF AREAS
            ISTART=NN+6
C        COMPUTE THE IOFSET BETWEEN THE INPUT ARRAY (FMAPIN) AND THE
C        FUTURE PRECIP ARRAY (FPX)
         IOFSET=INDEX-ISTART
            IF (IBUG.GT.0) WRITE (IOPDBG,*) 'IOFSET=',IOFSET
            DO 900 L=INDEX,IEND
               M=L-IOFSET
               IF (IBUG.GT.0) WRITE (IOPDBG,*) 'M=',M
               FPX(NUMFPX,L)=FMAPIN(M)
               IF (L.LE.NUMDAY*4+4) GO TO 900
                  WRITE (IPR,1100) NUMDAY
                  CALL WARN
                  GO TO 910
900            CONTINUE
C        INCREMENT THE IDENTIFIER CARD COUNTER AND THE SIX HOURLY VALUE
C        COUNTER
910         NUMFPX=NUMFPX+1
920         NTPX6=NTPX6+NPX6
            NTID=NTID+1
            IF (NUMFPX.LE.MAXID) GO TO 940
               WRITE (IPR,930) MAXID
930   FORMAT ('0**WARNING** MAXIMUM NUMBER OF IDENTIFIER CARDS (',I4,
     * ') EXCEEDED. REMAINING CARDS WILL BE IGNORED.')
               CALL WARN
               NUMFPX=NUMFPX-1
               GO TO 960
940         CONTINUE
950      CONTINUE
C
C  CHECK IF ANY FMAP24 OR FMAP6 MOD CARDS FOUND
960   IF (NOFP24.EQ.1.AND.NOFP06.EQ.1) THEN
         WRITE (IPR,965)
965   FORMAT ('0**WARNING** NO FMAP6 OR FMAP24 MOD CARDS FOUND.')
         CALL WARN
         GO TO 975
         ENDIF
C
C  WRITE THE FUTURE PRECIP ARRAY TO PROCESSED DATA BASE TIME SERIES
      CALL XFMAPW (NUMDAY,FPX,MAXID,MAXCON,NUMFPX,COLST,IFFHR,ILFHR,
     $   IFFPRD,DUNITS,IERR)
C
975   CALL STOPFN ('FMAP    ')
C
      CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (IPTRCE.GT.0) WRITE (IOPDBG,*) 'EXIT FUN012'
C
      RETURN
C
1110  FORMAT ('0**ERROR** A STATUS CODE OF ',I3,' WAS RETURNED FROM ',
     $ 'ROUTINE RPPPCO.')
990   FORMAT ('0**ERROR** ARGUMENT ARRAY DIMENSIONED TOO SMALL ',
     $ 'OR TECHNIQUE NOT FOUND.')
1000  FORMAT (11X,'ARGUMENT ARRAY FOR TECHNIQUE ',A,' IS ',
     $ 'DIMENSIONED TO ',I2,'. THE ACTUAL NUMBER OF WORDS FOR THE ',
     $ 'ARGUMENTS IS ',I3,'.')
1010  FORMAT ('0**ERROR** IN DEBLANKING STRING FROM ',
     $ 'ROUTINE HGTSTR.')
1020  FORMAT ('0**ERROR** TECHNIQUE ',A,' HAS ARGUMENTS AND ',
     $ 'SHOULD NOT BE ACCESSED USING ROUTINE HPAST.')
1130  FORMAT ('0**WARNING** THE VALUE FOR TECHNIQUE ',A,' MUST BE ',
     $ '6, 8 OR 9. PRINT UNIT SET TO ',I2,'.')
1030  FORMAT ('0**ERROR** A COMMAND CARD WAS ENCOUNTERED ',
     $ 'WITHOUT ASSOCIATED IDENTIFIER CARDS. CARD IGNORED.')
1040  FORMAT ('0**ERROR** DATA ENTERED FOR THE ',A,' HOUR ',
     $   'PERIOD ENDING ',I2.2,'/',I2.2,'/',I4.4,'-',I2.2,A4,
     $   ' IS NOT ENTIRELY WITHIN THE FUTURE PERIOD.' /
     $ 11X,'FMAP',A,' MOD NUMBER ',I4,' IGNORED.')
1060  FORMAT ('0**ERROR** ',I6,' IS NOT A VALID ',
     $ 'COMPUTATIONAL ORDER NUMBER. CARD IGNORED.')
1070  FORMAT ('0**ERROR** COMPUTATIONAL ORDER NUMBER ',I6,
     $ ' IS GREATER THAN COMPUTATIONAL ORDER NUMBER ',I6,
     $ '. CARD IGNORED.')
1080  FORMAT ('0**ERROR** FMAP AREA ',2A4,' NOT FOUND ',
     $ 'IN THE COMPUTATIONAL ORDER LIST. CARD IGNORED.')
1090  FORMAT ('0**ERROR** THE FMAP AREA ',2A4,' OCCURS BEFORE ',
     $ 'THE FMAP AREA ',2A4,' IN THE COMPUTATIONAL ORDER. ',
     $ 'CARD IGNORED.')
1100  FORMAT ('0**WARNING** THE NUMBER OF DAYS OF FUTURE MAP ',
     $     'INPUT EXCEEDS THE END OF THE RUN PERIOD. ' /
     $ 13X,'SPACE IS AVAILABLE FOR ',I3,' FUTURE DAYS. ',
     $     'REMAINING DAYS TRUNCATED.')
C
      END
