C   MODULE TPART
C
      SUBROUTINE TPART(IARY,MIARY,NTOTM,NMMMT,IMONTH,IDAY,
     1 IYEAR,MSNG,NSTA,IORD,IER)
C
C   THIS SUBROUTINE READS THE DATA AND DOES THE CALCULATIONS
C   FOR A PARTIAL DAY.
C
C   THIS SUBROUTINE WAS ORIGINALLY WRITTEN BY GERALD N. DAY .
C
      INTEGER*2 IARY,MEANMX,MEANMN,MEAN,M6E,MNMXE,MNMNE,MEANE,
     1 MAXT,MINT,MSNG,IORD
C
      LOGICAL LBUG
C
      DIMENSION DUM(2),PTI(3,4),WTI(3,4),SBNAME(2),OLDOPN(2)
      DIMENSION IARY(1),IORD(1)
C
      INCLUDE 'common/tloc'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/tary'
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
C
      EQUIVALENCE (ARY(42),PTI(1,1)),(ARY(54),WTI(1,1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mat/RCS/tpart.f,v $
     . $',                                                             '
     .$Id: tpart.f,v 1.1 1995/09/17 19:03:17 dws Exp $
     . $' /
C    ===================================================================
C
      DATA TAVR/4HTAVR/,TEMP/4HTEMP/,BLANK/4H    /
      DATA SBNAME/4HTPAR,4HT   /,DCODE/4HTEMP/
C
      IF(IPTRCE.GE.1) WRITE(IOPDBG,900)
  900 FORMAT(1H0,17H** TPART ENTERED.)
C
      LBUG=.FALSE.
      IF(IPBUG(DCODE).EQ.1) LBUG=.TRUE.
C
      IOLDOP=IOPNUM
      IOPNUM=-1
      DO 10 I=1,2
      OLDOPN(I)=OPNAME(I)
   10 OPNAME(I)=SBNAME(I)
C
      IER=0
      NPER=LHRCPD/6
      LBUFF=1
C
C   FILL IN MAX/MIN DATA AS MISSING
C
      LASTDD=LOCMMX-1
      DO 20 I=LOCMD,LASTDD
      IARY(I)=MSNG
   20 CONTINUE
C
      MAXT=MSNG
      MINT=MSNG
C
C   READ PARTIAL DAY OF DATA
C
      LENP=LOCID-LOCIP
      LEND=MIARY-LOCID+1
      IPPDRD=IDA+1
      CALL RPDDLY(TAVR,IPPDRD,0,LENP,IARY(LOCIP),NFILLP,LEND,
     1 IARY(LOCID),NFILLD,NSTAI,MSNG,LBUFF,BUFF,ISTAT)
      IF(LBUG) CALL PDMPDY(TAVR,IPPDRD,MSNG,IARY(LOCIP),NFILLP,
     1 IARY(LOCID),NFILLD)
      IF(ISTAT.EQ.0) GO TO 100
      CALL PSTRDD(IPPDRD,ISTAT,LENP,LEND,TAVR)
      GO TO 999
C
  100 IF(IDAY.NE.1) GO TO 120
C
C   FILL MEAN MAX AND MIN ARRAYS
C
      CALL RPPMT(IMONTH,NMMMT,IARY(LOCMMX),IARY(LOCMMN),NFILL,ISTAT)
      IF(.NOT.LBUG) GO TO 110
      LMX=LOCMMX+NFILL-1
      LMN=LOCMMN+NFILL-1
      WRITE(IOPDBG,910)
  910 FORMAT(1H0,5X,23HMEAN MAX AND MIN ARRAYS)
      WRITE(IOPDBG,920) (IARY(I),I=LOCMMX,LMX)
  920 FORMAT(1H0,5X,20I6)
      WRITE(IOPDBG,920) (IARY(I),I=LOCMMN,LMN)
  110 IF(ISTAT.EQ.0) GO TO 120
      IF(ISTAT.EQ.1) WRITE(IPR,610)
  610 FORMAT(1H0,10X,38H**ERROR** SYSTEM ERROR ACCESSING FILE.)
      IF(ISTAT.EQ.2) WRITE(IPR,620) IMONTH
  620 FORMAT(1H0,10X,33H**ERROR** INVALID VALUE FOR MONTH,I6)
      IF(ISTAT.EQ.3) WRITE(IPR,630) NMMMT,NFILL
  630 FORMAT(1H0,10X,43H**ERROR** MEAN MONTHLY ARRAYS ARE TOO SMALL,
     1 I6,6H. ONLY,I6,17H COULD BE FILLED.)
      CALL ERROR
      IER = 1
      GO TO 999
C
C   LOOP THROUGH STATIONS LOOKING FOR INST. STATIONS.
C
  120 LOC=LOCMP
      DO 300 I=1,NTOTM
      IF(IARY(LOC).EQ.0) GO TO 290
      LIP=IARY(LOC+2)
      IF(LIP.EQ.0) GO TO 290
C
C   INST. VALUES
C
      IDT=IARY(LOCIP+LIP)
      NINST=LHRCPD/IDT
      LID=IARY(LOCIP+LIP+1)
C
C   IF IDT IS 1, CHANGE DATA TO 3 HOUR DATA.
C
      IF(IDT.NE.1) GO TO 235
      DO 230 J=1,8
      IARY(LOCID+LID+J-2)=IARY(LOCID+LID+3*J-2)
  230 CONTINUE
      IDT=3
      NINST=LHRCPD/IDT
C
C   CHECK IF THERE ARE ENOUGH INST. VALUES  -  IF NOT SET POINTER
C   TO INST. DATA NEGATIVE AND GET NEXT STATION.
C
  235 KNTDV=0
      DO 240 J=1,NINST
      IF(IARY(LOCID+LID-2+J).GT.MSNG) KNTDV=KNTDV+1
  240 CONTINUE
      NUM=(NINST-1)/2+1
      IF(KNTDV.GE.NUM) GO TO 245
      IARY(LOC+2)=-IARY(LOC+2)
      GO TO 290
C
C   CHECK FOR THREE HOUR DATA
C
  245 IF(IDT.NE.3) GO TO 280
C
C   3 HR DATA - CHECK IF ALL VALUES ARE AVAILABLE
C
      IF(KNTDV.EQ.NINST.AND.IARY(LOCP12+I-1).GT.MSNG) GO TO 280
C
C   MISSING DATA - SET TIME INTERVAL NEGATIVE
C
      IARY(LOCIP+LIP)=-IARY(LOCIP+LIP)
C
C   CORRECT DATA VALUES
C
C
  280 CALL TCORR(MAXT,MINT,IARY(LOCID+LID-1),NINST,IARY(LOC+3),
     1 IARY(LOC+4),MSNG)
C
  290 LOC=LOC+5
  300 CONTINUE
C
C   INITIALIZE 6 HOUR MEAN ARRAY AS MISSING
C
      L2=LOCP12-1
      DO 320 L=LOC6M,L2
      IARY(L)=MSNG
  320 CONTINUE
C
      CALL TESTI(IARY,MIARY,NTOTM,IMONTH,IDAY,IYEAR,1,MSNG,
     1 NSTA,IORD,IER)
      IF(IER.NE.0) GO TO 999
C
C   LOOP THROUGH MAX/MIN ARRAY ESTIMATING 6 HOUR MEANS AT MAX/MIN
C   ONLY STATIONS USING INST. STATION WEIGHTS AND INST. STATION
C   6 HOUR MEANS.
C
      LOC=LOCMP
      DO 800 I=1,NTOTM
      IF(IARY(LOC).EQ.0) GO TO 790
      IF(IARY(LOC+2).GT.0) GO TO 790
C
C   MAX/MIN ONLY STATION
C
C   GET TEMPERATURE PARAMETERS
C
      IPREC=IARY(LOC)
      DUM(1)=BLANK
      DUM(2)=BLANK
      LIMIT=ISTDAT-1
      NPREC=-IPREC
      CALL RPPREC(DUM,TEMP,NPREC,LIMIT,ARY,NFILL,PTRNXT,ISTAT)
      IF(ISTAT.EQ.0) GO TO 350
C
      CALL PSTRDC(ISTAT,TEMP,DUM,IPREC,LIMIT,NFILL)
      IER = 1
C
      GO TO 999
  350 IF(LBUG) CALL PDUMPA(NFILL,ARY,TEMP,DUM,1)
C
      LMEAN=IARY(LOC+1)
      MEANMX=IARY(LOCMMX+LMEAN-1)
      MEANMN=IARY(LOCMMN+LMEAN-1)
      MEAN=(MEANMX+MEANMN)/2
      LM6=(I-1)*4+LOC6M
      DO 450 N=1,NPER
C
C   ESTIMATE 6 HR MEAN
C
      SUMN=0.
      SUMD=0.
      DO 440 J=1,4
      DO 430 K=1,3
      LIPE=PTI(K,J)
      IF(LIPE.LE.0) GO TO 430
      LMPE=IARY(LOCIP+LIPE-1)
      IE=(LMPE-1)/5
      LM6E=IE*4+LOC6M
      M6E=IARY(LM6E-1+N)
      IF(M6E.LE.MSNG) GO TO 430
C
C   FOUND ESTIMATOR
C
      LMEANE=IARY(LMPE+1)
      MNMXE=IARY(LOCMMX+LMEANE-1)
      MNMNE=IARY(LOCMMN+LMEANE-1)
      MEANE=(MNMXE+MNMNE)/2
      W=WTI(K,J)
      Q=(M6E+MEAN-MEANE)*W
      SUMN=SUMN+Q
      SUMD=SUMD+W
      GO TO 440
  430 CONTINUE
  440 CONTINUE
C
      IF(SUMD.LT.5.0E-08) GO TO 450
C
C   MEAN CAN BE ESTIMATED
C
      IARY(LM6-1+N)=SUMN/SUMD
  450 CONTINUE
C
  790 LOC=LOC+5
  800 CONTINUE
  999 CONTINUE
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
