C MODULE TEMP
C-----------------------------------------------------------------------
C
      SUBROUTINE TEMP
C
C   THIS ROUTINE IS THE DRIVER FOR THE MAT PREPROCESSOR FUNCTION.
C
C   THIS ROUTINE WAS ORIGINALLY WRITTEN BY GERALD N. DAY
C
      CHARACTER*8 PARMID,OLDOPN
      INTEGER*2 IARY,MSNG
C MAT - DR19206 - increase array size > 40871; LIARY Max size=300000
C      PARAMETER (LIARY=40000)
      PARAMETER (LIARY=80000)
C MAT
      DIMENSION IARY(LIARY)
      DIMENSION IARYTMP(LIARY)
      DIMENSION UNUSED(2)
      DIMENSION IBUF(16)
C
      INCLUDE 'common/tary'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/tout'
      INCLUDE 'common/tscrat'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/tloc'
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
C  COMMON PMAXDM IS HARDWIRED BECAUSE THE SAME VARIABLE NAMES ARE USED
C  IN COMMANS PMAXDM AND PPXCTL
      COMMON /PMAXDM/ NAMRFC(2),MAXDTP,MAXTMS,MINDAY,MAXDAT,MAXDUM(6),
     *                NUMTMS,NUMDTP,NUMDUM(46)
      INCLUDE 'pppcommon/ppxctl'
      INCLUDE 'pppcommon/ppdtdr'
      INCLUDE 'pppcommon/ppunts'
      INCLUDE 'common/x'
      EQUIVALENCE (X(1),IARY(1))
CFAN
C      INTEGER DIURNAL
C      REAL K1,K2,K3,K4,K5,K6,K7,K8,K9,K0(9,4)

C jgg-replaced the above line for DR 18651,allows 3 more sites-May,2007
C     note this change was also made in fun008.f, tiluvo.f, tmeanm.f
      INTEGER DIURNAL
      REAL K1,K2,K3,K4,K5,K6,K7,K8,K9,K0(9,16)
C jgg
      COMMON/DIURNAL0/DIURNAL,K1,K2,K3,K4,K5,K6,K7,K8,K9,K0
CFAN
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob82/ohd/ofs/src/fcst_mat/RCS/temp.f,v $
     . $',                                                             '
     .$Id: temp.f,v 1.9 2007/05/30 19:06:37 jgofus Exp $
     . $' /
C    ===================================================================
C
      DATA TM24/4HTM24/,TAVR/4HTAVR/,TF24/4HTF24/,MAT/4HMAT /
      DATA OT24/4HOT24/,MMMT/4HMMMT/
C
C
      IF (IPTRCE.GE.1) WRITE (IOPDBG,*) 'ENTER TEMP'
C
      IBUG=IPBUG('TEMP')
C
      IOPNUM=-1
      CALL FSTWHR ('TEMP    ',IOPNUM,OLDOPN,IOLDOP)
C
C  READ USER PARAMETERS
      IPTR=0
      PARMID=' '
      CALL RPPREC (PARMID,'USER',IPTR,MX,X(1),NFILL,INX,ISTAT)
      IF (ISTAT.NE.0) THEN
         CALL PSTRDC (ISTAT,'USER',PARMID,IPTR,MX,NFILL)
         GO TO 920
         ENDIF
      IF (IBUG.GT.0) CALL PDUMPA (NFILL,X(1),'USER',PARMID,1)
C
C  CHECK MAT FILE STATUS FLAG
      ISTAT=X(19)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,30)
30    FORMAT ('0**FATAL ERROR** THE PARAMETRIC DATA BASE FILES DO ',
     1 'NOT CONTAIN THE INFORMATION NEEDED TO RUN THE MAT FUNCTION.' /
     2 6X,'THE MAT FUNCTION FILE STATUS FLAG IS SET TO INCOMPLETE.')
         CALL ERROR
         GO TO 920
         ENDIF
C
C  READ NTWK PARAMETERS
      IPRERR=0
      CALL SRNTWK (MX,X(1),IVNTWK,INWDTE,NNWFLG,INWFLG,
     *   UNUSED,IPRERR,ISTAT)
      IF (ISTAT.NE.0) THEN
         IPTR=0
         PARMID=' '
         CALL RPPREC (PARMID,'NTWK',IPTR,MX,X(1),NFILL,INX,ISTAT)
         CALL PSTRDC (ISTAT,'NTWK',PARMID,IPTR,MX,NFILL)
         GO TO 920
         ENDIF
      IF (IBUG.GT.0) THEN
         PARMID=' '
         CALL PDUMPA (NFILL,X(1),'NTWK',PARMID,1)
         ENDIF
C
C  CHECK NETWORK FLAGS
      INTWKF=0
      INTWK=X(9)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(10)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(11)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(14)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(16)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(20)
      IF (INTWK.EQ.1) INTWKF=1
      IF (INTWKF.EQ.1) THEN
         CALL SPNTWK (IVNTWK,INWDTE,NNWFLG,INWFLG,UNUSED,ISTAT)
         WRITE (IPR,40)
40    FORMAT ('0**FATAL ERROR** ONE OR MORE OF THE MAT RELATED ',
     *   'NETWORK COMPUTATION INDICATORS IS SET.')
         CALL ERROR
         GO TO 920
         ENDIF
C
C  SET MAX SIZE OF IARY ARRAY.  SINCE IT IS EQUIVALENCED TO
C  THE X ARRAY, THE SIZE OF THE IARY ARRAY CAN BE AS LARGE AS TWICE
C  THE NUMBER OF WORDS IN THE X ARRAY BECAUSE X IS I*4 AND
C  IARY IS I*2.
      MAXX2 = MX * 2
      MIARY = MIN0(MAXX2,LIARY)
C
      IPART=0
      IFUT=0
      LOCMP=1
      LBUFF=1
C
C  GET THE NUMBER OF DAYS (REGULAR PLUS FUTURE) ON THE PROCESSED
C  DATA BASE
      NDAPRD=IPRDMD(MAT)
C
C  CALCULATE THE DAY IN Z TIME CORRESPONDING TO IDARUN HOUR 24
      IPPDRD=IDARUN+1
C
C  READ POINTERS
      CALL RPDFIL (TM24,IPPDRD,NFILLP,NFILLD,ISTAT)
      IF (ISTAT.EQ.0) GO TO 60
         WRITE (IPR,50)
50    FORMAT ('0**ERROR** IN RPDFIL.')
         CALL ERROR
         GO TO 920
C
60    NTOTM=NFILLD/2
      LOCMD=LOCMP+NFILLP
C
C  SET NUMBER OF MAX/MIN TEMP ENTRIES
      NMMMT = 0
      DO 70 I=1,NMPTYP
        IF (IPDTDR(6,I).NE.1) GO TO 70
C     THIS IS A SPECIAL PARM TYPE, SEE IF IT IS 'MMMT'
        IF (IPDTDR(1,I).NE.MMMT) GO TO 70
           IREC = IPDTDR(3,I)
           IF (IREC.EQ.0) GO TO 80
           IUNIT=KPPRMU(IPDTDR(2,I))
           CALL UREADT (IUNIT,IREC,IBUF,IERR)
           IF (IERR.GT.0) THEN
              WRITE (IPR,110) IUNIT
110   FORMAT ('0**ERROR** READING UNIT ',I3,'.')
              CALL ERROR
              GO TO 920
              ENDIF
           NMMMT=IBUF(9)
         GO TO 120
70       CONTINUE
80    WRITE (IPR,90)
90    FORMAT ('0**ERROR** NO MMMT PARAMETERS DEFINED.')
      CALL ERROR
      GO TO 920
C
120   LOCMMX=LOCMD+NFILLD
      LOCMMN=LOCMMX+NMMMT
      LOC6M=LOCMMN+NMMMT
      LOCP12=LOC6M+NTOTM*4
      LOCC12=LOCP12+NTOTM
      LOCPMX=LOCC12+NTOTM
      LOCPMN=LOCPMX+NTOTM*3
C
      CALL RPDFIL (TAVR,IPPDRD,NFILLP,NFILLD,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,50)
         CALL ERROR
         GO TO 920
	 ENDIF
C
      NEEDI=NFILLP+NFILLD
      LOCIP=LOCPMN+NTOTM*3
      LOCID=LOCIP+NFILLP
C
C   CALCULATE THE SPACE USED IN THE ARY ARRAY.
      IUSE=ISTDAT+(NFILLP/3)*4
C
C  CHECK THE SIZE ARY ARRAY.
      IF (IUSE.GT.MARY) THEN
         WRITE (IPR,140) MARY,IUSE
140   FORMAT ('0**ERROR** ARRAY ARY TOO SMALL. ',
     1   I5,' WORDS AVAILABLE. ',I5,' WORDS NEEDED.')
         CALL ERROR
         GO TO 920
	 ENDIF
C
C   GET ORDER PARAMETERS
      IPTR=0
      MAX=MARY-IUSE
      NEXT=IUSE+1
      PARMID=' '
      CALL RPPREC (PARMID,OT24,IPTR,MAX,ARY(NEXT),NFILL,IPTRN,IER)
      IF (IER.EQ.0) THEN
         NSTA=ARY(NEXT+4)
         GO TO 200
	 ENDIF
      IF (IER.EQ.2.OR.IER.EQ.4) GO TO 180
         WRITE (IPR,170) OT24,IER,MAX,NFILL
170   FORMAT ('0**ERROR** IN RPPREC - TYPE=',A4,' IERR=',I5,
     *   ' MAX=',I5,' NFILL=',I5)
         CALL ERROR
         GO TO 920
180   WRITE (IPR,190)
190   FORMAT ('0**WARNING** ORDER PARAMETER RECORD NOT FOUND.')
      CALL WARN
      NSTA=0
C
200   CALL RPDFIL (TF24,IPPDRD,NFILLP,NFILLD,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,50)
         CALL ERROR
         GO TO 920
	 ENDIF
      NEEDF=NFILLP+NFILLD
      LOCFP=LOCIP
      LOCFD=LOCFP+NFILLP
      LAST=NEEDI
      IF (NEEDF.GT.NEEDI) LAST=NEEDF
      LAST=LAST+LOCIP-1
      IF (LAST.GT.MIARY) THEN
         WRITE (IPR,220) MIARY,LAST
220   FORMAT ('0**ERROR** ARRAY IARY TOO SMALL. ',
     1   I5,' WORDS AVAILABLE. ',I5,' WORDS NEEDED.')
         CALL ERROR
         GO TO 920
	 ENDIF
      IF (IBUG.GT.0) WRITE (IOPDBG,240) LOCMP,LOCMD,LOCMMX,LOCMMN,LOC6M,
     1 LOCP12,LOCC12,LOCPMX,LOCPMN,LOCIP,LOCID,LOCFP,LOCFD,LAST
240   FORMAT (' IARY LOCATIONS: LOCMP LOCMD LOCMMX ',
     1 'LOCMMN LOC6M LOCP12 LOCC12 LOCPMX ',
     2 'LOCPMN LOCIP LOCID LOCFP LOCFD LAST' /
     3 15X,4I6,2X,2I6,I7,2X,I6,1X,5I6)
C
C  ZERO THE ARRAYS
      DO 250 I=1,IUSE
         ARY(I)=0.0
250      CONTINUE
      DO 260 I=1,LAST
         IARY(I)=0
260      CONTINUE
C
C  CHECK IF DATA IS AVAILABLE FOR THE REQUESTED RUN DATES.
      CALL RPDDTE (TM24,J1M,J2M,ISTAT)
      TYPE=TM24
      IF (ISTAT.NE.0) GO TO 290
      CALL RPDDTE (TAVR,J1I,J2I,ISTAT)
      TYPE=TAVR
      IF (ISTAT.NE.0) GO TO 290
      IF (J2M.EQ.J2I) GO TO 280
         WRITE (IPR,270)
270   FORMAT ('0**ERROR** LAST DAY OF MAX/MIN DATA IN THE PPDB ',
     1 'DOES NOT MATCH THE LAST DAY OF INSTANTANEOUS DATA.')
         CALL ERROR
         GO TO 920
280   JFIRST=J1M
      IF (J1I.GT.JFIRST) JFIRST=J1I
      JLAST=J2M
      GO TO 310
290   WRITE (IPR,300) TYPE,ISTAT
300   FORMAT ('0**ERROR** IN RPDDTE - TYPE=',A4,1X,'ISTAT=',I2)
      CALL ERROR
      GO TO 920
C
C  CONVERT JFIRST AND JLAST TO INTERNAL CLOCK TIME.
310   IF (JLAST.EQ.0) GO TO 330
      JFIRST=JFIRST-1
      JLAST=JLAST-1
C
      IF (IDARUN.GE.JFIRST) GO TO 330
C
C  REQUESTED START DATE IS BEFORE START OF DATA
      CALL MDYH1 (JFIRST,24,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
      WRITE (IPR,320) IMONTH,IDAY,IYEAR,IHOUR,TZC
320   FORMAT ('0**WARNING** START DATE HAS ',
     1 'BEEN CHANGED TO FIRST DAY OF AVAILABLE DATA ENDING ',
     2 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,'.')
      CALL WARN
      IDARUN=JFIRST
C
330   IF (JLAST.EQ.LDACPD) GO TO 360
      CALL MDYH1 (JLAST,24,LMONTH,LDAY,LYEAR,LHOUR,NOUTZ,NOUTDS,TZC)
      CALL MDYH1 (LDACPD,LHRCPD,KMONTH,KDAY,KYEAR,KHOUR,NOUTZ,NOUTDS,
     1   TZC)
      WRITE (IPR,340) KMONTH,KDAY,KYEAR,KHOUR,TZC,LMONTH,LDAY,LYEAR,
     1 LHOUR,TZC
340   FORMAT ('0**WARNING** THE SPECIFIED LAST DAY OF OBSERVED DATA (',
     2  I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,')' /
     3 13X,'IS NOT THE SAME AS THE LAST DAY ON FILE ENDING ',
     4  I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,').')
      CALL WARN
C
      IF (JLAST.GT.LDACPD) GO TO 360
C
C   LAST DAY ON FILE IS LESS THAN THAT REQUESTED
      LDACPD=JLAST
      LHRCPD=24
      IF (JLAST.EQ.0) GO TO 360
         WRITE (IPR,350)
350   FORMAT (13X,'THE LAST DAY OF OBSERVED DATA HAS BEEN SET TO ',
     1 'THE LAST OBSERVED DATA DAY ON FILE.')
C
360   IDAFUT=LDACPD+1
      IF (LHRCPD.LT.24) IDAFUT=IDAFUT-1
      IF (IDAFUT.LT.IDARUN) IDAFUT=IDARUN
      CALL RPDDTE (TF24,J1F,J2F,ISTAT)
      IF (ISTAT.NE.0) GO TO 290
C
C  CONVERT TO INTERNAL TIME
      IF (J2F.EQ.0) GO TO 410
      J1F=J1F-1
      J2F=J2F-1
      IF (J1F.LE.IDAFUT) GO TO 390
         CALL MDYH1 (J1F,24,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
         WRITE (IPR,370) IMONTH,IDAY,IYEAR,IHOUR,TZC
370   FORMAT ('0**WARNING** FIRST FUTURE DATA DAY ENDS ',
     1 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,'.')
         CALL WARN
         IF (LDARUN.LE.LDACPD) GO TO 430
            LDARUN=LDACPD
            WRITE (IPR,380)
380   FORMAT (13X,'THE LAST DAY OF THE RUN HAS BEEN SET ',
     1 'TO THE LAST DAY OF OBSERVED DATA.')
            GO TO 430
390   IF (J2F.GE.LDARUN) GO TO 430
         CALL MDYH1 (J2F,24,LMONTH,LDAY,LYEAR,LHOUR,NOUTZ,NOUTDS,TZC)
         WRITE (IPR,400) LMONTH,LDAY,LYEAR,LHOUR,TZC
400   FORMAT ('0**WARNING** LAST FUTURE DATA DAY ENDS ',
     1 I2,'/',I2,'/',I4,'-',I2.2,A4,'.')
         CALL WARN
C
410   NDAFUT=NDAPRD-MINDAY
      LDAFUT=LDACPD+NDAFUT
      IF (LDARUN.LE.LDAFUT) GO TO 430
         LDARUN=LDAFUT
         CALL MDYH1 (LDARUN,24,LMONTH,LDAY,LYEAR,LHOUR,NOUTZ,NOUTDS,TZC)
         WRITE (IPR,420) LMONTH,LDAY,LYEAR,LHOUR,TZC
420   FORMAT ('0**WARNING** END DATE HAS BEEN CHANGED TO ',
     1  I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,
     2  ' TO ALLOW THE MAXIMUM NUMBER OF FUTURE DAYS IN THE ',
     3  'MAT TIME SERIES.')
      CALL WARN
C
430   IF (IDARUN.LE.LDARUN) GO TO 450
         WRITE (IPR,440)
440   FORMAT ('0**ERROR** START OF THE RUN IS AFTER END OF THE RUN.')
         CALL ERROR
         GO TO 920
C
C  GET THE PREVIOUS DAYS DATA
450   IDA=IDARUN-1
C
C  CALCULATE THE DAY IN Z TIME FOR THE PPDB CALL
      IPPDRD=IDA+1
      CALL MDYH1 (IDA,24,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
C
C  READ THE POINTERS AND DATA, IF THE DATA IS AVAILABLE.
      LENP=LOCMD-LOCMP
      LEND=LOCMMX-LOCMD
      CALL RPDDLY (TM24,IPPDRD,1,LENP,IARY(LOCMP),NFILLP,LEND,
     1 IARY(LOCMD),NFILLD,NSTATM,MSNG,LBUFF,BUFF,ISTAT)

      IF (IBUG.GT.0) CALL PDMPDY (TM24,IPPDRD,MSNG,IARY(LOCMP),NFILLP,
     1 IARY(LOCMD),NFILLD)
      IF (ISTAT.EQ.0.OR.ISTAT.EQ.4) GO TO 460
         CALL PSTRDD(IPPDRD,ISTAT,LENP,LEND,TM24)
         GO TO 920
460   LENP=LOCID-LOCIP
      LEND=MIARY-LOCID+1
      CALL RPDDLY (TAVR,IPPDRD,1,LENP,IARY(LOCIP),NFILLP,LEND,
     1 IARY(LOCID),NFILLD,NSTATI,MSNG,LBUFF,BUFF,ISTAT)
      IF (IBUG.GT.0) CALL PDMPDY (TAVR,IPPDRD,MSNG,IARY(LOCIP),NFILLP,
     1 IARY(LOCID),NFILLD)
      IF (ISTAT.EQ.0.OR.ISTAT.EQ.4) GO TO 470
         CALL PSTRDD (IPPDRD,ISTAT,LENP,LEND,TAVR)
         GO TO 920
C
C  READ MEAN MAX AND MIN TEMP DATA
470   CALL RPPMT (IMONTH,NMMMT,IARY(LOCMMX),IARY(LOCMMN),NFILL,
     1 ISTAT)
      IF (IBUG.GT.0) THEN
         LMX=LOCMMX+NFILL-1
         LMN=LOCMMN+NFILL-1
         WRITE (IOPDBG,*) 'MEAN MAX TEMP ARRAY:'
         WRITE (IOPDBG,490) (IARY(I),I=LOCMMX,LMX)
490   FORMAT (5X,20I6)
         WRITE (IOPDBG,*) 'MEAN MIN TEMP ARRAY:'
         WRITE (IOPDBG,490) (IARY(I),I=LOCMMN,LMN)
	 ENDIF
      IF (ISTAT.NE.0) THEN
         IF (ISTAT.EQ.1) WRITE (IPR,510)
510   FORMAT ('0**ERROR** SYSTEM ERROR ACCESSING FILE.')
         IF (ISTAT.EQ.2) WRITE (IPR,520)IMONTH
520   FORMAT ('0**ERROR** INVALID VALUE FOR MONTH ',I2,'.')
         IF (ISTAT.EQ.3) WRITE (IPR,530) NMMMT,NFILL
530   FORMAT ('0**ERROR** MEAN MONTHLY ARRAYS ARE TOO SMALL. ',
     1 I4,' WORDS NEEDED. ',I4,' AVAILABLE.')
         CALL ERROR
         GO TO 920
	 ENDIF

CFAN
      WRITE(IPR,540)DIURNAL,K1,K2,K3,K4,K5,K7,K6,K9,K8
540   FORMAT(2H0 ,15HDIURNAL         ,I2,/
     *       2H0 ,45HCOEFFICIENTS   WN1   WX1   WN2a  WX2   WN2b  ,
     *            21HWX3   WN3   WX4   WN4/
     *       15X, 9F6.2)
CFAN

      IF (IDA.GE.JFIRST) GO TO 560
C
C  PREVIOUS DAY OF DATA IS NOT AVAILABLE - SET MISSING
      I1=LOCP12
      I2=LOCFP-1
      DO 550 I=I1,I2
         IARY(I)=MSNG
550      CONTINUE
      GO TO 630
C
C  LOOP THROUGH ALL STATIONS
560   LOC=LOCMP
      DO 610 I=1,NTOTM
         IF (IARY(LOC).EQ.0) GO TO 600
         LMD=I*2-1
         LIP=IARY(LOC+2)
         IF (LIP.GT.0) GO TO 570
C        NO INSTANTANEOUS VALUES.
            NINST=0
            GO TO 590
C     INSTANTANEOUS VALUES.
570      IDT=IARY(LOCIP+LIP)
         NINST=24/IDT
         LID=IARY(LOCIP+LIP+1)
C     CHECK THE TIME INTERVAL - IF ITS A NON SIX HOUR VALUE, CONVERT
C     THE TIME SERIES TO A SIX HOUR TIME SERIES (ONLY THE LAST VALUE
C     IS NEEDED FOR THE PREVIOUS DAY ANYWAY)
         IF (IDT.EQ.6) GO TO 590
            IFAC=6/IDT
            DO 580 J=1,4
               IARY(LOCID+LID+J-2)=IARY(LOCID+LID+IFAC*J-2)
580            CONTINUE
            NINST=4
C     CORRECT DATA VALUES FOR ALL STATIONS.
590      IF ((IARY(LOC+3).EQ.0).AND.(IARY(LOC+4).EQ.0)) GO TO 600
            CALL TCORR( IARY(LOCMD+LMD-1),IARY(LOCMD+LMD),
     1         IARY(LOCID+LID-1),NINST,IARY(LOC+3),IARY(LOC+4),MSNG)
600      LOC=LOC+5
610      CONTINUE
C
C   ESTIMATE THE PREVIOUS DAYS MAX/MIN AND 12Z VALUE.
      CALL TESTP (IARY,MIARY,NTOTM,MSNG,IER)
      IF (IER.NE.0) GO TO 920
C
C  MOVE CURRENT 12Z VALUES INTO THE PREVIOUS 12Z ARRAY
      DO 620 I=1,NTOTM
         IARY(LOCP12+I-1)=IARY(LOCC12+I-1)
         IARY(LOCC12+I-1)=MSNG
620      CONTINUE
C
C  PREVIOUS DAYS DATA HAVE BEEN FILLED AND THE ARRAY POINTERS
C  HAVE BEEN SET UP
C
630   IDA=IDARUN
C
      IBLAST=1
C
640   IF (IDA.LT.LDACPD) GO TO 650
C
      IF (IDA.GT.LDACPD) GO TO 870
C
      IF (LHRCPD.LT.24) GO TO 840
C
650   CALL MDYH1 (IDA,24,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
      IF (IPRIO.EQ.0.AND.IPRMO.EQ.0) GO TO 690
      IF (IPRLST.EQ.1.AND.IDA.NE.LDACPD) GO TO 690
         WRITE (IPR,660)
660   FORMAT ('0')
         WRITE (IPR,680) IMONTH,IDAY,IYEAR,IHOUR,TZC
680   FORMAT ('0',T40,'COMPUTATIONAL DAY ENDING ',
     1 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4)
C
C   READ A REGULAR DAY OF DATA.
690   IPPDRD=IDA+1
      LENP=LOCMD-LOCMP
      LEND=LOCMMX-LOCMD
      CALL RPDDLY (TM24,IPPDRD,0,LENP,IARY(LOCMP),NFILLP,LEND,
     1 IARY(LOCMD),NFILLD,NSTATM,MSNG,LBUFF,BUFF,ISTAT)
      IF (IBUG.GT.0) CALL PDMPDY (TM24,IPPDRD,MSNG,IARY(LOCMP),NFILLP,
     1 IARY(LOCMD),NFILLD)
      IF (ISTAT.EQ.0) GO TO 700
         CALL PSTRDD (IPPDRD,ISTAT,LENP,LEND,TM24)
         GO TO 920
C
C  INSTANTANEOUS
700   LENP=LOCID-LOCIP
      LEND=MIARY-LOCID+1
      CALL RPDDLY(TAVR,IPPDRD,0,LENP,IARY(LOCIP),NFILLP,LEND,
     1 IARY(LOCID),NFILLD,NSTATI,MSNG,LBUFF,BUFF,ISTAT)
      IF (IBUG.GT.0) CALL PDMPDY(TAVR,IPPDRD,MSNG,IARY(LOCIP),NFILLP,
     1 IARY(LOCID),NFILLD)
      IF (ISTAT.EQ.0) GO TO 710
         CALL PSTRDD(IPPDRD,ISTAT,LENP,LEND,TAVR)
         GO TO 920
C
710   IF (IDAY.NE.1) GO TO 730
C
C  FILL MEAN MAX AND MIN ARRAYS SINCE ITS FIRST OF MONTH.
      CALL RPPMT (IMONTH,NMMMT,IARY(LOCMMX),IARY(LOCMMN),NFILL,ISTAT)
      IF (IBUG.EQ.0) GO TO 720
         LMX=LOCMMX+NFILL-1
         LMN=LOCMMN+NFILL-1
         WRITE (IOPDBG,240)
         WRITE (IOPDBG,490) (IARY(I),I=LOCMMX,LMX)
         WRITE (IOPDBG,490) (IARY(I),I=LOCMMN,LMN)
720   IF (ISTAT.EQ.0) GO TO 730
         IF (ISTAT.EQ.1) WRITE (IPR,510)
         IF (ISTAT.EQ.2) WRITE (IPR,520) IMONTH
         IF (ISTAT.EQ.3) WRITE (IPR,530) NMMMT,NFILL
         CALL ERROR
         GO TO 920
C
C  LOOP THROUGH ALL STATIONS LOOKING FOR INST. STATIONS.
730   LOC=LOCMP
      DO 800 I=1,NTOTM
         IF (IARY(LOC).EQ.0) GO TO 790
         LMD=I*2-1
         LIP=IARY(LOC+2)
         IF (LIP.GT.0) GO TO 740
C        NO INST. VALUES
            NINST=0
            GO TO 780
C     INST. VALUES
740      IDT=IARY(LOCIP+LIP)
         NINST=24/IDT
         LID=IARY(LOCIP+LIP+1)
C     TIME SERIES HAS INSTANTANEOUS DATA. IF THE TIME INTERVAL IS
C     ONE HOUR, CONVERT THE TIME SERIES TO A THREE HOUR TIME INTERVAL
C     SINCE ONE HOUR DATA IS NOT USED.
         IF (IDT.NE.1) GO TO 760
            DO 750 J=1,8
            IARY(LOCID+LID+J-2)=IARY(LOCID+LID+3*J-2)
750         CONTINUE
            IDT=3
            NINST=8
C     CHECK TO SEE IF THERE ARE ENOUGH INST. VALUES - IF NOT SET
C     POINTER TO INST. DATA NEGATIVE TO INDICATE MAX/MIN DATA ONLY.
C     CORRECT DATA ANYWAY SO THAT IT CAN BE USED AS PREV. DATA.
760      KNTDV=0
         DO 770 J=1,NINST
            IF (IARY(LOCID+LID-2+J).GT.MSNG) KNTDV=KNTDV+1
770         CONTINUE
         NUM=(NINST-1)/2+1
         IF (KNTDV.LT.NUM) IARY(LOC+2)=-IARY(LOC+2)
C     CHECK IF THREE HOUR DATA. IF THERE ARE NO MISSING DATA CONTINUE.
C     IF THERE ARE MISSING DATA USE A NEGATIVE TIME INTERVAL
C     TO INDICATE - TREAT AS A 6 HOUR STATION, BUT KEEP 3 HOUR DATA.
         IF (IDT.NE.3) GO TO 780
         IF (KNTDV.EQ.NINST.AND.IARY(LOCP12+I-1).GT.MSNG) GO TO 780
C     MISSING DATA FOUND
         IARY(LOCIP+LIP)=-IARY(LOCIP+LIP)
780      IF ((IARY(LOC+3).EQ.0).AND.(IARY(LOC+4).EQ.0)) GO TO 790
C        CORRECT DATA VALUES
            CALL TCORR (IARY(LOCMD+LMD-1),IARY(LOCMD+LMD),
     1         IARY(LOCID+LID-1),NINST,IARY(LOC+3),IARY(LOC+4),MSNG)
790      LOC=LOC+5
800      CONTINUE

C
C   ESTIMATE INST. STATIONS
      CALL TESTI (IARY,MIARY,NTOTM,IMONTH,IDAY,IYEAR,IPART,MSNG,
     1 NSTA,ARY(NEXT+5),IER)
      IF (IER.NE.0) GO TO 920
C
C   ESTIMATE MAX/MIN STATIONS
      CALL TESTM (IARY,MIARY,NTOTM,IMONTH,IDAY,IYEAR,IPART,IFUT,IBLAST,
     1 MSNG,NSTA,ARY(NEXT+5),IER)
      IF (IER.NE.0) GO TO 920
C
C   WRITE 6 HOUR MEANS TO SCRATCH FILE
      I2=NTOTM*4+LOC6M-1
      WRITE (KTSCR) (IARY(I),I=LOC6M,I2)
C
      IDA=IDA+1
      IF (IDA.GT.LDARUN) GO TO 910
C
C  RESET ANY POINTERS WHICH HAVE BEEN CHANGED
      LOC=LOCMP
      DO 820 I=1,NTOTM
         IF (IARY(LOC).EQ.0) GO TO 810
         LIP=IARY(LOC+2)
         IF (LIP.EQ.0) GO TO 810
C        INSTANTANEOUS STATION - RESET INST. POINTER POSITIVE,
C        IN CASE IT HAD BEEN SET NEGATIVE TO INDICATE MISSING
C        DATA.
            LIP=IABS(LIP)
            IARY(LOC+2)=LIP
C        RESET IDT POSITIVE, IN CASE IT HAD BEEN SET NEGATIVE TO
C        INDICATE 3 HOUR DATA.
           IDT=IARY(LOCIP+LIP)
           IARY(LOCIP+LIP)=IABS(IDT)
810      LOC=LOC+5
820      CONTINUE
C
C   COPY CURRENT 12Z ARRAY INTO PREVIOUS 12Z ARRAY
      DO 830 I=1,NTOTM
         IARY(LOCP12+I-1)=IARY(LOCC12+I-1)
         IARY(LOCC12+I-1)=MSNG
830      CONTINUE
C
      GO TO 640
C
C   PARTIAL DAY
840   IPART=1
      CALL MDYH1 (IDA,LHRCPD,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
      IF (IPRIO.EQ.0) GO TO 860
         WRITE (IPR,660)
         WRITE (IPR,850) IMONTH,IDAY,IYEAR,IHOUR,TZC
850   FORMAT ('0',T40,'PARTIAL DAY ENDING ',
     1 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4)
860   CALL TPART (IARY,MIARY,NTOTM,NMMMT,IMONTH,IDAY,IYEAR,
     1 MSNG,NSTA,ARY(NEXT+5),IER)
      IF (IER.NE.0) GO TO 920
C
C   FUTURE DAY
870   IFUT=1
880   CALL MDYH1 (IDA,24,IMONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZC)
      IF (IPRMF.EQ.0) GO TO 900
      WRITE (IPR,660)
      WRITE (IPR,890) IMONTH,IDAY,IYEAR,IHOUR,TZC
890   FORMAT ('0',T40,'FUTURE DAY ENDING ',
     1 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4)
900   CALL TFUTUR (IARY,IARYTMP,MIARY,NTOTM,NMMMT,IMONTH,IDAY,IYEAR,
     1 IPART,IFUT,IBLAST,MSNG,NSTA,ARY(NEXT+5))
C
C   SET IPART TO -1 TO INDICATE TFUTUR HAS BEEN CALLED ONCE.
      IPART=-1
      IF (IER.NE.0) GO TO 920
C
C   WRITE 6 HOUR MEANS TO SCRATCH FILE
      I2=NTOTM*4+LOC6M-1
      WRITE (KTSCR) (IARY(I),I=LOC6M,I2)
C
      IDA=IDA+1
      IF (IDA.GT.LDARUN) GO TO 910
      GO TO 880
C
C   CALCULATE MATS
910   CALL TMAT(IARY,MIARY,NTOTM)
C
920   CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
C
      END
