C MODULE SNMAT
C-----------------------------------------------------------------------
C
C  ROUTINE TO PERFORM NETWORK COMPUTATIONS FOR MAT AREAS.
C
      SUBROUTINE SNMAT (IRTYPE,IALL,IOPTN,OPTN,LARRAY,ARRAY,
     *   NNWFLG,INWFLG,STMNWT,IBASN,ITSHDR,IUEND,ISTAT)
C
      CHARACTER*4 OPTN,UNITS,WDISP,XTYPE
      CHARACTER*8 TYPERR
      REAL BLNK/4H    /
C
      DIMENSION ARRAY(LARRAY),INWFLG(NNWFLG)
      DIMENSION UNUSED(5)
C
C  STAN PARAMETER ARRAYS
      DIMENSION STAID(2),STACOR(2)
C
C  MAT PARAMETER ARRAYS
      DIMENSION TID(2),BASNID(2),DESC(5),CENTRD(2),CENNEW(2)
C
C  BASN PARAMETER ARRAYS
      DIMENSION BPID(2),BTID(2),BPXID(2)
      DIMENSION BDESC(5),BCNTRD(2),FLTLN(2)
C
C  TIME SERIES ARRAYS
      CHARACTER*4 TSUNIT
      CHARACTER*8 TSFID
      CHARACTER*20 TSDESC
      PARAMETER (LWKBUF=500)
      DIMENSION IWKBUF(LWKBUF)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/suoptx'
      INCLUDE 'pppcommon/ppdtdr'
      INCLUDE 'scommon/sworkx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_network/RCS/snmat.f,v $
     . $',                                                             '
     .$Id: snmat.f,v 1.2 1998/04/07 17:58:22 page Exp $
     . $' /
C    ===================================================================
C
C
C
C  SET TRACE LEVEL
      CALL SBLTRC ('NTWK','NTWKMAT ','SNMAT   ',LTRACE)
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,430)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      CALL SBLDBG ('NTWK','NTWKMAT ','SNMAT   ',LDEBUG)
C
C  CHECK IF CPU TIMER DEBUG OPTION SPECIFIED
      LTIMR=ISBUG('TIMR')
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,440) IRTYPE,IALL,IBMDR,IOPTN,
     *      OPTN,LARRAY,STMNWT,IBASN,ITSHDR
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C
C  SET INDICATOR TO UPDATE PARAMETERS EVEN IF PREDETERMINED WEIGHTS USED
      INDPRE=1
C
C  PRINT HEADING
      WRITE (LP,450)
      CALL SULINE (LP,1)
      IF (INWFLG(3).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 10
         WRITE (LP,460)
         CALL SULINE (LP,2)
10    IF (INWFLG(4).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 20
         WRITE (LP,470)
         CALL SULINE (LP,2)
20    IF (INWFLG(5).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 30
         WRITE (LP,480)
         CALL SULINE (LP,2)
30    IF (INWFLG(8).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 40
         WRITE (LP,490)
         CALL SULINE (LP,2)
40    IF (INWFLG(10).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 50
         WRITE (LP,500)
         CALL SULINE (LP,2)
50    WRITE (LP,510) STMNWT
      CALL SULINE (LP,2)
      IF (INDPRE.EQ.1) THEN
         WRITE (LP,520)
         CALL SULINE (LP,2)
         ENDIF
      IF (ITSHDR.EQ.1) THEN
         WRITE (LP,530)
         CALL SULINE (LP,2)
         ENDIF
C
      NAREA=0
      NUMERR=0
C
C  INITIALIZE POINTERS
      IDIV=20
      IDIM=LSWORK/IDIV
C  STATION WEIGHT ID'S
      ID1=1
C  STATION WEIGHTS
      ID2=IDIM*2+1
C  ARRAY POINTERS
      ID3=IDIM*3+1
C  STATION COORDINATES
      ID4=IDIM*4+1
C  LATITUDES
      ID5=IDIM*6+1
C  LONGITUDES
      ID6=IDIM*7+1
C  IY
      ID7=IDIM*8+1
C  IXB
      ID8=IDIM*9+1
C  IXE
      ID9=IDIM*10+1
C  X
      ID10=IDIM*11+1
C  Y
      ID11=IDIM*12+1
C  JX
      ID12=IDIM*13+1
C  JY
      ID13=IDIM*14+1
C  JN
      ID14=IDIM*15+1
C
      MBPTS=IDIM
      MSEGS=IDIM
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'IN SNMAT -',
     *      ' LSWORK=',LSWORK,
     *      ' IDIV=',IDIV,
     *      ' MBPTS=',MBPTS,
     *      ' MSEGS=',MSEGS,
     *      ' '
         CALL SULINE (IOSDBG,1)
         ENDIF   
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  GET RECORD NUMBER FOR LAST RECORD OF THIS TYPE
      XTYPE=' '
      IF (IBASN.EQ.0) XTYPE='MAT'
      IF (IBASN.EQ.1) XTYPE='BASN'
      IDXDAT=IPCKDT(XTYPE)
      IF (IDXDAT.GT.0) GO TO 60
         WRITE (LP,550) XTYPE
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
60    LSTREC=IPDTDR(4,IDXDAT)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,540) IDXDAT,LSTREC
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IPTR1=0
      IPTRN1=0
      IPTR3=0
      IPTRN3=0
      IPRNT=1
      UNITS='ENGL'
      IF (LTIMR.GT.0) CALL SUTIMR (LP,ITMELA,ITMTOT)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF SUFFICIENT CPU TIME AVAILABLE
70    ICKRGN=0
      ICKCPU=1
      MINCPU=10
      IPRERR=1
      IPUNIT=LP
      TYPERR='ERROR'
      INCLUDE 'clugtres'
      IF (IERR.GT.0) THEN
         CALL SUFATL
         IUEND=1
         GO TO 425
         ENDIF
C
C  CHECK IF ONLY THOSE MAT AREAS WITH CHANGED BASIN BOUNDARIES ARE TO
C  BE PROCESSED
      IF (IBASN.EQ.0) GO TO 100
C
C  READ BASIN BOUNDARY PARAMETERS
      CALL UREPET (' ',BASNID,8)
      IPRERR=0
      CALL SRBASN (ARRAY,LARRAY,IBVER,BASNID,BDESC,SWORK(ID5),
     *   SWORK(ID6),IDIM,NBPTS,AREA,CAREA,ELEV,BCNTRD(1),BCNTRD(2),
     *   MAPFLG,MATFLG,BPID,BTID,BPXID,
     *   IDIM,NSEGS,SWORK(ID7),SWORK(ID8),SWORK(ID9),LFACTR,
     *   IPTR3,IPTRN3,IPRERR,IERR)
      IF (IERR.EQ.0) GO TO 90
         CALL SRPPST (BASNID,'BASN',IPTR3,LARRAY,0,IPTRN3,IERR)
         WRITE (LP,580) 'BASN',IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
C
90    IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,560) BASNID,BTID,MATFLG,IPTR3,IPTRN3
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  CHECK IF MAT AREA USES THIS BASIN BOUNDARY
      IF (BTID(1).EQ.BLNK.AND.BTID(2).EQ.BLNK) GO TO 400
C
C  CHECK IF MAT AREA PARAMETERS NEED TO BE UPDATED
      IF (MATFLG.EQ.1) GO TO 400
      CALL SUBSTR (BTID,1,8,TID,1)
      GO TO 110
C
C  READ MAT AREA PARAMETERS
100   CALL UREPET (' ',TID,8)
110   IPRERR=0
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,570) TID,IPTR1
         CALL SULINE (IOSDBG,1)
         ENDIF
      CALL SRMAT (ITVER,TID,DESC,CENTRD,BASNID,IWT,POWER,
     *   IDIM,NTEMP,SWORK(ID1),SWORK(ID3),SWORK(ID2),UNUSED,LARRAY,
     *   ARRAY,IPTR1,IPRERR,IPTRN1,IERR)
      IF (IERR.EQ.2.AND.NAREA.EQ.0) GO TO 420
      IF (IERR.EQ.6) GO TO 420
      IF (IERR.EQ.0) GO TO 120
         CALL SRPPST (TID,'MAT ',IPTR1,LARRAY,0,IPTRN1,IERR)
         WRITE (LP,580) 'MAT',IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
C
120   IBSNID=0
      IF (INWFLG(10).EQ.1) GO TO 130
      IF (IWT.NE.2) GO TO 140
C
C  CHECK IF BASIN BOUNDARY IDENTIFIER USED
130   IF (BASNID(1).NE.BLNK.OR.BASNID(2).NE.BLNK) IBSNID=1
      IF (IBSNID.EQ.0) GO TO 140
      IPTR3=0
      CALL SRBASN (ARRAY,LARRAY,IBVER,BASNID,BDESC,SWORK(ID5),
     *   SWORK(ID6),IDIM,NBPTS,AREA,CAREA,ELEV,BCNTRD(1),BCNTRD(2),
     *   MAPFLG,MATFLG,BPID,BTID,BPXID,
     *   IDIM,NSEGS,SWORK(ID7),SWORK(ID8),SWORK(ID9),LFACTR,
     *   IPTR3,IPTRN3,IPRERR,IERR)
      IF (IERR.EQ.0) GO TO 140
         CALL SRPPST (BASNID,'BASN',IPTR3,LARRAY,0,IPTRN3,IERR)
         WRITE (LP,580) 'BASN',IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
C
140   IF (IOPMLV.GT.1) THEN
         WRITE (LP,450)
         CALL SULINE (LP,1)
         ENDIF
C
C  CHECK IF PREDETERMINED WEIGHTS BEING USED
      IF (IWT.NE.1) GO TO 150
         IF (IOPMLV.GT.1) THEN
            WRITE (LP,610) TID
            CALL SULINE (LP,1)
            ENDIF
         IF (INDPRE.EQ.1) GO TO 150
         IF (ITSHDR.EQ.1) GO TO 150
         GO TO 400
C
150   IF (LDEBUG.LT.2) GO TO 160
C
C  PRINT MAT AREA PARAMETERS
      CALL SPMAT (IPRNT,UNITS,ITVER,TID,DESC,CENTRD,BASNID,IWT,POWER,
     *   NTEMP,SWORK(ID1),SWORK(ID3),SWORK(ID2),UNUSED,LARRAY,ARRAY,
     *   IERR)
C
C  PRINT BASIN INFORMATION.
      IF (IBSNID.EQ.0) GO TO 160
      IPLOT=0
      IF (IOPPLT.EQ.1) IPLOT=1
      IF (IPLOT.EQ.1) CALL SPBASN (BASNID,BDESC,SWORK(ID5),
     *   SWORK(ID6),NBPTS,AREA,ELEV,CAREA,SWORK(ID7),SWORK(ID8),
     *   SWORK(ID9),NSEGS,BCNTRD(1),BCNTRD(2),
     *   MAPFLG,MATFLG,BPID,BTID,BPXID,UNITS,LFACTR,
     *   SWORK(ID10),SWORK(ID11),SWORK(ID12),SWORK(ID13),IBVER,IPLOT,
     *   SWORK(ID14),IERR)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
160   IUBASN=0
      IF (IBASN.EQ.1) GO TO 190
C
C  CHECK IF BASIN BOUNDARY IDENTIFIER USED
      IF (IBSNID.EQ.0) GO TO 180
C
C  CHECK IF STATION WEIGHTS NEED TO BE UPDATED
      IF (INWFLG(8).GT.0) GO TO 180
      IF (INWFLG(10).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 180
C
C  CHECK IF FORCED RUN
      IF (IOPTN.GT.0.AND.
     *   (OPTN.EQ.'ALL'.OR.OPTN.EQ.'MAT'.OR.OPTN.EQ.'BASN')) GO TO 170
C
C  CHECK IF PARAMETERS UPDATED SINCE BASIN DEFINED OR REDEFINED
      IF (MATFLG.EQ.0) GO TO 170
         WRITE (LP,620) TID
         CALL SULINE (LP,1)
         GO TO 400
C
170   IUBASN=1
C
180   IF (IUBASN.EQ.1) GO TO 190
      IF (INWFLG(8).EQ.0.AND.IALL.EQ.-1.AND.IOPTN.EQ.0) GO TO 400
C
190   IF (LTIMR.EQ.0) GO TO 200
         WRITE (LP,590)
         CALL SULINE (LP,2)
         CALL SUTIMR (LP,ITMELA,ITMTOT)
C
C  CHECK IF PREDETERMINED WEIGHTS BEING USED
200   IF (IWT.NE.1) GO TO 220
C
C  UPDATE PREDETERMINED STATION WEIGHTS
      DO 210 I=1,NTEMP
         IPOS=ID1+I*2-2
         CALL SUBSTR (SWORK(IPOS),1,8,STAID,1)
         CALL SFSCHK (LARRAY,ARRAY,STAID,'TEMP',STACOR,IPPP24,IPPPVR,
     *      IPEA24,IPTM24,NUMERR,IERR)
         IPOS=ID3+I-1
         CALL SFCONV (SWORK(IPOS),IPTM24,1)
210      CONTINUE
         GO TO 230
C
C  UPDATE NON-PREDETERMINED STATION WEIGHTS
220   IPARM=3
      ITYPE=IWT
      IF (IWT.EQ.2) ITYPE=1
      NPAIR=1
      ILLGD=1
      CALL SBLLGD (CENTRD(2),CENTRD(1),NPAIR,FLTLN(1),FLTLN(2),ILLGD,
     *   IERR)
      CALL SFWGHT (IRTYPE,TID,IPARM,ITYPE,NSEGS,LFACTR,SWORK(ID7),
     *   SWORK(ID8),SWORK(ID9),IDIM,FLTLN(1),FLTLN(2),POWER,STMNWT,
     *   NTEMP,SWORK(ID1),SWORK(ID2),SWORK(ID3),SWORK(ID4),IERR)
      IF (IERR.GT.0) GO TO 410
C
230   IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,630)
         CALL SULINE (IOSDBG,2)
         WRITE (IOSDBG,640)
         CALL SULINE (IOSDBG,2)
         DO 240 I=1,NTEMP
            IPOS=ID3+I-1
            CALL SFCONV (IVALUE,SWORK(IPOS),1)
            WRITE (IOSDBG,650) (SWORK(ID1+I*2-3+J),J=1,2),
     *         SWORK(ID2+I-1),IVALUE
            CALL SULINE (IOSDBG,1)
240         CONTINUE
         ENDIF
C
      IF (LTIMR.GT.0) THEN
         WRITE (LP,600)
         CALL SULINE (LP,2)
         CALL SUTIMR (LP,ITMELA,ITMTOT)
         ENDIF
C
C  CHECK IF MAP AREA CENTROID NEEDS TO BE UPDATED IN TIME SERIES HEADER
      ICNTRD=0
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,660) ITSHDR,IBSNID
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (ITSHDR.EQ.1) GO TO 270
C
C  CHECK IF MAT AREA CENTROID NEEDS TO BE UPDATED DUE TO BASIN BOUNDARY
C  CHANGE
      IF (INWFLG(10).EQ.0) GO TO 310
C
C  CHECK IF MAT AREA HAS BASIN BOUNDARY
270   IF (IBSNID.EQ.1) GO TO 280
         IF (ITSHDR.EQ.1) GO TO 300
         GO TO 310
C
C  CONVERT BASIN CENTROID FROM GRID COORDINATES TO LAT/LON
280   NPAIR=1
      ILLGD=0
      CALL SBLLGD (CENNEW(2),CENNEW(1),NPAIR,BCNTRD(1),BCNTRD(2),ILLGD,
     *   IERR)
      IF (IERR.GT.0) GO TO 310
C
C  CHECK IF CENTRIOD HAS CHANGED
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,670) CENNEW
         CALL SULINE (IOSDBG,1)
         WRITE (IOSDBG,680) CENTRD
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (ITSHDR.EQ.1) GO TO 290
      IF (CENTRD(1).EQ.CENNEW(1).AND.CENTRD(2).EQ.CENNEW(2)) GO TO 310
290   CENTRD(1)=CENNEW(1)
      CENTRD(2)=CENNEW(2)
300   ICNTRD=1
C
C  UPDATE MAT PARAMETERS
310   WDISP='OLD'
      NSPACE=0
      CALL SWMAT (ITVER,TID,DESC,CENTRD,BASNID,IWT,POWER,
     *   NTEMP,SWORK(ID1),SWORK(ID3),SWORK(ID2),UNUSED,LARRAY,ARRAY,
     *   INPTR1,WDISP,NSPACE,IERR)
      IF (IERR.GT.0) GO TO 410
C
C  CHECK IF BASIN BOUNDAY IDENTIFIER USED
      IF (IBSNID.EQ.1) GO TO 320
         IF (ITSHDR.EQ.1) GO TO 340
         GO TO 360
C
C  CHECK IF BASIN BOUNDARY CHANGED SINCE AREA DEFINITION LAST UPDATED
320   IF (MATFLG.EQ.0) GO TO 330
         IF (ITSHDR.EQ.1) GO TO 340
         GO TO 360
C
C  SET MAT UPDATE INDICATOR
330   MATFLG=1
      CALL SWBASN (ARRAY,LARRAY,IBVER,BASNID,BDESC,SWORK(ID5),
     *   SWORK(ID6),NBPTS,AREA,CAREA,ELEV,BCNTRD(1),BCNTRD(2),
     *   MAPFLG,MATFLG,BPID,BTID,BPXID,
     *   NSEGS,SWORK(ID7),SWORK(ID8),SWORK(ID9),LFACTR,
     *   WDISP,NSPACE,IERR)
      IF (IERR.GT.0) GO TO 410
C
C  CHECK IF UPDATING DUE TO BASIN BOUNDARY CHANGES
340   IF (ICNTRD.EQ.0) GO TO 360
C
C  UPDATE TIME SERIES HEADER
      CALL SUDOPN (1,'PRD ',IERR)
      TSUNIT=' '
      TSDESC=' '
      TSFID=' '
      NXBUF=0
      CALL WPRDC (TID,'MAT ',TSUNIT,CENTRD,TSDESC,TSFID,NXBUF,XBUF,
     *   LWKBUF,IWKBUF,IREC,IERR)
      IF (IERR.GT.0) THEN
         IF (IERR.NE.8) THEN
            CALL SWPRST ('WPRDC   ',TID,'MAT',0,TSUNIT,TSFID,LWKBUF,
     *         NXBUF,IERR)
            GO TO 410
            ENDIF
         ENDIF
C
C  CHECK MESSAGE LEVEL VALUE
      IF (IOPMLV.GT.1) THEN
         WRITE (LP,690) TID
         CALL SULINE (LP,1)
         ENDIF
C
      CALL SUDWRT (1,'PRD ',IERR)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
360   IF (LDEBUG.LT.2) GO TO 390
C
C  READ MAT AREA PARAMETERS
      IPRERR=1
      CALL SRMAT (ITVER,TID,DESC,CENTRD,BASNID,IWT,POWER,
     *   IDIM,NTEMP,SWORK(ID1),SWORK(ID3),SWORK(ID2),UNUSED,LARRAY,
     *   ARRAY,INPTR1,IPRERR,IPTRN1,IERR)
      IF (IERR.EQ.0) GO TO 370
         CALL SRPPST (TID,'MAT ',INPTR1,LARRAY,0,IPTRN1,IERR)
         WRITE (LP,580) 'MAT',IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
C
C  PRINT MAT AREA PARAMETERS
370   CALL SPMAT (IPRNT,UNITS,ITVER,TID,DESC,CENTRD,BASNID,IWT,POWER,
     *   NTEMP,SWORK(ID1),SWORK(ID3),SWORK(ID2),UNUSED,LARRAY,ARRAY,
     *   IERR)
C
C  CHECK IF MAT AREA USES THIS BASIN BOUNDARY
      IF (BTID(1).EQ.BLNK.AND.BTID(2).EQ.BLNK) GO TO 390
C
C  READ BASN PARAMETERS
      CALL SRBASN (ARRAY,LARRAY,IBVER,BASNID,BDESC,SWORK(ID5),
     *   SWORK(ID6),IDIM,NBPTS,AREA,CAREA,ELEV,BCNTRD(1),BCNTRD(2),
     *   MAPFLG,MATFLG,BPID,BTID,BPXID,
     *   IDIM,NSEGS,SWORK(ID7),SWORK(ID8),SWORK(ID9),LFACTR,
     *   IPTR3,IPTRN3,IPRERR,IERR)
      IF (IERR.EQ.0) GO TO 380
         CALL SRPPST (BASNID,'BASN',IPTR3,LARRAY,0,IPTRN3,IERR)
         WRITE (LP,580) 'BASN',IERR
         CALL SUERRS (LP,2,NUMERR)
         GO TO 410
C
C  PRINT BASN PARAMETERS
380   IF (IWT.NE.2.AND.IWT.NE.3) GO TO 390
      IPLOT=0
      IF (IOPPLT.EQ.1) IPLOT=1
      IF (IPLOT.EQ.1) THEN
         CALL SPBASN (BASNID,BDESC,SWORK(ID5),
     *      SWORK(ID6),NBPTS,AREA,ELEV,CAREA,SWORK(ID7),SWORK(ID8),
     *      SWORK(ID9),NSEGS,BCNTRD(1),BCNTRD(2),
     *      MAPFLG,MATFLG,BPID,BTID,BPXID,UNITS,LFACTR,
     *      SWORK(ID10),SWORK(ID11),SWORK(ID12),SWORK(ID13),IBVER,IPLOT,
     *      IPLOT,SWORK(ID14),IERR)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
390   NAREA=NAREA+1
C
400   IF (LTIMR.GT.0) CALL SUTIMR (LP,ITMELA,ITMTOT)
C
      IF (IBASN.EQ.0) NPTR=IPTR1
      IF (IBASN.EQ.1) NPTR=IPTR3
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,700) NPTR,LSTREC
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (NPTR.GE.LSTREC) GO TO 420
         IPTR1=IPTRN1
         IPTR3=IPTRN3
         GO TO 70
C
410   ISTAT=1
C
420   WRITE (LP,710) NAREA
      CALL SULINE (LP,2)
C
425   IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,720) ISTAT
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
430   FORMAT (' *** ENTER SNMAT')
440   FORMAT (' IRTYPE=',I2,3X,'IALL=',I2,3X,'IBMDR=',I2,3X,
     *   'IOPTN=',I2,3X,'OPTN=',A4,3X,'LARRAY=',I5,3X,
     *   'STMNWT=',F7.3,3X,'IBASN=',I2,3X,'ITSHDR=',I2)
450   FORMAT (' ')
460   FORMAT ('0*--> FIND 3 CLOSEST MXMN STATIONS PER QUADRANT ',
     *   'FOR MAT AREAS.')
470   FORMAT ('0*--> FIND 3 CLOSEST INST STATIONS PER QUADRANT ',
     *   'FOR MAT AREAS.')
480   FORMAT ('0*--> FIND 3 CLOSEST FMM  STATIONS PER QUADRANT ',
     *   'FOR MAT AREAS.')
490   FORMAT ('0*--> FIND CLOSEST TEMP STATIONS FOR MAT AREAS USING ',
     *   '1/D**POWER STATION WEIGHTS.')
500   FORMAT ('0*--> UPDATE MAT AREA PARAMETERS DUE TO BASIN BOUNDARY ',
     *   'CHANGE.')
510   FORMAT ('0*** NOTE - MINIMUM WEIGHT OF STATIONS TO BE KEPT WHEN ',
     *   'DOING STATION WEIGHTING IS ',F5.3,'.')
520   FORMAT ('0*** NOTE - PARAMETERS WILL BE UPDATED EVEN IF AREA ',
     *   'HAS PREDETERMINED WEIGHTS.')
530   FORMAT ('0*** NOTE - TIME SERIES HEADERS WILL BE UPDATED EVEN ',
     *   'IF BASIN BOUNDARY HAS NOT CHANGED.')
540   FORMAT (' IDXDAT=',I3,3X,'LSTREC=',I5)
550   FORMAT ('0*** ERROR - PARAMETER TYPE ',A4,' NOT FOUND IN ',
     *   'THE PREPROCESSOR PARAMETRIC DATA BASE.')
560   FORMAT (' BASNID=',2A4,3X,'BTID=',2A4,'MATFLG=',I2,3X,
     *   'IPTR3=',I5,3X,'IPTRN3=',I5)
570   FORMAT (' TID=',2A4,3X,'IPTR1=',I5)
580   FORMAT ('0*** ERROR - IN SNMAT - UNSUCCESSFUL CALL TO SR',A4,
     *   '. STATUS CODE=',I2)
590   FORMAT ('0CPU TIME USED BEFORE UPDATING STATION WEIGHTS')
600   FORMAT ('0CPU TIME USED BEFORE UPDATING PARAMETERS')
610   FORMAT (' *** NOTE - MAT  AREA ',2A4,' HAS PREDETERMINED ',
     *   'STATION WEIGHTS.')
620   FORMAT (' *** NOTE - MAT  AREA ',2A4,' DOES NOT NEED TO HAVE ',
     *   'PARAMETERS UPDATED BECAUSE BASIN BOUNDARY HAS NOT CHANGED.')
630   FORMAT ('0CONTENTS OF NETWORK ARRAYS FOR 5 CLOSEST TEMP ',
     *   'STATIONS')
640   FORMAT ('0',T5,'TEMPID  ',4X,'WTMMT',5X,'IPTM24')
650   FORMAT (T5,2A4,3X,F7.4,5X,I5)
660   FORMAT (' ITSHDR=',I2,3X,'IBSNID=',I2)
670   FORMAT (' CENNEW(1)=',F8.4,3X,'CENNEW(2)=',F8.4)
680   FORMAT (' CENTRD(1)=',F8.4,3X,'CENTRD(2)=',F8.4)
690   FORMAT (' *** NOTE - MAT  TIME SERIES HEADER SUCCESSFULLY ',
     *   'UPDATED FOR AREA ',2A4,'.')
700   FORMAT (' NPTR=',I5,3X,'LSTREC=',I5)
710   FORMAT ('0*** NOTE - ',I4,' AREAS WITH MAT PARAMETERS ',
     *   'SUCCESSFULLY PROCESSED.')
720   FORMAT (' *** EXIT SNMAT - ISTAT=',I2)
C
      END
