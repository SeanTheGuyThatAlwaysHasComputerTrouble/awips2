C MODULE SNSTAN
C-----------------------------------------------------------------------
C
C  ROUTINE TO READ ALL STATION GENERAL PARAMETERS AND FILL THE NETWORK
C  COMMON BLOCK.
C
      SUBROUTINE SNSTAN (IRTYPE,LARRAY,ARRAY,ISTAT)
C
      CHARACTER*4 RDISP,UNITS,PARMTP
      CHARACTER*8 PARMID
      REAL*4 BLNK/4H    /
C
      DIMENSION ARRAY(LARRAY)
      DIMENSION STDSNW(1)
C      
      INCLUDE 'scommon/dimstan'
      INCLUDE 'scommon/dimpcpn'
      INCLUDE 'scommon/dimtemp'
C
      INCLUDE 'uiox'
      DIMENSION UNUSED(10)
C
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/sntwfx'
      INCLUDE 'scommon/sntwkx'
C
      EQUIVALENCE (STDSNW(1),STIDNW(1,1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_network/RCS/snstan.f,v $
     . $',                                                             '
     .$Id: snstan.f,v 1.6 2002/02/11 20:55:40 dws Exp $
     . $' /
C    ===================================================================
C
C
C  SET TRACE LEVEL
      CALL SBLTRC ('STAN','NTWKSTAN','SNSTAN  ',LTRACE)
C
      IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,*) 'ENTER SNSTAN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      CALL SBLDBG ('STAN','NTWKSTAN','SNSTAN  ',LDEBUG)
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,420) LARRAY,INWFIL,IRTYPE
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C
C  CHECK FOR VALID RUN TYPE :
C        -1 = NETWORK COMMAND RUN - ALL ARRAYS FILLED
C         1 = NETWORK COMMAND RUN - ONLY THOSE ARRAYS NEEDED FILLED
C         2 = DEFINE  COMMAND RUN
C         3 = ALPHABETICAL ORDER RUN - STATION IDENTIFIER STORED
C         4 = ALPHABETICAL ORDER RUN - STATION DESCRIPTION STORED
      IF (IRTYPE.EQ.-1.OR.IRTYPE.GE.1.AND.IRTYPE.LE.4) GO TO 10
         WRITE (LP,430) IRTYPE
         CALL SUERRS (LP,2,NUMERR)
         ISTAT=1
         GO TO 400
C
C  CHECK IF CURRENT RUN IS FOR DEFINE COMMAND AND LAST RUN WAS FOR
C  NETWORK COMMAND
10    IF (INWTYP.NE.2.AND.IRTYPE.EQ.2) GO TO 20
C
C  CHECK IF NTWK COMMON BLOCK FILLED
      IF (IRTYPE.NE.INWTYP) GO TO 20
      IF (INWFIL.EQ.0) GO TO 20
         IF (INWFIL.GT.0) THEN
            WRITE (LP,440)
            CALL SULINE (LP,2)
            ENDIF
         IF (INWFIL.LT.0) THEN
            WRITE (LP,450)
            CALL SULINE (LP,2)
            ENDIF
         GO TO 360
C
20    IF (ISTAT.GT.0) GO TO 400
C
      INWFIL=0
      INWTYP=0
      INWSRT=0
      NUMSTA=0
      NPP24=0
      NPPVR=0
      NTA24=0
      NTAIN=0
      NTF24=0
      NEA24=0
C
      NUMERR=0
      NUMADD=0
C
      DO 30 I=1,MAXSNW
         STIDNW(1,I)=BLNK
         STIDNW(2,I)=BLNK
         STATNW(I)=BLNK
         CORDNW(1,I)=0
         CORDNW(2,I)=0
         WORKNW(I)=0.0
         SFLGNW(I)=0
         PP24NW(I)=0
         PPVRNW(I)=0
         PCHRNW(I)=0
         TA24NW(I)=0
         TAINNW(I)=0
         TF24NW(I)=0
         ELEVNW(I)=0
         EA24NW(I)=0
         GENLNW(I)=0
         GPANW(I)=0
30       CONTINUE
C
      FLATMX=0.0
      FLATMN=999.
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ NTWK PARAMETERS
      RDISP='OLD'
      CALL SUGTNF (LARRAY,ARRAY,RDISP,NUMERR,IERR)
      IF (IERR.NE.0) THEN
         ISTAT=1
         GO TO 400
         ENDIF
C
      IF (LDEBUG.GT.0) THEN
         CALL SPNTWK (IVNTWK,INWDTE,NNWFLG,INWFLG,UNUSED,IERR)
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      IPTR=0
      IPRERR=1
      RDISP='OLD'
      IPRNT=1
      LEVEL=1
      IPREST=0
C
C  READ STATION GENERAL PARAMETERS
60    CALL UREPET (' ',STAID,8)
      INCLUDE 'scommon/callsrstan'
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,470) STAID,ICSTAN,IPTR,IPTRNX,IERR,
     *      NGPS,(GPS(I),I=1,NGPS)
         CALL SULINE (IOSDBG,1)
         ENDIF
      IPTRN1=IPTRNX
      IF (IERR.NE.0) THEN
         IF (IERR.EQ.6) GO TO 340
         IF (IERR.EQ.2) GO TO 330
         ISTAT=1
         GO TO 400
         ENDIF
C
      IF (LDEBUG.GT.1) THEN
         UNITS='ENGL'
         INCLUDE 'scommon/callspstan'
         ENDIF
C
C  CHECK IF PARAMETER ARRAY COMPLETE
      IF (ICSTAN.EQ.1) THEN
         IF (LDEBUG.GT.0) THEN
            WRITE (IOSDBG,480) ICSTAN,STAID
            CALL SULINE (IOSDBG,1)
            ENDIF
         WRITE (LP,490) STAID
         CALL SULINE (LP,2)
         GO TO 330
         ENDIF
C
C  CHECK IF STATION HAS PCPN, TEMP AND/OR PE
      IPCPN=0
      ITEMP=0
      IPE=0
      DO 100 I=1,NGPS
         IF (GPS(I).EQ.'PCPN') IPCPN=1
         IF (GPS(I).EQ.'TEMP') ITEMP=1
         IF (GPS(I).EQ.'PE') IPE=1
100      CONTINUE
         IF (IPCPN.EQ.0.AND.ITEMP.EQ.0.AND.IPE.EQ.0) THEN
            IF (LDEBUG.EQ.1) THEN
               WRITE (IOSDBG,500) STAID
               CALL SULINE (IOSDBG,1)
               ENDIF
            GO TO 330
            ENDIF
C
      IF (LDEBUG.EQ.1) THEN
         WRITE (IOSDBG,510) STAID,(GPS(I),I=1,NGPS)
         CALL SULINE (IOSDBG,1)
         ENDIF
      NUMSTA=NUMSTA+1
      IF (NUMERR.EQ.0) THEN
         IF (NUMSTA.GT.MAXSNW) THEN
            WRITE (LP,520) MAXSNW
            CALL SUERRS (LP,2,NUMERR)
            ISTAT=2
            INWFIL=-1
            ENDIF
         ENDIF
C
      IF (INWFIL.EQ.-1) THEN
         NUMADD=NUMADD+1
         GO TO 330
         ENDIF
C
      IF (IRTYPE.EQ.4) GO TO 150
C
C  STORE STATION IDENTIFIER
      CALL SUBSTR (STAID,1,8,STIDNW(1,NUMSTA),1)
C
C  STORE STATE
150   CALL SUBSTR (STATE,1,2,STATNW(NUMSTA),1)
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,'(A,I3,A,A4,A,A4)') ' NUMSTA=',NUMSTA,
     *      ' STATE=',STATE,
     *      ' STATNW(NUMSTA)=',STATNW(NUMSTA)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (IRTYPE.EQ.4) GO TO 160
      IF (IRTYPE.EQ.3) GO TO 170
C
C  STORE STATION COORDINATES
      CORDNW(1,NUMSTA)=STACOR(1)*10.+0.5
      CORDNW(2,NUMSTA)=STACOR(2)*10.+0.5
      GO TO 170
C
C  STORE STATION DESCRIPTION
160   IPOS=(NUMSTA-1)*5+1
      CALL SUBSTR (DESCRP,1,20,STDSNW(IPOS),1)
C
C  SET MAXIMUM AND MINIMUM LATITUDE
170   IF (STALOC(1).GT.FLATMX) FLATMX=STALOC(1)
      IF (STALOC(1).LE.FLATMN) FLATMN=STALOC(1)
C
C  STORE RECORD NUMBER OF STATION GENERAL PARAMETERS
      GENLNW(NUMSTA)=IPTR
C
C  STORE STATION GRID-POINT ADDRESS
      IF (NUGPA.GT.0) GPANW(NUMSTA)=NUGPA
C
C  CHECK IF STATION HAS PCPN PARAMETERS
      IF (IPCPN.EQ.0) GO TO 230
C
C  CHECK IF ARRAY LOCATION OF POINTERS IS USED BY ANOTHER STATION
      DO 175 I=1,NUMSTA-1
         IF (IPPP24.EQ.PP24NW(I)) THEN
            IREC=GENLNW(I)
            PARMID=' '
            PARMTP='GENL'
            CALL RPPREC (PARMID,PARMTP,IREC,LARRAY,ARRAY,NFILL,IRECNX,
     *         IERR)
            WRITE (LP,525) 'PP24',IPPP24,STAID,PARMID
            CALL SUWRNS (LP,2,-1)
            ENDIF
175      CONTINUE
C
C  STORE ARRAY LOCATION OF PCPN POINTERS
      PP24NW(NUMSTA)=IPPP24
      IF (IPPP24.GT.0) NPP24=NPP24+1
      PPVRNW(NUMSTA)=IPPPVR
      IF (IPPPVR.GT.0) NPPVR=NPPVR+1
C
C  STORE POINTER TO PRECIPITATION CHARACTERISTICS
      IF (IRTYPE.NE.3) PCHRNW(NUMSTA)=IPCHAR
C
      IF (IRTYPE.EQ.3) GO TO 230
      IF (IRTYPE.EQ.-1.OR.IRTYPE.EQ.2) GO TO 200
      IF (INWFLG(1).EQ.0.AND.INWFLG(2).EQ.0) GO TO 230
C
C  READ PCPN PARAMETERS TO GET NETWORK FLAG
200   IPTR=0
      IREAD=1
      INCLUDE 'scommon/callsrpcpn'
      IF (IERR.NE.0) THEN
         WRITE (LP,460) 'PCPN',STAID,IERR
         CALL SUERRS (LP,2,NUMERR)
         ISTAT=1
         GO TO 400
         ENDIF
      IF (LDEBUG.EQ.1) THEN
         INCLUDE 'scommon/callsppcpn'
         ENDIF
      SFLGNW(NUMSTA)=SFLGNW(NUMSTA)+IPNTWK*10
C
C  CHECK IF STATION IS NOT TO RECEIVE WEIGHT IN MAP AREA
      IF ((IRTYPE.EQ.-1.OR.IRTYPE.EQ.2).AND.IPSWGT.EQ.0) THEN
         PP24NW(NUMSTA)=PP24NW(NUMSTA)+99999
         ENDIF
C
C  CHECK IF SYNTHETIC STATION
      IF (IPPROC.EQ.2.AND.PP24NW(NUMSTA).GT.0) THEN
         PP24NW(NUMSTA)=-1*PP24NW(NUMSTA)
         ENDIF
C
C  CHECK IF STATION HAS TEMP PARAMETERS
230   IF (ITEMP.EQ.0) GO TO 300
C
C  CHECK IF ARRAY LOCATION OF POINTERS IS USED BY ANOTHER STATION
      DO 240 I=1,NUMSTA-1
         IF (IPTM24.EQ.TA24NW(I)) THEN
            IREC=GENLNW(I)
            PARMID=' '
            PARMTP='GENL'
            CALL RPPREC (PARMID,PARMTP,IREC,LARRAY,ARRAY,NFILL,IRECNX,
     *         IERR)
            WRITE (LP,525) 'TM24',IPTM24,STAID,PARMID
            CALL SUWRNS (LP,2,-1)
            ENDIF
240      CONTINUE
C
C  STORE ARRAY LOCATION OF TEMP POINTERS
      TA24NW(NUMSTA)=IPTM24
      IF (IPTM24.GT.0) NTA24=NTA24+1
      IF (IPTAVR.GT.0) NTAIN=NTAIN+1
      IF (IPTF24.GT.0) NTF24=NTF24+1
      IF (IRTYPE.EQ.3) GO TO 260
         TAINNW(NUMSTA)=IPTAVR
         TF24NW(NUMSTA)=IPTF24
         ELEVNW(NUMSTA)=STAELV+.5
C
260   IF (IRTYPE.EQ.3) GO TO 300
      IF (IRTYPE.EQ.-1.OR.IRTYPE.EQ.2) GO TO 270
      IF (INWFLG(3).EQ.0.AND.INWFLG(4).EQ.0.AND.INWFLG(5).EQ.0)
     *   GO TO 300
C
C  READ TEMP PARAMETERS TO GET NETWORK FLAG
270   IPTR=0
      IREAD=1
      INCLUDE 'scommon/callsrtemp'
      IF (IERR.NE.0) THEN
         WRITE (LP,460) 'TEMP',STAID,IERR
         CALL SUERRS (LP,2,NUMERR)
         ISTAT=1
         GO TO 400
         ENDIF
      IF (LDEBUG.EQ.1) THEN
         INCLUDE 'scommon/callsptemp'
         ENDIF
      SFLGNW(NUMSTA)=SFLGNW(NUMSTA)+ITNTWK
C
C  CHECK IF SYNTHETIC STATION
      IF (ITYOBS.EQ.4.AND.TA24NW(NUMSTA).GT.0) THEN
         TA24NW(NUMSTA)=-1*TA24NW(NUMSTA)
         ENDIF
C
C  CHECK IF STATION HAS PE PARAMETERS
300   IF (IPE.EQ.0) GO TO 330
C
C  CHECK IF ARRAY LOCATION OF POINTERS IS USED BY ANOTHER STATION
      DO 305 I=1,NUMSTA-1
         IF (IPEA24.EQ.EA24NW(I)) THEN
            IREC=GENLNW(I)
            PARMID=' '
            PARMTP='GENL'
            CALL RPPREC (PARMID,PARMTP,IREC,LARRAY,ARRAY,NFILL,IRECNX,
     *         IERR)
            WRITE (LP,525) 'EA24',IPEA24,STAID,PARMID
            CALL SUWRNS (LP,2,-1)
            ENDIF
305      CONTINUE
C
C  STORE ARRAY LOCATION OF PE POINTERS
      EA24NW(NUMSTA)=IPEA24
      IF (IPEA24.GT.0) NEA24=NEA24+1
C
330   IF (IPTRN1.GT.0) THEN
         IPTR=IPTRN1
         GO TO 60
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SET NUMBER OF STATIONS PROCESSED
340   IF (INWFIL.EQ.0) THEN
         INWFIL=NUMSTA
         INWTYP=IABS(IRTYPE)
         INWSRT=0
         ENDIF
C
      NUMSTA=NUMSTA-NUMADD
      WRITE (LP,550) NUMSTA,MAXSNW
      CALL SULINE (LP,2)
      WRITE (LP,560) NPP24
      CALL SULINE (LP,1)
      WRITE (LP,570) NPPVR
      CALL SULINE (LP,1)
      WRITE (LP,580) NTA24
      CALL SULINE (LP,1)
      WRITE (LP,590) NTAIN
      CALL SULINE (LP,1)
      WRITE (LP,600) NTF24
      CALL SULINE (LP,1)
      WRITE (LP,610) NEA24
      CALL SULINE (LP,1)
C
      IF (NUMADD.GT.0) THEN
         WRITE (LP,620) NUMADD
         CALL SULINE (LP,2)
         ENDIF
C
360   IF (LDEBUG.GT.0) CALL SUNTWK (IOSDBG)
C
400   IF (LTRACE.GT.0) THEN
         WRITE (IOSDBG,*) 'EXIT SNSTAN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
420   FORMAT (' LARRAY=',I5,3X,'INWFIL=',I2,3X,'IRTYPE=',I2)
430   FORMAT ('0*** ERROR - IN SNSTAN - INVALID VALUE OF RUN TYPE. ',
     *   'IRTYPE=',I3)
440   FORMAT ('0*** NOTE - NETWORK COMMON BLOCK HAS ALREADY BEEN ',
     *   'FILLED.')
450   FORMAT ('0*** NOTE - NETWORK PARAMETER ARRAYS HAVE ALREADY BEEN ',
     *   'FILLED HOWEVER THERE WAS NOT ENOUGH SPACE IN NETWORK ARRAYS ',
     *   'TO STORE THE PARAMETERS FOR ALL STATIONS.')
460   FORMAT ('0*** ERROR - IN SNSTAN - READING ',A4,' PARAMETERS FOR ',
     *   'FOR STATION ',A,'. STATUS CODE=',I3)
470   FORMAT (' STAID=',A,3X,'ICSTAN=',I2,3X,'IPTR=',I4,3X,
     *   'IPTRNX=',I4,3X,'IERR=',I2,3X,'NGPS=',I2,3X,'GPS=',5(A4,1X))
480   FORMAT (' COMPLETE INDICATOR IS ',I2,' FOR STATION ',A)
490   FORMAT ('0*** NOTE - STATION DEFINITION STATUS ',
     *   'FOR STATION ',A,' IS INCOMPLETE.')
500   FORMAT (' STATION ',A,' DOES NOT HAVE PCPN, TEMP OR PE ',
     *   'PARAMETERS')
510   FORMAT (' STATION ',A,' HAS FOLLOWING DATA TYPES : ',5(A4,2X))
520   FORMAT ('0*** ERROR - IN SNSTAN - MAXIMUM NUMBER OF STATIONS ',
     *   'THAN CAN BE PROCESSED BY NETWORK (',I5,') EXCEEDED.')
525   FORMAT ('0*** WARNING - ARRAY LOCATION IN ',A,' POINTER ARRAY (',
     *   I5,') FOR STATION ',A,' IS ALREADY USED BY STATION ',A,'.')
550   FORMAT ('0*** NOTE - PARAMETRIC INFORMATION FOR ',I4,' STATIONS ',
     *   'SUCCESSFULLY STORED IN NETWORK COMMON BLOCK. A MAXIMUM OF ',
     *   I4,' CAN BE STORED.')
560   FORMAT (T13,I4,' STATIONS HAVE 24-HR PCPN DATA')
570   FORMAT (T13,I4,' STATIONS HAVE <24-HR PCPN DATA')
580   FORMAT (T13,I4,' STATIONS HAVE MAX/MIN TEMP DATA')
590   FORMAT (T13,I4,' STATIONS HAVE INST TEMP DATA')
600   FORMAT (T13,I4,' STATIONS HAVE FORECAST TEMP DATA')
610   FORMAT (T13,I4,' STATIONS HAVE PE DATA')
620   FORMAT ('0*** WARNING - ',I3,' ADDITIONAL STATIONS COULD NOT ',
     *   'BE STORED.')
C
      END
