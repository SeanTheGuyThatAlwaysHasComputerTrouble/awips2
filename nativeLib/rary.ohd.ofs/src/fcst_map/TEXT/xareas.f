C MEMBER XAREAS
C  (from old member PPXAREAS)
C
      SUBROUTINE XAREAS(X,MX,IXTYPE,XNAME,NMAP,LAL,LRN,NDUPL,
     1   LDID,LDMO,LDMD,IERR)
C..........................................
C     SUBROUTINE CALLS HCL ROUTINES TO DETERMINE THE TYPE OF
C       MAP RUN TO BE MADE AND THEN OBTAINS THE LIST OF MAP
C       IDENTIFIERS FOR THE RUN.  IF A CARRYOVER GROUP RUN
C       IS BEING MADE, A LIST OF MAP AREAS THAT ARE IN MORE
C       THAN ONE FORCAST GROUP IS ALSO OBTAINED.
C..........................................
C     WRITTEN BY--ERIC ANDERSON,HRL--FEBRUARY 1983
C..........................................
      DIMENSION X(MX),XNAME(2),SNAME(2),XTYPE(2,3),IARGS(40)
      DIMENSION AREAID(2)
C
C     COMMON BLOCKS
      COMMON/PUDBUG/IOPDBG,IPTRCE,NDBUG,PDBUG(20),IPALL
      COMMON/WHERE/ISEG(2),IND,SUB(2)
      COMMON/IONUM/IN,IPR,IPU
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_map/RCS/xareas.f,v $
     . $',                                                             '
     .$Id: xareas.f,v 1.1 1995/09/17 18:59:23 dws Exp $
     . $' /
C    ===================================================================
C
C
C     DATA STATEMENTS
      DATA SNAME/4HXARE,4HAS  /
      DATA XIDS/4HXIDS/
      DATA XTYPE/4HAREA,4H    ,4HFGRO,4HUP  ,4HCGRO,4HUP  /
      DATA BLANK/4H    /
      DATA AMAPS,AMPFO,AMPCO/4HMAPS,4HMPFO,4HMPCO/
      DATA AIDS/4HIDS /
      DATA CGRP/4HCGRP/
C..........................................
C     CHECK TRACE LEVEL
      IF(IPTRCE.GE.1) WRITE(IOPDBG,900)
 900  FORMAT(1H0,17H** XAREAS ENTERED)
C..........................................
C     FILL WHERE COMMON BLOCK.
      IND=-1
      SUB(1)=SNAME(1)
      SUB(2)=SNAME(2)
C.......................................
C     CHECK IF DEBUG ON
      IBUG=0
      IF(IPBUG(XIDS).EQ.1)IBUG=1
C.......................................
C     INITIAL VALUES
      IXTYPE=0
      XNAME(1)=BLANK
      XNAME(2)=BLANK
      NMAP=0
      NDUPL=0
      LAL=0
      LRN=0
      LDID=0
      LDMO=0
      LDMD=0
      IERR=0
C..........................................
C     DETERMINE THE TYPE OF RUN
      DO 40 I=1,3
      CALL HPASTA(XTYPE(1,I),40,IVAL,J,IARGS,ISTAT)
      IF(ISTAT.EQ.0) GO TO 20
      IF(ISTAT.GT.1) GO TO 10
      MAX=1
      IF(I.EQ.1) MAX=10
      WRITE(IPR,901)(XTYPE(I,J),J=1,2),MAX
 901  FORMAT(1H0,10X,68H**WARNING** MORE ARGUMENTS THAN ALLOWED WERE INP
     1UT FOR MAP TECHNIQUE,1X,2A4,
     217H.  MAX ALLOWED IS,I3,/16X,33HONLY NUMBER ALLOWED WILL BE USED.)
      CALL WARN
      GO TO 20
  10  WRITE(IPR,902)(XTYPE(I,J),J=1,2)
 902  FORMAT(1H0,10X,23H**ERROR** HCL TECHNIQUE,1X,2A4,
     11X,15HIS NOT DEFINED.)
      CALL ERROR
      IVAL=0
  20  IF((IVAL.EQ.0).OR.(IVAL.EQ.1)) GO TO 30
      WRITE(IPR,903) IVAL,(XTYPE(I,J),J=1,2)
 903  FORMAT(1H0,10X,22H**WARNING** A VALUE OF,I3,1X,
     125HWAS ENTERED FOR TECHNIQUE,1X,2A4,/16X,
     257HONLY VALUES OF 0 OR 1 ARE ALLOWED.  VALUE IS SET TO ZERO.)
      CALL WARN
      IVAL=0
  30  IF(IVAL.EQ.0) GO TO 40
      IXTYPE=I
       GO TO 50
  40  CONTINUE
      WRITE(IPR,904)
 904  FORMAT(1H0,69H**FATAL ERROR** THE TYPE OF RUN FOR THE MAP FUNCTION
     1 IS NOT SPECIFIED,/6X,
     269HEITHER AREA,FGROUP,OR CGROUP MUST BE SPECIFIED WITH VALID IDENT
     3IFIERS)
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
C..........................................
C     GET ARGUMENTS FOR THE TYPE OF RUN.
  50  IF(IXTYPE.GT.1) GO TO 100
C..........................................
C     AREA RUN--GET NUMBER OF AREAS AND IDENTIFIERS.
      DO 60 I=1,10
      CALL HGTSTR(2,IARGS(1+(I-1)*4),AREAID,J,ISTAT)
      IF(ISTAT.EQ.0) GO TO 55
      WRITE(IPR,905) ISTAT
 905  FORMAT(1H0,10X,78H**ERROR** AN ARGUMENT FOR THE AREA TECHNIQUE CAN
     1NOT BE DECODED--HGTSTR(STATUS=,I2,1H))
      CALL ERROR
      GO TO 60
  55  IF((AREAID(1).EQ.BLANK).AND.(AREAID(2).EQ.BLANK)) GO TO 65
C
C     CHECK IF MAP AREA IS DEFINED
      TYPE=AMAPS
       J=0
      K=NMAP*2+1
      MAX=MX-K+1
      CALL RPPREC(AREAID,TYPE,J,MAX,X(K),NFILL,L,ISTAT)
      IF(ISTAT.EQ.0) GO TO 56
      IF(ISTAT.NE.2) GO TO 70
      WRITE(IPR,906)AREAID
 906  FORMAT(1H0,10X,35H**WARNING** AN MAP AREA IDENTIFIER(,2A4,
     146H) INPUT WITH THE AREA TECHNIQUE DOES NOT EXIST)
      CALL WARN
       GO TO 60
C
C     CHECK IF SPACE AVAILABLE
  56  IF(IBUG.EQ.1)CALL PDUMPA(NFILL,X(K),TYPE,AREAID,1)
      L=(NMAP+1)*3
      K=L-MX
      IF(K.LE.0) GO TO 57
       TYPE=AIDS
      CALL XSPACE(MX,K,TYPE)
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
C
C     STORE IDENTIFIER
  57  NMAP=NMAP+1
      J=(NMAP-1)*2
      X(J+1)=AREAID(1)
      X(J+2)=AREAID(2)
  60  CONTINUE
  65  IF(NMAP.GT.0) GO TO 75
      WRITE(IPR,907)
 907  FORMAT(1H0,75H**FATAL ERROR** NO VALID AREA IDENTIFIERS WERE INPUT
     1 FOR THR AREA TECHNIQUE)
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
  70  CALL PSTRDC(ISTAT,TYPE,AREAID,J,MAX,NFILL)
  71  WRITE(IPR,908)
 908  FORMAT(1H0,40H**FATAL ERROR** THE ABOVE ERROR IS FATAL)
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
  75  LAL=1
      LRN=NMAP*2+1
      DO 76 I=1,NMAP
  76  X(LRN+I-1)=0.01
C
C     CHECK FOR AREA DEBUG
      IF(IBUG.EQ.0) GO TO 99
      J=NMAP*2
      WRITE(IOPDBG,909)IXTYPE,NMAP,LAL,LRN,(X(I),I=1,J)
 909  FORMAT(1H0,28HDEBUG FOR TECH AREA--IXTYPE=,I2,3X,
     15HNMAP=,I2,3X,4HLAL=,I2,3X,4HLRN=,I2,/1X,
     210(2X,2A4))
      GO TO 99
C..........................................
C     FGROUP OR CGROUP RUN--GET IDENTIFIER
 100  CALL HGTSTR(2,IARGS(1),XNAME,J,ISTAT)
      IF(ISTAT.EQ.0) GO TO 110
      WRITE(IPR,910) ISTAT
 910  FORMAT(1H0,97H**FATAL ERROR** THE ARGUMENT FOR THE FGROUP OR CGROU
     1P TECHNIQUE CANNOT BE DECODED--HGTSTR(STATUS=,I2,1H))
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
 110  IF(IXTYPE.EQ.3) GO TO 150
C..........................................
C     FORCAST GROUP RUN--GET IDENTIFIERS AND RECORD NUMBERS
      TYPE=AMPFO
      J=0
       CALL RPPREC(XNAME,TYPE,J,MX,X(1),NFILL,L,ISTAT)
      IF(ISTAT.EQ.0) GO TO 115
      CALL PSTRDC(ISTAT,TYPE,XNAME,J,MX,NFILL)
      GO TO 71
 115  IF(IBUG.EQ.1)CALL PDUMPA(NFILL,X(1),TYPE,XNAME,1)
      NMAP=X(6)
      L=NMAP*3
      DO 116 I=1,L
      J=I+6
 116  X(I)=X(J)
      LAL=1
      LRN=NMAP*2+1
C
C     CHECK FOR FGROUP DEBUG
      IF(IBUG.EQ.0) GO TO 99
      J=NMAP*2
      K=J+1
      L=J+NMAP
      WRITE(IOPDBG,911)IXTYPE,XNAME,NMAP,LAL,LRN
 911  FORMAT(1H0,30HDEBUG FOR FGROUP TECH--IXTYPE=,I2,3X,
     16HXNAME=,2A4,3X,5HNMAP=,I3,3X,4HLAL=,I2,3X,4HLRN=,I4,//6X,
     238HIDENTIFIERS FOLLOWED BY RECORD NUMBERS)
      WRITE(IOPDBG,912)(X(I),I=1,J)
  912 FORMAT(1H0,10(2X,2A4))
      WRITE(IOPDBG,913)(X(I),I=K,L)
 913  FORMAT(1H0,10F10.2)
      GO TO 99
C..........................................
C     CARRYOVER GROUP RUN--GET FGROUP,DUPLICATE MAP AREAS,
C       MAP IDENTIFIERS AND RECORD NUMBERS
 150  TYPE=AMPCO
      J=0
      CALL RPPREC(XNAME,TYPE,J,MX,X(1),NFILL,L,ISTAT)
      IF(ISTAT.EQ.0) GO TO 155
      CALL PSTRDC(ISTAT,TYPE,XNAME,J,MX,NFILL)
      GO TO 71
 155  IF (IBUG.EQ.1) CALL PDUMPA(NFILL,X(1),TYPE,XNAME,1)
      NFG=X(6)
      NDUPL=X(7)
      MAX=0
      DO 156 I=1,NFG
      J=(I-1)*3
      L=(I-1)*3+7
      X(J+1)=X(L+1)
      X(J+2)=X(L+2)
      X(J+3)=X(L+3)
      K=X(L+3)
      NMAP=NMAP+K
      IF(K.GT.MAX)MAX=K
 156  CONTINUE
C
C     COMPUTE SPACE NEEDED TO INPUT AND STORE CGROUP INFORMATION
      L=NFG*3+4*NDUPL+3*NMAP+3*MAX+6
      K=L-MX
      IF(K.LE.0) GO TO 160
      CALL XSPACE(MX,K,TYPE)
      CALL KILLFN(8HMAP     )
      IERR=1
      GO TO 99
C
C     MOVE DUPLICATE IDENTIFIERS AND SET UP EXTRA SPACE.
 160  IF(NDUPL.EQ.0) GO TO 165
      LDID=NFG*3+1
      L=7+NFG*3
      DO 161 I=1,NDUPL
      J=LDID+(I-1)*2-1
      K=L+(I-1)*2
      X(J+1)=X(K+1)
      X(J+2)=X(K+2)
 161  CONTINUE
      LDMO=LDID+NDUPL*2
      LDMD=LDMO+NDUPL
      DO 162 I=1,NDUPL
      X(LDMO+I-1)=0.01
 162  X(LDMD+I-1)=0.01
C
C     READ EACH FGROUP AND BUILD LIST OF IDENTIFIERS AND RECORD NUMBERS
 165  LAL=3*NFG+4*NDUPL+1
      LRN=LAL+2*NMAP
      L=LRN+NMAP
      N=0
      TYPE=AMPFO
       MAX=MX-L+1
      DO 170 I=1,NFG
      J=(I-1)*3
      AREAID(1)=X(J+1)
      AREAID(2)=X(J+2)
      J=0
      CALL RPPREC(AREAID,TYPE,J,MAX,X(L),NFILL,K,ISTAT)
      IF(ISTAT.EQ.0) GO TO 171
      CALL PSTRDC(ISTAT,TYPE,AREAID,J,MAX,NFILL)
      GO TO 71
 171  IF(IBUG.EQ.1) CALL PDUMPA(NFILL,X(L),TYPE,AREAID,1)
      NA=X(L+5)
      DO 172 M=1,NA
      J=LAL+N*2
      K=L+6+(M-1)*2
      JJ=LRN+N
      KK=L+5+2*NA+M
      X(J)=X(K)
      X(J+1)=X(K+1)
      X(JJ)=X(KK)
      N=N+1
 172  CONTINUE
 170  CONTINUE
C
C     CHECK FOR CGROUP DEBUG
      IF(IBUG.EQ.0) GO TO 99
      NFILL=L-1
      TYPE=CGRP
      WRITE(IOPDBG,914)IXTYPE,XNAME,NMAP,NDUPL,LAL,LRN,
     1LDID,LDMO,LDMD
 914  FORMAT(1H0,30HDEBUG FOR CGROUP TECH--IXTYPE=,I2,3X,
     16HXNAME=,2A4,3X,5HNMAP=,I4,3X,6HNDUPL=,I3,3X,
     24HLAL=,I4,3X,4HLRN=,I4,3X,5HLDID=,I3,3X,
     35HLDMO=,I3,3X,5HLDMD=,I3)
      CALL PDUMPA(NFILL,X(1),TYPE,XNAME,1)
C..........................................
  99  IF(IPTRCE.GE.1) WRITE(IOPDBG,915)
 915  FORMAT(1H0,14H** EXIT XAREAS)
      RETURN
      END
