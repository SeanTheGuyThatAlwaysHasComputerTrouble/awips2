C$PRAGMA C (UDATL)
C MEMBER XMPLOT
C
C DESC CREATES AN AFOS GRAPHICS PRODUCT FOR MAP
C
      SUBROUTINE XMPLOT(WORKR,LWR,IPLTOP,LUTMP)
C
C
C THIS ROUTINE WILL CREATE AN AFOS GRAPHIC PRODUCT FOR MAP.
C THE PLOT IS OF THE 24 HOUR PRECIP VALUES FOR EACH STATION.
C
C BY ED VANBLARGAN - HRL - SEP.,1980
C
C NOTES:
C - ONLY NON-ZERO VALUES ARE PLOTTED
C - OPTION EXISTS FOR PLOTTING OBSERVED ONLY OR BOTH OBSERVED AND
C   ESTIMATED
C - DATA ARE ACTUALLY SCREENED PREVIOUSLY (BY MAP) FOR ABOVE
C   TWO ITEMS
C - 3 PIECES OF DATA(24-HR VALUES, 8-CHAR ID, 1-CHAR CODE OF
C   HOW PRECIP DERIVED) ARE PLOTTED ACCORDING TO FOLLOWING ZOOMS:
C  1. 1:1 ZOOM = PRECIP VALUES W/ CODES FOR 6-HR STATIONS
C  2. 4:1      = 1. PLUS 24-HR STATION VALUES FOR OBSERVED ONLY
C  3. 9:1      = 2. PLUS 24-HR VALUES FOR ESTIMATED W/CODES
C  4. 16:1      = 3. PLUS ID'S FOR ALL STATIONS
C
C SIZE OF GRAPHIC:
C   EACH STATION USES UP TO 14 WORDS(28BYTES) DUE TO
C         3+3=6 WORDS FOR EACH VALUE
C         3+4+1=8 WORDS FOR THE ID
C   WITH 8192 WORDS AVAILABLE, THEN CAN FIT
C         585 STATIONS IF ID IS A8 AND PRECIP GT 10.00
C         630     "    "   "  " A6 OR  PRECIP LT  9.9
C
C ARGUMENT LIST:
C WORKR  R*4 INPUT  WORK SPACE ARRAY
C LWR     I  INPUT  LENGTH OF WORKR
C IPLTOP  I  INPUT  PLOT OPTION (NOT REALLY USED CURRENTLY)
C                    =0, NO ESTIMATED
C                    =1, INCL. ESTIMATED
C LUTMP   I  INPUT  LOGICAL UNIT NUMBER OF TEMPORARY SCRATCH FILE
C                   CONTANING DATA
C
C ** INPUT DATA **
C THE DATA IS HELD ON A TEMPORARY FILE (WRITTEN IN BINARY) WITH THE
C FOLLOWING VARIABLES FOR EACH STATION:
C PP24  I*2 PRECIP (24 HR VALUE) IN HUNDREDS OF INCH
C              NOTE, IF =-1, INDICATES START OF NEW DAY
C                       =-9,     "     END OF FILE
C IND   I*4 TYPE OF STATION INDICATOR
C             =24 FOR 24 HR STATION
C             =6  FOR 6 HR STATION
C           IF PP24=-1 THEN IND= ENDING INTERNAL JULIAN HOUR OF
C           THE DAY OR PARTIAL DAY
C XLAT  R*4 LATITUDE (DEGREES DECIMAL)
C XLON  R*4 LONGITUDE
C PCODE R*4 PRECIP ESTIMATION TYPE CODE (A1)
C             C=CORECTION FACTOR APPLIED
C             Z=SET TO ZERO
C             M=ESTIMATED FROM MDR
C             E=ESTIMATED FROM SURROUNDING STATIONS)
C ID     A8 STATION IDENTIFIER
C
C INTERNAL VARIABLES USED
C NAME   TYPE   DIM  DESC
C ----   ----   ---  ------------------------------
C NSTN    I      1   NUMBER OF STATIONS PLOTTED (IE,NON-ZERO PRECIP) ON
C                    A GIVEN DAY
C XXXX    I      1   ZZZZ
C
C
C
C
      LOGICAL*1 LTITLE(46),LLEGND(144),LFF,LID(8),NCTEXT(5),
     $ NAFOS(9),LPCODE(4),LTITL2(27),LLGND2(34)
      INTEGER*2 PP24
      DOUBLE PRECISION ITITLE(4),ILEGND(18),ILGND2
      INTEGER*2 LFFTRY
      DIMENSION ID(2),SUBNAM(2),OLDSUB(2),WORKR(1),
     $ ITITL2(4),INTIME(6)


      EQUIVALENCE (LLEGND(1),ILEGND(1))
      EQUIVALENCE (LLGND2(1),ILGND2)
      EQUIVALENCE (LTITLE(9),ITITLE(1))
      EQUIVALENCE (LPCODE(1),PCODE)
      EQUIVALENCE (LID(1),ID(1))
      EQUIVALENCE (LTITL2(1),ITITL2(1))
      EQUIVALENCE (LFF,LFFTRY)

      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/where'
      INCLUDE 'common/xtime'
      COMMON/AGIONU/INAG,IPRAG,IPUAG,IOBGAG,IBUGAG
      COMMON/AGGPIN/IMAX,JMAX,IDAAG,MO,IYEAR,ITIME,NCALLS
C

C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_map/RCS/xmplot.f,v $
     . $',                                                             '
     .$Id: xmplot.f,v 1.3 2002/02/11 20:30:04 dws Exp $
     . $' /
C    ===================================================================
C
      DATA UCODE,SUBNAM/4HUSER,4HXMPL,4HOT  /,
     $     IBLANK,BLANK/4H    ,4H    /,
     $     AM,AE       /4HM   ,4HE   /,
     $     DCODE       /4HXPLT/,
     $     LTITLE(42)/1H /

      DATA LFFTRY / 3084 /
C                   3084 IS 0000-1100-0000-1100 OR 12 IN EACH BYTE
      ITITLE(1) = 8H 24HR PR
      ITITLE(2) = 8HECIP END
      ITITLE(3) = 8HING 00/0
      ITITLE(4) = 8H0/00 HR0
      DATA ILEGND/8H1 CHAR C,8HODES AFT,8HER PRECI,8HP ARE:  ,
     $            8HC=CORREC,8HTED M=MD,8HR EST. E,8H=EST. FR,
     $            8HOM NEARB,8HY GAGES ,
     $            8HG=EST. F,8HROM COLO,8HCATED GA,8HGE  STAT,
     $            8HION LOCA,8HTED AT L,8HOWER LEF,8HT       /
      ITITL2(1) = 4HCREA
      ITITL2(2) = 4HTION
      ITITL2(3) = 4H TIM
      ITITL2(4) = 4HE
      DATA LTITL2(17),LTITL2(20),LTITL2(23)/1H/,1H/,1H-/
      ILGND2 = 8HPCP AREA
      DATA LLGND2(9),LLGND2(15),LLGND2(21),LLGND2(28)/
     $ 1H ,1H-,1H ,1H-/
      DATA NAFOS/1HN,1HM,1HC,1HG,1HP,1HH,1HY,1HP,1HP/
C
C SET /WHERE/ INFO AND DEBUG CODES
C
      DO 100 I=1,2
      OLDSUB(I)=OPNAME(I)
100   OPNAME(I)=SUBNAM(I)
      IOLDOP=IOPNUM
      IOPNUM=-1
C
      IBUGAG=IPBUG(DCODE)
      IF (IPTRCE.GE.1) WRITE(IOPDBG,890)
      ITRACE=IPTRCE
C
C INITIALIZE VARIABLES
C
      CALL UMEMOV(TZCODE,LTITLE(43),1)
      INAG=IN
      IPRAG=IPR
      IPUAG=IPU
      IOBGAG=IOPDBG
      ID(1)=IBLANK
      ID(2)=IBLANK
      TYPE=UCODE
      IPTR=0
      NSTN=0
C ADJUST SCREEN LIMITS IMAX,JMAX TO BE ILIM,JLIM.
C SET ILIM=IMAX-(4*9)*8 SINCE THERE ARE 8 CHARACTERS
C POSSIBLE TO THE RIGHT OF IX AND EACH CHAR TAKES UP 36 PIXELS.
C ALSO SET JLIM=JMAX-(4*11)*2 SINCE THERE ARE 2 LINES
C POSSIBLE(PRECIP AND ID) ABOVE IY.
      ILIM=IMAX-4*9*8
      JLIM=JMAX-4*11*2
C INCLUDE DECIMAL 12 INTO LEGEND WHICH IS GRAPHIC CODE
C FOR A LINE FEED(LFF).
      LLEGND(32)=LFF
      LLEGND(44)=LFF
      LLEGND(55)=LFF
      LLEGND(80)=LFF
      LLEGND(107)=LFF
      LLEGND(108)=LFF
      DEGRAD=0.017453
C
C GET LAT/LON LIMITS AND CALL POLAR TO SET CONVERSION FACTORS TO PUT
C LAT/LON INTO AFOS SCREEN COORIDINATES USING POLAR STEREO PROJECTION.
C GET LAT/LON WINDOW FROM PPPDB.
C
      CALL RPPREC(ID,TYPE,IPTR,LWR,WORKR,NFILL,IDUM,IER)
      IF (IER.EQ.0) GO TO 200
      CALL PSTRDC(IER,TYPE,ID,IPTR,LWR,NFILL)
      GO TO 990
200   XNLAT=WORKR(10)
      XSLAT=WORKR(11)
      XELON=WORKR(12)
      XWLON=WORKR(13)
      CALL UMEMOV(WORKR(2),LTITLE,2)
      WRITE(IPR,801) (WORKR(I),I=10,13)
      CALL AGPOLR(XNLAT,XSLAT,XWLON,XELON,ADJ,XA,YA,XB,YB)
C
C READ THE FIRST RECORD OF DATA AND CHECK THAT IT IS THE DATE(PP24=-1)
C OTHERWISE, WRITE WARNING AND KEEP READING RECORDS UNTIL A PP24=-1
C IS FOUND.  IF EOF (PP24=-9) ENCOUNTERED THEN END.
C
300   READ(LUTMP) PP24,IND,XLAT,XLON,PCODE,ID
      IF (PP24.EQ.-1) GO TO 400
      IF (PP24.NE.-9) GO TO 350
      WRITE(IPR,810)
      GO TO 990
350   NSTN=NSTN+1
      IF (NSTN.EQ.1) WRITE(IPR,820)
      CALL WARN
      GO TO 300
C
C COMES HERE FOR A NEW DAY
C
C CONVERT DATE (IND=INTRNL JULIAN HOUR) TO MO/DAY/YR
400   JDA=(IND-1)/24+1
      IHR=IND-((JDA-1)*24)
      CALL MDYH2(JDA,IHR,MO,IDAAG,IYEAR,ITZHR,IDUM,IDUM1,TZCODE)
      IYEAR=MOD(IYEAR,100)
      WRITE(IPR,825) MO,IDAAG,IYEAR
C CONVERT DATE TO CHARACTERS
      CALL UINTCH(MO,2,LTITLE(29),NUSE,IERSUM)
      CALL UINTCH(IDAAG,2,LTITLE(32),NUSE,IER)
      IERSUM=IERSUM+IER
      CALL UINTCH(IYEAR,2,LTITLE(35),NUSE,IER)
      IERSUM=IERSUM+IER
      CALL UINTCH(ITZHR,2,LTITLE(40),NUSE,IER)
      IERSUM=IERSUM+IER
C GET CREATION DATE
      CALL UDATL(INTIME)
      CALL UINTCH(INTIME(3),2,LTITL2(15),NUSE,IERSUM)
      IERSUM=IERSUM+IER
      CALL UINTCH(INTIME(4),2,LTITL2(18),NUSE,IERSUM)
      IERSUM=IERSUM+IER
      IDUM=MOD(INTIME(1),100)
      CALL UINTCH(IDUM,2,LTITL2(21),NUSE,IERSUM)
      IERSUM=IERSUM+IER
      CALL UINTCH(INTIME(5),4,LTITL2(24),NUSE,IERSUM)
      IERSUM=IERSUM+IER
C CONVERT WINDOW TO CHARACTERS
      CALL URELCH(XSLAT,5,LLGND2(10),2,NUSE,IERSUM)
      IERSUM=IERSUM+IER
      CALL URELCH(XNLAT,5,LLGND2(16),2,NUSE,IERSUM)
      IERSUM=IERSUM+IER
      CALL URELCH(XELON,6,LLGND2(22),2,NUSE,IERSUM)
      IERSUM=IERSUM+IER
      CALL URELCH(XWLON,6,LLGND2(29),2,NUSE,IERSUM)
      IERSUM=IERSUM+IER
C CHECK IF THERE WERE ANY CHARACTER CONVERSION ERRORS
      IF (IERSUM.EQ.0) GO TO 450
      WRITE(IPR,830)
      CALL WARN
      IERSUM=0
C CALL AGALFA TO PLOT TITLE AND LEGEND
450   CALL AGALFA(700,2939,LTITLE,45,3,0,0,0,WORKR,WORKR,LWR)
      CALL AGALFA(1200,2860,LTITL2,27,0,0,0,0,WORKR,WORKR,LWR)
      CALL AGALFA(36,644,LLEGND,137,0,0,0,0,WORKR,WORKR,LWR)
      CALL AGALFA(10,15,LLGND2,34,0,3,0,0,WORKR,WORKR,LWR)
      NSTN=0
C
C GO THRU EACH STATION ON THE TEMPORARY FILE UNTIL A NEW DAY OR EOF
C IS ENCOUNTERED. PLOT ONLY STATIONS WITH NON-ZERO PRECIP.
C ACTUALLY CHECK IF PP24 GT 5 SINCE ROUNDING TO NEAREST TENTH.
C ALSO, CHECK PLOT OPTION TO SEE IF ESTIMATED TO BE INCLUDED.
C
500   READ(LUTMP) PP24,IND,XLAT,XLON,PCODE,ID
C.........DEBUG TIME....................................................
      IF (IBUGAG.EQ.1) WRITE(IOPDBG,892) PP24,IND,XLAT,XLON,PCODE,ID
C.......................................................................
      IF (PP24.LT.0) GO TO 700
C CHECK PRECIP LT .05 SINCE IT WILL BE 0 WHEN ROUNDED TO TENTHS
      IF (PP24.LE.5) GO TO 500
C CHECK STATION INDICATOR TO SET ZOOM LEVEL.
510   IZT=0
      IF (IND.EQ.24) IZT=1
      IF (PCODE.EQ.AE .OR. PCODE.EQ.AM) IZT=2
C CONVERT PRECIP TO CHARACTER REPRESENTATION
      PRECIP=PP24/100.
      CALL URELCH(PRECIP,4,NCTEXT,1,NCHAR,IER)
      IERSUM=IERSUM+IER
      IF (IER.NE.0) GO TO 500
C DETERMINE WHERE CHARACTERS START IN NCTEXT .
      LOC=5-NCHAR
C SET LAST SLOT OF NCTEXT EQUAL TO PCODE CHARACTER. IF
C PCODE NOT BLANK INCREASE NCHAR BY 1.
      NCTEXT(5)=LPCODE(1)
      IF (PCODE.NE.BLANK) NCHAR=NCHAR+1
C CONVERT STATION LAT/LON TO AFOS SCREEN COORIDINATES(IX,IY)
      XM=4680.*TAN(0.785369-0.5*XLAT*DEGRAD)
      YM=DEGRAD*(XLON-ADJ)
      IX=XM*COS(YM)*XA-XB
      IY=(-XM*SIN(YM))*YA-YB
C CHECK IF POINT IS OUTSIDE SCREEN LIMITS
      IF (IX.LT.0 .OR. IX.GT.ILIM) GO TO 500
      IF (IY.LT.0 .OR. IY.GT.JLIM) GO TO 500
C CALL GRAPHICS ROUTINE TWICE...ONCE FOR PRECIP VALUE, THEN FOR ID.
      CALL AGALFA(IX,IY,NCTEXT(LOC),NCHAR,0,IZT,0,0,WORKR,WORKR,LWR)
      CALL AGALFA(IX,IY,ID,8,0,3,0,11,WORKR,WORKR,LWR)
C INCREMENT NSTN AND GO BACK AND READ NEXT STATION
      NSTN=NSTN+1
      GO TO 500
C
C COMES HERE FOR PP24=NEGATIVE...THUS HAVE NEW DAY OR EOF.
C CHECK NSTN (NUMBER OF OBS), IF =0 THEN PRINT NOTE TO THAT EFFECT...
C IF NSTN GT 0 THEN CALL UTF TO SEND GRAPHIC TO PUNCH STREAM.
C
700   IF (IERSUM.NE.0) WRITE(IPR,845)
      IF (NSTN.NE.0) GO TO 710
C NO OBS
      NCALLS=0
      WRITE(IPR,840)
      GO TO 720
C HAVE OBS
710   CALL AGUTF(NAFOS,1,IDUM,WORKR)
      WRITE(IPR,850) NAFOS
C CHECK IF WE HAVE EOF OR NEW DAY
720   IF (PP24.EQ.-1) GO TO 400
C
C DONE
990   IOPNUM=IOLDOP
      DO 995 I=1,2
995   OPNAME(I)=OLDSUB(I)
      RETURN
C
C............FORMATS....................................................
C
801   FORMAT(1H1,40H** NOW CREATING MAP PLOT FOR AFOS IN THE,
     $ 24H FORM OF A PUNCH STREAM.
     $ / 5X,15HLAT-LON LIMITS=,F6.2,1H-,F6.2,4H AND,F7.2,1H-,F7.2)
810   FORMAT(1H0,45H**NOTE** NO DATA AVAILABLE FOR AFOS MAP PLOT.)
820   FORMAT(1H0,10X,47H**WARNING** DATE WAS NOT FOUND IN FIRST RECORD.,
     $ 42H DATA WILL BE SKIPPED UNTIL DATE IS FOUND.)
825   FORMAT(1H0,27H** BEGINNING PROCESSING FOR,I3,1H/,I2,1H/,I2)
830   FORMAT(1H0,10X,40H**WARNING** DATE COULD NOT BE CONVERTED ,
     $ 14HTO CHARACTERS.)
840   FORMAT(1H0,44H**NOTE** EITHER NO PRECIP OR ALL PRECIP LESS,
     $ 40H THAN 0.06 INCHES; THUS NO PLOT CREATED.)
845   FORMAT(10X,40H**NOTE** THERE WERE ERRORS IN PRECIP TO ,
     $ 21HCHARACTER CONVERSION.)
850   FORMAT(1H0,37HPLOT WAS CREATED UNDER AFOS FILENAME ,9A1)
890   FORMAT(1H0,22H  ** XMPLOT ENTERED **)
892   FORMAT(1X,5HDATA=,I5,I3,2F7.2,1X,A1,1X,2A4)
C
C.......................................................................
C
      END
