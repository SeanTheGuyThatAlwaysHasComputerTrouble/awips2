C MODULE XCNTRL
C-----------------------------------------------------------------------
C
      SUBROUTINE XCNTRL
C
C  THIS IS THE MAIN CONTROL ROUTINE FOR THE OFS MAP FUNCTION.
C  VALUES FOR ALL UNIVERSAL TECHNIQUES EXCEPT FOR THE TYPE OF 
C  RUN ARE GOTTEN PREVIOUSLY IN THE MAIN ROUTINE FOR THE FUNCTION.
C  
C  INITIALLY WRITTEN BY - ERIC ANDERSON HRL 12/1983
C
      CHARACTER*8 RTNNAM/'XCNTRL'/
      CHARACTER*8 PARMID
      DIMENSION UNUSED(2)
      DIMENSION BLNK8(2)
      INTEGER*2 MSNG24,MSNG6,MSGMDR,MSNGSR,IPI
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/x'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/where'
      INCLUDE 'prdcommon/pdatas' 
      COMMON /HDFLTS/ XHCL(2),LINPTZ,YHCL(18),LCLHCL,LTZHCL,NPDHCL,
     1   NCAHCL
      COMMON /FCTIME/I ZDA,IJHRUN,LZDA,LJHRUN,LZDOBS,LJHOBS,NOW(5),
     1   LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IZHHDA
      COMMON /XOPT/ IXTYPE,XNAME(2),IESTPX,ICONVC,CNVDIS,CVDISW,NOEST6,
     1   IUSESR,PPUSER(2),IMOSUM,IMOWTR,IWTEST
      COMMON /XOPT2/ ICKTIM,ICKMAX,PPMAX,NPLT24,IXFUT(6)
      COMMON /XMDR/ MDRSTA,ICTMDR,MDRST6,ICMDR,NCMDR,IRMDR,NRMDR,
     1   NMDR,MDR,MDRNUV
      COMMON /XDISPL/ MDRPRT,MDRCOM,IPRT24,IPLT24,IPRT6,IPRSSR,
     1   IPRSRW,MAPPRT,METRIC,LASTDY,IPRDAY,IPLTMP
      COMMON /XSIZE/ NMAP,NDUPL,NSLT24,NSLOT6,LDATA6,LMDR,LPPSR,MSNG24,
     1   MSNG6,MSGMDR,MSNGSR,NRECTP,MXTEMP,SMALL
      COMMON /XTIME/ KZDA,KDA,KHR,LSTMO,KMO,KID,KYR,KIH,TZCODE,ISW,
     1   IUTMP,NSSR,IDAY
      COMMON /XALPHA/ IOP24,NOP24,LOP24,IOPVR,NOPVR,LOPVR
      COMMON /XCPU/ ICKCPU,ICPU,KCPU
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_map/RCS/xcntrl.f,v $
     . $',                                                             '
     .$Id: xcntrl.f,v 1.4 2002/02/11 20:39:31 dws Exp $
     . $' /
C    ===================================================================
C
C
C     DATA STATEMENTS
      DATA BLNK8/2*4H    /
      DATA PP24,PPVR/4HPP24,4HPPVR/
      DATA CHAR,PPSR/4HCHAR,4HPPSR/
      DATA STBN/4HSTBN/
      DATA YMAP,AMAP/4HXMAP,4HMAP /
      DATA XUSR,XPCB,XTCK/4HXUSR,4HXPCB,4HXTCK/
      DATA XCHR,XSTB,XSSR/4HXCHR,4HXSTB,4HXSSR/
      DATA BLNK1/1H /
C.......................................
C     CHECK TRACE LEVEL
      IF(IPTRCE.GE.1) WRITE(IOPDBG,10)
10    FORMAT (' *** ENTER XCNTRL')
C.......................................
C     FILL WHERE COMMON BLOCK
      IOPNUM=-1
      CALL UMEMOV (RTNNAM,OPNAME,2)     
C.......................................
C     FILL IODBUG AND ITRACE IN /FDBUG/.
      IODBUG=IOPDBG
      ITRACE=IPTRCE
C.......................................
C     CHECK IF DEBUG TURNED ON.
      IBUG=0
      IF (IPBUG(XUSR).EQ.1) IBUG=1
      JBUG=0
      IF (IPBUG(XPCB).EQ.1) JBUG=1
      KBUG=0
      IF (IPBUG(XTCK).EQ.1) KBUG=1
      LBUG=0
      IF (IPBUG(XCHR).EQ.1) LBUG=1
      MBUG=0
      IF (IPBUG(XSTB).EQ.1) MBUG=1
      NBUG=0
      IF (IPBUG(XSSR).EQ.1) NBUG=1
C.......................................
C     INITIAL VALUES
      LBUF=1
      MXTEMP=0
      IPRDAY=1
      IF (LASTDY.EQ.1) IPRDAY=0
      IPLTMP=2
      IPI=-1
      DMZ=0.0
      ISV=0
      IPLOT=IPLT24
      IF (IPLT24.GT.0) REWIND IPLTMP
      IPLT24=0
C.......................................
C     INITIALIZE SOME TIMINGS VALUES.
      LOCAL=LCLHCL
      NLSTZ=LTZHCL
      IZHHDA=LOCAL-(NLSTZ)
      IF(IZHHDA.GT.23) IZHHDA=IZHHDA-24
      IF(IZHHDA.LT.0)IZHHDA=IZHHDA+24 
C.......................................    
C  READ 'ORDR' PARAMETERS
      IPTR=0
      PARMID=' '
      CALL RPPREC (PARMID,'ORDR',IPTR,MX,X(1),NFILL,INX,ISTAT)
      IF (ISTAT.NE.0) THEN
         CALL PSTRDC (ISTAT,'ORDR',PARMID,IPTR,MX,NFILL)
         WRITE (IPR,5)
5     FORMAT ('0**WARNING** IN FUN012 - ORDR PARAMETERS NOT ',
     *   'SUCCESSFULLY READ.')
         CALL WARN
         ELSE
            IF (IBUG.EQ.1) CALL PDUMPA (NFILL,X(1),'NTWK',PARMID,1)
            NAMAP=X(7)
            IF (NAMAP.GT.0) THEN
               WRITE (IPR,7) NAMAP
7     FORMAT ('0**WARNING** ',I3,' MAP AREAS HAVE BEEN ADDED SINCE ',
     *   'THE PROGRAM PPINIT COMMAND ORDER WAS RUN.')
               CALL WARN
               ENDIF
         ENDIF
C.......................................
C     READ 'USER' PARAMETERS
      IPTR=0
      PARMID=' '
      CALL RPPREC (PARMID,'USER',IPTR,MX,X(1),NFILL,INX,ISTAT)
      IF( ISTAT.EQ.0) GO TO 30
      CALL PSTRDC (ISTAT,'USER',PARMID,IPTR,MX,NFILL)
         WRITE(IPR,20)
20    FORMAT ('0**ERROR** THE ABOVE ERROR IS FATAL.')
         CALL ERROR
         GO TO 420
30    IF (IBUG.EQ.1) CALL PDUMPA (NFILL,X(1),'USER',PARMID,1)
C
C     CHECK MAP FILE STATUS FLAG.
      ISTAT=X(18)
      IF(ISTAT.EQ.0) GO TO 50
         WRITE(IPR,40)
40    FORMAT ('0**ERROR** THE PARAMETRIC DATA BASE FILES DO ',
     1 'NOT CONTAIN THE INFORMATION NEEDED TO RUN THE MAP FUNCTION.' /
     2 6X,'THE MAP FUNCTION FILE STATUS FLAG IS SET TO INCOMPLETE.')
         CALL ERROR
         GO TO 420
C
C     MOVE NEEDED VALUES FROM USER RECORD AND STORE.
50    PPUSER(1)=X(2)
      PPUSER(2)=X(3)
      IMOSUM=X(4)
      IMOWTR=X(5)
      ICMDR=X(6)
      NCMDR=X(7)
      IRMDR=X(8)
      NRMDR=X(9)
      NMDR=NCMDR*NRMDR
      SMALL=X(23)
C.......................................
C     READ 'NTWK' PARAMETERS
      IPRERR=0
      CALL SRNTWK (MX,X(1),IVNTWK,INWDTE,NNWFLG,INWFLG,
     *   UNUSED,IPRERR,ISTAT)
      IF (ISTAT.NE.0) THEN
         IPTR=0
         PARMID=' '
         CALL RPPREC (PARMID,'NTWK',IPTR,MX,X(1),NFILL,INX,ISTAT)
         CALL PSTRDC (ISTAT,'NTWK',PARMID,IPTR,MX,NFILL)
         WRITE (IPR,20)
         GO TO 420
         ENDIF
      IF (IBUG.EQ.1) THEN
         PARMID=' '
         CALL PDUMPA (NFILL,X(1),'NTWK',PARMID,1)
         ENDIF
C
C  CHECK NETWORK FLAGS
      INTWKF=0
      INTWK=X(7)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(8)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(12)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(13)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(15)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(18)
      IF (INTWK.EQ.1) INTWKF=1
      INTWK=X(19)
      IF (INTWK.EQ.1) INTWKF=1
      IF (INTWKF.EQ.1) THEN
         WRITE(IPR,70)
70    FORMAT ('0**ERROR** ONE OR MORE OF THE MAP RELATED ',
     *   'NETWORK COMPUTATION INDICATORS IS SET.')
         CALL ERROR
         GO TO 420
         ENDIF
C
C.......................................
C     CHECK TIMING VARIABLES.
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXTIMCK  )
      CALL XTIMCK(LINPTZ,IERR)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXTIMCK  )
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      IF(IERR.GT.0) GO TO 420
C.......................................
C     COMPUTE ANY OTHER COMMON BLOCK VALUES NEEDED
      IF(ICONVC.EQ.0) GO TO 90
      IF(CNVDIS.LE.0.003) GO TO 80
      ALAT=(X(10)+X(11))*0.5
      SF=1.866/(1.0+SIN(ALAT*0.01745))
      DGRID=(CNVDIS*1.61*SF)/0.47625
      CVDISW=1.0/(DGRID*DGRID)
      GO TO 90
80    CVDISW=10000.
90    IF (JBUG.EQ.1) CALL XDMPCB(1,1,1,0,0,1,1)
C.......................................
C     GET LIST OF AREAS TO BE RUN.
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXAREAS  )
      CALL XAREAS(X(1),MX,IXTYPE,XNAME,NMAP,LAL,LRN,NDUPL,LDID,
     1LDMO,LDMD,IERR)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXAREAS  )
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      IF (IERR.EQ.1) GO TO 420
      IF (JBUG.EQ.1) CALL XDMPCB(1,0,0,1,0,0,0)
      NX=LRN+NMAP
C.......................................
C     READ ALPHABETICAL ORDER LIST OF STATIONS.
      IF(ICKCPU.EQ.1)CALL XCKCPU(8HBEFORE  ,8HXOLIST  )
      CALL XOLIST(X(NX),NX,MX,IERR)
      IF(ICKCPU.EQ.1)CALL XCKCPU(8HAFTER   ,8HXOLIST  )
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      IF(IERR.EQ.1) GO TO 420
C.......................................
C     ALLOCATE SPACE FOR PRECIPITATION DATA.
C
C     SPACE FOR PP24
      TYPE=PP24
      CALL RPDFIL (TYPE,IZDA,LPNTRS,LDATA,ISTAT)
      IF (ISTAT.EQ.0) GO TO 120
100      WRITE(IPR,110) 'RPDFIL',ISTAT,TYPE
110   FORMAT ('0**ERROR** MAP CANNOT CONTINUE DUE TO ERROR ',
     1   'IN ROUTINE ',A,'. STATUS CODE=',I2,' TYPE=',A4)
         CALL ERROR
         GO TO 420
120   I=(LPNTRS-1)/2+1
      J=(LDATA-1)/2+1
      LD24=NX
      LP24=NX+J
      NX=LP24+I
      K=NX-1-MX
      IF(K.LE.0) GO TO 130
         CALL XSPACE(MX,K,TYPE)
         GO TO 420
130   NSLT24=LDATA
C
C     SPACE FOR PPVR
      TYPE=PPVR
      CALL RPDFIL (TYPE,IZDA,LPNTRS,LDATA,ISTAT)
      IF (ISTAT.EQ.0) GO TO 140
         GO TO 100
140   I=(LPNTRS-1)/2+1
      J=(LDATA-1)/2+1
      LD6=NX
      LP6=NX+J
      NX=LP6+I
      K=NX-1-MX
      IF(K.LE.0) GO TO 150
         CALL XSPACE(MX,K,TYPE)
         GO TO 420
150   NSLOT6=LPNTRS/4
      LDATA6=LDATA
      IF (JBUG.EQ.1) CALL XDMPCB(0,0,0,1,0,0,0)
C.......................................
C     COMPUTE TIMING VARIABLES FOR THE FIRST DAY
      KZDA=IZDA
      IF (KZDA.EQ.LZDOBS) IPRDAY=1
      IDAY=1
      KDA=IDA
      KHR=24
      IF (KDA.EQ.LDA) KHR=LHR
      IF ((LZDOBS-KZDA).LT.NPLT24) IPLT24=IPLOT
      IJHR=(KDA-1)*24+KHR
      IF (IPLT24.GT.0) WRITE(IPLTMP) IPI,IJHR,DMZ,DMZ,BLNK1,BLNK8
      CALL MDYH1(KDA,1,MO,ID,IY,IH,NLSTZ,0,TZC)
      LSTMO=MO
      CALL MDYH1(KDA,KHR,KMO,KID,KYR,KIH,NOUTZ,NOUTDS,TZCODE)
      ISW=1
      IF((LSTMO.GE.IMOSUM).AND.(LSTMO.LT.IMOWTR)) ISW=0
      IUTMP=KZDA-IZDA+70
      IF ((JBUG.EQ.1).OR.(KBUG.EQ.1)) CALL XDMPCB(0,0,0,0,1,0,0)
C.......................................
C     ALLOT  SPACE FOR CHARACTERISTICS AND READ VALUES FOR THE
C          FIRST DAY.
      TYPE=CHAR
      I=(MX-NX+1)*2
      CALL RPPCHR(LSTMO,I,X(NX),NFILL,ISTAT)
      IF(ISTAT.EQ.0) GO TO 190
      IF(ISTAT.EQ.3) GO TO 180
160   WRITE(IPR,170) ISTAT
170   FORMAT ('0**ERROR** MAP CANNOT CONTINUE DUE TO ERROR ',
     1 'ROUTINE RPPCHR. STATUS CODE=',I2)
      CALL ERROR
      GO TO 420
180   K=(NFILL-I-1)/2+1
      CALL XSPACE(MX,K,TYPE)
      GO TO 420
190   K=(NFILL-1)/2+1
      LCH=NX
      NX=NX+K
      NCH=K*2
      IF (LBUG.EQ.0) GO TO 210
      WRITE(IOPDBG,200) LSTMO,NFILL,LCH,NCH
200   FORMAT (1H0,25HCHARACTERISTICS FOR MONTH,I3,5X,I5,1X,6HVALUES,
     1  2I10)
      CALL XCHAR(X(LCH),NFILL)
C.......................................
C     IF MDR CAN BE USED AND DISPLAY REQUESTED, READ STATE BOUNDARIES.
210   LSB=0
      IF(MDR.EQ.0) GO TO 270
      IF(MDRPRT.EQ.0) GO TO 270
      PARMID=' '
      IPTR=0
      K=MX-NX+1
      CALL RPPREC(PARMID,STBN,IPTR,K,X(NX),NFILL,INX,ISTAT)
      IF(ISTAT.EQ.0) GO TO 230
      CALL PSTRDC(ISTAT,STBN,PARMID,IPTR,K,NFILL)
      WRITE(IPR,220)
220   FORMAT('0**WARNING** MDR DISPLAY OPTION TURNED OFF DUE TO ',
     1 'THE PREVIOUS ERROR.')
      CALL WARN
      MDRPRT=0
      GO TO 270
230   IF (MBUG.EQ.1) CALL PDUMPA (NFILL,X(NX),STBN,PARMID,1)
C
C     CHECK STATE BOUNDARY INFORMATION AND SHIFT VALUES.
      I=X(NX+1)
      J=X(NX+3)
      K=X(NX+2)*X(NX+4)
      IF((I.EQ.ICMDR).AND.(J.EQ.IRMDR).AND.(K.EQ.NMDR)) GO TO 250
      WRITE(IPR,240)ICMDR,I,IRMDR,J,NMDR,K
240   FORMAT('0**ERROR** STATE BOUNDARY DEFINITION DOES NOT AGREE ',
     1 'WITH MDR SUBSET DEFINITION. MDR DISPLAY TURNED OFF.' /
     2 16X,14HWESTERN COLUMN,2X,4HMDR=,I5,2X,5HSTBN=,I5 /
     3 16X,12HSOUTHERN ROW,4X,4HMDR=,I5,2X,5HSTBN=,I5 /
     4 16X,11HTOTAL BOXES,5X,4HMDR=,I5,2X,5HSTBN=,I5)
      CALL ERROR
      MDRPRT=0
      GO TO 270
250   DO 260 I=1,NMDR
260   X(NX+I-1)=X(NX+I+6)
      LSB=NX
      NX=NX+NMDR
270   IF (JBUG.EQ.0) GO TO 290
      CALL XDMPCB(1,1,1,1,1,1,1)
      WRITE(IOPDBG,280) LD24,LP24,LD6,LP6,LCH,LSB,NX,MX,LAL,LRN,
     1  LDID,LDMO,LDMD
280   FORMAT(1H0,10HPOINTERS--,13I7)
C.......................................
C     PRINT TITLE PAGE
290   IF (IPLT24.GT.0) GO TO 300
      IF (IPLOT.EQ.0) GO TO 300
      IPLT24=IPLOT
      ISV=1
300   CALL XTITLE(LINPTZ,X(LAL),NMAP,NDUPL)
      IF (ISV.EQ.1) IPLT24=0
C.......................................
C     BEGIN DAILY LOOP
      LWORK=MX-NX+1
310   IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXPPEST  )
      CALL XPPEST(X(LD24),X(LP24),X(LD6),X(LP6),X(LCH),X(LSB),X(LOP24),
     1  X(LOPVR),X(NX),NX,LWORK,IERR)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXPPEST  )
      IOPNUM=-1
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      IF (IERR.EQ.1) GO TO 420
C
C     CHECK IF STRANGER REPORTS WERE READ IN XPPEST, IF NOT READ.
      IF(IUSESR.EQ.1) GO TO 350
      K=NX
      IF(LMDR.GT.0) K=NX+2*NMDR
      TYPE=PPSR
      I=0
      J=0
      JL=(MX-K+1)*2
      CALL RPDDLY(TYPE,KZDA,I,J,X(J),JF,JL,X(K),NFILL,NSSR,MSNGSR,
     1  LBUF,BUF,ISTAT)
      IF ((ISTAT.EQ.6).OR.(NSSR.EQ.0)) GO TO 330
      IF(ISTAT.EQ.0) GO TO 340
      CALL PSTRDD(KZDA,ISTAT,J,JL,TYPE)
      WRITE (IPR,320) KMO,KID,KYR,KIH,TZCODE
320   FORMAT ('0**WARNING** NO STRANGER REPORTS USED FOR THE DAY ',
     1 'ENDING ON ',I3,1H/,I2,1H/,I4,1H-,I2,A4,1X,
     1 'DUE TO PRECEEDING ERROR.')
      CALL WARN
330   NSSR=0
      LPPSR=0
      GO TO 350
340   LPPSR=K
      IF (NBUG.EQ.1) CALL PDMPDY(TYPE,KZDA,MSNGSR,X(J),JF,X(K),NFILL)
C     DECODE STRANGER REPORTS.
      LHRCDE=(KHR/3)
      IF (KHR.EQ.24) LHRCDE=0
      CALL XDPPSR(NSSR,X(LPPSR),MSNGSR,LHRCDE,KHR)
      IF (NBUG.EQ.1) CALL PDMPDY(TYPE,KZDA,MSNGSR,X(J),JF,X(LPPSR),
     1 NFILL)
350   IF (NBUG.EQ.1) CALL XDMPCB(0,0,0,0,1,0,0)
C
C     COMPUTE START AND LENGTH OF WORK SPACE FOR XTEMP.
      K=NX
      IF (LMDR.GT.0) K=K+2*NMDR
      IF (NSSR.GT.0) K=K+(3*NSSR-1)/2+1
      JL=MX-K+1
      IF (JBUG.EQ.1) CALL XDMPCB(0,0,0,1,0,0,0)
C
C     MAKE SURE TEMPORARY FILE IS REWOUND.
      REWIND IUTMP
C
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXTEMP   )
      CALL XTEMP(X(1),X(LAL),X(LRN),X(LDID),X(LDMO),X(LDMD),X(LD24),
     1X(LD6),X(LP6),X(LMDR),X(LPPSR),X(K),K,JL,IERR)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXTEMP   )
      IOPNUM=-1
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      IF (IERR.EQ.1) GO TO 420
      IF (JBUG.EQ.1) CALL XDMPCB(0,0,0,1,0,0,0)
C
C     REWIND TEMPORARY FILE
      REWIND IUTMP
C
C     CHECK IF LAST DAY
      IF(KZDA.EQ.LZDA) GO TO 380
C
C     INCREMENT DAY AND UPDATE VALUES NEEDED.
      KZDA=KZDA+1
      IF (KZDA.EQ.LZDOBS) IPRDAY=1
      IDAY=0
      KDA=KDA+1
      KHR=24
      IF(KDA.EQ.LDA) KHR=LHR
      IF ((LZDOBS-KZDA).LT.NPLT24) IPLT24=IPLOT
      IJHR=(KDA-1)*24+KHR
      IF (IPLT24.GT.0) WRITE(IPLTMP) IPI,IJHR,DMZ,DMZ,BLNK1,BLNK8
      CALL MDYH1(KDA,1,MO,ID,IY,IH,NLSTZ,0,TZC)
      IF(MO.EQ.LSTMO) GO TO 370
      LSTMO=MO
      ISW=1
      IF((LSTMO.GE.IMOSUM).AND.(LSTMO.LT.IMOWTR)) ISW=0
      CALL RPPCHR(LSTMO,NCH,X(LCH),NFILL,ISTAT)
      IF(ISTAT.EQ.0) GO TO 360
      GO TO 160
360   IF (LBUG.EQ.0) GO TO 370
      WRITE(IOPDBG,200) LSTMO,NFILL,LCH,NCH
      CALL XCHAR(X(LCH),NFILL)
370   IUTMP=IUTMP+1
      CALL MDYH1(KDA,KHR,KMO,KID,KYR,KIH,NOUTZ,NOUTDS,TZCODE)
      LPPSR=0
      NSSR=0
      IF ((JBUG.EQ.1).OR.(KBUG.EQ.1)) CALL XDMPCB(0,0,0,0,1,0,0)
      GO TO 310
C     END OF DAILY LOOP
C.......................................
C     PREPARE TO COMPUTE MAP FOR EACH AREA
C         SETUP SPACE FOR MAP TIME SERIES AND TEMPORARY FILE RECORD.
C         ALL SPACE USED DURING DAILY LOOP NO LONGER NEEDED.
380   IF (IPLT24.EQ.0) GO TO 390
      IPI=-9
      IJHR=0
      WRITE(IPLTMP) IPI,IJHR,DMZ,DMZ,BLNK1,BLNK8
      REWIND IPLTMP
390   NX=1
      LDATA=4*(LZDA-IZDA)+LHR/6
      LTS=NX
      NX=NX+LDATA
      LTR=NX
      NX=NX+MXTEMP
      LWB=NX
      J=IPRDMR(AMAP)
      I=(((4*J+22-1)/LRECLT)+1)*LRECLT
      NX=NX+I
      K=NX-1-MX
      IF(K.LE.0) GO TO 400
      TYPE=YMAP
      CALL XSPACE(MX,K,TYPE)
      GO TO 420
400   LWORK=MX-NX+1
C.......................................
C     COMPUTE MAP FOR EACH AREA AND WRITE TO PDB.
      IF (JBUG.EQ.0) GO TO 410
      CALL XDMPCB(1,1,1,1,1,1,1)
      WRITE (IOPDBG,280) LTS,LDATA,LWB,I,LTR,NX,LWORK
410   IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXMAP    )
      CALL XMAP(X(LTS),LDATA,X(LWB),I,X(LTR),X(NX),NX,LWORK,IERR)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXMAP    )
      IOPNUM=-1
      CALL UMEMOV (RTNNAM,OPNAME,2) 
C     FINISHED WITH MAP
C.......................................
C     GENERATE PUNCH STREAM FOR AFOS PLOT.
      IF (IPLT24.EQ.0) GO TO 420
      IPLTOP=IPLT24-1
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HBEFORE  ,8HXMPLOT  )
      CALL XMPLOT(X,MX,IPLTOP,IPLTMP)
      IF (ICKCPU.EQ.1) CALL XCKCPU(8HAFTER   ,8HXMPLOT  )
      IOPNUM=-1
      CALL UMEMOV (RTNNAM,OPNAME,2) 
      REWIND IPLTMP
C.......................................
C     CHECK TRACE LEVEL -- PRINT EXIT
420   IF (IPTRCE.GE.1) WRITE(IOPDBG,430)
430   FORMAT (' *** EXIT XCNTRL')
C
      RETURN
C      
      END
