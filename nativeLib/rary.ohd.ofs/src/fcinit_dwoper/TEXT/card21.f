C MEMBER CARD21
C  (from old member FCPIN21)
C
C                             LAST UPDATE: 02/14/94.14:37:49 BY $WC30JL
C
C
C @PROCESS LVL(77)
      SUBROUTINE CARD21(PO,LEFTP,IUSEP,CO,LEFTC,IUSEC,NCSS1,NRCM1,NRT1,
     1 KU,KD,NB,NCSSS,NWJ,NUMLAD,NQL,NNYQ,NJUN,NSTR,NDIV,NQSL,NBMAX,JN,
     2 NSSS)
C
C           THE FUNCTION OF THIS SUBROUTINE IS TO READ THE INPUT DATA
C           CARDS AND THE FILL THE PO AND CO ARRAYS FOR THE DWOPER
C           OPERATION.
C
C           THIS SUBROUTINE WAS WRITTEN BY:
C           JANICE LEWIS      HRL   NOVEMBER,1982     VERSION NO. 1
C
C             MODIFIED BY JML  FEB 1996   VERSION NO. 1/2
C               RESET L&D POINTER (NLDM) WHEN NO L&D EXIST
C             MODIFIED BY JML  NOV 1997   VERSION NO. 2
C                   ADD OPTION TO BLEND OBS & NOS TIDE FOR COL RIVER
C                   ADD OPTION TO BLEND COM & OBS STAGES
C             MODIFIED BY JML JUN 1998  VERSION NO. 3
C                   ADD OPTION TO ADD U/S CONROL PT FOR L&D
C                   ADD OPTION TO STORE VELOCITY AS OUTPUT T.S.
C
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/IONUM/IN,IPR,IPU
C
      DIMENSION PO(*),CO(*),NCSS1(*),NRCM1(*),NRT1(*),KU(*),KD(*),NB(*)
      DIMENSION NCSSS(*),NWJ(*),NUMLAD(*),NQL(*),NNYQ(*),NJUN(*),NSTR(*)
      DIMENSION NQSL(*),SNAME(2),DMNS(4),STTNAM(2),UNTS(2),NDIV(*)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_dwoper/RCS/card21.f,v $
     . $',                                                             '
     .$Id: card21.f,v 1.9 2001/06/13 13:35:31 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SNAME/4HCARD,4H21  /
      DATA BLANK/4H    /
      DATA DMNS/4HL   ,4HL3/T,4HDLES,4HL/T /
      DATA UNTS/4HM   ,4HINT /
      DATA DUMM/4HDUMM/
C
      CALL FPRBUG(SNAME,1,21,IBUG)
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C               DHF    --  TIME INTERVAL FOR ALL INPUT TIME SERIES
C               DHFO   --  TIME INTERVAL FOR ALL OUTPUT TIME SERIES
C               TM     --  COMPUTATIONAL TIME STEP
C               KITPR  --  INTERVAL AT WHICH INFO WILL BE PRINTED OR
C                          PLOTTED
C
CMGM SET IVER (IF IVER NOT SET TRIES TO READ INCORRECT ITEMS IN RESEGDEF)
      IVER = 3

      READ(IN,6000) DHF,DHFO,TM,KITPR
 6000 FORMAT(3F10.0,I10)
      IF(IBUG.EQ.1) WRITE(IODBUG,6100) DHF,DHFO,TM,KITPR
 6100 FORMAT(1H ,10X,2F10.0,F10.2,I10)
C
      PO(22)=DHF
      PO(103)=DHFO
      PO(40)=TM
      PO(101)=KITPR+0.01
C
C           CHECK TO SEE IF ALL TIME INTERVALS ARE ACCEPTABLE
C
      IDHF=DHF+0.01
      KDHF=DHFO+0.01
      TMPR=TM*KITPR
      ITVL=DHFO/TM+0.0001
      TIM=ITVL*TM
C
      IF(DHFO.GE.TM) GO TO 10
      WRITE(IPR,7000) DHFO,TM
 7000 FORMAT(1H0,10X,45H**ERROR** OUTPUT TIME SERIES INTERVAL ( DHFO=,
     1 F2.0,69H ) MUST BE GREATER THAN OR EQUAL TO THE COMPUTATIONAL TIM
     2E STEP ( TM=,F5.2,3H ).)
      CALL ERROR
      GO TO 20
C
   10 IF(ABS(TIM-DHFO).LT.0.0001) GO TO 20
      WRITE(IPR,7001) DHFO,TM
 7001 FORMAT(1H0,10X,45H**ERROR** OUTPUT TIME SERIES INTERVAL ( DHFO=,
     1 F2.0,63H ) IS NOT AN EVEN MULTIPLE OF THE COMPUTATIONAL TIME STEP
     2 ( TM=,F5.2,3H ).)
      CALL ERROR
C
   20 IF(DHF.LT.TMPR) GO TO 30
      KDHF=DHF/TMPR+0.01
      TDHF=KDHF*TMPR
      IF(ABS(TDHF-DHF).LT.0001) GO TO 40
      WRITE(IPR,7002) DHF,TM,KITPR
 7002 FORMAT(1H0,10X,42H**WARNING** OBSERVED DATA TIME STEP ( DHF=,F2.0,
     1 71H ) IS NOT AN EVEN INCREMENT OF THE TIME STEP FOR PLOTTING COMP
     2UTED DATA/1H ,22X,5H( TM=,F5.2,5X,6HKITPR=,I3,3H );,2X,48HTHEREFOR
     3E THE OBSERVED DATA WILL NOT BE PLOTTED.)
      CALL WARN
      GO TO 40
C
   30 KDHF=TMPR/DHF+0.01
      TDHF=KDHF*DHF
      IF(ABS(TDHF-TMPR).LT.0.0001) GO TO 40
      WRITE(IPR,7002) DHF,TM,KITPR
      CALL WARN
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C               EPSY   -- DEPTH TOLERENCE IN NEWTON ITERATION
C               EPSQ   -- DISCHARGE TOLERENCE IN NEWTON ITERATION
C               EPSQJ  -- DISCHARGE TOLERENCE IN TRIBUTARY ITERATION
C               THETA  -- ACCELERATION FACTOR FOR SOLVING TRIB. PROB.
C               F1     -- WEIGHTING FACTOR
C               XFACT  -- FACTOR TO CONVERT UNITS TO FT FOR LOCATION
C                         OF POINTS ALONG ROUTING REACH
C
C
   40 READ(IN,8020) EPSY,EPSQ,EPSQJ,THETA,F1,XFACT
      IF(IBUG.EQ.1) WRITE(IODBUG,6110) EPSY,EPSQ,EPSQJ,THETA,F1,XFACT
 6110 FORMAT(1H ,10X,F10.4,2F10.2,2F10.4,F10.2)
C
      PO(17)=EPSY
      PO(15)=EPSQ
      PO(16)=EPSQJ
      PO(39)=THETA
      PO(18)=F1
      PO(45)=XFACT
C
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NU     -- INFLOW HYDROGRAPH COMPUTED WHEN SET TO ZERO
C                NCT    -- TYPE OF EXTRAPOLATION USED IN NEWTON ITER-
C                          ATION TO DETERMINE ESTIMATION OF UNKNOWNS
C                          (2 FOR PARABOLIC,ONE FOR LINEAR FOR NONE)
C                ICD    -- EXTRAPOLATION LIMITATION FACTOR
C                NYQD   -- RATING CURVE SWITCH (=0 IF NO RATING CURVE,
C                          >0 IF RATING CURVE DOWNSTREAM)
C                ITMAX  -- MAXIMUM NO. OF ITERATIONS ALLOW IN NEWTON-
C                          RAPHSON ITERATION PROCEDURE.
C                NCML   -- NO. OF SETS OF VALUES IN MANNING'S N TABLE
C                KTERM  -- TERMS IN EQUATION OF MOTION COMPUTED AND
C                          PRINTED WHEN > ZERO
C
      READ(IN,8000) NU,NCT,ICD,NYQD,ITMAX,NCML,KTERM
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) NU,NCT,ICD,NYQD,ITMAX,NCML,KTERM
C
      IF(NU.EQ.0.AND.JN.GT.1) WRITE(IPR,7004) JN
 7004 FORMAT(1H0,10X,89H**ERROR** INFLOW HYDROGRAPH CAN BE GENERATED (NU
     *=0) ON A SINGLE CHANNEL ONLY (JN=1).  JN=,I2,13H NOT ALLOWED.//50X
     *,19HPROGRAM TERMINATED.)
      IF(NU.EQ.0.AND.JN.GT.1) CALL ERROR
      IF(NU.EQ.0.AND.JN.GT.1) GO TO 9000
      PO(35)=NU+0.01
      PO(32)=NCT+0.01
      PO(21)=ICD+0.01
      PO(36)=NYQD+0.01
      IF(ITMAX.GT.0) THEN
          PO(24)=ITMAX+0.01
      ELSE
          PO(24)=ITMAX-0.01
      ENDIF
      PO(29)=NCML+0.01
      PO(28)=KTERM+0.01
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NCS    -- NO. OF VALUES IN TABLE OF TOP WIDTHS VS.
C                          ELEVATIONS
C                NCSS   -- NO. OF VALUES IN TABLE OF TOP WIDTHS OF
C                          STORAGE VS. ELEVATIONS
C                NP     -- AUTOMATIC CALIBRATION USED IF > THAN ZERO
C                KPL    -- PLOT PARAMETER(IF =0 NOTHING IS PLOTTED,IF =1
C                          STAGE HYDROGRAPHS ARE PLOTTED,IF =2 DISCHARGE
C                          HYDROGRAPHS ARE PLOTTED)
C                KPL2   -- PLOT PARAMETER FOR OBSERVED DATA
C                             0 FOR NO OBSERVED DATA
C                             1 FOR OBSERVED DATA
C                             2 FOR BLEND COM & OBS DATA (USE YQCM)
C                             3 FOR BLEND COM & OBS DATA (READ-IN SLICES)
C                JNK    -- WATER SURFACE ELEVATIONS,VELOCITIES,AND
C                          DISCHARGE PRINTED WHEN > ZERO
C                NPEND  -- LAST VALUE IN COMPUTED STAGE HYDROGRAPH
C                          TO BE USED IN STATISTICS NEEDED IN AUTO-
C                          MATIC CALIBRATION OPTION TO DETERMINE
C                          MANNING'S N
C
      READ(IN,8000) NCS,NCSS,NP,KPL,KPL2,JNK,NPEND
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) NCS,NCSS,NP,KPL,KPL2,JNK,
     1 NPEND
C
      PO(30)=NCS+0.01
      PO(31)=NCSS+0.01
      PO(33)=NP+0.01
      PO(27)=KPL+0.01
      PO(100)=KPL2+0.01
      PO(26)=JNK+0.01
      PO(34)=NPEND+0.01
C
      IF(NP.NE.0.AND.NU.EQ.0) WRITE(IPR,7005)
 7005 FORMAT(1H0,10X,95H**ERROR** AUTOMATIC CALIBRATION CANNOT BE USED
     1WHEN THE INFLOW HYDROGRAPH IS GENERATED (NU=0).)
      IF(NP.NE.0.AND.NU.EQ.0) CALL ERROR
C
C
C          STORE IN THE PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NB     -- NO. OF STATIONS ALONG EACH RIVER
C                NJUN   -- NO. OF STATION ALONG MAIN RIVER THAT TRIB.
C                          ENTERS
C                ATF    -- ACUTE ANGLE THAT THE TRIB MAKES WITH MAIN
C                          RIVER AT CONFLUENCES (IN DEGREES)
C                COFW   -- COEFFICIENT OF WIND STRESS
C                VWIND  -- WIND VELOCITY
C                WINAGL -- ACUTE ANGLE THAT WIND MAKES WITH THE
C                          CHANNEL AXIS
C
      KAF=IUSEP+2*JN
      KCW=IUSEP+3*JN
      KVD=IUSEP+4*JN
      KWL=IUSEP+5*JN
C
      PO(56)=IUSEP+1.01
      PO(58)=IUSEP+JN+1.01
      PO(47)=IUSEP+2*JN+1.01
      PO(14)=IUSEP+3*JN+1.01
      PO(43)=IUSEP+4*JN+1.01
      PO(44)=IUSEP+5*JN+1.01
C
      IUSEP=IUSEP+6*JN
C
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      NBJ=0
      NBB=0
C
      DO 100 J=1,JN
      READ(IN,8010)NB(J),NJUN(J),PO(KAF+J),PO(KCW+J),PO(KVD+J),PO(KWL+J)
      IF(IBUG.EQ.1) WRITE(IODBUG,8110)NB(J),NJUN(J),PO(KAF+J),PO(KCW+J),
     1 PO(KVD+J),PO(KWL+J)
C
      IF(NB(J).GT.NBJ) NBJ=NB(J)
      NBB=NBB+NB(J)
C
  100 CONTINUE
C
      LONB=PO(56)
      CALL CONV21(NB,PO(LONB),JN)
      LONJ=PO(58)
      CALL CONV21(NJUN,PO(LONJ),JN)
C
      IF(NBJ.LE.NBMAX) GO TO 200
       WRITE(IPR,7010) NBJ,NBMAX
 7010 FORMAT(1H0,10X,46H**ERROR** NUMBER OF COMPUTATIONAL POINTS (NBJ=,
     1 I3,64H) EXCEEDS MAXIMUM NUMBER OF COMPUTATIONAL POINTS ALLOWED (N
     2BMAX=,I3,2H).//50X,19HPROGRAM TERMINATED.)
      CALL ERROR
      GO TO 9000
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                KU     -- UPSTREAM BOUNDARY CONDITION
C                          (1 FOR STAGE, 2 FOR DISCHARGE)
C                KD     -- DOWNSTREAM BOUNDARY CONDITION
C                            0 FOR TIDE BOUNDARY TO MERGE WITH NOS TIDE
C                            1 FOR STAGE,
C                            2 FOR DISCHARGE,
C                            3 FOR SINGLE VALUED RATING CURVE,
C                            4 FOR LOOP RATING CURVE,
C                            5 FOR NORMAL COMPUTED FROM MANNING'S EQUATION
C
C
C
  200 PO(54)=IUSEP+1.01
      PO(53)=IUSEP+JN+1.01
C
      IUSEP=IUSEP+2*JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (KU(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (KU(J),J=1,JN)
      READ(IN,8000) (KD(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (KD(J),J=1,JN)
C
      DO 210 J=1,JN
CC      IF(KD(J).EQ.0) KD(J)=1
  210 CONTINUE
C
      DO 220 J=1,JN
CC      IF(KU(J).EQ.1.OR.KU(J).EQ.2) GO TO 220
      IF(KU(J).LE.2) GO TO 220
      WRITE(IPR,7110) J,KU(J)
 7110 FORMAT(1H0,10X,'**ERROR** KU VALUE MUST BE EQUAL TO 0, 1 OR 2.  KU
     1(',I1,3H) =,I1,14H NOT ACCEPTED.)
      CALL ERROR
      KU(J)=0
  220 CONTINUE
C
      LOKU=PO(54)
      CALL CONV21(KU,PO(LOKU),JN)
      LOKD=PO(53)
      CALL CONV21(KD,PO(LOKD),JN)
      NYQD=0
      IF(KD(1).EQ.3) NYQD=1
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                SO      -- AVERAGE BOTTON SLOPE ON MAIN RIVER
C
C
      IF(KD(1).NE.5) GO TO 2100
      READ(IN,8030) SO
      IF(IBUG.EQ.1) WRITE(IODBUG,8130) SO
C
      PO(38)=SO
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                NRT1   -- TOTAL NO. OBSERVED STAGES ON RIVER
C
 2100 NRTT=0
      PO(62)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NRT1(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NRT1(J),J=1,JN)
C
      NRTJ=NRT1(1)
      DO 300 J=1,JN
      NRTT=NRTT+NRT1(J)
      IF(NRT1(J).GT.NRTJ) NRTJ=NRT1(J)
  300 CONTINUE
C
      LON1=PO(62)
      CALL CONV21(NRT1,PO(LON1),JN)
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                NSTR   -- TOTAL NUMBER OF HYDROGRAPHS TO BE STORED
C
      PO(104)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NSTR(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NSTR(J),J=1,JN)
C
      NSRR=0
      NSTJ=NSTR(1)
      DO 350 J=1,JN
      NSRR=NSRR+NSTR(J)
      IF(NSTR(J).GT.NSTJ) NSTJ=NSTR(J)
  350 CONTINUE
C
      LONR=PO(104)
      CALL CONV21(NSTR,PO(LONR),JN)
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                NQL    -- NO. OF LATERAL INFLOWS FOR EACH RIVER
C
      PO(60)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NQL(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NQL(J),J=1,JN)
C
      NTQL=0
      NQLJ=NQL(1)
      DO 400 J=1,JN
      NTQL=NTQL+NQL(J)
      IF(NQL(J).GT.NQLJ) NQLJ=NQL(J)
  400 CONTINUE
C
      LONL=PO(60)
      CALL CONV21(NQL,PO(LONL),JN)
C
C
C           STORE IN THE PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NDIV    -- NO. OF REACHES WITH DIVERGENCE ON EACH RIVER
C
      PO(109)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NDIV(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NDIV(J),J=1,JN)
C
      NTDV=0
      NDVJ=NDIV(1)
      DO 405 J=1,JN
      NTDV=NTDV+NDIV(J)
      IF(NDIV(J).GT.NDVJ) NDVJ=NDIV(J)
  405 CONTINUE
C
      LONV=PO(109)
      CALL CONV21(NDIV,PO(LONV),JN)
C
C
C           STORE IN THE PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NWJ     -- NO. OF REACHES WITH WEIR FLOW FOR EACH RIVER
C                NWJX    -- NUMBER OF STAION AT UPSTREAM END OF REACH
C                           IN WHICH WEIR-FLOW OR LEVEE OVERTOPPING
C                           AND/OR FAILURE MAY OCCUR
C                KLF     -- LEVEE FAILURE SWITCH (0 IF NO FAILURE,
C                           1 IF FAILURE)
C                TTL     -- TIME OF LEVEE FAILURE
C                HWH     -- AVERAGE ELEVATION OF TOP OF LEVEE WHERE
C                           WEIR-FLOW OCCURS
C                WC      -- WEIR-FLOW DISCHARGE COEFFICIENT FOR REACH
C                           WHERE WEIR-FLOW MAY OCCUR
C                TFL     -- TIME FROM START OF LEVEE FALIURE UNTIL THE
C                           OPENING OR BREACH IS ITS MAXIMUM SIZE
C                BBL     -- FINAL WIDTH OF LEVEE CREVASSE WHICH IS
C                           ASSUMED TO HAVE RECTANGULAR SHAPE
C                HFL     -- ELEVATION OF WATER SURFACE WHEN LEVEE STARTS
C                           TO FAIL
C                HMINL   -- FINAL ELEVATION OF BOTTOM OF LEVEE CREVASSE
C
C
      PO(64)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NWJ(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NWJ(J),J=1,JN)
C
      NWJJ=0
      NTWQ=0
      DO 500 J=1,JN
      IF(NWJ(J).GT.NTWQ) NTWQ=NWJ(J)
      NWJJ=NWJJ+NWJ(J)
C
      IF(J.EQ.1) GO TO 500
      IF(KD(J).EQ.2.AND.NWJ(J).NE.0) GO TO 410
      IF(KD(J).EQ.1) GO TO 500
C
      WRITE(IPR,7015) J,KD(J),J
 7015 FORMAT(1H0,10X,70H**WARNING** DOWNSTREAM BOUNDARY ON TRIBUTARIES C
     1AN ONLY BE STAGE.  KD(,I1,2H)=,I1,18H NOT ALLOWED.  KD(,I1,20H) HA
     1S BEEN SET TO 1.)
      CALL WARN
      KD(J)=1
      CALL CONV21(KD,PO(LOKD),JN)
      GO TO 500
C
  410 WRITE(IPR,7016) J
 7016 FORMAT(1H0,10X,44H**WARNING** THIS IS TO AFFIRM THAT RIVER NO.,I1,
     119H IS BLOCKED (KD=2)./1H ,22X,64HTHEREFORE NO FLOW FROM THIS TRIB
     2UTARY WILL ENTER THE MAIN RIVER.)
      CALL WARN
  500 CONTINUE
C
      LONJ=PO(64)
      CALL CONV21(NWJ,PO(LONJ),JN)
C
      IF(NWJJ.EQ.0) GO TO 600
C
      IF(NWJ(1).EQ.0) WRITE(IPR,7014)
 7014 FORMAT(1H0,10X,93H**ERROR** LEVEE MUST BE PLACED ON THE MAIN CHANN
     *EL; THEREFORE NWJ(1) CANNOT BE EQUAL TO ZERO.)
      IF(NWJ(1).EQ.0) CALL ERROR
C
      KUSE=IUSEP
      IUSE=KUSE+NWJJ
      IUSEP=IUSEP+NWJJ+8*NWJ(1)
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(77)=KUSE+1.01
      PO(98)=IUSE+1.01
      PO(99)=IUSE+NWJ(1)+1.01
      PO(52)=IUSE+2*NWJ(1)+1.01
      PO(68)=IUSE+3*NWJ(1)+1.01
      PO(66)=IUSE+4*NWJ(1)+1.01
      PO(48)=IUSE+5*NWJ(1)+1.01
      PO(50)=IUSE+6*NWJ(1)+1.01
      PO(51)=IUSE+7*NWJ(1)+1.01
C
      DO 520 J=1,JN
      IF(NWJ(J).EQ.0) GO TO 520
      NW=NWJ(J)
      CALL REDI21(PO(KUSE+1),NW,0,IDUMM)
      KUSE=KUSE+NW
      IF(J.GT.1) GO TO 520
C
      DO 510 K=1,NW
      READ(IN,8050) PO(IUSE+2*NW+K),PO(IUSE+3*NW+K),PO(IUSE+4*NW+K),
     1 PO(IUSE+5*NW+K),PO(IUSE+6*NW+K),PO(IUSE+7*NW+K)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150)
     1 PO(IUSE+2*NW+K),PO(IUSE+3*NW+K),PO(IUSE+4*NW+K),PO(IUSE+5*NW+K),
     2 PO(IUSE+6*NW+K),PO(IUSE+7*NW+K)
  510 CONTINUE
  520 CONTINUE
C
      IF(NTWQ.NE.0.AND.NP.NE.0) WRITE(IPR,7020)
 7020 FORMAT(1H0,10X,65H**ERROR** AUTOMATIC CALIBRATION CANNOT BE USED O
     1N LEVEE PROBLEMS.)
      IF(NTWQ.NE.0.AND.NP.NE.0) CALL ERROR
C
C
C          STORE IN THE PO ARRAY THE FOLLOWING PARAMETERS:
C
C           (63) NUMLAD  -- NO. OF LOCKS AND DAMS IN EACH RIVER
C           (73) LAD     -- NUMBER OF STATION AT UPSTREAM END OF REACH
C                           IN WHICH LOCK AND DAM IS LOCATED
C           (78) POLTAR  -- WATER SURFACE ELEVATION IN HEADWATER POOL
C                           AT UPSTREAM FACE OF LOCK AND DAM
C           (70) CHCTW   -- WATER SURFACE ELEVATION IN TAILWATER POOL
C                           AT DOWNSTREAM FACE OF LOCK AND DAM
C          (128) GZPL    -- GAGE ZERO OF POOL LEVELS
C
  600 PO(63)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NUMLAD(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NUMLAD(J),J=1,JN)
C
      NLADD=0
      NLADJ=0
      DO 610 J=1,JN
      IF(NUMLAD(J).GT.NLADJ) NLADJ=NUMLAD(J)
  610 NLADD=NLADD+NUMLAD(J)
C
      LOND=PO(63)
      CALL CONV21(NUMLAD,PO(LOND),JN)
C
      NLDM=0
      IF(NLADD.EQ.0) GO TO 700
C
      KUSE=IUSEP
      IUSE=KUSE+2*NLADD
      LUSE=IUSE+NLADD
      MUSE=LUSE+NLADD
      IUSEP=KUSE+5*NLADD
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(73)=KUSE+1.01
      PO(78)=KUSE+2*NLADD+1.01
      PO(70)=KUSE+3*NLADD+1.01
      PO(128)=KUSE+4*NLADD+1.01
C
      NRC=0
      NWR=0
      DO 630 J=1,JN
      NUM=NUMLAD(J)
      IF(NUM.EQ.0) GO TO 630
      DO 620 L=1,NUM
      READ(IN,8080) LAD,PO(IUSE+L),PO(LUSE+L),PO(MUSE+L),LAD2
      IF(IBUG.EQ.1) WRITE(IODBUG,8180) LAD,PO(IUSE+L),PO(LUSE+L),
     .  PO(MUSE+L),LAD2
      IF(LAD2.EQ.0) LAD2=LAD+1
      CALL CONV21(LAD,PO(KUSE+1),1)
      CALL CONV21(LAD2,PO(KUSE+2),1)
      IF(LAD.LT.0) NRC=NRC+1
      IF(LAD.GT.0.AND.PO(LUSE+L).GT.0.) NLDM=NLDM+1
      IF(PO(LUSE+L).LT.0.) NWR=NWR+1
      KUSE=KUSE+2
  620 CONTINUE
CC      KUSE=KUSE+NUM*2
      IUSE=IUSE+NUM
      LUSE=LUSE+NUM
      MUSE=MUSE+NUM
  630 CONTINUE
      NYQD=NYQD+NRC
C
C
C          STORE IN THE PO ARRAY THE FOLLOWING PARAMETER:
C
C                NNYQ   -- MANNING'S N IS A FUNCTION OF DISCHARGE(0),
C                          WATER SURFACE ELEVATION(1), OR CONSTANT(0)
C
  700 PO(59)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NNYQ(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NNYQ(J),J=1,JN)
C
      LONQ=PO(59)
      CALL CONV21(NNYQ,PO(LONQ),JN)
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                NRCM1  -- NO. OF DIFFERENT MANNING'S N RELATIONSHIPS
C                          USED IN A ROUTING REACH
C                NCM    -- STATION NO. OF DOWNSTREAM MOST STATION IN
C                          SUBREACH THAT HAS SAME MANNING'S N
C                YQCM   -- WATER SURFACE ELEVATIONS OR DISCHARGES
C                          ASSOCIATED WITH MANNING'S N
C                CM     -- MANNING'S N
C
C
      PO(61)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1)IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NRCM1(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NRCM1(J),J=1,JN)
C
      NCMM=0
      NRCMJ=NRCM1(1)
      DO 800 J=1,JN
      IF(NRCM1(J).GT.NRCMJ) NRCMJ=NRCM1(J)
      NCMM=NCMM+NRCM1(J)
  800 CONTINUE
C
      LON1=PO(61)
      CALL CONV21(NRCM1,PO(LON1),JN)
C
      PO(74)=IUSEP+1.01
      PO(97)=IUSEP+NCMM+1.01
      PO(89)=IUSEP+NCMM+NCMM*NCML+1.01
C
      KUSE=IUSEP
      IUSEP=IUSEP+NCMM+NCMM*NCML*2
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 810 J=1,JN
      NRCM=NRCM1(J)
      CALL REDI21(PO(KUSE+1),NRCM,0,IDUMM)
      KUSE=KUSE+NRCM
  810 CONTINUE
C
      DO 840 J=1,JN
      NRCM=NRCM1(J)
      DO 840 K=1,NRCM
      READ(IN,8020) (PO(KUSE+L),L=1,NCML)
      IF(IBUG.EQ.1) WRITE(IODBUG,8120) (PO(KUSE+L),L=1,NCML)
      KUSE=KUSE+NCML
  840 CONTINUE
C
      DO 850 J=1,JN
      NRCM=NRCM1(J)
      DO 850 K=1,NRCM
      READ(IN,8030) (PO(KUSE+L),L=1,NCML)
      IF(IBUG.EQ.1) WRITE(IODBUG,8130) (PO(KUSE+L),L=1,NCML)
C
      DO 820 L=1,NCML
      IF(PO(KUSE+L).NE.0) GO TO 820
      WRITE(IPR,8500)
 8500 FORMAT(1H0,10X,106H**ERROR** MANNING'S N VALUES (CM) CANNOT BE SET
     . TO ZERO WHEN THE AUTOMATIC CALIBRATION OPTION IS NOT USED.)
      CALL ERROR
      GO TO 855
  820 CONTINUE
C
  855 KUSE=KUSE+NCML
  850 CONTINUE
C
C
C          CHECK TO SEE IF THE NO. OF MANNING N REACHES ISONE LESS
C          THAN THE NO. OF GAGING STATIONS (FOR AUTOMATIC CALIBRATION
C          OPTION)
C
C
      IF(NP.EQ.0) GO TO 870
C
      DO 860 J=1,JN
      IF(NRCM1(J).EQ.(NRT1(J)-1)) GO TO 860
      WRITE(IPR,5) J
    5 FORMAT(///10X,25H**WARNING** ON RIVER NO. ,I2,112HTHE NO. OF MANNI
     1NG N REACHES ARE NOT EQUAL TO NO. OF OBSERVED STATIONS LESS ONE,SO
     2 COMPUTAIONS CAN NOT BE MADE.///)
      CALL WARN
  860 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                X       -- CROSS SECTION LOCATION
C                FKC     -- EXPANSION OR CONTRACTION COEFFICIENT
C
C
  870 PO(84)=IUSEP+1.01
      PO(71)=IUSEP+NBB+1.01
C
      IUSE=IUSEP
      IUSEP=IUSEP+NBB*2
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 2110 J=1,JN
      N=NB(J)
      READ(IN,8020) (PO(IUSE+I),I=1,N)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(IUSE+I),I=1,N)
      READ(IN,8050) (PO(IUSE+NBB+I),I=1,N)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(IUSE+NBB+I),I=1,N)
      IUSE=IUSE+N
 2110 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C                BS      -- TOP WIDTH OF CHANNEL CROSS SECTION AT
C                           VARIOUS ELEVATIONS REFERENCED TO MSL
C                HS      -- ELEVATIONS CORRESPONDING TO EACH TOP WIDTH
C                AS      -- CHANNEL CROSS SECTIONAL AREA BELOW LOWEST
C                           HS ELEVATION
C
C
C
      KUSE=IUSEP
      IUSE=KUSE+NBB*NCS
      LUSE=IUSE+NBB*NCS
      IUSEP=IUSEP+NBB*NCS*3
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(87)=KUSE+1.01
      PO(90)=IUSE+1.01
      PO(85)=LUSE+1.01
C
      DO 1830 J=1,JN
      N=NB(J)
      DO 1810 I=1,N
      READ(IN,8050) (PO(KUSE+K),K=1,NCS)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(KUSE+K),K=1,NCS)
      KUSE=KUSE+NCS
 1810 CONTINUE
C
      DO 1820 I=1,N
      READ(IN,8050) (PO(IUSE+K),K=1,NCS)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(IUSE+K),K=1,NCS)
      IUSE=IUSE+NCS
 1820 CONTINUE
C
C
      READ(IN,8050) (PO(LUSE+(I-1)*NCS+1),I=1,N)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(LUSE+(I-1)*NCS+1),I=1,N)
      LUSE=LUSE+N*NCS
 1830 CONTINUE
C
C
C          STORE IN THE PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NCSS1  -- NO. OF STATIONS THAT HAVE OFF CHANNEL STORAGE
C                NCSSS  -- STATION NO. ASSOCIATED WITH THE COMPUTIONAL
C                          POINTS ALONG THE ROUTING REACH WHICH HAVE
C                          OFF CHANNEL STORAGE
C
C
      IF(NCSS.EQ.0) GO TO 1000
C
      PO(57)=IUSEP+1.01
C
      IUSEP=IUSEP+JN
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8000) (NCSS1(J),J=1,JN)
      IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NCSS1(J),J=1,JN)
C
      NSSS=0
      DO 900 J=1,JN
  900 NSSS=NSSS+NCSS1(J)
C
      LON1=PO(57)
      CALL CONV21(NCSS1,PO(LON1),JN)
C
      IF(NSSS.EQ.0) GO TO 1000
C
      PO(75)=IUSEP+1.01
C
      IUSEP=IUSEP+NSSS
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 910 J=1,JN
      IF(NCSS1(J).EQ.0) GO TO 910
      NCSJ=NCSS1(J)
      LK=LCAT21(1,J,NCSS1)
      LKK=LK+NCSJ-1
      READ(IN,8000) (NCSSS(K),K=LK,LKK)
      IF(IBUG.EQ.1)WRITE(IODBUG,8100)(NCSSS(K),K=LK,LKK)
  910 CONTINUE
C
      LONS=PO(75)
      CALL CONV21(NCSSS,PO(LONS),NSSS)
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                BSS     -- TOP WIDTH OF OFF-CHANNEL STORAGE CROSS
C                           SECTION AT VARIOUS ELEVATIONS REFERENCED TO
C                           MSL
C                HSS     -- ELEVATIONS CORRESPONDING TO EACH TOP WIDTH
C                ASS     -- OFF-CHANNEL STORAGE CROSS SECTIONAL AREA
C                           BELOW LOWEST HS ELEVATION
C
C
      KUSE=IUSEP
      IUSE=KUSE+NCSS*NSSS
      LUSE=IUSE+NCSS*NSSS
      IUSEP=IUSEP+NCSS*NSSS*3
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(88)=KUSE+1.01
      PO(91)=IUSE+1.01
      PO(86)=LUSE+1.01
C
      DO 1950 J=1,JN
      N=NB(J)
      NCSJ=NCSS1(J)
      IF(NCSJ.EQ.0) GO TO 1950
      L=1
      DO 1940 I=1,N
 1910 LL=NCSSS(LCAT21(L,J,NCSS1))
      IF(I-LL) 1940,1930,1920
 1920 IF(L.GE.NCSJ) GO TO 1940
      L=L+1
      GO TO 1910
 1930 READ(IN,8050) (PO(KUSE+K),K=1,NCSS)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(KUSE+K),K=1,NCSS)
      READ(IN,8050) (PO(IUSE+K),K=1,NCSS)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(IUSE+K),K=1,NCSS)
      READ(IN,8050) PO(LUSE+1)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) PO(LUSE+1)
      KUSE=KUSE+NCSS
      IUSE=IUSE+NCSS
      LUSE=LUSE+NCSS
 1940 CONTINUE
 1950 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF OBSERVED DATA
C                DTYPE   -- TYPE OF OBSERVED DATA
C                NT     -- STATION NO. OF EACH OBSERVED STAGE HYDROGRAPH
C                FLDHT  -- ELEVATION (MSL) AT WHICH FLOODING COMMENCES
C                GZ     -- GAGE CORRECTION TO CONVERT OBS. STAGE TO MSL
C
 1000 IF(NRTT.EQ.0) GO TO 1100
C
      IF(KPL.GE.0.AND.KPL.LE.3) GO TO 1010
C
      WRITE(IPR,7030) KPL
 7030 FORMAT(1H0,10X,45H**ERROR** KPL MUST BE EQUAL TO 0,1,2 OR 3.   ,
     1 I10,14H NOT ACCEPTED.)
      CALL ERROR
      GO TO 1100
C
 1010 KUSE=IUSEP
      LUSE=IUSEP+3*NRTT
      IUSE=IUSEP+4*NRTT
      MUSE=IUSEP+5*NRTT
      IDUM=0
C
      PO(96)=IUSEP+1.01
      PO(83)=IUSEP+3.01
      PO(76)=LUSE+1.01
      PO(65)=IUSE+1.01
      IF(KPL.EQ.1.OR.KPL.EQ.3) PO(72)=MUSE+1.01
      IUSEP=IUSE+NRTT
      IF(KPL.EQ.1.OR.KPL.EQ.3) IUSEP=MUSE+NRTT
C
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 1080 J=1,JN
      NRT=NRT1(J)
      IF(NRT.EQ.0) GO TO 1080
      DIMS=BLANK
      IF(KPL.EQ.1.OR.KPL.EQ.3) DIMS=DMNS(1)
      IF(KPL.EQ.2) DIMS=DMNS(2)
      DO 1070 K=1,NRT
C
C
      IF(KPL.EQ.2) GO TO 1020
C
      READ(IN,8040) STTNAM,DTYPE,NT,PO(IUSE+K),PO(MUSE+K)
      IF(IBUG.EQ.1)WRITE(IODBUG,8140)STTNAM,DTYPE,NT,PO(IUSE+K),
     1 PO(MUSE+K)
      GO TO 1030
C
 1020 READ(IN,8040) STTNAM,DTYPE,NT,PO(IUSE+K)
      IF(IBUG.EQ.1)WRITE(IODBUG,8140)STTNAM,DTYPE,NT,PO(IUSE+K)
C
      IF(STTNAM(1).EQ.DUMM) GO TO 1050
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
 1030 CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,1,1,KERR)
C
      IF(KERR.EQ.1) GO TO 1040
      IF(KPL.NE.1.AND.KPL.NE.3) GO TO 1040
C
C          CHECK TO SEE IF TIME SERIES HAS CORRECT UNITS
C
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1040
      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7040) UNITS
 7040 FORMAT(1H0,10X,54H**ERROR** STAGE DATA CAN ONLY HAVE UNITS OF 'M
     1 '.  ',A4,15H' NOT ACCEPTED.)
      IF(UNITS.NE.UNTS(1)) CALL ERROR
C
 1040 IF(MSG.EQ.0) GO TO 1060
      IF(NP.NE.0) WRITE(IPR,7050)
 7050 FORMAT(1H0,10X,71H**WARNING** MISSING DATA ARE NOT ALLOWED FOR AUT
     1OMATIC CALIBRATION RUN.)
      IF(NP.EQ.0) WRITE(IPR,7055) J,STTNAM,DTYPE
 7055 FORMAT(1H0,10X,24H**WARNING** ON RIVER NO.,I3,9H STATION ,2A4,16H
     1WITH DATA TYPE ,A4,23H MAY HAVE MISSING DATA./1H ,22X,66HMISSING D
     2ATA POINTS WILL NOT BE PLOTTED OR INCLUDED IN STATISTICS.)
      CALL WARN
      GO TO 1060
 1050 IF(NP.EQ.0) WRITE(IPR,7060)
 7060 FORMAT(1H0,10X,99H**ERROR** TIME SERIES I.D. 'DUMMY' IS NOT ACCEPT
     1ABLE WHEN AUTOMATIC CALIBRATION OPTION IS NOT USED.)
      IF(NP.EQ.0) CALL ERROR
      IF(NP.NE.0) IDUM=IDUM+1
C
 1060 PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
      KUSE=KUSE+3
C
      CALL CONV21(NT,PO(LUSE+K),1)
C
 1070 CONTINUE
      LUSE=LUSE+NRT
      IUSE=IUSE+NRT
      IF(KPL.EQ.1.OR.KPL.EQ.3) MUSE=MUSE+NRT
C
 1080 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF OUTPUT TIME SERIES
C                DTYPE   -- TYPE OF OUTPUT TIME SERIES
C                NST     -- STATION NO. OF EACH OUTPUT TIME SERIES
C                KTYP    -- TYPE OF OUTPUT TIME SERIES SWITCH
C                           (1 FOR STAGE, 2 FOR DISCHARGE, 3 FOR VELOCITY)
C                GZO     -- GAGE CORRECTION TO CONVERT OUTPUT T.S. MSL
C                           TO STAGE
C
C
 1100 IF(NSRR.EQ.0) GO TO 1200
C
      KUSE=IUSEP
      LUSE=IUSEP+3*NSRR
      IUSE=IUSEP+4*NSRR
      MUSE=IUSEP+5*NSRR
      IUSEP=MUSE+NSRR
C
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(105)=KUSE+1.01
      PO(106)=KUSE+3.01
      PO(107)=LUSE+1.01
      PO(108)=IUSE+1.01
      PO(120)=MUSE+1.01
C
      DO 1150 J=1,JN
      IF(NSTR(J).EQ.0) GO TO 1150
      NSR=NSTR(J)
      DIMS=BLANK
C
      DO 1140 K=1,NSR
      READ(IN,8040) STTNAM,DTYPE,NST,PO(MUSE+K)
      IF(IBUG.EQ.1)WRITE(IODBUG,8140) STTNAM,DTYPE,NST,PO(MUSE+K)
C
      IF(STTNAM(1).NE.DUMM) GO TO 1110
      WRITE(IPR,7070)
 7070 FORMAT(1H0,10X,76H**ERROR** TIME SERIES I.D. 'DUMMY' IS NOT ACCEPT
     1ABLE FOR OUTPUT TIME SERIES.)
      GO TO 1140
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
 1110 CALL CHEKTS(STTNAM,DTYPE,IDHF,0,DIMS,1,1,KERR)
C
      IF(KERR.EQ.1) GO TO 1140
C
      CALL CONV21(NST,PO(LUSE+K),1)
C
      IF(DIMS.EQ.DMNS(1).OR.DIMS.EQ.DMNS(2).OR.DIMS.EQ.DMNS(4)) 
     .      GO TO 1115
      GO TO 1120
 1115 IF(DIMS.EQ.DMNS(1)) KTYP=1
      IF(DIMS.EQ.DMNS(2)) KTYP=2
      IF(DIMS.EQ.DMNS(4)) KTYP=3
      CALL CONV21(KTYP,PO(IUSE+K),1)
      GO TO 1130
C
 1120 WRITE(IPR,7080) DMNS,DIMS
 7080 FORMAT(1H0,10X,63H**ERROR** THE ALLOWABLE DIMENSIONS FOR OUTPUT TI
     1ME SERIES ARE ',A4,4H' , ,A4,4H' , ,A4,5H OR ',A4,7H'.  , ',A4,
     2 17H' IS NOT ALLOWED.)
      CALL ERROR
C
 1130 PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
      KUSE=KUSE+3
 1140 CONTINUE
      LUSE=LUSE+NSR
      IUSE=IUSE+NSR
      MUSE=MUSE+NSR
 1150 CONTINUE
C
C
C           STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                 STTNAM  -- STATION NAME OF LATERAL INFLOW DATA
C                 DTYPE   -- TYPE OF DATA FOR LATERAL INFLOW
C                 LQ      -- NUMBER OF STATION AT UPSTREAM END OF EACH
C                            REACH IN WHICH LATERAL INFLOW IS INTRODUCED
C
C
 1200 IF(NTQL.EQ.0) GO TO 1250
C
      PO(93)=IUSEP+1.01
      PO(95)=IUSEP+NTQL+1.01
      PO(82)=IUSEP+NTQL+3.01
C
      KUSE=IUSEP
      IUSE=KUSE+NTQL
      IUSEP=IUSEP+NTQL*4
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 1240 J=1,JN
      IF(NQL(J)) 1240,1240,1210
C
 1210 NQL1=NQL(J)
      DO 1230 I=1,NQL1
      READ(IN,8040) STTNAM,DTYPE,LQ
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM,DTYPE,LQ
C
      CALL CONV21(LQ,PO(KUSE+I),1)
C
      IF(STTNAM(1).NE.DUMM) GO TO 1220
      IF(NP.EQ.0) WRITE(IPR,7060)
      IF(NP.EQ.0) CALL ERROR
      IF(NP.NE.0) IDUM=IDUM+1
C
C          CHECK TO SEE IF TIME SERIES EXISTS
C
 1220 DIMS=DMNS(2)
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1230
C
      PO(IUSE+1)=STTNAM(1)
      PO(IUSE+2)=STTNAM(2)
      PO(IUSE+3)=DTYPE
      IUSE=IUSE+3
 1230 CONTINUE
      KUSE=KUSE+NQL1
 1240 CONTINUE
C
C
C           STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                 STTNAM  -- STATION NAME OF DIVERGENCE DATA
C                 DTYPE   -- TYPE OF DATA FOR DIVERGENCE
C                 LDIV    -- NUMBER OF STATION AT UPSTREAM END OF EACH
C                            REACH IN WHICH DIVERGENCE IS INTRODUCED
C
C
 1250 IF(NTDV.EQ.0) GO TO 1300
C
      PO(110)=IUSEP+1.01
      PO(111)=IUSEP+NTDV+1.01
      PO(112)=IUSEP+NTDV+3.01
C
      KUSE=IUSEP
      IUSE=KUSE+NTDV
      IUSEP=IUSEP+NTDV*4
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 1290 J=1,JN
      IF(NDIV(J)) 1290,1290,1260
C
 1260 NDV1=NDIV(J)
      DO 1270 I=1,NDV1
      READ(IN,8040) STTNAM,DTYPE,LDIV
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM,DTYPE,LDIV
C
      CALL CONV21(LDIV,PO(KUSE+I),1)
C
C          CHECK TO SEE IF TIME SERIES EXISTS
C
      DIMS=DMNS(3)
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1270
C
      PO(IUSE+1)=STTNAM(1)
      PO(IUSE+2)=STTNAM(2)
      PO(IUSE+3)=DTYPE
      IUSE=IUSE+3
C
C         CHECK TO SEE IF LATERAL FLOW AND DVERGENCE STATIONS ARE SAME
C
      NQ=NQL(J)
      IF(NQ.EQ.0) GO TO 1270
      LOLQ=PO(93)-1
      DO 1265 IL=1,NQ
      CALL CONV21(PO(LOLQ+IL),LQ,1)
      IF(LQ.NE.LDIV) GO TO 1265
      WRITE(IPR,7085) J,LQ
 7085 FORMAT(1H0,10X,24H**WARNING** ON RIVER NO.,I2,18H CROSS-SECTION NO
     1. ,I3,42H HAS BOTH LATERAL FLOW AND FLOW DIVERSION;/1H ,22X,61HTHE
     2REFORE ONLY THE LATERAL FLOW WILL BE USED IN COMPUTATIONS./)
      CALL WARN
 1265 CONTINUE
 1270 CONTINUE
      KUSE=KUSE+NDV1
 1290 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF TARGET POOL LEVELS
C                DTYPE   -- TYPE OF DATA FOR POOL LEVELS
C                STTNAM  -- STATION NAME OF GATE CONTROL LOCATION
C                DTYPE   -- DATA TYPE FOR GATE CONTROLS
C
C
 1300 IF(NLDM.EQ.0) GO TO 1400
C
      KUSE=IUSEP
      IUSE=KUSE+3*NLDM
      IUSEP=IUSEP+6*NLDM
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(94)=KUSE+1.01
      PO(81)=KUSE+3.01
      PO(92)=IUSE+1.01
      PO(80)=IUSE+3.01
C
      LCTW=PO(70)-1
      LLAD=PO(73)
      LD1=LLAD
      DO 1390 J=1,JN
      NUM=NUMLAD(J)
      IF(NUM.EQ.0) GO TO 1390
C
      LLD=LLAD
      DO 1330 K=1,NUM
      IF(IVER.LT.3)  LLD=LLAD+K-1
      CALL CONV21(PO(LLD),LAD,1)
      IF(LAD.LT.0) GO TO 1328
      IF(PO(LCTW+K).LT.0.) GO TO 1328
      READ(IN,8040) STTNAM,DTYPE
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM,DTYPE
C
C          CHECK TO SEE IF TIME SERIES EXISTS
C
      DIMS=DMNS(1)
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,1,1,KERR)
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1310
      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7090) UNITS
 7090 FORMAT(1H0,10X,61H**ERROR** GATE CONTROL DATA CAN ONLY HAVE UNITS
     1OF 'M   '.  ',A4,15H' NOT ACCEPTED.)
      IF(UNITS.NE.UNTS(1)) CALL ERROR
 1310 IF(MSG.EQ.0) GO TO 1320
      WRITE(IPR,7082) J,STTNAM,DTYPE
 7082 FORMAT(1H0,10X,24H**WARNING** ON RIVER NO.,I3,9H STATION ,2A4,16H
     1WITH DATA TYPE ,A4,23H MAY HAVE MISSING DATA./1H ,22X,49HMISSING D
     2ATA POINTS WILL BE GIVEN VALUES OF ZERO.)
      CALL WARN
C
 1320 PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
      KUSE=KUSE+3
 1328 IF(IVER.GE.3) LLD=LLD+2 
 1330 CONTINUE
C
CC      LLD=LLAD
      IF(IVER.GE.3) LLD=LD1
      DO 1350 K=1,NUM
      IF(IVER.LT.3) LLD=LLAD+K-1
      CALL CONV21(PO(LLD),LAD,1)
      IF(LAD.LT.0) GO TO 1348
      IF(PO(LCTW+K).LT.0.) GO TO 1348
      READ(IN,8040) STTNAM,DTYPE
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM,DTYPE
C
C          CHECK TO SEE IF TIME SERIES EXISTS
C
      DIMS=DMNS(3)
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,1,1,KERR)
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1335
      IF(UNITS.NE.UNTS(2)) WRITE(IPR,7100) UNITS
 7100 FORMAT(1H0,10X,65H**ERROR** GATE CONTROL SWITCHES CAN ONLY HAVE UN
     1ITS OF 'INT '.  ',A4,15H' NOT ACCEPTED.)
      IF(UNITS.NE.UNTS(2)) CALL ERROR
 1335 IF(MSG.EQ.0) GO TO 1340
      WRITE(IPR,7082) J,STTNAM,DTYPE
      CALL WARN
C
 1340 PO(IUSE+1)=STTNAM(1)
      PO(IUSE+2)=STTNAM(2)
      PO(IUSE+3)=DTYPE
      IUSE=IUSE+3
 1348 IF(IVER.GE.3) LLD=LLD+2
 1350 CONTINUE
      IF(IVER.GE.3) THEN
        LLAD=LLAD+NUM*2
      ELSE
        LLAD=LLAD+NUM
      ENDIF
      LD1=LLAD
      LCTW=LCTW+NUM
 1390 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF DATA AT UPSTREAM BOUNDARY
C                DTYPE   -- TYPE OF DATA AT THE UPSTREAM BOUNDARY
C                STM     -- MINIMUM DISCHARGE OR STAGE ALLOWED AT THE
C                           UPSTREAM BOUNDARY
C                GZ1     -- GAGE CORRECTION TO CONVERT UPSTREAM STAGES
C                           TO MSL
C
 1400 IF(NU.EQ.0) GO TO 1500
C
      PO(79)=IUSEP+1.01
      PO(67)=IUSEP+3.01
      PO(49)=IUSEP+3*JN+1.01
      PO(114)=IUSEP+4*JN+1.01
C
      KUSE=IUSEP
      IUSE=IUSEP+3*JN
      LUSE=IUSEP+4*JN
      IUSEP=IUSEP+5*JN
C
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 1430 J=1,JN
      DIMS=BLANK
      IF(KU(J).EQ.1) DIMS=DMNS(1)
      IF(KU(J).EQ.2) DIMS=DMNS(2)
C
      READ(IN,8060) STTNAM,DTYPE,STM,GZ1
      IF(IBUG.EQ.1.AND.KU(J).EQ.2) WRITE(IODBUG,8160) STTNAM,DTYPE,STM
      IF(IBUG.EQ.1.AND.KU(J).EQ.1) WRITE(IODBUG,8160) STTNAM,DTYPE,STM,
     *GZ1
C
      IF(KU(J).EQ.0) GO TO 1420
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1420
      IF(KU(J).NE.1) GO TO 1420
C
C          CHECK TO SEE IF TIME SERIES HAS CORRECT UNITS
C
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1420
      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7040) UNITS
      IF(UNITS.NE.UNTS(1)) CALL ERROR
C
 1420 PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
      PO(LUSE+J)=STM
      IF(KU(J).EQ.1) PO(IUSE+J)=GZ1
      KUSE=KUSE+3
 1430 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF DATA AT DOWNSTREAM BDARY.
C                DTYPE   -- TYPE OF DATA AT DOWNSTREAM BDARY.
C                GZN     -- GAGE CORRECTION TO CONVERT DOWNSTREAM
C                           STAGES TO MSL
C
 1500 DIMS=BLANK
C
      IF(KD(1)-2) 1520,1510,1565
C
 1510 DIMS=DMNS(2)
      READ(IN,8040) STTNAM,DTYPE
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM,DTYPE
      GO TO 1530
C
 1520 DIMS=DMNS(1)
      READ(IN,8060) STTNAM,DTYPE,PO(20)
      IF(IBUG.EQ.1) WRITE(IODBUG,8160) STTNAM,DTYPE,PO(20)
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
 1530 MSG=0
      IF(KD(1).EQ.0) MSG=1
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,MSG,1,KERR)
      IF(KERR.EQ.1) GO TO 1540
      IF(KD(1).GT.1) GO TO 1540
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1540
      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7002) UNITS
C
 1540 PO(23)=IUSEP+1.01
      PO(42)=IUSEP+3.01
C
      KUSE=IUSEP
      IUSEP=IUSEP+3
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF NOS TIDE DATA
C                DTYPE   -- TYPE OF NOS TIDE DATA
C                RIVNAM  -- NAME OF RIVER USING TIDE DATA

      IF(KD(1).NE.0) GO TO 1600
      READ(IN,8090) STTNAM,DTYPE,RIVNAM
      IF(IBUG.EQ.1) WRITE(IODBUG,8190) STTNAM,DTYPE,RIVNAM
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
      CALL CHEKTS(STTNAM,DTYPE,IDHF,1,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1550
      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
      IF(KERR.EQ.1) GO TO 1550
      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7002) UNITS
C
 1550 PO(138)=IUSEP+1.01
      PO(139)=IUSEP+3.01
      PO(140)=IUSEP+4.01
C
      KUSE=IUSEP
      IUSEP=IUSEP+4
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
      PO(KUSE+4)=RIVNAM
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF ADJUSTED TIDE DATA
C                DTYPE   -- TYPE OF ADJUSTED TIDE DATA

      READ(IN,8090) STTNAM,DTYPE
      IF(IBUG.EQ.1) WRITE(IODBUG,8190) STTNAM,DTYPE
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
      CALL CHEKTS(STTNAM,DTYPE,IDHF,0,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1560
CC      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
CC      IF(KERR.EQ.1) GO TO 1560
CC      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7002) UNITS

      IF(DIMS.EQ.DMNS(1)) GO TO 1560

      WRITE(IPR,7120) DMNS(1),DIMS
 7120 FORMAT(1H0,10X,'**ERROR** THE ALLOWABLE DIMENSIONS FOR ADJUSTED TI
     1DE TIME SERIES ARE ',A4,5H'.  ',A4,17H' IS NOT ALLOWED.)
      CALL ERROR
C
 1560 PO(141)=IUSEP+1.01
      PO(142)=IUSEP+3.01
C
      KUSE=IUSEP
      IUSEP=IUSEP+3
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      PO(KUSE+3)=DTYPE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- STATION NAME OF ADJUSTED STAGE DATA
C                DTYPE   -- TYPE OF ADJUSTED STAGE DATA
C
 1565 IF(NRTT.EQ.0.OR.KPL2.LE.1) GO TO 1600

      IUSE=IUSEP
      IUSEP=IUSEP+3*NRTT
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000

      PO(149)=IUSE+1.01
      PO(150)=IUSE+3.01
C

      DO 1580 J=1,JN
      NRT=NRT1(J)
      IF(J.EQ.1.AND.NRT.EQ.NB(J)) NRT=NRT-1
      DO 1575 I=1,NRT
      READ(IN,8090) STTNAM,DTYPE
      IF(IBUG.EQ.1) WRITE(IODBUG,8190) STTNAM,DTYPE
C
C        CHECK TO SEE IF TIME SERIES EXISTS
C
      CALL CHEKTS(STTNAM,DTYPE,IDHF,0,DIMS,0,1,KERR)
      IF(KERR.EQ.1) GO TO 1570
CC      CALL FDCODE(DTYPE,UNITS,DIM,MSG,NVL,TSCL,NELSE,KERR)
CC      IF(KERR.EQ.1) GO TO 1570
CC      IF(UNITS.NE.UNTS(1)) WRITE(IPR,7002) UNITS

      IF(DIMS.EQ.DMNS(1)) GO TO 1570

      WRITE(IPR,7125) DMNS(1),DIMS
 7125 FORMAT(1H0,10X,'**ERROR** THE ALLOWABLE DIMENSIONS FOR ADJUSTED ST
     1AGE TIME SERIES ARE ',A4,5H'.  ',A4,17H' IS NOT ALLOWED.)
      CALL ERROR
C
 1570 PO(IUSE+1)=STTNAM(1)
      PO(IUSE+2)=STTNAM(2)
      PO(IUSE+3)=DTYPE
      IUSE=IUSE+3
 1575 CONTINUE
      IF(NRT.NE.NRT1(J).AND.J.EQ.1) IUSE=IUSEP+3
 1580 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                STTNAM  -- RATING CURVE IDENTIFIER
C
C
 1600 IF(NYQD.EQ.0) GO TO 1700
CC      IF(KD(1).NE.3) GO TO 1610
C
      KUSE=IUSEP
      IUSEP=IUSEP+NYQD*2
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(69)=KUSE+1.01
C
      DO 1650 K=1,NYQD
      READ(IN,8040) STTNAM
      IF(IBUG.EQ.1) WRITE(IODBUG,8140) STTNAM
C
      CALL CHEKRC(STTNAM,KERR)
      IF(KERR.EQ.1) GO TO 1650
C
      PO(KUSE+1)=STTNAM(1)
      PO(KUSE+2)=STTNAM(2)
      KUSE=KUSE+2
 1650 CONTINUE
C
C
C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                TP     -- TIME TO PEAK OF UPSTREAM HYDROGRAPH
C                RHO    -- RATIO OF PEAK VALUE OF SPECIFIED HYDROGRAPH
C                          TO INITIAL VALUE OF HYDROGRAPH
C                GAMMA  -- RATIO OF TG (TIME TO CENTER OF GRAVITY OF
C                          SPECIFIED HYDROGRAPH) TO TP
C                YI     -- INITIAL STEADY DISCHARGE OR WATER SURFACE
C                          ELEVATION AT UPSTREAM BOUNDARY
C
 1700 IF(NU.GT.0) GO TO 1800
      READ(IN,8050) TP,RHO,GAMMA,YI
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) TP,RHO,GAMMA,YI
C
      PO(41)=TP
      PO(37)=RHO
      PO(19)=GAMMA
      PO(46)=YI
C
      PO(114)=IUSEP+1.01
      IUSE=IUSEP
      IUSEP=IUSEP+1
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
      PO(IUSE)=YI
C
 1800 IF(KPL2.LE.1) GO TO 1980

C          STORE IN PO ARRAY THE FOLLOWING PARAMETERS:
C
C                NSLICE -- NUMBER OF SLICES USED TO ADJUST T.S.
C                NQSL   -- ADJUSTMENT BASED ON STAGE(0) OR FLOW(1)
C                SLICE  -- STAGE OR DISCHARGE SLICE WHERE ADJUSTMENT OCCURS
C                FRMSO  -- RMS ERROR ON FALLING LIMB OF HYDROGRAPH IN SLICE
C                FBIASO -- BIAS ON FALLING LIMG OF HYDROGRAPH IN SLICE
C                RRMSO  -- RMS ERROR ON RISING LIMB OF HYDROGRAPH IN SLICE
C                RBIASO -- BIAS ON RISING LIMG OF HYDROGRAPH IN SLICE
C
      MUL1=NCML*NRTT*JN
      KUSE=IUSEP
      IUSE=KUSE+JN
      IUSE2=IUSE+MUL1
      IUSE3=IUSE2+MUL1
      IUSE4=IUSE3+MUL1
      IUSE5=IUSE4+MUL1
      IUSEP=IUSEP+JN+MUL1*5

      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      PO(143)=KUSE+1.01
      PO(144)=IUSE+1.01
      PO(145)=IUSE+MUL1+1.01
      PO(146)=IUSE+MUL1*2+1.01
      PO(147)=IUSE+MUL1*3+1.01
      PO(148)=IUSE+MUL1*4+1.01

      LONT=PO(76)-1
      LONCM=PO(74)-1
      LOYQCM=PO(97)-1
      LONQSL=PO(143)

      IF(KPL2.EQ.3) THEN
        READ(IN,*) NSLICE
        IF(IBUG.EQ.1) WRITE(IODBUG,8100) NSLICE
        READ(IN,*) (NQSL(J),J=1,JN)
        IF(IBUG.EQ.1) WRITE(IODBUG,8100) (NQSL(J),J=1,JN)
      ELSE
        NSLICE=NCML
        DO 1065 J=1,JN
          NQSL(J)=NNYQ(J)
 1065   CONTINUE
      ENDIF
      PO(151)=NSLICE+0.01
      CALL CONV21(NQSL,PO(LONQSL),JN)
CC      LONCM=PO(74)
      LNT=LONT
      LNCM=LONCM
      DO 1085 J=1,JN
        NRT=NRT1(J)
CC        LNT=LNT+NRT
        CALL CONV21(PO(LNT+NRT),NT,1)
        IF(J.EQ.1.AND.NT.EQ.NB(J)) NRT=NRT-1
        DO 1078 I=1,NRT
          IF(KPL2.EQ.2) THEN
CC            LNT=LONT
            NRCM=NRCM1(J)
            CALL CONV21(PO(LNT+I),NT,1)
            DO 1075 K=1,NRCM
              CALL CONV21(PO(LNCM+K),NCM,1)
              IF(NT.GT.NCM) GO TO 1075
              DO 1066 L=1,NSLICE
                PO(IUSE+L)=PO(LOYQCM+L)
 1066        CONTINUE
              IUSE=IUSE+NSLICE
              GO TO 1077
 1075       CONTINUE
 1077       LOYQCM=LOYQCM+NCML
          ELSE
            READ(IN,*) (PO(IUSE+K),K=1,NSLICE)
            IF(IBUG.EQ.1) WRITE(IODBUG,8150) (PO(IUSE+K),K=1,NSLICE)
            IUSE=IUSE+NSLICE
          ENDIF

          READ(IN,*) (PO(IUSE2+K),K=1,NSLICE)
          IF(IBUG.EQ.1) WRITE(IODBUG,8155) (PO(IUSE2+K),K=1,NSLICE)
          READ(IN,*) (PO(IUSE3+K),K=1,NSLICE)
          IF(IBUG.EQ.1) WRITE(IODBUG,8155) (PO(IUSE3+K),K=1,NSLICE)
          READ(IN,*) (PO(IUSE4+K),K=1,NSLICE)
          IF(IBUG.EQ.1) WRITE(IODBUG,8155) (PO(IUSE4+K),K=1,NSLICE)
          READ(IN,*) (PO(IUSE5+K),K=1,NSLICE)
          IF(IBUG.EQ.1) WRITE(IODBUG,8155) (PO(IUSE5+K),K=1,NSLICE)
          IUSE2=IUSE2+NSLICE
          IUSE3=IUSE3+NSLICE
          IUSE4=IUSE4+NSLICE
          IUSE5=IUSE5+NSLICE
 1078   CONTINUE
        LNT=LNT+NRT1(J)
        IF(KPL2.EQ.2) LNCM=LNCM+NRCM
 1085 CONTINUE
C
C
C         STORE IN CO ARRAY THE FOLLOWING PARAMETERS:
C
C              YDI    -- INITIAL WATER SURFACE ELEVATIONS
C              QDI    -- INITIAL DISCHARGES
C
C
 1980 KUSE=1
      IUSEC=NBB*2
      CALL CHECKC(IUSEC,LEFTC,NERR)
      IF(NERR.EQ.1) IUSEC=0
      IF(NERR.EQ.1) GO TO 9000
C
      DO 2200 J=1,JN
      N=NB(J)
      LUSE=KUSE+N-1
      READ(IN,8050) (CO(K),K=KUSE,LUSE)
      IF(IBUG.EQ.1) WRITE(IODBUG,8150) (CO(K),K=KUSE,LUSE)
      KUSE=LUSE+1
 2200 CONTINUE
C
      PO(121)=KUSE+0.01
C
      DO 2210 J=1,JN
      N=NB(J)
      LUSE=KUSE+N-1
      READ(IN,8020) (CO(K),K=KUSE,LUSE)
      IF(IBUG.EQ.1) WRITE(IODBUG,8120) (CO(K),K=KUSE,LUSE)
      KUSE=LUSE+1
 2210 CONTINUE
C
C
C        STORE IN THE CO ARRAY THE FOLLOWING PARAMETER:
C
C              QLI  -- INITIAL LATERAL INFLOWS
C
C
      IF(NTQL.EQ.0) GO TO 2400
      IUSEC=IUSEC+NTQL
      CALL CHECKC(IUSEC,LEFTC,NERR)
      IF(NERR.EQ.1) IUSEC=0
      IF(NERR.EQ.1) GO TO 9000
      PO(122)=KUSE+0.01
C
      DO 2300 J=1,JN
      IF(NQL(J).EQ.0) GO TO 2300
      NQLL=NQL(J)
      LUSE=KUSE+NQLL-1
      READ(IN,8050) (CO(K),K=KUSE,LUSE)
      IF(IBUG.EQ.1) WRITE(IODBUG,8050) (CO(K),K=KUSE,LUSE)
      KUSE=LUSE+1
 2300 CONTINUE
C
C
C        STORE IN THE CO ARRAY THE FOLLOWING PARAMETER:
C
C              DVI  -- PERCENTAGE OF FLOW INITIALLY DIVERTED
C
C
 2400 IF(NTDV.EQ.0) GO TO 2600
      IUSEC=IUSEC+NTDV
      CALL CHECKC(IUSEC,LEFTC,NERR)
      IF(NERR.EQ.1) IUSEC=0


      IF(NERR.EQ.1) GO TO 9000
      PO(123)=KUSE+0.01
C
      DO 2500 J=1,JN
      IF(NDIV(J).EQ.0) GO TO 2500
      NDV=NDIV(J)
      LUSE=KUSE+NDV-1
      READ(IN,8050) (CO(K),K=KUSE,LUSE)
      IF(IBUG.EQ.1) WRITE(IODBUG,8050) (CO(K),K=KUSE,LUSE)
      KUSE=LUSE+1
 2500 CONTINUE
C
C
C        STORE IN THE CO ARRAY THE FOLLOWING PARAMETER:
C
C              PLTI  -- INITIAL TARGET POOL ELEVATION
C              IWTI  -- INITIAL GATE CONTROL SWITCH
C
C
 2600 IF(NLADD.EQ.0) GO TO 2800
      IF(NLDM.EQ.0) GO TO 2800
      IUSEC=IUSEC+NLDM
      CALL CHECKC(IUSEC,LEFTC,NERR)
      IF(NERR.EQ.1) IUSEC=0
      IF(NERR.EQ.1) GO TO 9000
      PO(124)=KUSE+0.01
C
      LCTW=PO(70)-1
      LLAD=PO(73)-1
      DO 2700 J=1,JN
      IF(NUMLAD(J).EQ.0) GO TO 2700
      NUM=NUMLAD(J)
      LOCK=0
      DO 2610 K=1,NUM
      CALL CONV21(PO(LLAD+K),LAD,1)
      IF(LAD.GT.0.AND.PO(LCTW+K).GT.0.) LOCK=LOCK+1
 2610 CONTINUE
      IF(LOCK.EQ.0) GO TO 2700
      LUSE=KUSE+LOCK-1
      READ(IN,8050) (CO(K),K=KUSE,LUSE)
      IF(IBUG.EQ.1) WRITE(IODBUG,8050) (CO(K),K=KUSE,LUSE)
      KUSE=LUSE+1
      LCTW=LCTW+NUM
      LLAD=LLAD+NUM
 2700 CONTINUE
C
      IUSEC=IUSEC+NLDM
      CALL CHECKC(IUSEC,LEFTC,NERR)
      IF(NERR.EQ.1) IUSEC=0
      IF(NERR.EQ.1) GO TO 9000
      PO(125)=KUSE+0.01
C
      LCTW=PO(70)-1
      LLAD=PO(73)-1
      DO 2710 J=1,JN
      LOCK=0
      IF(NUMLAD(J).EQ.0) GO TO 2710
      NUM=NUMLAD(J)
      DO 2705 K=1,NUM
      CALL CONV21(PO(LLAD+K),LAD,1)
      IF(LAD.GT.0.AND.PO(LCTW+K).GT.0.) LOCK=LOCK+1
 2705 CONTINUE
      IF(LOCK.GT.0) CALL REDI21(CO(KUSE),LOCK,0,IDUMM)
      KUSE=KUSE+LOCK
      LCTW=LCTW+NUM
      LLAD=LLAD+NUM
 2710 CONTINUE
C
 2800 PO(126)=IUSEC+0.01
C
C
C         STORE IN PO ARRAY THE FOLLOWING PARAMETER:
C
C               DONE    -- MESAGE TO BE WRITTEN AT END OF INPUT DECK
C
C
      PO(55)=IUSEP+1.01
C
      KUSE=IUSEP
      IUSEP=IUSEP+18
      CALL CHECKP(IUSEP,LEFTP,NERR)
      IF(NERR.EQ.1) IUSEP=0
      IF(NERR.EQ.1) GO TO 9000
C
      READ(IN,8070) (PO(KUSE+N),N=1,18)
      IF(IBUG.EQ.1) WRITE(IODBUG,8170) (PO(KUSE+N),N=1,18)
C
C
C          STORE IN PO ARRAY THE K DIMENSIONAL VALUES:
C
C                K1  -- MAXIMUM NO. OF LOCKS AND DAMS ON ANY RIVER
C                K2  -- TOTAL NO. OF STORAGE HYDROGRAPHS IN SYSTEM
C                K3  -- TOTAL NO. OF GAGING STATIONS ON ALL RIVERS
C                K4  -- TOTAL NO. OF COMPUTATIONAL POINTS IN SYSTEM
C                K5  -- TOTAL NO. OF LOCKS AND DAMS ON ANY RIVER
C                K6  -- MAXIMUM NO. OF MANNING'S N VALUES IN ANY REACH
C                K7  -- MAXIMUM NO. OF WATER SURFACE ELEVATION VS TOP
C                       WIDTH VALUES AT ANY CROSS SECTION
C                K8  -- MAXIMUM NO. OF LATERAL INFLOWS ON ANY RIVER
C                K9  -- MAXIMUM NO. OF WATER SURFACE ELEVATION VS TOP
C                       WIDTH VALUES FOR ANY OFF-CHANNEL STORAGE
C                K10 -- MAXIMUM NO. OF VALUES IN A MATRIX
C                K11 -- TOTAL NO. OF LATERAL INFLOWS ON ALL RIVERS
C                K12 -- TOTAL NO. OF DUMMY STATIONS CREATED USING THE
C                       AUTOMATIC CALIBRATION OPTION.
C                K13 -- TOTAL NO. OF STATIONS WITH DIVERGENCE IN SYSTEM
C                K14 -- TOTAL NO. OF REACHES WITH LEVEE OVERTOPPING
C
C
      K1=NLADJ
      K2=NSRR
      K3=NRTT
      K4=NBB
      K5=NLADD
      K6=NCML
      K7=NCS
      K8=NQLJ
      K9=NCSS
      K10=NBJ*2
      K11=NTQL
      K12=IDUM
      K13=NTDV
      K14=NWJJ
C
      PO(1)=IVER+0.01
      PO(2)=K1+0.01
      PO(3)=K2+0.01
      PO(4)=K3+0.01
      PO(5)=K4+0.01
      PO(6)=K5+0.01
      PO(7)=K6+0.01
      PO(8)=K7+0.01
      PO(9)=K8+0.01
      PO(10)=K9+0.01
      PO(11)=K10+0.01
      PO(12)=K11+0.01
C
      PO(13)=K12+0.01
      PO(113)=K13+0.01
      PO(115)=NTDV+0.01
      PO(116)=NLDM+0.01
      PO(118)=K14+0.01
      PO(119)=IDUM+0.01
C
      DO 2900 K=2,13
 2900 IF(PO(K).LE.0.01) PO(K)=1.01
      IF(PO(113).LE.0.01) PO(113)=1.01
      PO(36)=NYQD+0.01
C
C
C        DETERMINE THE AMOUNT OF WORK SPACE NEEDED IN THE D ARRAY
C        FOR THE FOLLOWING PARAMETERS (39):
C
C            C,D,ICQ,ICY,LLQT,LQT,NN2,NS,NSITR,QC,QD,QI,QII,QJ,QU,
C            VC,VD,VU,WF,XX,YC,YD,YII,YJ,YU,ITR,DDX,NCSSST,NUMLDT,
C            QLLT,YQD,QYQD,IFLDIV,CCO,QLEV,ST0,QT0,YMX,IMX
C
C
      LZEND=JN*10 + K3*2 + K4*14 + K8*2 + K10*6 + K13 + NBMAX*4 +
     *      NYQD*225 + IUSEC
C
      PO(127)=LZEND+0.01
 8000 FORMAT(7I10)
 8100 FORMAT(1H ,10X,7I10)
 8010 FORMAT(2I10,4F10.2)
 8110 FORMAT(1H ,10X,2I10,4F10.2)
 8020 FORMAT(7F10.0)
 8120 FORMAT(1H ,10X,7F10.0)
 8030 FORMAT(7F10.6)
 8130 FORMAT(1H ,10X,7F10.6)
 8040 FORMAT(2A4,2X,A4,1X,I5,2F10.0)
 8140 FORMAT(1H ,10X,2A4,2X,A4,1X,I5,2F10.2)
 8050 FORMAT(7F10.2)
 8150 FORMAT(1H ,10X,7F10.2)
 8155 FORMAT(1H ,10X,7F10.4)
 8060 FORMAT(2A4,2X,A4,6X,2F10.0)
 8160 FORMAT(1H ,10X,2A4,2X,A4,6X,2F12.2)
 8070 FORMAT(18A4)
 8170 FORMAT(1H ,10X,18A4)
 8080 FORMAT(I10,3F10.2,I10)
 8180 FORMAT(1H ,10X,I10,3F10.2,I10)
 8090 FORMAT(2A4,2X,A4,1X,A4)
 8190 FORMAT(1H ,10X,2A4,2X,A4,1X,A4)
 9000 IF(ITRACE.EQ.1) WRITE(IODBUG,9010) SNAME
 9010 FORMAT(1H0,2H**,1X,2A4,8H EXITED.)
CCC      LONT=PO(76)
      RETURN
      END
