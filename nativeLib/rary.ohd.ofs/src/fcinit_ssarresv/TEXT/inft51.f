C MEMBER INFT51
C-----------------------------------------------------------------
C
C@PROCESS LVL(77)
C
      SUBROUTINE INFT51(WK,IUSEW,LEFTW,NTINF)
C
C DESC GET TIME-SERIES INFO FOR INFLOW SUB-SECTION OF OPERATION 51
C
C-------------------------------------------------------------------
C  ARGS:
C     WK - ARRAY TO HOLD ENCODED TIME-SERIES INFO
C    IUSEW - NUMBER OF WORDS ALREADY USED IN WORK ARRAY
C    LEFTW - NUMBER OF WORDS LEFT IN WORK ARRAY
C    NTINF - NUMBER OF WORDS NEEDED TO STORE TS INFO
C-------------------------------------------------------------------
C
C  KUANG HSU - HRL - APRIL 1994
C----------------------------------------------------------------
      INCLUDE 'common/read51'
      INCLUDE 'common/fld51'
      INCLUDE 'common/comn51'
      INCLUDE 'common/fdbug'
C
      DIMENSION KEYWDS(2,5),LKEYWD(5),UC(2),DIM(2),WK(1)
      DIMENSION TSID(2,2),DTYPE(2),IDT(2),TSIO(2)
      LOGICAL RQFND,NRQFND,TSOK(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_ssarresv/RCS/inft51.f,v $
     . $',                                                             '
     .$Id: inft51.f,v 1.1 1996/03/21 14:28:26 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA KEYWDS/
     .            4HINST,4HQI1 ,4HINST,4HQI2 ,
     .            4HENDT,4H    ,4HENDT,4HS   ,
     .            4HENDI,4HNFLW/
      DATA LKEYWD/2,2,1,2,2/
      DATA NKEYWD/5/
      DATA NDKEY/2/
C
      DATA UC/4HCMS ,4HCMS /
      DATA DIM/4HL3/T,4HL3/T/
      DATA BLANK/4H    /
C
      DATA TSIO/0.01,0.01/
C
C  INITIALIZE LOCAL VARIABLES
C
      NTINF = 0
      USEDUP = .FALSE.
      RQFND = .FALSE.
      NRQFND = .FALSE.
C
C   ITIALIZE TIME-SERIES ID'S TO BLANKS
C
      DO 5 I=1,2
      TSID(1,I) = BLANK
      TSID(2,I) = BLANK
      TSOK(I) = .FALSE.
 5    CONTINUE
C
C----------------------------------------------------------------
C  LOOK FOR PROPER TIME-SERIES KEYWORDS
C
   10 CONTINUE
      NUMFLD = 0
      CALL UFLD51(NUMFLD,IERF)
      IF (IERF.GT.0) GO TO 9000
C
   20 CONTINUE
      NUMWD = (LEN-1)/4 + 1
      IDEST = IKEY26(CHAR,NUMWD,KEYWDS,LKEYWD,NKEYWD,NDKEY) + 1
C
      GO TO (100,200,300,400,400,500) , IDEST
C
C------------------------------------------------------------
C  NO VALID KEYWORD FOUND
C
  100 CONTINUE
      CALL STER51(1,1)
      GO TO 10
C
C-----------------------------------------------------------------------
C AN OPTIONAL TIME-SERIES KEYWORD HAS BEEN FOUND. WE MUST NOW GET
C  THE TS ID, DATA TYPE, AND TIME INTERVAL.  IF THIS TYPE OF
C  TS HAS ALREADY BEEN FOUND, SIGNAL AN ERROR.
C
  200 CONTINUE
      ID = IDEST-1
      IF (.NOT.NRQFND) GO TO 210
C
      CALL STER51(44,1)
      GO TO 10
C
C  SIGNAL THAT TIME-SERIES HAS BEEN FOUND AND GET NEXT THREE FIELDS
C  ON LINE
C
  210 CONTINUE
      NRQFND = .TRUE.
C
      CALL TSID51(TSID(1,ID),DTYPE(ID),IDT(ID),TSOK(ID))
C
      IF (.NOT.TSOK(ID)) GO TO 10
C
C  SEE IF TIME-SERIES EXISTS
C
      ICHK = 0
      CALL CHEKTS(TSID(1,ID),DTYPE(ID),IDT(ID),ICHK,DCODE,0,1,IERCK)
      IF (IBUG.GE.2) WRITE(IODBUG,1666) ICHK
 1666 FORMAT('  VALUE OF ICHK = ',I10)
C
      IF (IERCK.NE.0) THEN
C  TIME-SERIES DOES NOT EXIST OR MISSING DATA NOT ALLOWED
C
        CALL STER51(45,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C  CHECK UNITS FOR THIS TIME-SERIES
C
      IX = ID
      CALL FDCODE(DTYPE(ID),UCODE,DCODE,IX,IX,X,IX,IERD)
C
      IF (UCODE.NE.UC(ID)) THEN
        CALL STRN51(93,1,UCODE,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C  CHECK DIMENSIONS AGAINST ALLOWED FOR THIS TIME SERIES.
C
      IF (DCODE.NE.DIM(ID)) THEN
        CALL STER51(46,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C     TIME INTERVAL MUST BE BETWEEN 1 - 24
C
      IF (IDT(ID).LE.0 .OR. IDT(ID).GE.25) THEN
        CALL STER51(47,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
      GO TO 10
C
C-------------------------------------------------------------
C  A REQUIRED TIME-SERIES KEYWORD HAS BEEN FOUND. WE MUST NOW GET
C   THE TS ID, DATA TYPE AND TIME INTERVAL. ALSO, IF THIS KEYWORD
C   WAS ALREADY FOUND, SIGNAL AN ERROR.
C
C
C     REQUIRED TYPES IS: INSTQI2
C
  300 CONTINUE
      ID = IDEST-1
      IF (.NOT.RQFND) GO TO 310
C
      CALL STER51(44,1)
      GO TO 10
C
C  SIGNAL THAT THIS TIME-SERIES HAS BEEN FOUND, AND GO GET NEXT THREE
C  FIELDS ON LINE.
C
  310 CONTINUE
      RQFND = .TRUE.
C
      CALL TSID51(TSID(1,ID),DTYPE(ID),IDT(ID),TSOK(ID))
C
      IF (.NOT.TSOK(ID)) GO TO 10
C
C  SEE IF TIME-SERIES EXISTS
C
      ICHK = 0
      CALL CHEKTS(TSID(1,ID),DTYPE(ID),IDT(ID),ICHK,DCODE,0,1,IERCK)
      IF (IBUG.GE.2) WRITE(IODBUG,1666) ICHK
C
      IF (IERCK.NE.0) THEN
C  TIME-SERIES DOES NOT EXIST OR MISSING DATA NOT ALLOWED
C
        CALL STER51(45,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C  CHECK UNITS FOR THIS TIME-SERIES
C
      IX = ID
      CALL FDCODE(DTYPE(ID),UCODE,DCODE,IX,IX,X,IX,IERD)
C
      IF (UCODE.NE.UC(ID)) THEN
        CALL STRN51(93,1,UCODE,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C  CHECK DIMENSIONS AGAINST ALLOWED FOR THIS TIME SERIES.
C
      IF (DCODE.NE.DIM(ID)) THEN
        CALL STER51(46,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
C     TIME INTERVAL MUST BE BETWEEN 1 - 24
C
      IF (IDT(ID).LE.0 .OR. IDT(ID).GE.25) THEN
        CALL STER51(47,1)
        TSOK(ID) = .FALSE.
        GO TO 10
      END IF
C
      GO TO 10
C
C
C--------------------------------------------------------------------
C  'ENDT' HAS BEEN FOUND, STORE TS INFO
C    1) INSTQI1 (INPUT) -- OPTIONAL
C    2) INSTQI2 (INPUT)
C
  400 CONTINUE
C
C  SET OPERATION TIME INTERVAL
C
      
      IDELT = IDT(2)
      IF(MINODT.LE.0) MINODT = IDELT
C
C--------------------------------------------------------------------
C  NOW STORE OPTIONAL TIME-SERIES WITH NO ERRORS TO BE STORED FULLY. 
C  IF THEY HAVEN'T BEEN DEFINED, AN ALL BLANK ID IS STORED IN WORK ARRAY
C
      I=1
C
C  IF AN OPTIONAL TIME-SERIES HASN'T BEEN ENTERED, JUST STORE BLANKS
C
      IF (.NOT.NRQFND) GO TO 480
C
C  IF AN ERROR OCCURRED ON INPUT, SKIP TO NEXT TIME-SERIES.
C
      IF (.NOT.TSOK(I)) GO TO 490
C
C  STORE THE ID, DATA TYPE AND TIME INTERVAL
C
      CALL FLWK51(WK,IUSEW,LEFTW,TSID(1,I),501)
      CALL FLWK51(WK,IUSEW,LEFTW,TSID(2,I),501)
      CALL FLWK51(WK,IUSEW,LEFTW,DTYPE(I),501)
C
C     TIME INTERVAL OF THE TIME SERIES MUST BE THE SAME AS
C     OPERATION TIME INTERVAL
C
      IF (IDT(I).NE.MINODT) THEN
        CALL STER51(48,1)
        NTINF = NTINF + 5
        GO TO 9999
      END IF
C
      DT = IDT(I) + 0.01
      CALL FLWK51(WK,IUSEW,LEFTW,DT,501)
      CALL FLWK51(WK,IUSEW,LEFTW,TSIO(I),501)
      NTINF = NTINF + 5
      GO TO 490
C
  480 CONTINUE
      CALL FLWK51(WK,IUSEW,LEFTW,BLANK,501)
      CALL FLWK51(WK,IUSEW,LEFTW,BLANK,501)
      CALL FLWK51(WK,IUSEW,LEFTW,BLANK,501)
      CALL FLWK51(WK,IUSEW,LEFTW,BLANK,501)
      CALL FLWK51(WK,IUSEW,LEFTW,BLANK,501)
      NTINF = NTINF + 5
C
  490 CONTINUE
C
C  THE REQUIRED TIME-SERIES MUST BE ENTERED WITH NO ERRORS
C
C  IF NOT OK, (EITHER NOT FOUND OR ERRORS ON INPUT) SKIP TO NEXT TS.
C
      I=2
      IF (RQFND) GO TO 405
C
      CALL STRN51(59,1,KEYWDS(1,I),LKEYWD(I))
      GO TO 440
C
  405 CONTINUE
      IF (.NOT.TSOK(I)) GO TO 440
C
C  STORE THE ID, DATATYPE, AND TIME INTERVAL.
C
      CALL FLWK51(WK,IUSEW,LEFTW,TSID(1,I),501)
      CALL FLWK51(WK,IUSEW,LEFTW,TSID(2,I),501)
      CALL FLWK51(WK,IUSEW,LEFTW,DTYPE(I),501)
      DT = IDT(I) + 0.01
      CALL FLWK51(WK,IUSEW,LEFTW,DT,501)
      CALL FLWK51(WK,IUSEW,LEFTW,TSIO(I),501)
C
      NTINF = NTINF + 5
C
  440 CONTINUE
      GO TO 9999
C
C-----------------------------------------------------------------------
C  ENDINFLW FOUND WHERE IT SHOULDN'T BE. SIGNAL ERROR AND RETURN
C
  500 CONTINUE
      USEDUP = .TRUE.
      CALL STER51(43,1)
      GO TO 9999
C
 9000 CONTINUE
      IF (IERF.EQ.1) CALL STER51(19,1)
      IF (IERF.EQ.2) CALL STER51(20,1)
      IF (IERF.EQ.3) CALL STER51(21,1)
      IF (IERF.EQ.4) CALL STER51(1,1)
      IF (IERF.NE.3) GO TO 10
      USEDUP = .TRUE.
C
C-------------------------------------------------------
C
 9999 CONTINUE
      RETURN
      END
