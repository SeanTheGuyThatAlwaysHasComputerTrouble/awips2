C MODULE GRTOV
C-----------------------------------------------------------------------
C
C
C
      SUBROUTINE GRTOV (WP, MAXCRD, JCARD, PG24, W6, GP6, ISTATC)
C
C.....THIS IS THE MAIN DRIVER ROUTINE FOR THE RUNTIME MOD MANUAL GRID
C.....POINT DATA OVERRIDE OF THE MARO FUNCTION. THE CARD IMAGES OF THE
C.....MOD CARDS ARE PICKED UP BY ANOTHER ROUTINE AND PASSED TO THE
C.....ROUNTINE IN CHAR. NUM IS THE NUMBER OF CARD IMAGES RETURNED (MAY B
C.....BE ZERO). ISTATC IS A STATUS CODE. ZERO IS OK.
C
C.....THE ARGUMENT LIST FOR GRTOV IS AS FOLLOWS:
C
C.....WP     - A POINTER TO THE NEXT AVAILABLE ADDRESS IN THE 6-HOURLY
C.....         PERCENTAGE DISTRIBUTION ARRAY, W6.
C.....MAXCRD - THE MAXIMUM NUMBER OF RUNTIME MOD CARD IMAGES ALLOWED
C.....         (INCLUDING HEADER LINES) IN THE MARO FUNCTION.
C.....JCARD  - THE ACTUAL NUMBER OF RUNTIME MOD CARD IMAGES USED.
C.....PG24   - ARRAY OF GRID POINT PRECIPITATION
C.....W6     - ARRAY OF SIX HOUR PERCENTAGE WEIGHTS.
C.....GP6    - ARRAY OF SIX HOUR FLAGS FOR GRID POINT.
C.....          GP6(NGRID) = 0  NO SIX HOUR DATA FOR GRID
C.....                          POINT NGRID
C.....          GP6(NGRID) > 0  PERCENT WEIGHTS FOR SIX HOUR
C.....                          DATA FOR GRID POINT NGRID BEGIN
C.....                          AT W6(GP6(NGRID)).
C.....ISTATC - A STATUS CODE PASSED FROM THE HDATEA ROUTINE.
C.....             = 0   NORMAL RETURN, NO ERRORS.
C.....         NOT = 0   ERROR RETURN CODE FROM ROUTINE HDATEA.
C
C.....ORIGINALLY WRITTEN BY
C
C.....JERRY M. NUNN       WGRFC FT. WORTH, TEXAS       SEPTEMBER 1986
C
      INTEGER*2 N6P(4), NRAIN, NFLAG6, PG24(1), W6(1), GP6(1)
      INCLUDE 'gcommon/explicit'
      DIMENSION CHAR(10), JCARD(20,1)
      DIMENSION SNAME(2)
      INTEGER HEAD
C
      INCLUDE 'common/errdat'
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/fctime'
      INCLUDE 'uio'
      INCLUDE 'ufreex'
      INCLUDE 'udebug'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'gcommon/gdate'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_maro/RCS/grtov.f,v $
     . $',                                                             '
     .$Id: grtov.f,v 1.2 1998/07/02 20:34:47 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA SNAME, ZTIME, GPXP /4HGRTO, 4HV   , 4HZ   , 4HGPXP/
C
  900 FORMAT(1H0, '*** GRTOV ENTERED ***')
  901 FORMAT(1H0, '*** EXIT GRTOV -- STATUS CODE = ', I4, ' ***')
  902 FORMAT(1H0, '*** WARNING ***   TOO MANY FIELDS PRESENT IN CARD NO.
     * ', I4, '.', /, 7X, 'FIELD NO. ', I4, ' HAS JUST BEEN PARSED. NO
     *MORE THAN 6 FIELDS ARE PERMITTED ON CARD.', /, 7X, 'REMAINDER OF C
     *ARD IS IGNORED.')
  903 FORMAT(1H0, '*** ROUTINE UFIEL2 CALLED FROM ROUTINE GRTOV --
     * STATUS CODE = ', I4, ' ***', /, 5X, 'CARD NO.', 5X, ' = ', I4,
     * 3X, 'FIELD NO.   = ', I4, 3X, 'FIELD TYPE   = ', I4, /, 5X,
     * 'STARTING COL. = ', I4, 3X, 'ENDING COL. = ', I4, 3X, 'FIELD LENG
     *TH = ', I4, 4X, /, 5X, 'INTEGER VALUE = ', I12, 6X, 'REAL VALUE =
     *', F15.5, /, 5X, 'CHARACTER STRING = ', 10A4, 3X, 'LENGTH = ', I4,
     * /, 5X, 'ASTERISK LOCATION', 4X, ' = ', I4, 7X, 'REPEAT FACTOR',
     * 7X, ' = ', I4, /, 5X, 'LEFT PAREN LOCATION   = ', I4, 7X, 'RIGHT
     *PAREN LOCATION = ', I4, /, 5X, 'AT SIGN LOCATION', 5X, ' = ', I4,
     * 7X, 'AMPERSAND LOCATION   = ', I4, /, 5X, 'EQUAL SIGN LOCATION',
     * 2X, ' = ', I4)
  904 FORMAT(1H0, '*** ERROR ***  FROM ROUTINE GRTOV -- THE MOD HEADE
     *R CARD BEING PROCESSED IS:', //, 5X, 80A1, //, 5X, 'ROUTINE UFIELD
     * RETURNED A STATUS CODE OF ', I4, '. THIS MOD HEADER CARD AND T
     *HE MOD DATA WILL BE IGNORED.', //, 5X, 'PROCESSING CONTINUES BY SE
     *ARCHING FOR THE NEXT MOD HEADER.')
  905 FORMAT(1H0, '*** ERROR ***  FROM ROUTINE GRTOV -- THE MOD HEADE
     *R CARD BEING PROCESSED IS:', /, 5X, 80A1, /, 5X, 'ROUTINE HDATEA
     * RETURNED A STATUS CODE OF ', I4, /, 5X, 'THE DATE FIELD IS INVAL
     *ID. IT CONTAINS EITHER A MONTH, DATE, OR YEAR OUT OF THE PERMISSIB
     *BLE RANGE,', /, 5X, 'OR IT CONTAINS AN INVALID TIME ZONE CODE. COR
     *RECT THE DATE FIELD AND RE-SUBMIT THE JOB.', /, 5X, 'PROCESSING CO
     *NTINUES BY SEARCHING FOR THE NEXT MOD HEADER.')
  906 FORMAT(1H0, '*** ERROR ***  FROM ROUTINE GRTOV -- THE ARGUMENT
     *LIST SUBMITTED IN THE CALL TO THE HDATEA ROUTINE CONTAINS ONE O
     *R MORE INVALID ARGUMENTS.', /, 9X, 'IPACK  = ', I9, 5X, '(VALID RA
     *NGE:    0 TO  1)', /, 9X, 'NHRADD = ', I9, 5X, '(VALID RANGE:  -24
     * TO 24)', /, 9X, 'NHSWCH = ', I9, 5X, '(VALID RANGE:    0 TO  1)',
     * /, 5X, 'THESE ARGUMENTS ARE SET IN THE PROGRAM...AND ARE WERE NOT
     * DESIGNED SO THAT THEY SHOULD BE CHANGED.' /
     *   5X, 'PROCESSING CONTINUES...BUT NO FURTHER RUNTIME ',
     *  'MOD DATA CAN BE PROCESSED.')
  907 FORMAT(1H0, '*** WARNING ***  FROM ROUTINE GRTOV -- THE MOD HEA
     *DER CARD BEING PROCESSED IS:',  /,  5X, 80A1,  /, 5X, 'THE DATE ON
     * THE MOD HEADER CARD IS NOT BETWEEN THE BEGINNING AND ENDING RUNDA
     *TES.',  /, 5X, 'THE BEGINNING RUNDATE IS:', 2X, I2, '/', I2, '/',
     * I4, 2X, I2, A4, 3X, 'JULIAN DAY AND INTERNAL HOUR:', 2X, I6, 2X,
     * I2,  /, 5X, 'THE MOD HEADER DATE IS:', 4X, I2, '/', I2, '/', I4,
     * 2X, I2, A4, 3X, 'JULIAN DAY AND INTERNAL HOUR:', 2X, I6, 2X, I2,
     *  /, 5X, 'THE ENDING RUNDATE IS:', 5X, I2, '/', I2, '/', I4, 2X,
     * I2, A4, 3X, 'JULIAN DAY AND INTERNAL HOUR:', 2X, I6, 2X, I2)
  908 FORMAT(1H0, 5X, 'THE MOD DATA ASSOCIATED WITH THIS MOD HEADER WILL
     * NOT BE PROCESSED.', /, 5X, 'IF YOU WISH TO USE THE MOD DATA...COR
     *RECT THE DATE ON THE MOD HEADER CARD SO THAT IT IS GREATER THAN TH
     *E BEGINNING RUNDATE', /, 5X, 'AND LESS THAN OR EQUAL TO THE ENDING
     * RUNDATE AND RE-SUBMIT THE JOB.', /, 5X, 'PROCESSING WILL CONTINUE
     * BY SEARCHING FOR THE NEXT MOD HEADER.')
C
C.....SET WHERE BLOCK.
C
      IOPNUM = -1
      OPNAME(1) = SNAME(1)
      OPNAME(2) = SNAME(2)
C
      IF(IPTRCE .GE. 1) WRITE(IOPDBG,900)
      IBUG = IPBUG(GPXP)
C
C.....SET STATUS CODE AND UTILITY I/O UNITS.
C
      ISTATC = 0
      LP = IPR
      ICD = IN
      LPD = IOPDBG
      LPE = IOERR
C
C.....SET INITIAL VALUES OF VARIABLES.
C
      IERROR = 0
      LENDMD = 0
      LCHAR = 10
      NFLD = 0
      ISTRT = 0
      NRDCRD = 0
      NPGRID = -1
      IPCODE = 1
      ICKDAT = 0
      HEAD = 0
      NFLAG6 = 0
C
C.....PROCESS THE NEXT FIELD ON THE DATA CARD IMAGE.
C
  100 CALL UFIEL2(MAXCRD, JCARD, NFLD, ISTRT, LENGTH, ITYPE, NREP,
     * INTEGR, REAL, LCHAR, CHAR, LLPAR, LRPAR, LASK, LATSGN, LAMPS,
     * LEQUAL, ISTATF)
C
      IF(NFLD .EQ. -1) GOTO 250
      JCEND = ISTRT + LENGTH - 1
      IF(IBUG .EQ. 1) WRITE(IOPDBG,903) ISTATF, NRDCRD, NFLD, ITYPE,
     * ISTRT, JCEND, LENGTH, INTEGR, REAL, (CHAR(JP), JP = 1, LCHAR),
     * LCHAR, LASK, NREP, LLPAR, LRPAR, LATSGN, LAMPS, LEQUAL
C
C.....PROCESS EACH VALID FIELD ON A CARD.
C
  110 IF((HEAD .EQ. 1) .AND. (NRDCRD .GT. 1)) GOTO 200
C
C.....PROCESS THE FIRST FIELD IN THE CARD, WHICH MUST BE A MOD HEADER.
C
      CALL GGPXHD(ISTRT, LENGTH, ITYPE, ISTATF, IPCODE, IERROR)
      IF(IERROR .GT. 0) GOTO 800
      HEAD = 1
C
C.....THE SECOND FIELD IN THE MOD HEADER CARD MUST BE A DATE FIELD. CALL
C.....THE FIELD PROCESSING ROUTINE.
C
      CALL UFIEL2(MAXCRD, JCARD, NFLD, ISTRT, LENGTH, ITYPE, NREP,
     * INTEGR, REAL, LCHAR, CHAR, LLPAR, LRPAR, LASK, LATSGN, LAMPS,
     * LEQUAL, ISTATF)
      JCEND = ISTRT + LENGTH - 1
      IF(IBUG .EQ. 1) WRITE(IOPDBG,903) ISTATF, NRDCRD, NFLD, ITYPE,
     * ISTRT, JCEND, LENGTH, INTEGR, REAL, (CHAR(JP), JP = 1, LCHAR),
     * LCHAR, LASK, NREP, LLPAR, LRPAR, LATSGN, LAMPS, LEQUAL
      IF(ISTATF .EQ. 0) GOTO 120
      WRITE(IPR,904) (ICDBUF(KP:KP), KP = 1, 80), ISTATF
      HEAD = 0
      NFLD = 0
      CALL ERROR
      GOTO 100
C
C.....UFIEL2 HAS RETURNED A SECOND FIELD. CHECK IT FOR A VALID DATE.
C.....ANY OF THE DATE FIELDS GIVEN IN THE NWSRFS USERS MANUALS IS
C.....PERMITTED, EXCEPT THOSE FORMS THAT INCLUDE AN ASTERISK (*).
C
  120 IPACK  = 0
      NHRADD = 0
      IPRINT = 1
      NHSWCH = 1
C
      CALL HDATEA(LENGTH, ICDBUF(ISTRT:ISTRT), IPACK, NHRADD, NHSWCH,
     * IPRINT, JULDMO, INTHR, JULHMO, ISTATC)
      IF(ISTATC .EQ. 0) GOTO 130
      IF(ISTATC .EQ. 2) GOTO 125
      WRITE(IPR,905) (ICDBUF(KP:KP), KP = 1, 80), ISTATC
      HEAD = 0
      NFLD = 0
      CALL ERROR
      GOTO 100
C
  125 WRITE(IPR,906) IPACK, NHRADD, NHSWCH
      HEAD = 0
      CALL ERROR
      GOTO 999
C
C.....CHECK THE RELATION OF THE DATE ON THE MOD HEADER CARD WITH THE
C.....BEGINNING AND ENDING RUNDATES.
C
C.....THE MOD RUNDATE MUST BE GREATER THAN THE BEGINNING RUNDATE AND
C.....LESS THAN OR EQUAL TO THE ENDING RUNDATE, OR THE DATE IS IN ERROR.
C
  130 IF(JULDMO .GT. IBEGDA) GOTO 140
      IF(JULHMO .GT. IBEGHR) GOTO 140
      GOTO 150
C
  140 IF(JULDMO .LE. ICURDA) GOTO 100
      IF(JULHMO .LE. ICURHR) GOTO 100
C
C.....MOD DATE OUT OF RANGE. GET MONTH/DATE/YEAR AND WRITE ERROR MESSAGE
C
  150 CALL MDYH2(JULDMO, JULHMO, MMOD, IDMOD, NYRMOD, IHRMOD, NOUTZ2,
     * NOUTD2, ZTIME)
      WRITE(IPR,907) (ICDBUF(KP:KP), KP = 1, 80), IHBMO, IHBDAT, IHBYR,
     * IHBHRS, ZTIME, IBEGDA, IHRRUN, MMOD, IDMOD, NYRMOD, IHRMOD,
     * ZTIME, JULDMO, JULHMO, IHYMO, IHYDAT, IHYYR, IHYHRS, ZTIME,
     * ICURDA, LHRRUN
      WRITE(IPR,908)
      HEAD = 0
      NFLD = 0
      CALL WARN
      GOTO 100
C
C
C.....PROCESS SUCCEEDING CARD(S). IF ONE HASN'T YET FOUND A VALID MOD
C.....HEADER...CONTINUE LOOKING FOR A NEW ONE.
C
  200 IF(HEAD .EQ. 1) GOTO 210
      GOTO 110
C
C.....PROCESS THE INDIVIDUAL FIELDS.
C
  210 IF(NFLD .EQ.  1) GOTO 220
      IF(NFLD .EQ.  2) GOTO 230
      IF(NFLD .EQ.  3) GOTO 240
      IF(NFLD .EQ.  4) GOTO 240
      IF(NFLD .EQ.  5) GOTO 240
      IF(NFLD .EQ.  6) GOTO 240
      IF(NFLD .EQ. -1) GOTO 250
      GOTO 700
C
C.....NFLD = 1. LOOK FOR A GRID POINT ADDRESS...SINCE THIS IS THE FIRST
C.....FIELD IN A LINE FOLLOWING THE TIME HEADER LINE.
C
  220 CALL GGPXGP(NPGRID, WP, ITYPE, INTEGR, REAL, ISTRT, LENGTH,
     * IPCODE, ISTATF, IERROR, LENDMD, N6P, NRAIN, NFLAG6, PG24,
     * W6, GP6)
      IF(IERROR .GT. 0) GOTO 800
      IF(LENDMD .EQ. 1) GOTO 999
C
C.....INITIALIZE THE PRECIPITATION HOLDING VARIABLES...BEFORE GOING
C.....ON TO PROCESS THE NEXT FIELDS...WHICH ARE THE PRECIPITATION
C.....AMOUNT FIELDS.
C
      NRAIN = MSGGRD
C
      DO 225 KP = 1, 4
      N6P(KP) = 0
  225 CONTINUE
C
      GOTO 100
C
C.....NFLD = 2. LOOK FOR A PRECIPITATION AMOUNT FOR THE 24 HOUR PERIOD.
C
  230 CALL GPX24(IPCODE, ITYPE, INTEGR, REAL, ISTATF, IERROR, NPGRID,
     * NRAIN)
      IF(IERROR .GT. 0) GOTO 800
      GOTO 100
C
C.....NFLD = 3, 4, 5, OR 6. LOOK FOR A SIX HOUR PRECIPITATION AMOUNT.
C
C
  240 IF(NFLAG6 .EQ. 0) NFLAG6 = 1
C
      CALL GPXSIX(MAXCRD, JCARD, NFLD, IPCODE, NP, ITYPE, INTEGR, REAL,
     * ISTRT, LENGTH, LASK, NREP, LCHAR, CHAR, ISTATF, IERROR, N6P)
      IF(IERROR .GT. 0) GOTO 800
      GOTO 100
C
C.....AT END OF LAST FIELD, SET END-OF-MOD FLAG TO 1.
C
  250 LENDMD = 1
      GOTO 220
C
C.....WRITE MESSAGE IF MORE THAN 6 FIELDS ARE PROCESSED, BUT CONTINUE
C.....WITH PROCESSING.
C
  700 WRITE(IPR,902) NRDCRD, NFLD
      CALL WARN
      GOTO 100
C
C.....CALL THE ERROR CODE ROUTINE WITH THE APPROPRIATE ERROR CODE.
C
  800 CALL GPXERR(IERROR, IPCODE, NPGRID, HEAD, NFLAG6, NFLD)
C
C.....IF THE ERROR WAS ON THE LAST LINE IN THE MOD DATA SET...GET OUT
C.....OF THE ROUTINE.
C
      IF(LENDMD .EQ. 1) GOTO 999
      GOTO 100
C
C.....END OF PROCESSING...RETURN
C
  999 IF(IPTRCE .GE. 1) WRITE(IOPDBG,901) ISTATC
C
      RETURN
      END
