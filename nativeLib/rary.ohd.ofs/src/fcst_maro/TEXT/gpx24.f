C MEMBER GPX24
C  (from old member PPGPX24)
C
      SUBROUTINE GPX24(IPCODE, ITYPE, INTEGR, REAL, ISTATF, IERROR,
     * NPGRID, NRAIN)
C
C.....THIS SUBROUTINE PROCESSES 24 HR PRECIPITATION FOR THE GRID POINT
C.....PRECIPITATION RUNTIME MOD.
C
C.....ARGUMENT LIST IS
C
C.....IPCODE - PROCESS CODE.
C.....          = 1   PROCESS THIS SUBROUTINE
C.....          = 0   DO NOT PROCESS THIS SUBROUTINE
C.....ITYPE  - THE FIELD TYPE (FROM UFIEL2).
C.....INTEGR - INTEGER VALUE OF FIELD (FROM UFIEL2).
C.....REAL   - REAL VALUE OF FIELD (FROM UFIEL2).
C.....ISTATF - STATUS CODE RETURNED FROM UFIEL2.
C.....IERROR - ERROR CODE FOR SUBROUTINE.
C.....NPGRID - GRID POINT ADDRESS PICKED UP BY RUNTIME MOD PROCESSING.
C.....         HOWEVER...IN THIS SUBROUTINE THE ONLY TIME NPGRID IS
C.....         SET IS WHEN IT IS SET TO -1, INDICATING THAT THE ENTIRE
C.....         REPORT LINE IS IN ERROR, AND SHOULD BE DISCARDED.
C.....NRAIN  - THE 24 HR PRECIPITATION AMOUNT
C
C
C.....ORIGINALLY WRITTEN BY
C
C.....JERRY M. NUNN       WGRFC FT. WORTH, TEXAS       SEPTEMBER 1986
C
      INTEGER*2 IT, NRAIN
      INCLUDE 'gcommon/explicit'
      DIMENSION SNAME(2)
C
      INCLUDE 'common/where'
      INCLUDE 'gcommon/gsize'
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/errdat'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_maro/RCS/gpx24.f,v $
     . $',                                                             '
     .$Id: gpx24.f,v 1.1 1995/09/17 19:02:21 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SNAME /4hGPX2, 4h4   /
C
  900 FORMAT(1H0, '***** WARNING *****   PRECIPITATION AMOUNT OF ',
     * F8.2, ' EXCEEDS THE MAXIMUM AMOUNT OF ', F8.2, /, 7X, 'CHECK THE
     *INPUT FOR POSSIBLE TYPO ERROR.')
  901 FORMAT(1H0, '***** ERROR *****   PRECIPITATION AMOUNT OF ', F8.2,
     * ' IS LESS THAN ZERO AND NOT EQUAL TO A PERMISSIBLE MISSING CODE')
  902 FORMAT(1H0, '*** GPX24 ENTERED -- PROCESS CODE IS ', I2, ' ***')
  903 FORMAT(1H0, '*** EXIT GPX24 -- ERROR CODE IS ', I2, ' ***')
      INCLUDE 'gcommon/setwhere'
C
      IERROR = 0
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,902) IPCODE
C
C.....TEST PROCESS CODE.
C
      IF(IPCODE .EQ. 0) GOTO 999
C
C.....TEST RETURN CODE FROM UFIEL2 TO CHECK IF ALL WAS OK.
C
      IF(ISTATF .NE. 0) GOTO 500
C
C.....CHECK TYPE CODE.
C
      IF(ITYPE .EQ. 0) GOTO 200
      IF(ITYPE .EQ. 1) GOTO 100
      GOTO 500
C
C.....MAKE INTEGER OUT OF REAL NUMBER.
C
  100 INTEGR = REAL*100. + 0.5
C
C.....CHECK MAGNITUDE OF VALUE FOR PERMISSIBLE RANGE. IF VALUE < 0, IT
C.....MAY BE MISSING CODE.
C
  200 IF(INTEGR .LT. 0) GOTO 400
C
C.....CHECK IF VALUE IS ABOVE INPUT MAX.
C
      IF(INTEGR .LE. MAXPCP) GOTO 300
C
      PX24 = INTEGR
      PMAX = MAXPCP
      PX24 = PX24/100. + 0.005
      PMAX = PMAX/100. + 0.005
      WRITE(IOERR,900) PX24, PMAX
      IERROR = 8
      NPGRID = -1
      NRAIN  =  MSGGRD
      GOTO 999
C
C.....STORE VALUE AND EXIT.
C
  300 NRAIN = INTEGR
      GOTO 999
C
C.....CHECK FOR MISSING CODE.
C
  400 IT = INTEGR
      IF(IT .EQ. MSGGRD) GOTO 300
C
C.....WRITE ERROR MESSAGE.
C
      PX24 = INTEGR
      PX24 = PX24/100. - 0.005
      WRITE(IOERR,901) PX24
C
C.....SET ERROR CODE
C
  500 IERROR = 5
      NPGRID = -1
      NRAIN  = MSGGRD
C
  999 IF(IPTRCE .GE. 3) WRITE(IOPDBG,903) IERROR
      RETURN
      END
