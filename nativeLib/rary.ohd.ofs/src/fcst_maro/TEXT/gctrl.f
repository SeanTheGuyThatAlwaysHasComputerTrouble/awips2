C MEMBER GCTRL
C  (from old member PPGCTRL)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 06/09/94.15:10:26 BY $WC20SV
C
C @PROCESS LVL(77)
C
      SUBROUTINE GCTRL (ISTATC)
C
C.....NOTE:  THE ABOVE LINE CONTAINING THE ROUTINE NAME WILL REMAIN
C.....'COMMENTED OUT' UNTIL THE FT. WORTH MEAN AREAL RUNOFF (MARO)
C.....FUNCTION IS FULLY INTEGRATED INTO NWSRFS VERSION 5.0
C
C....THIS IS THE MAIN CONTROL ROUTINE FOR THE NWSRFS VERSION 5.0 MEAN
C.....AREAL RUNOFF (MARO) FUNCTION, AS USED IN THE WGRFC FT. WORTH
C....FORECAST MODELS.
C
C.....MARO COMPUTATIONS IN THE WGRFC FT. WORTH MODEL DIFFER FROM MARO
C.....COMPUTATIONS IN OTHER SOIL MOISTURE ACCOUNTING METHODS BECAUSE
C.....RUNOFF IS COMPUTED FROM PRECIPITATION FOR EACH PRECIPITATION
C.....REPORTING STATION, AND NOT FROM MEAN AREAL PRECIPITATION (MAP)
C.....VALUE. SO THE MARO IS AN AVERAGE OF THE POINT RUNOFF REPORTED AT
C.....EACH OF THE INDIVIDUAL 'PRECIPITATION STATIONS' ASSIGNED TO THE
C.....MARO AREA.
C
C.....THE WGRFC OPERATES UNDER A GRID SYSTEM, WHICH IS A 'NETWORK' OF
C.....PRECIPITATON STATIONS ON A (ROUGHLY) 6 MILE GRID. THEREFORE, THE
C.....STATIONS ASSIGNED TO THE MARO AREA ARE SIMPLY THE GRID POINTS
C.....LOCATED WITHIN THE MARO AREA.
C
C.....HERE IS THE ARGUMENT LIST TO ROUTINE GCTRL:
C
C.....ISTATC - A STATUS CODE, WHICH IS FOR THE MOST PART RETURNED FROM
C.....         OTHER ROUTINES THAT GCTRL CALLS.
C.....
C.....         = 0  NORMAL RETURN.
C.....     NOT = 0  ABNORMAL RETURN. ERROR(S) PRESENT.
C
C.....INITIALLY WRITTEN BY -- JERRY M. NUNN, WGRFC FT. WORTH TEXAS
C.....APRIL 1986
C
C
      INTEGER*2 NDATA(40000), IZERO, APIG(10000), IOVF(4000), GP6(10000)
      INTEGER*2 W6(6000), PG24(10000)
      INCLUDE 'gcommon/explicit'
C
      DIMENSION BLNKID(2), ITIME(8), WORK(6000), SNAME(2), USERID(2)
      DIMENSION MONNM(12), BOXID(2), IWORK(6000), GRIDPX(2)
      DIMENSION PGP24(4000), PGMDR(800)
C
C
      INCLUDE 'common/errdat'
      INCLUDE 'common/killcd'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
      INCLUDE 'gcommon/gmdr'
      INCLUDE 'gcommon/gdispl'
      INCLUDE 'gcommon/gdate'
      INCLUDE 'common/fctime'
      INCLUDE 'common/x'
      INCLUDE 'gcommon/gsize'
      INCLUDE 'gcommon/gopt'
      INCLUDE 'gcommon/gboxot'
      INCLUDE 'udebug'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'udsi'
      INCLUDE 'gcommon/boxtrc'
C
      EQUIVALENCE (NDATA(1),X(1))
      EQUIVALENCE (NDATA(1),APIG(1)),(NDATA(10001),IOVF(1))
      EQUIVALENCE (NDATA(14001),GP6(1)),(NDATA(24001),W6(1))
      EQUIVALENCE (NDATA(30001),PG24(1))
      EQUIVALENCE (WORK(1),NDATA(1)),(IWORK(1),NDATA(1))
      EQUIVALENCE (NDATA(9101),PGP24(1)),(NDATA(6401),PGMDR(1))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_maro/RCS/gctrl.f,v $
     . $',                                                             '
     .$Id: gctrl.f,v 1.1 1995/09/17 19:01:18 dws Exp $
     . $' /
C    ===================================================================
C
C
C   DATA BLNKID, USER, GCOM /4H    , 4H    , 4HUSER, 4HGCOM/
      DATA BLNKID /4H    , 4H    /
C   DATA PP24, GP24, PPVR, PPST /4HPP24, 4HGP24, 4HPPVR, 4HPPST/
      DATA PP24, GP24, PPVR /4HPP24, 4HGP24, 4HPPVR/
C   DATA MDR6, GMDR, GBOX, GAPI /4HMDR6, 4HGMDR, 4HGBOX, 4HGAPI/
      DATA MDR6, GMDR /4HMDR6, 4HGMDR/
C   DATA RFRO, MAPG, MAPI, RMARO /4HRFRO, 4HMAPG, 4HMAPI, 4HMARO/
C   DATA GENL, GMRO, GMPG, GEST /4HGENL, 4HGMRO, 4HGMPG, 4HGEST/
C   DATA GTRN, QUAD, GRNF, GDTM /4HGTRN, 4HQUAD, 4HGRNF, 4HGDTM/
C   DATA GRDN, GPXP, GADR, PTRS /4HGRDN, 4HGPXP, 4HGADR, 4HPTRS/
      DATA GADR, PTRS /4HGADR, 4HPTRS/
      DATA GCPU, PVRX, PARM, DATA /4HGCPU, 4HPVRX, 4HPARM, 4HDATA/
      DATA GRIDPX /4HGRID, 4HPX  /
      DATA GPG24, GGP6 /4HPG24, 4HGP6 /
      DATA SNAME /4HGCTR, 4HL   /
C   DATA MONNM /4HJAN , 4HFEB , 4HMAR , 4HAPR , 4HMAY , 4HJUN ,
C  *            4HJUL , 4HAUG , 4HSEP , 4HOCT , 4HNOV , 4HDEC/
      DATA IZERO /0/
C
C.....FORMATS
C
  901 FORMAT(1H0, '*** GCTRL ENTERED ***')
  902 FORMAT(1H0, '*** EXIT GCTRL ***')
  903 FORMAT(1H0, '*** WARNING ***  THERE IS NO MDR DATA AVAILABLE FOR',
     * 1X, I2, '/', I2, '/', I4, /, 5X, 'THE MDR DATA AVAILABILITY FLAG
     * WILL BE RE-SET TO ', I4, '. PROCESSING CONTINUES.')
  904 FORMAT(1H0, '** FATAL ERROR **  THE ABOVE ERROR IS FATAL')
  905 FORMAT(1H0, '*** WARNING ***  ROUTINE RPDDTE WAS CALLED TO OBTA
     *IN THE FIRST AND LAST JULIAN DATES ON THE PPDB FOR DATA TYPE ',
     * A4, '.', /, 5X, 'RPDDTE RETURNED WITH A STATUS CODE OF ', I4,
     * '.')
  906 FORMAT(1H0, '*** NEXT AVAILABLE SLOT IN W6 ARRAY (WP) = ', I10,
     * ' ***')
  908 FORMAT(1H0, '** FATAL ERROR **  MARO FUNCTION HALTED DUE TO ERROR
     *IN ROUTINE RPDFIL FOR DATA TYPE ', A4, 2X, 'STATUS CODE = ',
     * I4)
  909 FORMAT(1H0, '** FATAL ERROR **  WORKING SPACE REQUIREMENTS FOR ',
     * A4, ' DATA AND PARAMETRIC ARRAYS EXCEED LIMITS OF WORKING ARRAY',
     * /, 6X, 'LIMITS OF WORKING ARRAY IS ', I6, ' SLOTS, BUT REQUIREMEN
     *TS ARE FOR ', I6, ' SLOTS')
  910 FORMAT(1H0, '*** NOTE ***  THIS IS A PARTIAL DAY''S RUN. THEREFORE
     *...NO CALL TO WRITE PG24 TO THE PPDB WILL BE MADE.')
  911 FORMAT(1H0, '** FATAL ERROR **  FATAL ERROR IN ROUTINE GMDRRF. RET
     *URN CODE = ', I4, /, 6X, 'MARO FUNCTION HALTED')
  912 FORMAT(1H0, '** FATAL ERROR **  ROUTINE GTRNSF ATTEMPTED TO WRI
     *TE INTO AN AREA BEYOND THE LIMITS OF THE WORK AREA.', /, 6X, 'MARO
     * FUNCTION HALTED.')
  913 FORMAT(1H0, '**WARNING**  RUNTIME MOD DATA RETRIEVAL ERROR OCCURRE
     *D IN MOD DATA FILE.', /, 1X, 'PROCESSING WILL CONTINUE -- BUT NO R
     *UNTIME MOD DATA WILL BE AVAILABLE.')
  914 FORMAT(1H0, '**WARNING**  MAJOR ERROR IN RUNTIME MOD INPUT DATE CA
     *RD.', /, 1X, 'PROCESSING CONTINUES ...... BUT NO RUNTIME MOD DATA
     * IS AVAILABLE.')
  915 FORMAT(1H0, '** FATAL ERROR **  ERROR IN PRECIPITATION ESTIMATION
     * ROUTINE GESTMT. STATUS CODE = ', I4, /, 1X, '  MARO FUNCTION H
     *ALTED.')
  916 FORMAT(1H0, 'RETURNED FROM RPPREC -- FILE TYPE = ', A4, ' STATUS C
     *ODE = ', I4)
  919 FORMAT(1H0, '*** PP24 DATA/PTR ARRAY BEING PLACED IN THE NDATA ARR
     *AY ***', /, 5X, 'STARTING ADDRESS OF PP24 DATA ARRAY', 7X, '= ',
     * I5, /, 5X, 'NUMBER OF I*2 WORDS IN PP24 DATA ARRAY', 4X, '= ',
     * I5, /, 5X, 'STARTING ADDRESS OF PP24 POINTER ARRAY', 4X, '= ',
     * I5, /, 5X, 'NUMBER OF I*2 WORDS IN PP24 POINTER ARRAY = ', I5, /,
     * 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 5X, '= ', I5)
  920 FORMAT(1H0, 'NO. OF FULL WORDS IN PARAMETER ARRAY = ', I5,
     * 3X, 'NEXT POINTER = ', I5)
  921 FORMAT(1H0, 'FOR DAILY DATA TYPE ', A4, ' ... THE FIRST JULIAN DAT
     *E ON FILE IS ', I6, ' AND THE LAST JULIAN DATE ON FILE IS ', I6,
     * '.')
  925 FORMAT(1H0, '*** PP24 POINTER ARRAY HAS BEEN COMPRESSED ***', /,
     * 5X, 'NUMBER OF I*2 WORDS IN PP24 POINTER ARRAY NOW = ', I5, /,
     * 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 9X, '= ', I5, //,
     * 1X, '*** GP24 PARAMETRIC ARRAY IS NOW BEING PLACED IN THE NDATA A
     *RRAY ***', /, 5X, 'STARTING ADDRESS OF GP24 PARAMETRIC ARRAY',11X,
     * '= ', I5, /, 5X, 'PROJECTED SIZE OF GP24 PARAMETRIC ARRAY (I*2 WO
     *RDS) = ', I5, /, 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 15X,
     * '= ', I5)
  926 FORMAT(1H0, '*** PPVR DATA/PTR ARRAY BEING PLACED IN THE NDATA ARR
     *AY ***', /, 5X, 'STARTING ADDRESS OF PPVR DATA ARRAY', 7X, '= ',
     * I5, /, 5X, 'NUMBER OF I*2 WORDS IN PPVR DATA ARRAY', 4X, '= ',
     * I5, /, 5X, 'STARTING ADDRESS OF PPVR POINTER ARRAY', 4X, '= ',
     * I5, /, 5X, 'NUMBER OF I*2 WORDS IN PPVR POINTER ARRAY = ', I5, /,
     * 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 5X, '= ', I5)
  927 FORMAT(1H0, 5X, 'BEGINNING ADDRESS OF ', A4, 1X, A4, ' ARRAY HAS B
     *EEN CHANGED FROM ', I5, ' TO ', I5)
  928 FORMAT(1H0, '*** PP24 DATA ARRAY HAS BEEN MOVED TO PG24 ARRAY. PP2
     *4 SPACE IS BEING RELEASED ***')
  929 FORMAT(6X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY = ', I5)
  930 FORMAT(1H0, '*** PERMANENT DATA ARRAYS PG24, GP6, AND W6 ARE NOW F
     *ILLED ***', /, 1X, '*** THE DATA ARRAY IS BEING COMPRESSED FURTHER
     * ***', /, 5X, 'THE MAXIMUM NUMBER OF SIX-HOURLY STATIONS PERMITTED
     * IS ', I4, /, 5X, 'SIX-HOURLY GRID POINT ADDRESSES WILL BEGIN IN N
     *DATA ARRAY ADDRESS = ', I5, /, 5X, 'SIX-HOURLY MDR BOX NUMBERS WIL
     *L BEGIN IN NDATA ARRAY ADDRESS      = ', I5)
  931 FORMAT(1H0, '*** ARRAYS OF THE SIX-HOURLY GRID POINT ADDRESSES AND
     * THE SIX-HOURLY MDR BOX NUMBERS HAVE BEEN COMPRESSED ***', /,
     * 5X, 'EACH ARRAY CONTAINS ', I4, ' ELEMENTS', /, 5X, 'THE ARRAY OF
     * SIX-HOURLY GRID POINT ADDRESSES BEGINS AT NDATA ARRAY LOCATION =
     *', I5, /, 5X, 'THE ARRAY OF SIX-HOURLY MDR BOX NUMBERS BEGINS AT N
     *DATA ARRAY LOCATION', 6X, '= ', I5)
  932 FORMAT(1H0, '*** ALL UNNECESSARY INFORMATION REMOVED FROM NDATA AR
     *RAY ***', /, 5X, 'BEGINNING FIRST ORDER GRID POINT ARRAY ADDRESS =
     * ', I5, /, 5X, 'BEGINNING FIRST ORDER MDR BOX ARRAY ADDRESS', 4X,
     * '= ', I5, /, 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 10X,
     * '= ', I5)
  933 FORMAT(1H0, '*** MDR6 DATA ARRAY BEING PLACED IN THE NDATA ARRAY *
     ***', /, 5X, 'STARTING ADDRESS OF MDR6 DATA ARRAY    = ', I5, /,
     * 5X, 'NUMBER OF I*2 WORDS IN MDR6 DATA ARRAY = ', I5, /, 5X,
     * 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY  = ', I5)
  934 FORMAT(1H0, '*** GMDR PARAMETRIC ARRAY IS NOW BEING PLACED IN THE
     *NDATA ARRAY ***', /, 5X, 'STARTING ADDRESS OF GMDR PARAMETRIC ARRA
     *Y', 14X, '= ', I5, /, 5X, 'PROJECTED SIZE OF GP24 PARAMETRIC ARRAY
     * (IN I*2 WORDS) = ', I5)
  935 FORMAT(1H0, '*** ERROR ***  STATUS CODE OF ', I4, ' RETURNED FROM
     *ROUTINE RPDDLY FOR DATA TYPE MDR6.', /, 5X, 'NO MDR DATA WILL B
     *E AVAILABLE FOR THIS RUN. THE MDR DATA USAGE FLAG IS BEING RE-SET
     *TO ', I4, '.', /, 5X, 'PROCESSING CONTINUES.')
  936 FORMAT(1H0, '*** ALL CURRENT SPACE IN THE NDATA ARRAY IS BEING REL
     *EASED ***', /, 5X, 'RUNTIME MOD DATA FOR MANUALLY INPUT PRECIPITAT
     *ION BEGINS AT ADDRESS = ', I5)
  937 FORMAT(5X, 'NUMBER OF RUNTIME MOD GRID POINT PRECIPITATION REPORTS
     * RECEIVED     = ', I5)
  938 FORMAT(1H0, '*** GP24 ARRAY NOW PLACED IN NDATA ARRAY -- FREE SPAC
     *E IS BEING RECOMPUTED ***', /, 5X, 'ACTUAL NUMBER OF I*2 WORDS IN
     *GP24 ARRAY = ', I5, /, 5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY'
     *, 4X, '= ', I5)
  939 FORMAT(6X, '*** SAVING FIRST ORDER GRID POINT ADDRESSES ***')
  940 FORMAT(6X, '*** SAVING NATIONAL MDR BOX NUMBER ***')
  941 FORMAT(1H0, 'WPPDCO CALLED...RETURN CODE = ', I5)
  943 FORMAT(1H0, '*** WARNING ***   NON-ZERO RETURN CODE OF ', I5,
     * ' RETURNED FROM ROUTINE WPPDCO')
  944 FORMAT(1H0, 'THE CURRENT NDATA ARRAY DATA ADDRESS POINTERS HAVE BE
     *EN COMPUTED AS FOLLOWS:', /, 5X, 'NPCPTR (BEGINNING ADDRESS OF PP2
     *4 PTRS ARRAY)', 12X, '= ', I5, /, 5X, 'NGPADR (BEGINNING ADDRESS O
     *F GP24 PARM ARRAY)', 12X, '= ', I5, /, 5X, 'N6HAMT (BEGINNING ADDR
     *ESS OF PPVR DATA ARRAY)', 12X, '= ', I5, /, 5X, 'N6HPTR (BEGINNING
     * ADDRESS OF PPVR PTRS ARRAY)', 12X, '= ', I5, /, 5X,  'NPCAMT (BEG
     *INNING ADDRESS OF PP24 DATA ARRAY) (INACTIVE) = ', I5)
  945 FORMAT(5X, 'NEXT AVAILABLE ADDRESS IN NDATA ARRAY', 18X, '= ', I5)
  946 FORMAT(1H0, 'THE VALUE OF NGRID IS ', I8)
  947 FORMAT(1H0, '*** FATAL ERROR ***  ENDING COMPUTATIONAL DATE OF ',
     * I2, '/', I2, '/', I4, ' IS MORE THAN ONE DAY AFTER THE LAST DAY',
     * /, 5X, 'ON THE PREPROCESSOR DATA BASE FOR PPDB TYPE ', A4, '.',
     * /, 5X, 'JULIAN DATE OF ENDING RUNDATE IS ', I8, ' AND JULIAN DATE
     * OF LAST DAY ON THE PPDB IS ', I8, '.', /, 5X, 'THE MARO FUNCTION
     *CANNOT BE RUN FOR MORE THAN ONE DAY IN ADVANCE.  MARO FUNCTION HAL
     *TED.')
  948 FORMAT(1H0, '*** FATAL ERROR ***  ENDING COMPUTATIONAL DATE OF ',
     * I2, '/', I2, '/', I4, ' IS PRIOR TO THE FIRST DAY OF OBS. DATA',
     * /, 5X, 'ON THE PREPROCESSOR DATA BASE FOR PPDB TYPE ', A4, '.',
     * /, 5X, 'JULIAN DATE OF ENDING RUNDATE IS ', I8, ' AND JULIAN DATE
     * OF FIRST DAY ON THE PPDB IS ', I8, '.', /, 5X, 'MARO FUNCTION HAL
     *TED.')
  949 FORMAT(1H0, '*** ERROR ***  ENDING COMPUTATIONAL DATE OF ',
     * I2, '/', I2, '/', I4, ' IS PRIOR TO THE FIRST DAY OF OBS. DATA',
     * /, 5X, 'ON THE PREPROCESSOR DATA BASE FOR PPDB TYPE ', A4, '.',
     * /, 5X, 'JULIAN DATE OF ENDING RUNDATE IS ', I8, ' AND JULIAN DATE
     * OF FIRST DAY ON THE PPDB IS ', I8, '.', /, 5X, 'THE MDR USAGE FLA
     *G IS BEING RE-SET TO ZERO. MARO FUNCTION CONTINUES.')
  950 FORMAT(1H0, '*** ERROR ***  ENDING COMPUTATIONAL DATE OF ',
     * I2, '/', I2, '/', I4, ' IS AFTER THE LAST DAY OF OBS. DATA',
     * /, 5X, 'ON THE PREPROCESSOR DATA BASE FOR PPDB TYPE ', A4, '.',
     * /, 5X, 'JULIAN DATE OF ENDING RUNDATE IS ', I8, ' AND JULIAN DATE
     * OF FIRST DAY ON THE PPDB IS ', I8, '.', /, 5X, 'THE MDR USAGE FLA
     *G IS BEING RE-SET TO ZERO. MARO FUNCTION CONTINUES.')
  951 FORMAT(1H0, '*** WARNING ***  THERE ARE ONLY ', I5, ' I*2 WORDS OF
     * FREE STORAGE SPACE BETWEEN', /, 5X, 'THE END OF THE ', A4, 1X,
     * A4, ' ARRAY AND THE START OF THE ', A4, 1X, A4, ' ARRAY.', //,
     * 5X, 'AVBL FREE SPACE BEGINS AT ADDRESS = ', I7, /, 5X, A4, 1X,
     * A4, ' ARRAY BEGINS AT ADDRESS = ', I7, //, 5X, 'FURTHER INCREASES
     * IN WORKING STORAGE ARRAY SIZE REQUIREMENTS WITHOUT A CONCURRENT I
     *NCREASE IN WORKING STORAGE ARRAY SIZE', /, 5X, 'COULD RESULT IN A
     *DATA OVERWRITE CONDITION.')
  952 FORMAT(1H0, '*** WARNING ***  THE NUMBER OF STATIONS CONTAINED ',
     * 'IN THE ', A4, 1X, A4, ' ARRAY IS NEAR THE MAXIMUM CAPACITY', /,
     * 5X, 'THE MAXIMUM NUMBER OF ', A4, ' STATIONS PERMITTED IS ', I5,
     * /, 5X, 'THE NUMBER OF ', A4, ' STATIONS CURRENTLY DEFINED IS ',
     * I5, /, 5X, 'ANY FURTHER ADDITIONS TO THE ', A4, 1X, A4, ' ARRAY A
     *RE IN DANGER OF CAUSING A DATA OVERWRITE IN THE WORKING ARRAY')
C
      INCLUDE 'gcommon/setwhere'
      IF(IPTRCE .GT. 0) WRITE(IOPDBG,901)
C
C.....SET CPU BUG.
C
      JCPBUG = IPBUG(GCPU)
      KPBUG  = IPBUG(GSIX)
C
C.....SET THE ADDRESS COUNTER FOR THE NDATA WORK ARRAY.
C
      NP = 1
C
C.....SET ADDRESS CONSTANTS FOR THE NDATA WORK ARRAY.
C
      IAAPIG =     1
      IAGMDR =  6401
      IAGP24 =  9101
      IAGP6  = 14001
      IAW6   = 24001
      IAPG24 = 30001
C
C.....INITIALIZE THE COUNTER FOR THE NEXT AVAILABLE SPACE IN THE
C.....W6 ARRAY.
C
      WP = 0
C
C.....SET THE AVAILABILITY FLAGS FOR THE 24-HOUR PRECIP (PP24) AND
C.....THE SIX-HOUR PRECIP (PPVR). WE WILL ASSUME FOR NOW THAT BOTH
C.....ARE AVAILABLE.
C
      KP06AV = 1
      KP24AV = 1
C
C.....NOW INITIALIZE THE HYDROLOGIC VARIABLES.
C
      DO 120 KP = 1, 4000
      IOVF(KP)  = 0
  120 CONTINUE
C
      DO 130 KP = 1, 6000
      W6(KP)    = 0
  130 CONTINUE
C
      DO 140 KP = 1, NGRID
      APIG(KP)  = 0
      GP6(KP)   = 0
      PG24(KP)  = MSGGRD
  140 CONTINUE
C
C
C.....SET THE TIME...AND SAVE THE TIME CONSTANTS IN THE APPROPRIATE
C.....COMMON BLOCKS.
C
      CALL GSETTM(ISTATC)
C
C.....IF KILLFN WAS CALLED IN GSETTM...GET OUT OF THE MARO FUNCTION
C.....IMMEDIATELY.
C
      IF(KLCODE .GT. 8) GOTO 999
      ISTATC = 0
      INCLUDE 'gcommon/setwhere'
C
      INCLUDE 'gcommon/gcpuchk'
C
C.....GET THE API RECESSION AND RUNOFF DURATION CONSTANTS.
C
      CALL GTDRRC
C
C.....CALL THE TITLE ROUTINE TO PRINT OUT TITLES.
C
      CALL GTITLE
      INCLUDE 'gcommon/setwhere'
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C
C..... * * * * *  ROUTINE TO READ IN THE PRECIP DATA  * * * * *
C
C.....FIRST GET THE 24 HOUR PRECIPITATION. CALL RPDFIL TO GET THE
C.....NUMBER OF WORDS TO BE FILLED IN THE POINTER AND DATA ARRAYS. THIS
C.....WILL DEFINE THE SPACE REQUIREMENTS FOR THE DAILY PRECIPITATION
C.....POINTER AND DATA ARRAYS.
C
      CALL RPDFIL(PP24, ICURDA, LENP24, NUMST, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 150
C
      WRITE(IPR,908) PP24, ISTATC
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....NOW GET THE 24 HOUR PRECIPITATION DATA AND POINTER ARRAY WITH
C.....ROUTINE RPDDLY. WE WILL USE NDATA AS A TEMPORARY STORAGE AREA
C.....FOR THE DATA AND POINTER VALUES, AND WILL COMPUTE ADDRESS CONSTANT
C.....TO KEEP TRACK OF THE AVAILABLE STORAGE SPACES.
C
  150 IRETRN = 1
C
      NBUG = IPBUG(GADR)
      NXFREE = 1
      NPCAMT = NXFREE
      NXFREE = NPCAMT + NUMST
      NPCPTR = NXFREE
      NXFREE = NPCPTR + LENP24
      IF(NBUG .EQ. 1) WRITE(IOPDBG,919) NPCAMT, NUMST, NPCPTR, LENP24,
     * NXFREE
      IF(NPCPTR .LE. NGRID) GOTO 160
      WRITE(IPR,909) PP24, NGRID, NPCPTR
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....GET THE FIRST AND LAST JULIAN DATES OF PP24 DATA STORED ON THE
C.....PPDB.
C
  160 IBUG = IPBUG(PP24)
C
      CALL RPDDTE(PP24, IFJP24, ILJP24, ISTATC)
      IF(ISTATC .EQ. 0) GOTO 170
C
      WRITE(IPR,905) PP24, ISTATC
      CALL WARN
C
  170 IF(IBUG .EQ. 1) WRITE(IOPDBG,921) PP24, IFJP24, ILJP24
C
C.....CHECK THAT THE ENDING DATE FOR PP24 IS NOT BEFORE THE FIRST DAY
C.....OF OBSERVED DATA ON THE PPDB.
C
      IF(LDARUN .GE. IFJP24) GOTO 180
      WRITE(IPR,948) IHYMO, IHYDAT, IHYYR, PP24, LDARUN, IFJP24
      GOTO 190
C
C.....CHECK THAT THE ENDING DATE FOR PP24 IS NO MORE THAN ONE DAY
C.....LATER THAT THE LAST DAY OF DATA ON THE PPDB.
C
  180 IF(LDARUN .LE. ILJP24) GOTO 200
      IF((LDARUN - ILJP24) .LE. 1) GOTO 200
      WRITE(IPR,947) IHYMO, IHYDAT, IHYYR, PP24, LDARUN, ILJP24
  190 CALL ERROR
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
  200 CALL RPDDLY(PP24, ICURDA, IRETRN, LENP24, NDATA(NPCPTR), LENP24,
     * NUMST, NDATA(NPCAMT), NUMST, MM, MSNG24, LBUF, BUF, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 230
C
C.....CHECK FOR A STATUS CODE OF 4.
C
      IF(ISTATC .EQ. 4) GOTO 220
C
  210 CALL PSTRDD(ICURDA, ISTATC, LENP24, NUMST, PP24)
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....ISTATC = 4. THE DATE ASKED FOR IS NOT ON FILE. CHECK IF THIS IS A
C.....QPF RUN OF THE MARO FUNCTION. IF IT IS...IT IS PERMISSIBLE TO
C.....HAVE MISSING PRECIPITATION DATA. OTHERWISE...ERROR OUT.
C
  220 IF(KQPFRN .EQ. 0) GOTO 210
      KP24AV = 0
      GOTO 230
C
C.....STORE THE STARTING ADDRESS OF THE PRECIPITATION AMOUNT ARRAY.
C.....ALL STORE THE STARTING ADDRESS OF THE PRECIPITATION POINTER ARRAY.
C.....WE WILL NEED BOTH OF THESE LATER.
C
C
C.....COMPRESS THE SPACE USED TO STORE THE POINTER ARRAY. WE ARE ONLY
C.....GOING TO STORE THE FIRST LOCATION OF THE PP24 PARAMETER ARRAY.
C
C
C.....DUMP OUT THE PP24 DATA IF DEBUG CODE SAYS SO.
C
  230 IF(IBUG .EQ. 1) CALL PDMPDY(PP24, ICURDA, MSNG24, NDATA(NPCPTR),
     * LENP24, NDATA(NPCAMT), NUMST)
C
C.....COMPUTE THE AMOUNT OF STATION EXPANSION ROOM LEFT. IF LESS THAN
C.....50 STATIONS...ISSUE WARNING MESSAGE.
C
      IPLEFT = IPMAX - NUMST
      IF(IPLEFT .GE. 50) GOTO 240
      WRITE(IPR,952) PP24, DATA, PP24, IPMAX, PP24, NUMST, PP24, DATA
C
  240 MX2 = NPCPTR
      NX = NPCPTR + 1
C
C.....COMPRESS PP24 POINTERS. WE NEED ONLY THE FIRST AND THE FIFTH
C.....POINTERS IN THIS ROUTINE.
C
      DO 250 JX = 1, LENP24, 5
      IX = JX + NPCPTR - 1
      LX = IX + 4
      NDATA(MX2) = NDATA(IX)
      NDATA(NX) = NDATA(LX)
      MX2 = MX2 + 2
      NX = NX + 2
  250 CONTINUE
C
C.....RECOMPUTE THE BEGINNING OF THE 'FREE WORK SPACE'.
C
      LENP24 = 2*LENP24/5
      NXFREE = NPCPTR + LENP24
      NGPADR = 3*IPMAX + 101
      NGSIZ = 10 + 2*IPMAX + NGP24P
      NGSIZ2 = NGSIZ/2
      NXFREE = NGPADR + NGSIZ
      IF(NBUG .EQ. 1) WRITE(IOPDBG,925) LENP24, NGPADR, NGPADR, NGSIZ,
     * NXFREE
C
C.....NOW READ THE GRID POINT LOCATION OF EACH NAMED NETWORK STATION.
C.....THIS IS STORED IN A PARAMETER ARRAY.
C
      IPTR  = 0
      USERID(1) = BLNKID(1)
      USERID(2) = BLNKID(2)
C
      CALL RPPREC(USERID, GP24, IPTR, NGSIZ2, PGP24(1), NFILL,
     * IPTNXT, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 260
C
      CALL PSTRDC(ISTATC, GP24, USERID, IPTR, NGSIZ2, NFILL)
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....DUMP OUT CONTENTS OF GP24 IF DEBUG OUTPUT IS DESIRED.
C
C
C.....GET NUMBER OF STATIONS, NUMBER OF SHARED GRIDS FROM GP24.
C.....RE-CALCULATE THE BEGINNING ADDRESS OF THE GP24 PARAMETRIC
C.....ARRAY. (WE DON'T NEED FIRST 10 WORDS).
C
  260 NSTA = PGP24(2)
      NSHARE = PGP24(3)
      NGPADR = NGPADR + 10
      KBUG = IPBUG(GP24)
      IF(KBUG .EQ. 1) CALL GGP24D(NSTA, NSHARE, PGP24(6), PGP24(NSTA+6))
C
C.....STORE THE STARTING LOCATION OF THE GRID POINT ADDRESS DATA ARRAY.
C.....WE WILL NEED THIS INFORMATION LATER.
C
C.....RECOMPUTE THE BEGINNING OF THE 'FREE WORK SPACE'.
C
      NGPTS = NFILL*2
      NXFREE = NGPADR + NGPTS
      IF(NBUG .EQ. 1) WRITE(IOPDBG,938) NGPTS, NXFREE
C
C.....GET THE NUMBER OF WORDS TO BE FILLED IN THE POINTTER AND THE DATA
C.....ARRAYS FOR PPVR (USUALLY 6 HOURLY PRECIPITATION).
C
      CALL RPDFIL(PPVR, ICURDA, NPT6, NUM6, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 270
C
      WRITE(IPR,908) PPVR, ISTATC
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
C
C.....NEXT, GET THE PARTIAL PRECIPITATION REPORTS -- THAT IS, THOSE
C.....STATIONS THAT HAVE SIX HOUR PRECIPITATION VALUES.
C
  270 IRETRN = 1
      N6HAMT = NXFREE
      NXFREE = N6HAMT + NUM6
      N6HPTR = NXFREE
      NXFREE = N6HPTR + NPT6
      IF(NBUG .EQ. 1) WRITE(IOPDBG,926) N6HAMT, NUM6, N6HPTR, NPT6,
     * NXFREE
C
C.....CHECK THE AMOUNT OF FREE WORKSPACE LEFT IN THE WORKING ARRAY.
C.....IF IT IS LESS THAN 1000 HALFWORDS...ISSUE A WARNING.
C
      NWKLFT = IAPG24 - NXFREE
      IF(NWKLFT .GE. 1000) GOTO 280
      WRITE(IPR,951) NWKLFT, PPVR, PTRS, GPG24, DATA, NXFREE, GPG24,
     * DATA, IAPG24
      CALL WARN
C
C.....GET THE FIRST AND LAST JULIAN DATES OF PPVR DATA STORED ON THE
C.....PPDB.
C
  280 JBUG = IPBUG(PPVR)
C
      CALL RPDDTE(PPVR, IFJP06, ILJP06, ISTATC)
      IF(ISTATC .EQ. 0) GOTO 290
C
      WRITE(IPR,905) PPVR, ISTATC
      CALL WARN
C
C
  290 IF(JBUG .EQ. 1) WRITE(IOPDBG,921) PPVR, IFJP06, ILJP06
C
C.....CHECK THAT THE ENDING DATE FOR PPVR IS NOT BEFORE THE FIRST DAY
C.....OF OBSERVED DATA ON THE PPDB.
C
      IF(LDARUN .GE. IFJP06) GOTO 300
      WRITE(IPR,948) IHYMO, IHYDAT, IHYYR, PPVR, LDARUN, IFJP06
      GOTO 310
C
C.....CHECK THAT THE ENDING DATE FOR PPVR IS NO MORE THAN ONE DAY
C.....LATER THAT THE LAST DAY OF DATA ON THE PPDB.
C
  300 IF(LDARUN .LE. ILJP06) GOTO 320
      IF((LDARUN - ILJP06) .LE. 1) GOTO 320
      WRITE(IPR,947) IHYMO, IHYDAT, IHYYR, PPVR, LDARUN, ILJP06
  310 CALL ERROR
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
  320 CALL RPDDLY(PPVR, ICURDA, IRETRN, NPT6, NDATA(N6HPTR), NPT6, NUM6,
     * NDATA(N6HAMT), NUM6, NUMM, MSNG6, LBUF, BUF, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 350
C
C.....CHECK FOR A STATUS CODE OF 4.
C
      IF(ISTATC .EQ. 4) GOTO 340
C
  330 CALL PSTRDD(ICURDA, ISTATC, NPT6, NUM6, PPVR)
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....ISTATC = 4. THE DATE ASKED FOR IS NOT ON FILE. CHECK IF THIS IS A
C.....QPF RUN OF THE MARO FUNCTION. IF IT IS...IT IS PERMISSIBLE TO
C.....HAVE MISSING PRECIPITATION DATA. OTHERWISE...ERROR OUT.
C
  340 IF(KQPFRN .EQ. 0) GOTO 330
      KP06AV = 0
      GOTO 350
C
C.....DUMP OUT THE PPVR DATA IF DEBUG CODE SAYS SO.
C
  350 IF(JBUG .EQ. 1) CALL PDMPDY(PPVR, ICURDA, MSNG6, NDATA(N6HPTR),
     * NPT6, NDATA(N6HAMT), NUM6)
C
C.....COMPUTE THE AMOUNT OF STATION EXPANSION ROOM LEFT. IF LESS THAN
C.....50 STATIONS...ISSUE WARNING MESSAGE.
C
C.....SINCE THERE ARE FOUR 6-HOURLY TIME PERIODS PER STATION...DIVIDE
C.....BY FOUR TO GET NUMBER OF STATIONS ON FILE.
C
      NSIXST = NUM6/4
      IPLEFT = N6HR - NSIXST
      IF(IPLEFT .GE. 50) GOTO 360
      WRITE(IPR,952) PPVR, DATA, PPVR, N6HR, PPVR, NSIXST, PPVR, DATA
C
C.....SET BUG FOR OUTPUT OF INDIVIDUAL PPVR VALUES.
C
  360 LPVBUG = IPBUG(PVRX)
      IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
C
C
C.....MAKE APPROPRIATE DATA CHECKS...SO THAT ONLY 24 HR AND SIX HR DATA
C.....WILL BE AVAILABLE.
C
      CALL GPPCHK(NDATA(NPCAMT), NDATA(N6HAMT), NDATA(N6HPTR), NUM6)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
      IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
C
C.....NOW FILL UP THE CONTENTS OF THE PG24 BASIC DATA ARRAY WITH THE
C.....24 HOUR PRECIPITATION FROM THE PP24 FILE THAT IS BEING HELD IN
C.....THE WORK AREA.
C
      IF(KP24AV .EQ. 0) GOTO 370
      CALL GDLYS(NDATA(NPCAMT), PGP24(6), NDATA(NPCPTR), PG24,
     * PGP24(NSTA + 6), NUMST)
      INCLUDE 'gcommon/setwhere'
C
  370 IBUG2 = IPBUG(GPG24)
      IF(IBUG2 .EQ. 1) CALL GDPG24(PG24)
      IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
C
C.....RELEASE THE WORK SPACE OCCUPIED BY PP24. COMPRESS THE WORK
C.....SPACE BY MOVING UP THE REMAINING DATA STORAGE AREAS TO
C.....THE TOP OF THE WORK AREA. WE MUST DO THIS BECAUSE THE CURRENT
C.....SIZE OF THE DATA STORAGE ARRAY IS PROBABLY SPILLING INTO AN
C.....AREA OCCUPIED BY ONE OF THE SIX HOUR BASIC DATA ARRAYS, WHICH
C.....WE ARE GOING TO FILL UP. IF WE DON'T MOVE THE DATA UP, WE WILL
C.....WIPE OUT SOME OF OUR WORK AREA.
C
      IF(NBUG .EQ. 1) WRITE(IOPDBG,928)
      CALL GTRNSF(NPCPTR, NPCAMT, NDATA, LENP24, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) PP24, PTRS, J, K
      IF(ISTATC .EQ. 0) GOTO 390
C
  380 WRITE(IPR,912)
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
  390 NPCPTR = K
      NXFREE = NPCPTR + LENP24
      IF(NBUG .EQ. 1) WRITE(IOPDBG,929) NXFREE
      IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
C
      CALL GTRNSF(NGPADR, NXFREE, NDATA, NGSIZ, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) GP24, PARM, J, K
      IF(ISTATC .EQ. 0) GOTO 400
      GOTO 380
C
  400 NGPADR = K
      NXFREE = NGPADR + NGSIZ
      IF(NBUG .EQ. 1) WRITE(IOPDBG,929) NXFREE
C
      CALL GTRNSF(N6HAMT, NXFREE, NDATA, NUM6, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) PPVR, DATA, J, K
      IF(ISTATC .EQ. 0) GOTO 410
      GOTO 380
C
  410 N6HAMT = K
      NXFREE = N6HAMT + NUM6
      IF(NBUG .EQ. 1) WRITE(IOPDBG,929) NXFREE
      IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
C
      CALL GTRNSF(N6HPTR, NXFREE, NDATA, NPT6, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) PPVR, PTRS, J, K
      IF(ISTATC .EQ. 0) GOTO 420
      GOTO 380
C
  420 N6HPTR = K
      NXFREE = N6HPTR + NPT6
      IF(NBUG .EQ. 1) WRITE(IOPDBG,929) NXFREE
C
C.....CHECK THE AMOUNT OF FREE WORKSPACE LEFT IN THE WORKING ARRAY.
C.....IF IT IS LESS THAN 1000 HALFWORDS...ISSUE A WARNING.
C
      NWKLFT = IAGP6 - NXFREE
      IF(NWKLFT .GE. 1000) GOTO 430
      WRITE(IPR,951) NWKLFT, PPVR, PTRS, GGP6, DATA, NXFREE, GGP6,
     * DATA, IAPG24
      CALL WARN
C
  430 IF(LPVBUG .EQ. 1) CALL GPDDMP(PPVR, NUM6, NDATA(N6HAMT))
      IF(JBUG .EQ. 1) CALL GLPTVR(NUM6, NDATA(N6HPTR))
C
      IF(NBUG .EQ. 1) WRITE(IOPDBG,944) NPCPTR, NGPADR, N6HAMT,
     * N6HPTR, NPCAMT
      IF(NBUG .EQ. 1) WRITE(IOPDBG,946) NGRID
C
C.....ZERO OUT THE GP6 PART OF THE NDATA ARRAY.
C
      DO 440 KP = 1, NGRID
      GP6(KP) = IZERO
  440 CONTINUE
C
C.....NOW FILL UP THE BASIC ARRAYS GP6 AND W6.
C
      IF(KP06AV .EQ. 0) GOTO 450
      CALL GSIXFL(PG24, GP6, W6, NDATA(N6HAMT), NDATA(N6HPTR),
     * NDATA(NGPADR), WP, NUM6)
      INCLUDE 'gcommon/setwhere'
C
      WP = WP + 1
      IF(KPBUG .EQ. 1) WRITE(IOPDBG,906) WP
C
  450 JBUG2 = IPBUG(GGP6)
      IF(JBUG2 .EQ. 1) CALL GDGP6(GP6)
C
C.....CALL THE ROUTINE TO PRINT OUT LISTS OF LESS THAN 24-HOUR
C.....PRECIPITATION...PROVIDED SUCH A PRINTOUT IS DESIRED.  AT THE
C.....PRESENT TIME...THE ONLY LESS THAN 24-HOUR TIME DURATION OF
C.....HYDROLOGIC DATA PERMITTED IS 6 HOURS.
C
      IF(KP06AV .EQ. 0) GOTO 460
      IF(IPRT6 .EQ. 0) GOTO 460
      CALL GLSTV(W6, GP6, NDATA(N6HAMT), NDATA(N6HPTR), NUM6, 6)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
C
C.....BASIC DATA ARRAYS PG24, W6, AND GP6 ARE NOW FILLED. AT THIS POINT
C.....WE NEED RETAIN ONLY THE FOLLOWING DATA ONLY FOR THOSE STATIONS FOR
C.....WHICH OBSERVED SIX HOURLY PRECIPITATION IS AVAILABLE.
C
C.....(1)  THE GRID POINT ADDRESS OF THE STATION
C.....(2)  THE NATIONAL MDR BOX NUMBER ASSOCIATED WITH THE STATION.
C
C.....FURTHERMORE...THESE TWO ARRAYS MUST BE ARRANGED IN ASCENDING
C.....NUMERICAL ORDER BY GRID POINT ADDRESS SO THE MDR-PRECIP CONVERSION
C.....ROUTINE GMDRRF CAN EFFICIENTLY PROCESS THE DATA.
C
  460 NFOGRD = N6HAMT
      NFMBOX = NFOGRD + N6HR
      IF(NBUG .EQ. 1) WRITE(IOPDBG,930) N6HR, NFOGRD, NFMBOX
C
C.....WE ARE FINISHED WITH THE STATION PRECIPITATION POINTERS PART OF
C.....THE PP24 POINTERS ARRAY. THEREFORE...COMPRESS THE PP24 POINTERS
C.....TO WHERE ONLY THE MDR BOX NUMBERS OCCUPY CONTIGUOUS LOCATIONS.
C
      LP = NPCPTR + 1
      MP = NPCPTR + LENP24 - 1
      KP = 1
C
      DO 470 JP = LP, MP, 2
      NDATA(KP) = NDATA(JP)
      KP = KP + 1
  470 CONTINUE
C
C
C.....CALL GDATSV TO COMPRESS THE WORKING DATA STORAGE AREA SO THAT ONLY
C.....THE ABOVE ARRAYS ARE SAVED.
C
      CALL GDATSV(NDATA(NFOGRD), NDATA(NFMBOX), NDATA(NGPADR),
     * NDATA(NPCPTR), GP6, NUMST)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,931) N6HR, NFOGRD, NFMBOX
      INCLUDE 'gcommon/setwhere'
C
C.....WE NOW HAVE SIX HOURLY DATA SAVED. WE NEED ONLY KEEP THESE TWO
C.....ARRAYS AT THIS POINT...AND MAY GET RID OF ALL THE OTHER DATA.
C.....THEREFORE...COMPRESS THE ARRAY SPACE.
C
      NP = 1
      KP = N6HR + 1
C
      CALL GTRNSF(NFOGRD, NP, NDATA, N6HR, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) GP24, PARM, J, K
      IF(NBUG .EQ. 1) WRITE(IOPDBG,939)
      IF(ISTATC .EQ. 0) GOTO 480
      GOTO 380
C
  480 CALL GTRNSF(NFMBOX, KP, NDATA, N6HR, NZWORK, J, K, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) PP24, PTRS, J, K
      IF(NBUG .EQ. 1) WRITE(IOPDBG,940)
      IF(ISTATC .EQ. 0) GOTO 490
      GOTO 380
C
  490 NFOGRD = 1
      NFMBOX = NFOGRD + N6HR
      NXFREE = NFMBOX + N6HR
      IF(NBUG .EQ. 1) WRITE(IOPDBG,932) NFOGRD, NFMBOX, NXFREE
C
C.....NOW THAT THE TWO ARRAYS ARE COMPRESSED...WE MUST NOW SORT THEM IN
C.....ASCENDING ORDER BY GRID POINT ADDRESS.
C
      CALL GSGRDA(NDATA(NFOGRD), NDATA(NFMBOX), N6HR)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
C
C
C.....CHECK THE MDR FLAG. IF IT IS OFF...BYPASS THE MDR PROCESSING
C.....ROUTINE
C
C
      IF(MDR .EQ. 0) GOTO 580
C
C
C     * * * * * * *   M D R   P R O C E S S I N G   R O U T I N E   * *
C
C
C.....FIRST...GET THE AMOUNT OF SPACE REQUIREMENT FOR THE SIX HOURLY
C.....MDR FILE.
C
      CALL RPDFIL(MDR6, ICURDA, LPFIL, LFMDR, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 500
      WRITE(IPR,908) MDR6, ISTATC
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
C
C.....NOW BEGIN TO PROCESS MDR DATA. READ FIRST THE SIX HOUR MDR
C.....SUMMATIONS FOR THE MDR BOXES IN THE RECTANGULAR SUBSET.
C
  500 LPFIL  = 0
      IRETRN = 0
      MDRDSZ = LFMDR/4
      MDRLOC = NXFREE
      NXFREE = MDRLOC + LFMDR
      IF(NBUG .EQ. 1) WRITE(IOPDBG,933) MDRLOC, LFMDR, NXFREE
C
C
C.....GET THE FIRST AND LAST JULIAN DATES OF MDR6 DATA STORED ON THE
C.....PPDB.
C
      MBUG = IPBUG(MDR6)
C
      CALL RPDDTE(MDR6, IFJMDR, ILJMDR, ISTATC)
      IF(ISTATC .EQ. 0) GOTO 510
C
      WRITE(IPR,905) MDR6, ISTATC
      CALL WARN
C
  510 IF(MBUG .EQ. 1) WRITE(IOPDBG,921) MDR6, IFJMDR, ILJMDR
C
C.....CHECK THAT THE ENDING DATE FOR MDR6 IS NOT BEFORE THE FIRST
C.....DAY ON FILE.
C
      IF(LDARUN .GE. IFJMDR) GOTO 520
      WRITE(IPR,949) IHYMO, IHYDAT, IHYYR, MDR6, LDARUN, IFJMDR
      GOTO 228
C
C.....CHECK THAT THE ENDING DATE FOR MDR6 IS NOT AFTER THE LAST
C.....DAY ON FILE.
C
  520 IF(LDARUN .LE. ILJMDR) GOTO 530
      WRITE(IPR,950) IHYMO, IHYDAT, IHYYR, MDR6, LDARUN, ILJMDR
  228 CALL ERROR
      MDR = 0
      GOTO 580
C
  530 CALL RPDDLY(MDR6, ICURDA, IRETRN, LPFIL, NDATA(NXFREE), LPF,
     * LFMDR, NDATA(MDRLOC), LDFMDR, NUMMDR, MSGMDR, LBUF, BUF, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 560
C
C.....IF MDR DATA IS MISSING...JUST WRITE OUT A MESSAGE AND CONTINUE.
C
      IF(ISTATC .NE. 4) GOTO 550
C
C.....IF ANY OTHER ERROR OCCURRED...CONTINUE PROCESSING...BUT DON'T USE
C.....MDR DATA.
C
      MDR = 0
      WRITE(IPR,903) IHYMO, IHYDAT, IHYYR, MDR
      CALL WARN
      GOTO 580
C
  550 MDR = 0
      WRITE(IPR,935) MDR
      CALL ERROR
      GOTO 580
C
C.....DUMP OUT THE MDR6 ARRAY IF DEBUG CODE SAYS SO.
C
  560 IF(MBUG .EQ. 1) CALL PDMPDY(MDR6, ICURDA, MSGMDR, NDATA(NXFREE),
     * LPFIL, NDATA(MDRLOC), LFMDR)
C
C
C.....SET THE COUNTER FOR THE READ OF THE MDR PARAMETRIC ARRAY.
C
      BOXID(1) = BLNKID(1)
      BOXID(2) = BLNKID(2)
      MDRPTR = 0
      NPMDR = 7 + LFMDR/2
      NGPMDR = NXFREE + NPMDR
      IF(NBUG .EQ. 1) WRITE(IOPDBG,934) NGPMDR, NPMDR
C
C.....RECOMPUTE THE BEGINNING OF THE FREE WORK SPACE.
C
      NXFREE = NGPMDR + NPMDR
      IF(NBUG .EQ. 1) WRITE(IOPDBG,945) NXFREE
C
C.....NOW READ THE MDR BOX PARAMETRIC ARRAY TO GET THE GRID POINT
C.....ADDRESS OF THE GRID POINT CLOSEST TO THE CENTROID OF EACH MDR BOX.
C
      CALL RPPREC(BOXID, GMDR, MDRPTR, NPMDR, PGMDR(1), NFILL,
     * NEXT, ISTATC)
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,916) GMDR, ISTATC
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,920) NFILL, NEXT
C
      IF(ISTATC .EQ. 0) GOTO 570
C
      CALL PSTRDC(ISTATC, GMDR, BOXID, MDRPTR, NPMDR, NFILL)
      WRITE(IPR,904)
      CALL KILLFN('MARO    ')
      GOTO 999
C
C.....DUMP THE GMDR PARAMETRIC ARRAY IF A DUMP OF THE ARRAY IS DESIRED.
C
  570 LBUG = IPBUG(GMDR)
      IF(LBUG .EQ. 1) CALL GGMDRD(PGMDR(8))
C
C....THE PARAMETRIC RECORD HAS BEEN READ. NOW CONVERT THE MDR TOTALS
C.....TO PRECIPITATION...AS DICTATED BY TECHNIQUE VALUE AND BY OTHER
C.....FLAGS OR KEYS THAT MAY BE PRESENT.
C
      CALL GMDRRF(PG24, GP6, W6, N6HR, NDATA(MDRLOC), NDATA(NFOGRD),
     * NDATA(NFMBOX), PGMDR(8), WP)
C
      IF(ISTATC .EQ. 0) GOTO 580
      WRITE(IPR,911) ISTATC
      WRITE(IPR,904)
      CALL ERROR
      CALL KILLFN('MARO    ')
      GOTO 999
C
C
C.....NOW THAT THE MDR ROUTINE IS FINISHED...ALL OF THE WORK SPACE IS
C.....NOW FREE. RECOMPUTE THE BEGINNING OF THE FREE WORK SPACE.
C
  580 NP = 1
      NXFREE = NP
      NSMOD = NXFREE
      IF(NBUG .EQ. 1) WRITE(IOPDBG,936) NSMOD
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C                MANUAL DATA OVERRIDE ROUTINE
C
C.....THIS IS THE ROUTINE TO OPTIONALLY DO MANUAL DATA OVERRIDES FOR
C.....SIX AND 24 HR GRID POINT DATA. THE OVERRIDES ARE DONE BY RUNTIME
C.....MODS, WHICH MAY BE OPTIONALLY PRESENT IN THE PROGRAM.
C
      ISTATC = 0
C
C.....COMPUTE THE NUMBER OF CARD IMAGES THAT CAN BE STORED BY THE
C.....RUNTIME MOD. THE SPACE TO STORE THE CARD IMAGES WILL BE THE
C.....REMAINING LOW-ORDER 5000 I*4 WORDS OF THE NDATA ARRAY. (THE
C.....APIG ARRAY).
C
      MAXCRD = (NGRID - NSMOD)/40
C
C.....CALL THE ROUTINE TO GET THE INFORMATION FOR THE MANUAL DATA
C.....OVERRIDE ROUTINE.
C
      CALL GMODGP(GRIDPX, MAXCRD, NDATA(NSMOD), NUMGPX, ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,937) NUMGPX
C
C.....IF NO CARD IMAGES WERE FOUND...SKIP THE ROUTINES THAT PROCESS
C.....THE RUNTIME MOD DATA.
C
      IF(NUMGPX .LE. 0) GOTO 600
C
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      IF(ISTATC .EQ. 0) GOTO 590
      WRITE(IPR,913)
      CALL WARN
C
  590 CONTINUE
      INCLUDE 'gcommon/setwhere'
C
C
C.....CALL THE ROUTINE TO PROCESS THE RUNTIME MOD DATA AND DO THE
C.....MANUAL DATA OVERRIDES FOR GRID POINT PRECIPITATION.
C
      CALL GRTOV(WP, NUMGPX, NDATA(NSMOD), PG24, W6, GP6, ISTATC)
C
      IF(ISTATC .EQ. 0) GOTO 600
      WRITE(IPR,914)
      CALL WARN
C
  600 CONTINUE
      INCLUDE 'gcommon/setwhere'
C
      INCLUDE 'gcommon/gcpuchk'
C
      IF(IBUG2 .EQ. 1) CALL GDPG24(PG24)
C
C.....RESET NXFREE BACK TO ITS ORIGINAL VALUE. THE RUNTIME MODS HAVE
C.....NOW BEEN SUCCESSFULLY PROCESSED...AND THE WORK SPACE IS NO
C.....LONGER REQUIRED.
C
      NP = 1
      NXFREE = NP
C
C.....NOW CALL THE ROUTINE TO PERFORM THE PRECIPITATION ESTIMATIONS.
C.....THIS ROUTINE WILL ESTIMATE PRECIPITATION FOR EACH GRID POINT
C.....THAT FAILED TO RECEIVE A PRECIPITATION OBSERVATION.
C.....NGBOX IS THE STARTING ADDRESS IN THE APIG ARRAY WHERE THE
C.....ADJACENCY MATRIX DATA CAN BE FOUND.
C
      CALL GESTMT(NGBOX, ISTATC, NDATA(721), NDATA(1), NDATA(1),
     * NDATA(81), NDATA(121), NDATA(161), PG24)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
C
      IF(IBUG2 .EQ. 1) CALL GDPG24(PG24)
C
      IF(ISTATC .EQ. 0) GOTO 610
      WRITE(IPR,915) ISTATC
      WRITE(IPR,904)
      GOTO 999
C
C.....CALL THE ROUTINE TO DUMP THE PRECIPITATION IN A DEGREE BOX FORMAT.
C
  610 CALL GBXPLT(APIG(NGBOX), PG24, 1)
      INCLUDE 'gcommon/setwhere'
C
C.....AFTER ESTIMATES HAVE BEEN MADE...CALL THE ROUTINE TO PRODUCE AN
C.....OUTPUT LIST OF THE PRECIPITATION...PROVIDED ONE IS DESIRED.
C
      IF(IPRT24 .EQ. 0) GOTO 620
      CALL GPLIST(PG24, APIG)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
C
C.....NOW THAT THE PRECIPITATION ARRAY HAS BEEN PROCESSED...STORE IT ON
C.....THE PREPROCESSOR DATA BASE.  NOTE...DO NOT CALL THIS ROUTINE
C.....UNLESS THIS IS A COMPLETE DAY'S RUN.
C
  620 IF(IATSA .EQ. 1) GOTO 630
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,910)
      GOTO 640
C
  630 CALL GPG24U(PG24, ISTATC)
C
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
  640 CONTINUE
C
C.....NOW COMPUTE MARO, MAPG, AND MAPI. CALL THE SUPERVISOR ROUTINE
C.....TO PERFORM THESE TASKS.
C
      CALL GMARO(PG24, APIG, GP6, W6, ISTATC)
      INCLUDE 'gcommon/setwhere'
      INCLUDE 'gcommon/gcpuchk'
  999 IF(IPTRCE .GT. 0) WRITE(IOPDBG,902)
C
C.....UPDATE CONTROL RECORDS FOR PPDB .
C
      CALL WPPDCO(ISTATC)
      IF(IPTRCE .GT. 0) WRITE(IOPDBG,941) ISTATC
      IF(ISTATC .EQ. 0) GOTO 1000
      WRITE(IPR,943) ISTATC
      CALL WARN
C
 1000 CONTINUE
      RETURN
      END
