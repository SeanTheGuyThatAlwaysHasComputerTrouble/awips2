C MEMBER GSETTM
C  (from old member PPGSETTM)
C
C @PROCESS LVL(77)
C
C                             LAST UPDATE: 01/07/94.12:03:47 BY $WC21DT
C
C
      SUBROUTINE GSETTM(ISTATC)
C
C.....THIS IS A SUBROUTINE TO FILL THE GDATE COMMON BLOCK.
C.....JERRY M. NUNN       WGRFC FT. WORTH       MAY 1986
C
C.....THE ARGUMENT LIST IS:
C
C.....ISTATC - A STATUS CODE.
C.....         = 0  NORMAL RETURN -- NO ERRORS OR WARNINGS.
C.....         = 4  ONE OR MORE WARNINGS ACTIVATED.
C.....         = 8  ONE OR MORE ERRORS ACTIVATED.
C
C.....SUBROUTINE EXTENSIVELY REVISED FEBRUARY 1988.
C
C.....REVISIONS DONE BY:  JERRY M. NUNN     WGRFC FT. WORTH
C
C.....ALL ROUTINES TO COMPUTE DAYLIGHT SAVINGS TIME REMOVED. JUST NEED
C.....TO GET SWITCH 'NOUTDS' FROM JULDA.  THE FCTIME COMMON BLOCK HAS
C.....BEEN REMOVED.  A NEW COMMON BLOCK GDATE HAS BEEN SUBSTITUTED.
C.....THIS COMMON BLOCK IS ONE DEVELOPED JUST FOR MARO.
C
C.....SUBROUTINE REVISED AGAIN MARCH 28, 1988.
C
C.....REVISION DONE BY:  JERRY M. NUNN     WGRFC FT. WORTH
C
C.....FCTIME COMMON BLOCK REINSTATED. DATES AND TIMES IN GDATE COMMON
C.....BLOCK WILL BE DERIVED FROM THE INFORMATION IN THE FCTIME COMMON
C.....BLOCK. THIS IS BECAUSE HCL FILLS UP THE FCTIME COMMON BLOCK, AND
C.....OTHER ROUTINES REQUIRED BY MARO ALSO REQUIRE THE FCTIME COMMON
C.....BLOCK.
C
      INCLUDE 'gcommon/explicit'
      INTEGER*4 DAMAX(12), WKDAY(7), SMONTH(12)
C
      DIMENSION ITIME(8), ZT(24), SNAME(2)
C
      INCLUDE 'common/where'
      INCLUDE 'common/pudbug'
      INCLUDE 'gcommon/gsize'
      INCLUDE 'gcommon/gdate'
      INCLUDE 'common/fctime'
      INCLUDE 'common/errdat'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_maro/RCS/gsettm.f,v $
     . $',                                                             '
     .$Id: gsettm.f,v 1.2 1998/07/06 11:32:54 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA DAMAX /31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31/
      DATA ZTIME, SNAME /4HZ   , 4HGSET, 4HTM  /
      DATA GDTM, GCOM /4HGDTM, 4HGCOM/
      DATA WKDAY /4HSUN , 4HMON , 4HTUE , 4HWED , 4HTHU , 4HFRI ,
     * 4HSAT /
      DATA SMONTH /4HJAN , 4HFEB , 4HMAR , 4HAPR , 4HMAY , 4HJUN ,
     *  4HJUL , 4HAUG , 4HSEP , 4HOCT , 4HNOV , 4HDEC /
C
  900 FORMAT(1H0, '*** GSETTM ENTERED ***')
  901 FORMAT(1X, '*** EXIT GSETTM ***')
  902 FORMAT(1H0, 'DATE-TIME VALUES..........DAY NO.  NAME  MONTH NO.  N
     *AME  DATE  YEAR  HOUR  WEEK NO.  JULIAN DAY  INT. HR  JULIAN HR  D
     *ST-FLAG', //, 1X, 'CURRENT DATE..............', 2X, I1, 6X, A3,
     * 5X, I2, 7X, A3, 4X, I2, 3X, I4, 2X, I2, A3, 4X, I2, 7X, I5, 7X,
     * I2, 6X, I7, 6X, I2, //, 1X, 'BEGINNING RUNDATE.........', 2X, I1,
     * 6X, A3, 5X, I2, 7X, A3, 4X, I2, 3X, I4, 2X, I2, A3, 4X, I2,
     * 7X, I5, 7X, I2, 6X, I7, 6X, I2, //, 1X, 'ENDING RUNDATE..........
     *..', 2X, I1, 6X, A3, 5X, I2, 7X, A3, 4X, I2, 3X, I4, 2X, I2, A3,
     * 4X, I2, 7X, I5, 7X, I2, 6X, I7, 6X, I2, //, 1X, 'LAST DAY WITH OB
     *S. DATA...', 2X, I1, 6X, A3, 5X, I2, 7X, A3, 4X, I2, 3X, I4, 2X,
     * I2, A3, 4X, I2, 7X, I5, 7X, I2, 6X, I7, 6X, I2)
  903 FORMAT(1H0, 'THE LAST DATE WITH OBSERVED DATA IS  ', I2, '/', I2,
     * '/', I4, ' AT ', I2, A3, '.')
  904 FORMAT(1H0, '*** FATAL ERROR ***  BEGINNING COMPUTATIONAL DATE OF
     *', I2, '/', I2, '/', I4, ' AT ', I2, 'Z SPECIFIES A FUTURE TIME.',
     * /, 5X, 'CURRENT DATE-TIME IS ', I2, '/', I2, '/', I4, ' AT ',
     * I2, 'Z. CORRECT THE BEGINNING COMPUTATIONAL DATE AND RE-SUBMIT TH
     *E JOB.', /, 5X, 'MARO FUNCTION TERMINATED.')
  905 FORMAT(1H0, '*** FATAL ERROR ***  LAST OBSERVED DATA DATE OF ',
     * I2, '/', I2, '/', I4, 1X, I2, 'Z IS MISSING OR INVALID.', /, 5X,
     * 'CORRECT ENDING DATE AND RE-SUBMIT JOB. MARO FUNCTION IS TERMINAT
     *ED.')
  906 FORMAT(1H0, '*** FATAL ERROR ***  BEGINNING COMPUTATIONAL DATE IS
     *OF A LATER TIME THAN ENDING COMPUTATIONAL DATE.', /, 5X, 'BEGINNIN
     *G COMPUTATIONAL DATE IS ', I2, '/', I2, '/', I4, ' AT ', I2, 'Z.
     *ENDING COMPUTATIONAL DATE IS ', I2, '/', I2, '/', I4, ' AT ', I2,
     * 'Z.', /, 5X, 'CORRECT THE INCORRECT DATE(S) AND RE-SUBMIT THE JOB
     *.  MARO PROCESSING TERMINATED.')
  907 FORMAT(1H0, '*** FATAL ERROR ***  BEGINNING AND ENDING COMPUTATION
     *AL TIMES ARE NOT 24 HOURS APART.', /, 5X,  'MARO CAN ONLY BE RUN F
     *OR A SINGLE 24-HOUR PERIOD AT A TIME.', /, 5X, 'BEGINNING COMPUTAT
     *IONAL DATE IS ', I2, '/', I2, '/', I4, ' AT ', I2, 'Z.  ENDING COM
     *PUTATIONAL DATE IS ', I2, '/', I2, '/', I4, ' AT ', I2, 'Z.', /,
     * 5X, 'CORRECT THE INCORRECT DATE-TIME(S) AND RE-SUBMIT THE JOB.  M
     *ARO PROCESSING TERMINATED.')
  908 FORMAT(1H0, 'TIME STEP FOR MARO AND MAPG TIME SERIES IS ', I2,
     * ' HRS.  THERE ARE ', I2, ' TIME STEPS IN THE 12Z-12Z HYDROLOGIC D
     *AY.', /, 1X, 'THE ENDING TIME FOR EACH TIME STEP IS:', /, 1X,
     * 24(I3, A2))
  909 FORMAT(1H0, 'THE BEGINNING COMPUTATIONAL DATE IS  ', I2, '/', I2,
     * '/', I4, ' AT ', I2, A3, '.')
  910 FORMAT(1H0, 'THE ENDING COMPUTATIONAL DATE IS     ', I2, '/',
     * I2, '/', I4, ' AT ', I2, A3, '.')
  911 FORMAT(1H0, '*** FATAL ERROR ***  CURRENT DATE OF ', I2, '/',
     * I2, '/', I2, 1X, I2, 'Z (AS DETERMINED FROM THE SYSTEM DATE-TIME
     *CLOCK) IS MISSING OR INVALID.', /, 5X, 'MARO FUNCTION IS BEING HAL
     *TED.')
  912 FORMAT(1H0, 'THE CURRENT DATE (FROM THE SYSTEM DATE-TIME CLOCK) IS
     * ', I2, '/', I2, '/', I2, ' AT ', I2, 'Z.')
  913 FORMAT(1H0, 'AVAILABILITY FLAG FOR TOTAL HYDROLOGIC DAY''S DATA =
     *', I2, /, 1X, 'NUMBER OF COMPLETE 6-HOURLY PERIODS AVAILABLE = ',
     * I2, 3X, 'TIME OF LAST COMPLETE 6-HOURLY PERIOD IS ', I2, '/', I2,
     * '/', I4, ' AT ', I2, A3, '.')
  915 FORMAT(1H0, 'BEGINNING Z TIME HOUR OF COMPUTATION IS ', I2, 3X,
     * 'ENDING Z TIME HOUR OF COMPUTATION IS ', I2, '.')
  917 FORMAT(1H0, '*** WARNING ***  MINUTES OF CURRENT TIME IS LESS THAN
     * ZERO OR EXCEEDS 59. MINUTES CHANGED TO ZERO.', /, 5X, 'MARO PROCE
     *SSING CONTINUES.')
  918 FORMAT(1H0, '*** FATAL ERROR ***  BEGINNING RUNDATE OF ', I2, '/',
     * I2, '/', I2, 1X, I2, 'Z IS MISSING OR INVALID.', /, 5X, 'CORRECT
     *BEGINNING DATE AND RE-SUBMIT JOB. MARO FUNCTION IS TERMINATED.')
  919 FORMAT(1H0, '*** FATAL ERROR ***  ENDING RUNDATE OF ', I2, '/',
     * I2, '/', I2, 1X, I2, 'Z IS MISSING OR INVALID.', /, 5X, 'CORRECT
     *ENDING DATE AND RE-SUBMIT JOB. MARO FUNCTION IS TERMINATED.')
  920 FORMAT(1H0, 'JULIAN DATES AND ELAPSED HOURS HAVE BEEN TESTED FOR P
     *OSSIBLE UPDATING.  AFTER THESE HAVE BEEN TESTED,', /, 1X, 'THEIR V
     *ALUES ARE NOW AS FOLLOWS:', /, 3X, 'BEGINNING RUNDATE   = ', I5,
     *3X, 'BEGINNING HOUR = ', I2, 3X, 'ENDING RUNDATE = ', I5, 3X,
     * 'ENDING HOUR   = ', I2, /, 3X, 'CURRENT JULIAN DATE = ', I5, 3X,
     *'CURRENT HOUR   = ', I2)
C
      INCLUDE 'gcommon/setwhere'
C
      ISTATC = 0
      KPERR  = 0
      KWARN  = 0
      IBUG = IPBUG(GDTM)
      IGBUG = IPBUG(GCOM)
C
C.....WRITE MESSAGE IF ONE IS CALLED FOR.
C
      IF(IPTRCE .GE. 1) WRITE(IOPDBG,900)
C
C.....COMPUTE THE ENDING Z TIMES FOR EACH TIME STEP TO BE USED.
C
      DO 105 NP = 1, NUMPD1
      ITIME6(NP) = 12 + NSTEP1*NP
      ZT(NP) = ZTIME
      IF(ITIME6(NP) .GE. 24) ITIME6(NP) = ITIME6(NP) - 24
  105 CONTINUE
C
      IF(IBUG .EQ. 1) WRITE(IOPDBG,908) NSTEP1, NUMPD1,
     *  (ITIME6(NP), ZT(NP), NP = 1, NUMPD1)
C
C.....COMPUTE THE DATE OFFSET FOR THE PDB.
C
      NHOPDB = LOCAL - NLSTZ
      IF(NHOPDB .GT. 23) NHOPDB = NHOPDB - 24
      IF(NHOPDB .LT.  0) NHOPDB = NHOPDB + 24
C
C.....NOW FILL OUT THE GDATE COMMON BLOCK. THE CURRENT MONTH...DATE...
C.....AND YEAR AND TIME CAN BE EXTRACTED FROM THE NOW ARRAY IN THE
C.....FCTIME COMMON BLOCK.
C
C.....CAUTION:  THE HOUR (AS TAKEN FROM THE FCTIME COMMON BLOCK)
C.....RETURNED BY FSETNW IS IN THE EASTERN TIME ZONE (EITHER STANDARD
C.....OR DAYLIGHT).
C
C
      MO     = NOW(1)
      NDATE  = NOW(2)
      NYR    = NOW(3) - (NOW(3)/100)*100
      NYEAR  = NOW(3)
      KCHRS  = NOW(4)/100
      ICHRS  = KCHRS - 1 - NOUTZ - NOUTDS
      IF(ICHRS .LT. 24) GOTO 107
C
      CALL GRDDAT(MO, NDATE, NYEAR, ICHRS, DAMAX(MO))
C
  107 ICMINS = NOW(4) - KCHRS*100
C
      IF(IBUG .EQ. 1) WRITE(IOPDBG,912) MO, NDATE, NYR, ICHRS
C
C.....NOW GET DATES FOR THE BEGINNING AND ENDING TIMES.
C
      CALL MDYH2(IDARUN, IHRRUN, IHBMO, IHBDAT, IHBYR, IHBHRS, NOUTZ,
     * KOUTDS, ZTIME)
C
      IF(IHBHRS .LT. 24) GOTO 115
      CALL GRDDAT(IHBMO, IHBDAT, IHBYR, IHBHRS, DAMAX(IHBMO))
C
  115 CONTINUE
C
      INCLUDE 'gcommon/setwhere'
C
      CALL MDYH2(LDARUN, LHRRUN, IHYMO, IHYDAT, IHYYR, IHYHRS, NOUTZ,
     * KOUTDS, ZTIME)
C
      IF(IHYHRS .LT. 24) GOTO 125
      CALL GRDDAT(IHYMO, IHYDAT, IHYYR, IHYHRS, DAMAX(IHYMO))
C
  125 CONTINUE
C
      INCLUDE 'gcommon/setwhere'
C
      CALL MDYH2(LDACPD, LHRCPD, LSTMO, LSTDAT, LSTYR, LSTHRS, NOUTZ,
     * KOUTDS, ZTIME)
C
      IF(LSTHRS .LT. 24) GOTO 135
      CALL GRDDAT(LSTMO, LSTDAT, LSTYR, LSTHRS, DAMAX(LSTMO))
C
  135 CONTINUE
C
      INCLUDE 'gcommon/setwhere'
C
C.....SET THE VALUES IN THE COMMON BLOCK 'WHERE'.
C
      IOPNUM    = -1
      OPNAME(1) = SNAME(1)
      OPNAME(2) = SNAME(2)
C
C.....CHECK THE VALIDITY OF THE DATE-TIME GROUP RETURNED.
C
      CALL GDTTST(MO, 1, 12, NDATE, 1, DAMAX(MO), NYR, 70, ISTATC)
      IF(ISTATC .NE. 0) GOTO 110
      IF((ICMINS .LT. 0) .OR. (ICMINS .GT. 59)) GOTO 120
      GOTO 140
C
  110 WRITE(IOERR,911) MO, NDATE, NYR, ICHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  120 WRITE(IOERR,917) ICMINS
      ICMINS = 0
      KWARN = 1
      CALL WARN
      GOTO 140
C
C
C.....CHECK OUT THE VALIDITY OF THE BEGINNING...THE ENDING...AND THE
C.....LAST COMPUTATIONAL DATES.
C
  140 CALL GDTTST(IHBMO, 1, 12, IHBDAT, 1, DAMAX(IHBMO), IHBYR, 70,
     * ISTATC)
      IF(ISTATC .EQ. 0) GOTO 150
      WRITE(IOERR,918) IHBMO, IHBDAT, IHBYR, IHBHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  150 IF(IBUG .EQ. 1) WRITE(IOPDBG,909) IHBMO, IHBDAT, IHBYR, IHBHRS,
     * ZTIME
C
      CALL GDTTST(IHYMO, 1, 12, IHYDAT, 1, DAMAX(IHYMO), IHBYR, 70,
     * ISTATC)
      IF(ISTATC .EQ. 0) GOTO 160
      WRITE(IOERR,919) IHYMO, IHYDAT, IHYYR, IHYHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  160 IF(IBUG .EQ. 1) WRITE(IOPDBG,910) IHYMO, IHYDAT, IHYYR, IHYHRS,
     * ZTIME
C
      CALL GDTTST(LSTMO, 1, 12, LSTDAT, 1, DAMAX(LSTMO), LSTYR, 70,
     * ISTATC)
      IF(ISTATC .EQ. 0) GOTO 161
      WRITE(IOERR,905) LSTMO, LSTDAT, LSTYR, LSTHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  161 IF(IBUG .EQ. 1) WRITE(IOPDBG,903) LSTMO, LSTDAT, LSTYR, LSTHRS,
     * ZTIME
C
C.....NOW COMPUTE THE REMAINDER OF THE DATE-TIME VARIABLES THAT ARE
C.....DERIVED FROM THE INPUT MONTH/DATE/YEAR.
C
C.....GET THE JULIAN DATES.
C
      CALL FCITZC(NOUTZ, KOUTDS, ZTIME)
      CALL JULDA(JDTNOW, IHRCUR, MO, NDATE, NYEAR, ICHRS, NOUTZ,
     * KOUTDS, ZTIME)
      ICURDA = LDARUN
      IHRHYD = LHRRUN
      IBEGDA = IDARUN
      IHRBEG = IHRRUN
      LSTJDA = LDACPD
      IHRLST = LHRCPD
C
C.....COMPUTE THE JULIAN HOURS.
C
      JHRNOW = (JDTNOW-1)*24 + IHRCUR + NHOPDB
      ICURHR = (ICURDA-1)*24 + IHRHYD + NHOPDB
      IBEGHR = (IBEGDA-1)*24 + IHRBEG + NHOPDB
      LSTJHR = (LSTJDA-1)*24 + IHRLST + NHOPDB
C
C.....NOW RETRIEVE THE NUMBERS AND NAMES OF THE DAYS OF THE WEEK
C.....ASSOCIATED WITH THE 3 DATE-TIMES.
C
C.....NOW GET A 'MODIFIED JULIAN DATE' TO COMPUTE WEEKDAY NUMBERS
C.....FROM.
C
      IP = JDTNOW + (IHRCUR + NHOPDB)/24
      JP = ICURDA + (IHRHYD + NHOPDB)/24
      KP = IBEGDA + (IHRBEG + NHOPDB)/24
      LP = LSTJDA + (IHRLST + NHOPDB)/24
C
      NDA    = MOD(IP,7) + 1
      IHYDA  = MOD(JP,7) + 1
      IHBDA  = MOD(KP,7) + 1
      LSTDA  = MOD(LP,7) + 1
C
      NWKDAY = WKDAY(NDA)
      IHYDAY = WKDAY(IHYDA)
      IHBDAY = WKDAY(IHBDA)
      LSTDAY = WKDAY(LSTDA)
C
      NW     = NWEEK(MO, NDATE, NYEAR)
      IHYWK  = NWEEK(IHYMO, IHYDAT, IHYYR)
      IHBWK  = NWEEK(IHBMO, IHBDAT, IHBYR)
      LSTWK  = NWEEK(LSTMO, LSTDAT, LSTYR)
C
      MONTH  = SMONTH(MO)
      IHYMON = SMONTH(IHYMO)
      IHBMON = SMONTH(IHBMO)
      LSTMON = SMONTH(LSTMO)
C
      IF(IBUG .EQ. 1) WRITE(IOPDBG,902) NDA, NWKDAY, MO, MONTH, NDATE,
     * NYEAR, ICHRS, ZTIME, NW, JDTNOW, IHRCUR, JHRNOW, NOUTDS, IHBDA,
     * IHBDAY, IHBMO, IHBMON, IHBDAT, IHBYR, IHBHRS, ZTIME, IHBWK,
     * IBEGDA, IHRBEG, IBEGHR, NOUTDS, IHYDA, IHYDAY, IHYMO, IHYMON,
     * IHYDAT, IHYYR, IHYHRS, ZTIME, IHYWK, ICURDA, IHRHYD, ICURHR,
     * NOUTDS, LSTDA, LSTDAY, LSTMO, LSTMON, LSTDAT, LSTYR, LSTHRS,
     * ZTIME, LSTWK, LSTJDA, IHRLST, LSTJHR, NOUTDS
C
C.....THE BEGINNING JULIAN RUNDATE...THE ENDING JULIAN RUNDATE...AND
C.....THE CURRENT JULIAN DATE...(IN DAYS)...ARE DETERMINED FROM CALLS
C.....TO THE JULIAN DATE SUBROUTINES. IF THE HOURS ELAPSES...AS FOUND
C.....IN THE SECOND ARGUMENT...IS 24...THEN THE JULIAN DATE MUST BE
C.....INCREMENTED BY 1...IN ORDER FOR THESE DATES TO BE ACCURATELY USED
C.....FOR WHAT THEY ARE INTENDED FOR.
C
C.....THEREFORE...CHECK THE ACCUMULATED HOURS...AND IF THEY ARE EQUAL
C.....TO 24...INCREMENT THE JULIAN DATE...AND CHANGE THE HOURS TO ZERO.
C
      IF(IHRCUR .LT. 24) GOTO 171
      JDTNOW = JDTNOW + 1
      IHRCUR = IHRCUR - 24
C
  171 IF(IHRHYD .LT. 24) GOTO 172
      ICURDA = ICURDA + 1
      IHRHYD = IHRHYD - 24
C
  172 IF(IHRBEG .LT. 24) GOTO 173
      IBEGDA = IBEGDA + 1
      IHRBEG = IHRBEG - 24
C
  173 IF(IBUG .EQ. 1) WRITE(IOPDBG,920) IBEGDA, IHRBEG, ICURDA, IHRHYD,
     * JDTNOW, IHRCUR
C
C.....MAKE CHECKS OF THE BEGINNING AND ENDING COMPUTATIONAL DATES, AND
C.....DETERMINE WHAT (IF ANY) DATA IS UNAVAILABLE.
C
      IF(IBEGHR .GE. ICURHR) GOTO 180
      IF(IBEGHR .GE. JHRNOW) GOTO 220
C
C.....INITHR IS THE INITIAL ENDING HOUR (Z TIME) OF THE FIRST TIME
C.....STEP IN THE MARO FUNCTION.
C
      INITHR = 12
C
C.....IENDHR IS THE ENDING HOUR (Z TIME) OF THE LAST TIME STEP IN THE
C.....MARO FUNCTION.
C
C.....AS OF 2/1/88 THE DEFAULT MARO TIME STEP IS 6 HOURS. THEREFORE,
C.....THERE ARE 4 TIME STEPS IN THE 12Z-12Z HYDROLOGIC DAY. THE ENDING
C.....HOUR IS 12Z.
C
      IENDHR = INITHR + NUMPD1*NSTEP1
      IF(IENDHR .GE. 24) IENDHR = IENDHR - 24
C
      IF(IBUG .EQ. 1) WRITE(IOPDBG,915) INITHR, IENDHR
      IF(INITHR .GE. 24) INITHR = INITHR - 24
      IF((ICURHR - IBEGHR) .NE. 24) GOTO 210
C
C.....DETERMINE THE LATEST TIME PERIOD OF AVAILABLE DATA.
C
      IF(LSTJHR .LT. ICURHR) GOTO 170
      IATSA  =  1
      NCPD6  =  4
      LTSLOT = 12
      GOTO 175
C
C.....ONLY A PARTIAL DAY IS AVAILABLE. COMPUTE THE NUMBER OF COMPLETE
C.....6-HOURLY PERIODS AVAILABLE.
C
  170 IATSA  =  0
      NCPD6  =  IHRLST/6
      IF(NCPD6 .EQ. 0) LTSLOT = 12
      IF(NCPD6 .EQ. 1) LTSLOT = 18
      IF(NCPD6 .EQ. 2) LTSLOT =  0
      IF(NCPD6 .EQ. 3) LTSLOT =  6
      IF(NCPD6 .EQ. 4) LTSLOT = 12
C
  175 IF(IBUG .EQ. 1) WRITE(IOPDBG,913) IATSA, NCPD6, LSTMO, LSTDAT,
     * LSTYR, LTSLOT, ZTIME
      GOTO 999
C
C
  180 WRITE(IOERR,906) IHBMO, IHBDAT, IHBYR, IHBHRS, IHYMO, IHYDAT,
     * IHYYR, IHYHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  210 WRITE(IOERR,907) IHBMO, IHBDAT, IHBYR, IHBHRS, IHYMO, IHYDAT,
     * IHYYR, IHYHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  220 WRITE(IOERR,904) IHBMO, IHBDAT, IHBYR, IHBHRS, MO, NDATE, NYEAR,
     * ICHRS
      KPERR = 1
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
C.....WRITE EXIT MESSAGE.
C
  999 IF(IPTRCE .GE. 1) WRITE(IOPDBG,901)
      IF(KWARN .GT. 0) ISTATC = 4
      IF(KPERR .GT. 0) ISTATC = 8
      RETURN
      END
