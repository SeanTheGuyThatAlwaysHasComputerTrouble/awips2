C MODULE GMARO
C-----------------------------------------------------------------------
C
      SUBROUTINE GMARO(PG24, APIG, GP6, W6, ISTATC)
C
C.....THIS IS THE DRIVER ROUTINE FOR THE COMPUTATION OF THE
C.....FOLLOWING HYDROLOGIC PARAMETERS:
C
C.....  (1)  MARO -- MEAN AREAL RUNOFF
C.....  (2)  MAPG -- MEAN AREAL PRECIP (GRID POINT METHOD).
C.....  (3)  MAPI -- MEAN AREAL API.
C
C.....MARO VALUES ARE COMPUTED FROM RUNOFF VALUES THAT ARE CALCULATED
C.....FOR EACH GRID POINT.  FROM THIS, PLUS GRID POINT VALUES OF
C.....PRECIP AND API, MARO, MAPG, AND MAPI ARE FIGURED FROM THE AVERAGE
C.....OF ALL THE VALUES OBSERVED AT EACH GRID POINT WITHIN THE MARO AREA
C.....IN THE GRID SYSTEM.
C
C.....ONCE 24 UR VALUES ARE COMPUTED...THE SIX HOURLY BREAKDOWNS ARE
C.....PRODUCED FROM THE 24 HOUR AVERAGES USING THE AVERAGE OF THE
C.....PERCENTAGE DISTRIBUTIONS FOUND IN ALL THE GRID POINTS WITHIN OR
C.....ASSIGNED TO THE MAP AREA.  DETAILS OF THE ALGORITHM ARE GIVEN
C.....BELOW.
C
C.....THIS SOFTWARE WAS DEVELOPED FROM ROUTINE 'RUNOF' IN T WGRFC
C.....PROGRAM 'ONECL' (ONE CALL)...THE GRID SYSTEM RAINFALL-RUNOFF-AREAL
C.....AVERAGE COMPUTATION PROGRAM.
C
C.....HERE IS THE ARGUMENT LIST:
C
C.....PG24   - THE ARRAY OF 24-HOURLY PRECIPITATION.
C.....APIG   - THE ARRAY OF GRID POINT API.
C.....GP6    - THE ARRAY OF SIX-HOURLY DISTRIBUTION FLAGS.
C.....W6     - THE ARRAY OF SIX-HOURLY DISTRIBUTION PERCENTAGES.
C.....ISTATC - A STATUS CODE RETURNED FROM THE DATABASE ACCESS ROUTINES.
C.....             = 0  NORMAL RETURN.
C.....         NOT = 0  ERROR RETURN CODE FROM APPROPRIATE DATABASE
C.....                  ACCESS ROUTINE.
C
C.....ROUTINE GMARO ORIGINALLY WRITTEN BY:
C
C.....JERRY M. NUNN       WGRFC, FT. WORTH, TEXAS       NOVEMBER 1986
C
C
      INCLUDE 'gcommon/explicit'
C
      INTEGER*2 PG24(1), APIG(1), GP6(1), W6(1)
C
      PARAMETER (LRMARO=4,LRMAPG=4)
      DIMENSION RMARO(LRMARO), RMAPG(LRMAPG), SNAME(2)
      DIMENSION PAMARO(384), PARFRO(320), NRFROP(20)
      DIMENSION NRFROI(2), PCT(4), IWKBUF(200), IRFROI(2)
      DIMENSION NFGNAM(5), MAROID(200)
      DIMENSION A(20), WN(20), WX(20), BI(20), SK(20), SM(20)
      DIMENSION E1(20), E2(20), G1(20), G2(20), CP(20), POW(20)
      DIMENSION C(20), Y(20), B(20), IRFRO(20)
C
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
      INCLUDE 'common/errdat'
      INCLUDE 'gcommon/gdispl'
      INCLUDE 'gcommon/gdate'
      INCLUDE 'common/fctime'
      INCLUDE 'gcommon/gsize'
      INCLUDE 'gcommon/gopt'
      INCLUDE 'common/pudbug'
      INCLUDE 'gcommon/boxtrc'
      INCLUDE 'gcommon/gversn'
      INCLUDE 'gcommon/gmropa'
      INCLUDE 'udsi'
      INCLUDE 'prdcommon/pdatas'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_maro/RCS/gmaro.f,v $
     . $',                                                             '
     .$Id: gmaro.f,v 1.2 1999/01/20 13:30:43 page Exp $
     . $' /
C    ===================================================================
C
C
C
      DATA MARO, RAMARO, MAPG, MAPI /4HMARO, 4HMARO, 4HMAPG, 4HMAPI/
      DATA GMRO, GMPG, GAPI, GPDB /4HGMRO, 4HGMPG, 4HGAPI, 4HGPDB/
      DATA RFRO, GRNF, APGI, GCPU /4HRFRO, 4HGRNF, 4HAPIG, 4HGCPU/
      DATA SNAME, NRFROI, INCHES  /4HGMAR, 4HO   , 2*4H    , 4HIN  /
C     DATA ITSTY1, ITSTY2 /4H6HR , 4H24HR/
C
C
  901 FORMAT(1H0, '*** GMARO ENTERED ***')
  902 FORMAT(1X, '*** EXIT GMARO ***')
  903 FORMAT(1H0,  57X, 'NWSRFS VERSION 5.0', /, 52X, 'WGRFC FT. WORTH M
     *ARO FUNCTION', /, 54X, '(VERSION ', F4.2, ' - ', A4, I4, ')', //,
     *26X, 'MARO/MAPG/MAPI COMPUTATIONS FOR THE 24 HOUR PERIOD ENDING AT
     * ', I2, 'Z', 1X, A4, A4, I2, ',', I5)
  904 FORMAT(1H0, 44X, 'MARO', 37X, 'MAPG', 36X, 'INITL', /, 1X, 'AREA',
     * 39X, '24 HR', 6X, 'MARO 6HR VALUES ENDING AT', 5X, '24 HR', 6X,
     * 'MAPG 6HR VALUES ENDING AT', 5X, 'MAPI', /, 2X, 'NO.', 3X, 'AREA
     *ID', 4X, 'AREA DESCRIPTION', 9X, 'TOTAL', 7X, I2, 'Z', 4X, '0',
     * I1, 'Z', 4X, '0', I1, 'Z', 4X, I2, 'Z', 5X, 'TOTAL', 7X, I2, 'Z',
     * 4X, '0', I1, 'Z', 4X, '0', I1, 'Z', 4X, I2, 'Z', 5X, 'VALUE')
  905 FORMAT(1H0, I4, 3X, 2A4, 3X, 5A4, 5X, F5.2, 3X, 4(2X, F5.2), 5X,
     * F5.2, 3X, 4(2X, F5.2), 5X, F5.2)
  906 FORMAT(1H0, '*** FATAL ERROR ***  UNABLE TO READ RFRO PARAMETRIC R
     *ECORD FOR RELATION NO.', I3, '. STATUS CODE = ', I4, '.')
  907 FORMAT(1H0, '*** FATAL ERROR ***  UNABLE TO READ MARO PARAMETRIC R
     *ECORD NO. ', I4, ', POINTER RECORD NO.', I4, '.  STATUS CODE = ',
     * I4, '.')
  908 FORMAT(1H1, 92X, 'TIME OF RUN ', 2A4, I2, ',', I5, ' - ', I2, ':',
     * I2, 'Z')
  909 FORMAT(1H0, '*** WARNING ***  RAINFALL-RUNOFF RELATION NO.', I4,
     * 'FOR GRID POINT ', I4, /, 5X, 'OF MARO AREA ', 2A4, ' NOT FOUND.
     *THIS DATA WILL BE IGNORED.', /, 5X, 'RAINFALL-RUNOFF RELATION NUMB
     *ERS MUST BE BETWEEN 1 AND 20 INCLUSIVE...AND ALMOST ALWAYS SHOULD
     *BE LESS THAN 12.', /, 5X, 'PROCESSING CONTINUES.')
  910 FORMAT(1H0, 'GRID    API   RAIN  RFRO', 6X, 'Y', 9X, 'C', 9X, 'B',
     * 8X, 'RI1', 7X, 'RI2', 8X, 'C2', 6X, 'RUNOFF', /, 1X,
     * I4, 2X, F5.2, 2X, F5.2, 4X, I2, 7(2X, F8.3))
  911 FORMAT(1X, 'MARO AREA NO. ', I4, 3X, 2A4, ' - ', 5A4)
  912 FORMAT(1X, I3, ' GRID POINTS PROCESSED FOR MARO AREA NO.', I4,
     * 3X, 2A4, ' - ', 5A4, /, 1X, 'MARO = ', F8.4, 4X, 'MAPG = ',
     * F8.4, 4X, 'MAPI = ', F8.4)
  913 FORMAT(1X,  'CHECKING FOR DISTRIBUTION AT GRID POINTS IN THE MARO
     *AREA (INCLUDING MDR BOX CENTROID GRID POINTS).')
  914 FORMAT(1X,  'CHECKING FOR DISTRIBUTION AT SURROUNDING MDR BOX CENT
     *ROID GRID POINTS NOT IN MARO AREA.')
  915 FORMAT(1X,  'CHECKING FOR DISTRIBUTION AT MARO AREA ASSIGNED FIRST
     * ORDER STATION ... ', 2A4, '.')
  916 FORMAT(1H0, '*** NOTE ***  THIS IS A PARTIAL DAY''S RUN. THEREFORE
     *...NO CALL TO WRITE APIG TO THE PPDB WILL BE MADE.')
  917 FORMAT(1X, 'THIS IS A QPF RUN...THE SIX-HOURLY DISTRIBUTION PERCEN
     *TAGES ARE:  ', 4F7.3)
  920 FORMAT(1H0, '*** FATAL ERROR ***  APIG (GRID POINT API) CANNOT BE
     *READ.')
  921 FORMAT(1H0, '*** ERROR ***  ', A4, ' FOR AREA ', 2A4, ' COULD NOT
     *BE WRITTEN TO PROCESSED DATABASE. STATUS CODE = ', I4, /, 3X, 'WIL
     *L PROCESS NEXT AREA.')
  922 FORMAT(1H0, '*** WARNING ***  ', A4, ' FOR AREA ', 2A4, ' HAS BEEN
     * TRUNCATED. STATUS CODE = ', I4, /, 3X, 'WILL PROCESS NEXT AREA.')
  923 FORMAT(1H0, '*** ERROR ***  INSUFFICIENT WORKSPACE TO WRITE ',
     * A4, ' TO PROCESSED DATABASE. WILL TRY ANYWAY.')
  924 FORMAT(1X,  'DATA FOR RAINFALL-RUNOFF RELATION NO. ', I2, ' BEGINS
     * IN PARAMETER ARRAY ADDRESS ', I4)
  925 FORMAT(1H0, '*** WARNING ***  FORECAST GROUP CODE OF ', A4, ' NOT
     *FOUND FOR FORECAST GROUP ', I4, /, 5X, 'WILL TRY TO PROCESS NEXT F
     *ORECAST GROUP.')
  926 FORMAT(1H0, '*** FORECAST GROUP:  ', 5A4, ' ***')
  927 FORMAT(1X,  'FOR MARO:  NO. OF DAYS IN PROCESSED DATABASE IS ',
     * I4, 3X, 'NO. OF WORKSPACES REQUIRED IS ', I4, /, 1X, 'FOR MAPG:
     *NO. OF DAYS IN PROCESSED DATABASE IS ', I4, 3X, 'NO. OF WORKSPACES
     * REQUIRED IS ', I4, /, 1X, 'FOR MAPI:  NO. OF DAYS IN PROCESSED DA
     *TABASE IS ', I4, 3X, 'NO. OF WORKSPACES REQUIRED IS ', I4)
  930 FORMAT(1X,  'RETURN CODE FROM PROCESSED DATABASE CONTROL INFORMATI
     *ON READ ROUTINE IS ', I4)
  931 FORMAT(1X, '*** WPRDD CALLED. ID = ', 2A4, ' AND TYPE = ', A4,
     * 3X, 'STATUS CODE = ', I4, ' ***')
  932 FORMAT(1X, '*** MARO, MAPG, AND MAPI INITIALIZED ***')
  933 FORMAT(1X, '*** GRID PT. NO. = ', I4, ' ***')
  936 FORMAT(1H0, '*** RPDDLY(APIG) CALLED FOR DAY = ', I6, '.  STATUS C
     *ODE = ', I4, ' ***')
  937 FORMAT(1H0, '*** FORECAST GROUP NO. ', I4, ' -- ', 5A4, ' ***')
  938 FORMAT(1H0, 'FOR ACCESS TO THE PROCESSED DATABASE', /,  5X, 'BEGIN
     *NING JULIAN HOUR......6-HR TIME SERIES = ', I8, /,  5X, 'FUTURE DA
     *TA POINTER........6-HR TIME SERIES = ', I8, /,  5X, 'BEGINNING JUL
     *IAN HOUR.....24-HR TIME SERIES = ', I8, /,  5X, 'FUTURE DATA POINT
     *ER.......24-HR TIME SERIES = ', I8)
  939 FORMAT(1H0, '*** FATAL ERROR ***  NO GRID POINT API DATA EXISTS ON
     * THE PREPROCESSOR DATA BASE FOR ', I2, '/', I2, '/', I4, '.', /,
     * 5X, 'YOU HAVE ATTEMPTED TO MAKE A QPF RUN FOR THE PERIOD ENDING',
     * 1X, I2, '/', I2, '/', I4, '.', /, 5X, 'FOR THIS QPF RUN TO SUCCES
     *SFULLY COMPLETE...YOU MUST HAVE API DATA FOR THE FIRST DATE GIVEN
     *ABOVE.', /, 5X, 'MAKE A MARO RUN FOR THE PERIOD ENDING ', I2, '/',
     * I2, '/', I4, ' BEFORE YOU RE-SUBMIT THIS QPF RUN.', /, 5X, 'MARO
     *FUNCTION HALTED.')
C
      INCLUDE 'gcommon/setwhere'
C
      IF(IPTRCE .GE. 1) WRITE(IOPDBG,901)
C
C.....CHECK IF THE GRID POINT DEBUG IS TO BE TURNED ON FOR ANY BOX.
C
      IBTCON = 0
      DO 80 KP = 1, 20
      IF(NTRBOX(KP) .GT. 0) GOTO 85
   80 CONTINUE
      GOTO 87
C
   85 IBTCON = 1
C
C.....SET CONSTANTS.
C
C.....LRFRO = LENGTH OF RFRO PARAMETER ARRAY.
C..... MRFULL = LENGTH OF MARO PARAMETER ARRAY.
C.....NPAGE  = NO. OF MARO AREAS DISPLAYED PER PAGE IN THE PRINTOUT.
C
   87 ISTATC  =   0
      LRFRO   =  16
      ICALL   =   0
      IUNITS  =   INCHES
      IFPTR1  =   0
      IFPTR2  =   0
      JREC    =   0
      NBUF6   =   4
      NBUF24  =   1
      IF(IRUN .LT. 0) IRUN = 0
C
C.....SET DEBUG FLAGS.
C
      RFPBUG = IPBUG(RFRO)
      MAROBG = IPBUG(RAMARO)
      JCPBUG = IPBUG(GCPU)
      IBUG   = IPBUG(GMRO)
      JBUG   = IPBUG(GMPG)
      KBUG   = IPBUG(GAPI)
      LBUG   = IPBUG(GPDB)
      MBUG   = 0
      IF((IBUG .EQ. 1) .OR. (JBUG .EQ. 1)) MBUG = 1
      MMBUG  = IPBUG(GRNF)
      NBUG   = 0
      IF((MBUG .EQ. 1) .OR. (KBUG .EQ. 1)) NBUG = 1
C
      INCLUDE 'gcommon/gcpuchk'
C
C.....READ THE RAINFALL-RUNOFF RELATION CONSTANTS FROM THE PARAMETER
C.....ARRAY.
C
C.....SET COUNTER FOR NUMBER OF GRID BOXES WHERE DEBUG IS TURNED ON.
C
      NDBOX = 0
C
      DO 90 NP = 1, 20
      IF(NTRBOX(NP) .LE. 0) GOTO 90
      NDBOX = NDBOX + 1
   90 CONTINUE
C
      DO 100 NP = 1, NRFRO
      IRFROI(1) = NRFROI(1)
      IRFROI(2) = NRFROI(2)
      JP = (NP-1)*LRFRO + 1
      IF(RFPBUG .EQ. 1) WRITE(IOPDBG,924) NP, JP
      CALL RPPREC(IRFROI, RFRO, JREC, LRFRO, PARFRO(JP), NFILL, NEXT,
     * ISTATC)
C
      IF(ISTATC .GT. 0) GOTO 110
C
C.....EXTRACT THE INDIVIDUAL RAINFALL-RUNOFF RELATION CONSTANTS FROM
C.....THE RFRO PARAMETRIC ARRAY.
C
      IRFRO(NP) = NP
      A(NP)     = PARFRO(JP+6)
      WN(NP)    = PARFRO(JP+7)
      WX(NP)    = PARFRO(JP+8)
      BI(NP)    = PARFRO(JP+9)
      SK(NP)    = PARFRO(JP+10)
      SM(NP)    = PARFRO(JP+11)
      E1(NP)    = PARFRO(JP+12)
      E2(NP)    = PARFRO(JP+13)
      CP(NP)    = PARFRO(JP+14)
      POW(NP)   = PARFRO(JP+15)
      G1(NP)    = E2(NP) - E1(NP)
      G2(NP)    = E1(NP) - E2(NP)
C
      IF(NEXT .EQ. 0) GOTO 102
C
      JREC = NEXT
C
  100 CONTINUE
C
C.....SET THE WEEK NUMBER.
C
  102 W = NW
C
C.....COMPUTE THE INTERIM VALUES Y, C, AND B.
C
      CALL GCYINT(W, WN, WX, A, BI, E1, E2, G1, G2, CP, IRFRO, NRFRO,
     * Y, C, B)
C
      IF(RFPBUG .EQ. 0) GOTO 104
C
      CALL GMDMP1(NRFRO, W, WN, WX, A, BI, E1, E2, G1, G2, CP, POW,
     * IRFRO, B, C, Y)
C
  104 CONTINUE
      INCLUDE 'gcommon/gcpuchk'
      GOTO 120
C
C.....FATAL ERROR IN PARAMETER ARRAY READ..WRITE MESSAGE AND GET OUT.
C
  110 WRITE(IPR,906) NP, ISTATC
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C.....TEST IF THIS IS A QPF RUN. IF IT IS...THE VALUES OF VARIABLES
C.....IFPTR1 AND IFPTR2 MUST BE COMPUTED...IF ANY OF THE QPF-GENERATED
C.....MARO AND MAPG IS TO MAKE IT TO THE PDB.  QPF DATA IS TREATED AS
C.....'FUTURE DATA', AND THE FUTURE DATA POINTER MUST BE NON-ZERO IF
C.....ANY FUTURE DATA IS TO BE WRITTEN TO THE PDB.
C
C.....THE 'FUTURE DATA POINTER' GIVES THE END OF THE FIRST TIME PERIOD
C.....(DEPENDING UPON THE TIME STEP OF THE TIME SERIES) FOR FUTURE DATA.
C
C
  120 IF(KQPFRN .EQ. 0) GOTO 136
C
C.....IFPTR1 IS THE SIX-HOURLY FUTURE DATA POINTER.
C
      IFPTR1 = LSTJHR + NSTEP1
C
C.....IFPTR2 IS THE 24-HOURLY FUTURE DATA POINTER.
C
      IFPTR2 = ICURHR
C
C.....SUM UP THE DISTRIBUTION NUMBERS.
C
      KSUM = 0
C
      DO 130 NP = 1, 4
      IF(KQPFD(NP) .LT. 0) KQPFD(NP) = 0
      KSUM = KSUM + KQPFD(NP)
  130 CONTINUE
C
C.....NOW SEE HOW MANY SIX-HOUR TIME PERIODS THERE ARE TO FORECAST FOR.
C.....THE USER DETERMINES THIS BY SPECIFYING VALUES FOR TECHNIQUES
C.....'ENDRUN  ' AND 'LSTCMPDY'.
C
      NPD = (ICURHR - LSTJHR)/NSTEP1
      KP  = 4 - NPD + 1
C
C.....ZERO OUT THE PERCENTAGE ARRAY.
C
      DO 132 NP = 1, 4
      PCT(NP) = 0.0
  132 CONTINUE
C
C.....SEE IF DISTRIBUTION FACTORS WERE ACTUALLY ENTERED.
C
      IF(KSUM .GT. 0) GOTO 134
C
C.....IF NO DISTRIBUTION FACTORS WERE ENTERED...COMPUTE AN UNIFORM
C.....DISTRIBUTION FOR THE TIME PERIODS FOR THE QPF.
C
      X = NPD
C
      DO 133 NP = KP, 4
      PCT(NP) = 100.0/X
  133 CONTINUE
      GOTO 136
C
C.....DISTRIBUTION FACTORS WERE INPUT WITH THE TECHNIQUE. SET THE
C.....DISTRIBUTION PERCENTAGES IN THE LAST 'NPD' SIX-HOUR TIME
C.....PERIODS, WHICH IS THE LENGTH OF THE QPF RUN.
C
  134 JP = 1
      R  = KSUM
C
      DO 135 NP = KP, 4
      F = KQPFD(JP)
      PCT(NP) = F/R
      JP = JP + 1
  135 CONTINUE
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C.....READ THE API DATA ARRAY FOR YESTERDAY.
C
  136 IRET = 0
      LPTR = 0
      NGRID1 = NGRID + 1
      NP = 1
C
C.....IF CALLED FOR...SET THE VALUE OF THE APIS TO THE VALUE CALLED
C.....FOR IN A TECHNIQUE.
C
      IF(IRUN .GT. 0) GOTO 148
C
      CALL RPDDLY(APGI, IBEGDA, IRET, LPTR, LPTAR, LPFILL, NGRID1,
     * APIG(NP), LDFILL, NUMSTA, MSGAPI, LBUF, BUF, ISTATC)
C
      IF(KBUG .EQ. 1) WRITE(IOPDBG,936) IBEGDA, ISTATC
C
      IF(ISTATC .EQ. 0) GOTO 145
C
      CALL PSTRDD(IBEGDA, ISTATC, LPTR, NGRID, APGI)
      WRITE(IPR,920)
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  148 JX = 1
      NX = NGRID
      CALL GENAPI(JX, NX, APIG)
      GOTO 145
C
  145 IF(KBUG .EQ. 1) CALL GPDDMP(APGI, NGRID1, APIG(NP))
C
C.....TEST TO SEE IF THE API DATA IS NOT MISSING.  IN THE CASE OF A QPF
C.....RUN...IT COULD BE. A MARO RUN COULD BE MADE FOR THE NEXT DAY USING
C.....FORECAST PRECIP, BEFORE AN OBSERVED PRECIP RUN WAS MADE FOR TODAY.
C.....IN THAT CASE...THE API WOULD BE MISSING. API CANNOT BE MISSING
C.....IN ORDER TO MAKE A SUCCESSFUL MARO RUN.
C
      KP = NGRBOX*100
C
      DO 142 NP = 100, KP, 100
      IF(APIG(NP) .EQ. MSGAPI) GOTO 143
  142 CONTINUE
      GOTO 144
C
C.....THE API IS MISSING. THIS IS A FATAL ERROR.
C
  143 WRITE(IPR,939) IHBMO, IHBDAT, IHBYR, IHYMO, IHYDAT, IHYYR,
     * IHBMO, IHBDAT, IHBYR
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
C.....BEFORE WE GO INTO THE MARO COMPUTATIONS...FIND OUT THE LIMITS OF
C.....THE PROCESSED DATABASE. WE WILL WRITE RECORDS TO THE PROCESSED
C.....DATABASE EACH TIME WE GO THRU A MARO AREA COMPUTATIONS.
C
C.....READ THE CONTROL INFORMATION FOR THE PROCESSED DATABASE.
C
  144 CALL RPDBCI(ISTATC)
      IF(NBUG .EQ. 1) WRITE(IOPDBG,930) ISTATC
C
C.....COMPUTE THE NUMBER OF DAYS CARRIED IN THE PROCESSED DATABASE FOR
C
C
      NDMARO = IPRDMD(MARO)
      NDMAPG = IPRDMD(MAPG)
      NDMAPI = IPRDMD(MAPI)
C
C.....NOW THAT WE GOT THE DAYS...COMPUTE THE NUMBER OF SPACES IN THE
C.....WORK BUFFER FOR WPRDD.
C
      IWMARO = ((((((24/NSTEP1)*NDMARO) + 22) - 1)/LRECLT) + 1)*LRECLT
      IWMAPG = ((((((24/NSTEP1)*NDMAPG) + 22) - 1)/LRECLT) + 1)*LRECLT
      IWMAPI = ((((((24/NSTEP2)*NDMAPI) + 22) - 1)/LRECLT) + 1)*LRECLT
C
      IF(NBUG .EQ. 1) WRITE(IOPDBG,927) NDMARO, IWMARO, NDMAPG, IWMAPG,
     * NDMAPI, IWMAPI
C
C.....CHECK TO SEE THAT THERE IS ENOUGH WORK SPACE IN THE HOLDING AREA.
C
      IF(IWMARO .LE. NWKMAX) GOTO 146
      WRITE(IPR,923) MARO
  146 IF(IWMAPG .LE. NWKMAX) GOTO 137
      WRITE(IPR,923) MAPG
  137 IF(IWMAPI .LE. NWKMAX) GOTO 138
      WRITE(IPR,923) MAPI
C
C.....NOW GET THE STARTING TIME TO BEGIN WRITING TO THE PROCESSED DATA
C.....BASE.
C
  138 JHOUR = IBEGHR + NSTEP1
      KHOUR = ICURHR
      IF(LBUG .EQ. 1) WRITE(IOPDBG,938) JHOUR, IFPTR1, KHOUR, IFPTR2
C
C
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C.....* * * * * * *    M A R O   C O M P U T A T I O N S    * * * * * *
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C.....THE RAINFALL-RUNOFF RELATION DATA HAS NOW BEEN READ IN FROM THE
C.....RFRO PARAMETRIC ARRAY.
C
C.....NOW COMPUTE MARO, MAPG, AND MAPI FOR EACH MARO AREA.
C
C.....(1)  READ MARO AREA PARAMETRIC DATA FROM MARO PARAMETER ARRAY.
C.....(2)  WITH RFRO PARAMETERS COMPUTE POINT RUNOFF FOR EACH
C.....     GRID POINT IN THE MARO AREA.
C.....(3)  USE THE AVERAGING ALGORITHMS TO COMPUTE
C.....     THE THREE AREAL AVERAGES:
C.....     (A)  MARO;  (B) MAPG;   AND (C) MAPI.
C.....(4)  USING PERCENTAGE NORMALIZED 6 HR VALUES DEVELOPED FROM
C.....     FIRST ORDER STATIONS OR MDR...COMPUTE 6 HR BREAKDOWNS OF
C.....     MARO AND MAPG.
C.....(5)  IF DESIRED..DISPLAY THE RESULTS.
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C.....SET THE FIRST RECORD NUMBER TO LOOK FOR.
C
      IPMARO = 0
C
      DO 500 NGRP = 1, NFCSTG
C
C.....GET THE MARO AREA IDS FOR THE FORECAST GROUP.
C
      CALL GMROPO(MROSEQ(NGRP), NFGNAM, NGMARO, MAROID, ISTATC)
C
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,937) NGRP, NFGNAM
      INCLUDE 'gcommon/gcpuchk'
      IF(ISTATC .EQ. 0) GOTO 139
      IF(IBUG .EQ. 1) WRITE(IPR,925) MROSEQ(NGRP), NGRP
      CALL WARN
      GOTO 500
C
C.....NOW PROCESS THE MARO AREAS IN THE FORECAST GROUP.
C
  139 IF(NBUG .EQ. 1) WRITE(IOPDBG,926) NFGNAM
C
      DO 400 NRMARO = 1, NGMARO
      KP = 2*NRMARO - 1
C
      CALL RPPREC(MAROID(KP), MARO, IPMARO, MRFULL, PAMARO(1), LMARO,
     * IPMNXT, ISTATC)
C
      IF(ISTATC .GT. 0) GOTO 140
C
      CALL GMPRM(PAMARO)
      IF(MAROBG .EQ. 1) CALL GMDMP2(NRMARO)
C
      GOTO 150
C
C.....FATAL ERROR READING MARO PARAMETRIC ARRAY. WRITE ERROR MESSAGE
C.....AND GET OUT OF THE ROUTINE.
C
  140 WRITE(IPR,907) NRMARO, IPMARO, ISTATC
      CALL ERROR
      CALL KILLFN(8HMARO    )
      GOTO 999
C
  150 IF(NBUG .EQ. 1) WRITE(IOPDBG,911) NRMARO, IDMARO, IDESC
C
C.....CHECK FOR PRINTOUT FLAG AND PRINT THE HEADING AT THE TOP OF EACH
C.....NEW PAGE.
C
      IF(MAROPT .LT. 1) GOTO 160
      IP = MOD(NRMARO, NPAGE)
      IF(IP .NE. 1) GOTO 160
C
      WRITE(IPR,908) NWKDAY, MONTH, NDATE, NYEAR, ICHRS, ICMINS
      WRITE(IPR,926) NFGNAM
      WRITE(IPR,903) VERNUM, NVMON, NVYR, ITIME6(NUMPD1), IHYDAY,
     * IHYMON, IHYDAT, IHYYR
      WRITE(IPR,904) (ITIME6(NP), NP = 1, NUMPD1),
     * (ITIME6(NP), NP = 1, NUMPD1)
C
C.....INITIALIZE THE HOLDING AREAS.
C
  160 TMARO = 0.0
      TMAPG = 0.0
      RMAPI = 0.0
C
      DO 170 NP = 1, 4
      RMARO(NP) = 0.0
      RMAPG(NP) = 0.0
  170 CONTINUE
      IF(IPTRCE .GE. 8) WRITE(IOPDBG,932)
C
C.....NOW ACCUMULATE THE SUMS OF THE POINT RUNOFF, POINT PRECIP, AND
C.....POINT API OVER ALL GRID POINTS IN THE MARO AREA.
C
      DO 300 NP = 1, NGRIDA
      IF(IPTRCE .GE. 8) WRITE(IOPDBG,933) NP
C
C.....GET THE PRECIPITATION AND THE API FROM THE GRID POINT BEING
C.....PROCESSED AT THIS TIME.
C
      NPGRID = IGRID(NP)
C
      R      =  PG24(NPGRID)
      AG     =  APIG(NPGRID)
      R      =  ABS(R)
      RAIN   =  R/100.
      API    =  AG/100.
C
C.....ACCUMULATE THE SUMS.
C
      TMAPG = TMAPG + RAIN
      RMAPI = RMAPI + API
C
C.....WE HAVE THE PRECIP AND THE API ACCUMULATED. BUT BEFORE THE RUNOFF
C.....AT THE GRID POINT CAN BE ACCUMULATED...WE MUST COMPUTE IT.
C
C.....GET THE RAINFALL-RUNOFF RELATION FROM THE GRID POINT.
C
      NREL = IRELN(NP)
C
C.....CALL THE RUNOFF COMPUTATION ROUTINES.
C
      CALL GRUNOF(W, A(NREL), WN(NREL), WX(NREL), BI(NREL), SK(NREL),
     * SM(NREL), E1(NREL), E2(NREL), CP(NREL), POW(NREL), G1(NREL),
     * G2(NREL), NREL, C(NREL), Y(NREL), B(NREL), C2, DUR, API,
     * RAIN, RI1, RI2, RO)
C
C.....SEE IF THE BOX TRACE IS ON. IF SO...DUMP OUT THE GRID POINT RUNOFF
C.....RESULTS...PROVIDED THE GRID POINT IS IN ONE OF THE BOXES WHOSE
C.....TRACE IS ON.
C
      IF(MMBUG  .EQ. 0) GOTO 280
      IF(IBTCON .EQ. 0) GOTO 280
C
C.....GET THE BOX NO.
C
      IF(NDBOX .LE. 0) GOTO 280
      JBOX = NPGRID/100
C
      DO 260 KP = 1, 20
      IF(NTRBOX(KP) .EQ. JBOX) GOTO 270
  260 CONTINUE
      GOTO 280
C
  270 WRITE(IOPDBG,910) NPGRID, API, RAIN, NREL, Y(NREL), C(NREL),
     * B(NREL), RI1, RI2, C2, RO
C
C.....NOW...ACCUMULATE THE MARO.
C
  280 TMARO = TMARO + RO
C
  300 CONTINUE
C
C.....COMPUTE THE 24 HOUR AVERAGES.
C
      XGRIDS = NGRIDA
C
      TMARO = TMARO/XGRIDS
      TMAPG = TMAPG/XGRIDS
      RMAPI = RMAPI/XGRIDS
C
C.....WRITE DEBUG OUTPUT IF DESIRED.
C
      IF((IBUG .EQ. 1) .OR. (JBUG .EQ. 1) .OR. (KBUG .EQ. 1))
     *  WRITE(IOPDBG,912) NGRIDA, NRMARO, IDMARO, IDESC, TMARO, TMAPG,
     * RMAPI
C
C.....IF THIS IS A QPF RUN...THE DISTRIBUTION PERCENTAGES HAVE ALREADY
C.....BEEN COMPUTED...SO BYPASS THIS ROUTINE.
C
      IF(KQPFRN .EQ. 0) GOTO 305
C
      IF(MBUG .EQ. 1) WRITE(IOPDBG,917) (PCT(KP), KP = 1, 4)
C
      GOTO 320
C
C.....NOW COMPUTE THE SIX HOURLY BREAKDOWNS OF MARO AND MAPG.  USE THE
C.....FOLLOWING INPUTS IN THE ORDER GIVEN BELOW. DO NOT EXAMINE A
C.....SUBSEQUENT INPUT UNLESS THERE IS NO DISTRIBUTION AVAILABLE WITH
C.....AEARLIER METHOD.
C
C.....(1)  DISTRIBUTION FOR GRID POINT(S) WITHIN THE MARO AREA.
C.....(2)  DISTRIBUTION FOR 1-3 MDR GRID POINTS SURROUNDING THE AREA.
C.....(3)  DISTRIBUTION AT A FIRST ORDER GRID POINT.
C.....(4)  UNIFORM DISTRIBUTION -- 25% OF MARO/MAPG EACH 6 HR PERIOD.
C
C.....GDIST COMPUTES THE DISTRIBUTIONS, PROVIDED 6 HOUR DATA IS
C.....AVAILABLE IN THE DATA ARRAY GIVEN IN THE ARGUMENT LIST. IF
C.....IDIST IS RETURNED WITH A VALUE OF 1, A DISTRIBUTION WAS COMPUTED.
C
C.....CHECK FOR GRID POINTS IN THE MARO AREA.
C
  305 IF(MBUG .EQ. 1) WRITE(IOPDBG,913)
      CALL GDIST(GP6, W6, NGRIDA, IGRID(1), IDIST, MBUG, PCT)
      INCLUDE 'gcommon/setwhere'
C
C.....CHECK FOR THE SURROUNDING MDR GRID POINTS.
C
      NSMDR = 3
      IF(MBUG .EQ. 1) WRITE(IOPDBG,914)
      CALL GDIST(GP6, W6, NSMDR, MDRGRD(1), IDIST, MBUG, PCT)
      INCLUDE 'gcommon/setwhere'
      IF(IDIST .EQ. 1) GOTO 320
C
C.....CHECK THE FIRST ORDER GRID POINT.
C
      NFORD = 1
      IF(MBUG .EQ. 1) WRITE(IOPDBG,915) IFCLTR
      CALL GDIST(GP6, W6, NFORD, IFGRID, IDIST, MBUG, PCT)
      INCLUDE 'gcommon/setwhere'
      IF(IDIST .EQ. 1) GOTO 320
C
C.....SET A UNIFORM DISTRIBUTION FOR THE NUMBER OF TIME PERIODS
C.....FOR WHICH DATA IS AVAILABLE.  IN ALMOST ALL CASES...THIS WILL
C.....BE ALL FOUR TIME PERIODS (18Z, 00Z, 06Z, AND 12Z)...BUT IN THE
C.....EVENT A PARTIAL DAY'S RUN IS BEING MADE (FOR INSTANCE AROUND 18Z
C.....WITH AFTERNOON PRECIPITATION OR AROUND 00Z WITH THE EVENING
C.....PRECIPITATION), THERE WILL BE NO DATA AVAILABLE AFTER THESE
C.....TIMES.  THE VARIABLE LTSLOT HAS ALREADY BEEN DETERMINED IN THE
C.....TIMING ROUTINE. THIS TELLS THE PROGRAM HOW MANY 6-HOURLY TIME
C.....PERIODS HAVE DATA AVAILABLE.
C
      CTPD = NCPD6
C
      DO 310 NP = 1, LTSLOT
      PCT(NP) = 1.00/CTPD
  310 CONTINUE
C
C
C.....NOW CALCULATE THE SIX HOURLY BREAKDOWNS OF MARO AND MAPG.
C
  320 CALL GDIST6(TMARO, TMAPG, PCT, RMARO, RMAPG)
C
C.....MARO/MAPG/MAPI COMPUTATIONS ARE NOW COMPLETE FOR THIS AREA.
C.....PRINT OUT THE RESULTS AT THIS TIME.
C
      IF(MAROPT .LT. 1) GOTO 370
C
      WRITE(IPR,905) NRMARO, IDMARO, IDESC, TMARO, RMARO, TMAPG,
     * RMAPG, RMAPI
C
C.....WRITE THE MARO TIME SERIES TO THE PROCESSED DATABASE.
C
  370 JREC = 0
      CALL WPRDD(IDMARO, MARO, JHOUR, NSTEP1, NUMPD1, IUNITS, NBUF6,
     * LRMARO, RMARO(1), IFPTR1, ICALL, IWMARO, IWKBUF(1), JREC, ISTAT)
      IF(LBUG .EQ. 1) WRITE(IOPDBG,931) IDMARO, MARO, ISTAT
C
      IF(ISTAT .EQ. 0) GOTO 380
      IF((ISTAT .EQ. 2) .OR. (ISTAT .EQ. 7)) GOTO 375
      WRITE(IPR,921) MARO, IDMARO, ISTAT
      CALL ERROR
      GOTO 380
C
  375 WRITE(IPR,922) MARO, IDMARO, ISTAT
      CALL WARN
C
C.....WRITE OUT THE MAPG TIME SERIES TO THE PROCESSED DATABASE.
C
  380 JREC = IREC(1)
      CALL WPRDD(IDMARO, MAPG, JHOUR, NSTEP1, NUMPD1, IUNITS, NBUF6,
     * LRMAPG, RMAPG(1), IFPTR1, ICALL, IWMAPG, IWKBUF(1), JREC, ISTAT)
      IF(LBUG .EQ. 1) WRITE(IOPDBG,931) IDMARO, MAPG, ISTAT
C
      IF(ISTAT .EQ. 0) GOTO 390
      IF((ISTAT .EQ. 2) .OR. (ISTAT .EQ. 7)) GOTO 385
      WRITE(IPR,921) MAPG, IDMARO, ISTAT
      CALL ERROR
      GOTO 390
C
  385 WRITE(IPR,922) MAPG, IDMARO, ISTAT
      CALL WARN
C
C.....WRITE OUT THE MAPI TIME SERIES TO THE PROCESSED DATABASE.
C
  390 JREC = IREC(2)
      LRMAPI=1
      CALL WPRDD(IDMARO, MAPI, KHOUR, NSTEP2, NUMPD2, IUNITS, NBUF24,
     * LRMAPI, RMAPI, IFPTR2, ICALL, IWMAPI, IWKBUF(1), JREC, ISTAT)
      IF(LBUG .EQ. 1) WRITE(IOPDBG,931) IDMARO, MAPI, ISTAT
C
      IF(ISTAT .EQ. 0) GOTO 400
      IF((ISTAT .EQ. 2) .OR. (ISTAT .EQ. 7)) GOTO 395
      WRITE(IPR,921) MAPI, IDMARO, ISTAT
      CALL ERROR
      GOTO 400
C
  395 WRITE(IPR,922) MAPI, IDMARO, ISTAT
      CALL WARN
C
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C..... * * *    E N D   O F   M A R O   C O M P U T A T I O N   * * *
C
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
  400 CONTINUE
C
  500 CONTINUE
C
C.....NOW CALL THE ROUTINE TO UPDATE AND STORE ON THE PREPROCESSOR
C.....DATA BASE THE GRID POINT API (APIG ARRAY).
C.....NOTE...IF ONLY A PARTIAL DAY'S RUN IS BEING MADE...DO NOT STORE
C.....THE API DATA.
C
      IF(IATSA .EQ. 1) GOTO 510
      IF(IPTRCE .GE. 3) WRITE(IOPDBG,916)
      GOTO 999
C
  510 CALL GAPIUP(APIG, PG24, ISTATC)
C
  999 IF(IPTRCE .GE. 1) WRITE(IOPDBG,902)
C
      RETURN
      END
