C MODULE SCSTAN
C-----------------------------------------------------------------------
C
C  ROUTINE TO PUNCH STATION GENERAL PARAMETERS.
C
      SUBROUTINE SCSTAN (UNITS,IVSTAN,
     *   STAID,STATE,NUMBER,DESCRP,STAELV,STALOC,
     *   NSRCCD,SRCCD,NSRCID,SRCID,
     *   NGOESN,GOESN,NCDASN,CDASN,
     *   NUGPA,
     *   ISTAT)
C
      CHARACTER*4 STATE,UNITS,TUNITS,DEGMIN
      CHARACTER*8 CHAR
      CHARACTER*80 CARD/' '/
C
      DIMENSION STALOCT(2),MINDEG(4)
      PARAMETER (LARRAY=100)
      DIMENSION ARRAY(LARRAY)
      INCLUDE 'scommon/dimstan'
      INCLUDE 'scommon/sugnlx'
C
      INCLUDE 'uiox'
      INCLUDE 'scommon/sudbgx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_punch/RCS/scstan.f,v $
     . $',                                                             '
     .$Id: scstan.f,v 1.3 2002/02/11 20:57:01 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'ENTER SCSTAN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('STAN')
C
      ISTAT=0
C
      MCHAR=LEN(CHAR)
C
C  DECODE UNITS
      CALL SUDCDU (UNITS,TUNITS,DEGMIN,IERR)
C
C  PUNCH PARAMETER ARRAY VERSION NUMBER
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'IVSTAN=',IVSTAN
         CALL SULINE (IOSDBG,2)
         WRITE (IOSDBG,*) 'NGOESN=',NGOESN,' NCDASN=',NCDASN,
     *      ' NUGPA=',NUGPA
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  PUNCH 'STAN' STARTING IN COLUMN 1
      NPOS=1
      CALL UTOCRD (ICDPUN,NPOS,'STAN',4,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  PUNCH UNITS TYPE
      CALL UTOCRD (ICDPUN,NPOS,'(',1,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      CALL UTOCRD (ICDPUN,NPOS,TUNITS,4,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  PUNCH STATION IDENTIFIER
      CALL UTOCRD (ICDPUN,NPOS,STAID,8,1,CARD,3,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  PUNCH DESCRIPTIVE INFORMATION
      CALL UTOCRD (ICDPUN,NPOS,DESCRP,20,1,CARD,3,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  PUNCH STATE IDENTIFIER
      IF (STATE.EQ.' ') CALL UREPET ('?',STATE,2)
      CALL UTOCRD (ICDPUN,NPOS,STATE,2,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  CHECK LATITUDE AND LONGITUDE VALUES
      IF (IUGFIL.EQ.0) THEN
         CALL SUGTUG (LARRAY,ARRAY,IERR)
         IF (IERR.GT.0) GO TO 130
         ENDIF
      CALL UMEMOV (STALOC,STALOCT,2)
      IF (STALOCT(1).GT.ULLMTS(1)) THEN
         WRITE (LP,10) 'LATITUDE',STALOC(1),STAID,'GREATER',
     *     ULLMTS(1),ULLMTS(1)
10    FORMAT ('0*** WARNING - ',A,' ',F6.2,' FOR STATION ',A,
     *   ' IS ',A,' THAN USER DEFINED LIMIT (',F6.2,
     *   ') AND WILL BE SET TO ',F6.2,'.')
         CALL SUWRNS (LP,2,-1)
         STALOCT(1)=ULLMTS(1)
         ENDIF
      IF (STALOCT(1).LT.ULLMTS(2)) THEN
         WRITE (LP,10) 'LATITUDE',STALOC(1),STAID,'LESS',
     *     ULLMTS(2),ULLMTS(2)
         CALL SUWRNS (LP,2,-1)
         STALOCT(1)=ULLMTS(2)
         ENDIF
      IF (STALOC(2).LT.ULLMTS(3)) THEN
         WRITE (LP,10) 'LONGITUDE',STALOC(2),STAID,'LESS',
     *     ULLMTS(3),ULLMTS(3)
         CALL SUWRNS (LP,2,-1)
         STALOCT(2)=ULLMTS(3)
         ENDIF
      IF (STALOC(2).GT.ULLMTS(4)) THEN
         WRITE (LP,10) 'LONGITUDE',STALOC(2),STAID,'GREATER',
     *     ULLMTS(4),ULLMTS(4)
         CALL SUWRNS (LP,2,-1)
         STALOCT(2)=ULLMTS(4)
         ENDIF
C
      IF (DEGMIN.EQ.'YES') GO TO 20
C
C  PUNCH LATITUDE AND LONGITUDE AS DECIMAL DEGREES
      NUMDEC=2
      CALL URELCH (STALOCT(1),MCHAR,CHAR,NUMDEC,NFILL,IERR)
      CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      CALL URELCH (STALOCT(2),MCHAR,CHAR,NUMDEC,NFILL,IERR)
      CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      GO TO 40
C
C  PUNCH LATITUDE AND LONGITUDE AS DEGREES AND MINUTES
20    CALL SUDMDD ('DM  ',2,STALOCT,MINDEG,IERR)
      DO 30 I=1,2
         CALL UINTCH (MINDEG(I*2-1),MCHAR,CHAR,NFILL,IERR)
         CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,0,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UTOCRD (ICDPUN,NPOS,'-',1,0,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UINTCH (MINDEG(I*2),MCHAR,CHAR,NFILL,IERR)
         CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,1,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
30       CONTINUE
C
C  PUNCH ELEVATION
40    VALUE=STAELV
      IF (TUNITS.EQ.'ENGL') THEN
         CALL UDUCNV ('M   ','FT  ',1,1,STAELV,VALUE,IERR)
         ENDIF
      NUMDEC=2
      CALL URELCH (VALUE,MCHAR,CHAR,NUMDEC,NFILL,IERR)
      CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
C  PUNCH STATION NUMBER
      IF (NUMBER.EQ.0) GO TO 50
         CALL UTOCRD (ICDPUN,NPOS,'NUMBER(',7,0,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UINTCH (NUMBER,MCHAR,CHAR,LFILL,IERR)
         CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,0,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
C
50    IF (NSRCCD.EQ.0) GO TO 70
C
C  START NEW CARD
      CALL UPNCRD (ICDPUN,CARD)
      NPOS=6
C
C  PUNCH DATA ENTRY SOURCE CODE AND EXTERNAL IDENTIFIER
      CALL UTOCRD (ICDPUN,NPOS,'SOURCE(',7,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      NSPACE=1
      LENGTH=NSRCID*4
      DO 60 I=1,NSRCCD
         IF (I.EQ.NSRCCD) NSPACE=0
         CALL UTOCRD (ICDPUN,NPOS,SRCCD(I),4,0,CARD,3,9,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UTOCRD (ICDPUN,NPOS,',',1,0,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
         CALL UTOCRD (ICDPUN,NPOS,SRCID(1,I),LENGTH,NSPACE,CARD,3,0,
     *      LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
60       CONTINUE
      CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
70    IF (IVSTAN.LT.2) GO TO 120
C
      IF (NGOESN.EQ.0) GO TO 90
C
C  PUNCH GOES DATA TYPES NOT TO BE TRANSFERRED
      CALL UTOCRD (ICDPUN,NPOS,'NOGOESTR(',9,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      NSPACE=1
      DO 80 I=1,NGOESN
         IF (I.EQ.NGOESN) NSPACE=0
         CALL UTOCRD (ICDPUN,NPOS,GOESN(I),4,NSPACE,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
80       CONTINUE
      CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
90    IF (IVSTAN.LT.3) GO TO 120
C
      IF (NCDASN.EQ.0) GO TO 110
C
C  PUNCH CDAS DATA TYPES NOT TO BE TRANSFERRED
      CALL UTOCRD (ICDPUN,NPOS,'NOCDASTR(',9,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      NSPACE=1
      DO 100 I=1,NCDASN
         IF (I.EQ.NCDASN) NSPACE=0
         CALL UTOCRD (ICDPUN,NPOS,CDASN(I),4,NSPACE,CARD,0,0,LNUM,IERR)
         IF (IERR.GT.0) GO TO 130
100      CONTINUE
      CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
110   IF (IVSTAN.LT.4) GO TO 120
C
      IF (NUGPA.LE.0) GO TO 120
C
C  PUNCH GRID POINT ADDRESS
      CALL UTOCRD (ICDPUN,NPOS,'GPA(',4,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      CALL UINTCH (NUGPA,MCHAR,CHAR,LFILL,IERR)
      CALL UTOCRD (ICDPUN,NPOS,CHAR,MCHAR,0,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
      CALL UTOCRD (ICDPUN,NPOS,')',1,1,CARD,0,0,LNUM,IERR)
      IF (IERR.GT.0) GO TO 130
C
120   CALL UPNCRD (ICDPUN,CARD)
      GO TO 140
C
130   ISTAT=1
C
140   IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,*) 'EXIT SCSTAN'
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
      END
