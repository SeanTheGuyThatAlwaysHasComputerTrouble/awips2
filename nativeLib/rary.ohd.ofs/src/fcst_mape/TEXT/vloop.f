C MODULE VLOOP
C-----------------------------------------------------------------------
C
C  THIS ROUTINE IS USED WHEN THE NUMBER OF STATIONS AND THE
C  NUMBER OF DAYS IN THE DESIRED RUN ARE SMALL ENOUGH THAT
C  ALL OFF THE STATION PARAMETERS CAN BE PERMANENTLY STORED
C  IN THE MASTER ARRAY DURING THE RUN.
C
C  IT CALLS:
C    - MDYH2 AND DETERMINES THE CURRENT YEAR, MONTH AND
C      DAY OF THE MONTH
C    - VYRDAY TO DETERMINE THE DAY OF THE YEAR WHICH IS NEEDED TO
C      ESTIMATE SOLAR RADIATION FROM PERCENT SUNSHINE OR CLOUD COVER
C    - VDAY TO DETERMINE THE SIN,COSINE,SIN SQUARED AND 2SINXCOSX OF THE
C      DECLINATION ANGLE FOR USE IN ESTIMATING SOLAR RADIATION.
C    - RPDDLY TO READ THE FOR EACH DAY OF OBSERVED DATA FOR EACH STATION
C      AND COMPUTES THE PE
C
C  INPUTS:
C    - FIRST DAY REQUESTED FOR THE RUN.
C    - THE LAST DAY FOR WHICH OBSERVED DATA IS EXPECTED FOR THE RUN
C    - THE LAST DAY DESIRED FOR THE RUN.
C    - THE FIRST AND LAST DAYS FOR WHICH DAILY DATA IS AVAILABLE
C    - THE NUMBER OF DAYS SINCE THE BEGINNING OF THE YEAR.
C    - NUMBER OF STATIONS OR DATA SLOTS SUPPLIED IN THE PE NETWORK.
C    - STATION PARAMETERIC DATA FROM THE PREPROCESSOR PARAMETRIC DATA
C        BASE
C
C  OUTPUTS:
C      CONTROL OVER CALLS PROGRAM WHICH CALCULATES THE STATION
C      PE VALUES, AND CONTROL WHICH CALLS THE DISPLAY SUBROUTINE
C      WHEN ALL STATION INPUT AND OUTPUT ARE TO BE LISTED.
C
C  ARRAYS OR INFORMATION PASSED THROUGH:
C    - THE ARRAYS PEPARM, DDATA AND POINTERS ARE FILLED IN THIS
C      ROUTINE
C    - THE ARRAY PECOMP IS FILLED IN THE VPPEST
C
      SUBROUTINE VLOOP (PECOMP,PEPARM,DDATA,MXPDIM,MXDDIM,JPNTRS,
     *   MPECF,NPECF,PECF)
C
      CHARACTER*4 PTYPE
      CHARACTER*8 OLDOPN
      INTEGER*2 DDATA(LRY),JPNTRS(MRY),MSNG,JCHANG(200)
C
      DIMENSION PECOMP(MXDDIM),PEPARM(MXPDIM),ESTSYM(30)
      DIMENSION PECF(MPECF)
      DIMENSION BUFF(1),SID(2),PPARRY(106),PEPUSE(100)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
      COMMON /FCTIM2/ ITZC,NHOPDB,NHOCAL,NHROFF(8)
      COMMON /VFIXD/ LRY,MRY,NDAYS,NDAYOB,LARFIL,LFDFIL
      COMMON /VMODAS/ LSTDAM(13)
      COMMON /VOPT/ JAPTN,JPTN,JMAPE,LSTDY
      COMMON /VSTUP/ PTYPE,DTYPE,METRIC,CPETIM(2),UTYPE,BTYPE,EST(3)
      COMMON /VTIME/ JDAYO,IYRS,MOS,JDAMOS,IHRO,JCURHR,JDAMO,JDAYYR
      COMMON /VSTCTL/ LOOKUP(200),JCMAX,LOOKDN(200)
C
      EQUIVALENCE(JCHANG(1),PPARRY(6))
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mape/RCS/vloop.f,v $
     . $',                                                             '
     .$Id: vloop.f,v 1.4 2000/12/19 15:59:03 jgofus Exp $
     . $' /
C    ===================================================================
C
      DATA BLNK/4h    /
C
C
      IF (IPTRCE.GT.0) WRITE (IOPDBG,*) 'ENTER VLOOP'
C
      IOPNUM=-1
      CALL FSTWHR ('VLOOP   ',IOPNUM,OLDOPN,IOLDOP)
C
      IBUG=IPBUG('VLOP')
C
C  SET NUMBER WORDS IN THE PE PARAMETER RECORD
      JPPMX=48
C
      IF (IBUG.GT.0) WRITE (IOPDBG,10) IYRS,NDAYOB
10    FORMAT (' IN VLOOP : IYRS=',I8,' NDAYOB=',I3)
      JULDA=JDAYO
C
C  MOS2 IS AN INDICATOR OF THE MONTH WHEN A NEW MONTH OCCURS DURING A
C  RUN AND INDICATES THAT ONE OF THE STATIONS HAS ALREADY BEEN
C  PROCESSED BUT SERVES TO CONTINUE TO INDICATE THE NEW MONTH AS THE
C  REMAINING STATIONS ARE PROCESSED
      MOS2=MOS
C
C  READ OE24 ALPHABETICAL ORDER PARAMETER RECORD
      SID(1)=BLNK
      SID(2)=BLNK
      IAB=0
      JAB=5+(LFDFIL+1)/2
      JABMAX=200
      DO 20 L=1,200
         LOOKDN(L)=0
         LOOKUP(L)=0
20       CONTINUE
      IF (IBUG.GT.0) WRITE (IOPDBG,30) PTYPE,IAB,JAB,JABMAX
30    FORMAT (' BEFORE CALL TO RPPREC FOR PTYPE=',A,
     *   ' IAB=',I5,' JAB=',I5, ' JABMAX=',I5)
      PTYPE='OE24'
      CALL RPPREC (SID,PTYPE,IAB,JAB,PPARRY,NABFIL,IPTRAB,IERR)
      IYR=IYRS
      IF (IBUG.GT.0) WRITE (IOPDBG,40) (PPARRY(L),L=1,8),
     *   (JCHANG(L),L=1,6)
40    FORMAT (' AFTER CALL TO RPPREC: PPARRY(1-8)=',8F10.2,
     *   ' JCHANG(1-6)=',6I5)
      JCMAX=PPARRY(5)
      IF (IERR.LT.1) GO TO 60
         CALL PSTRDC (IERR,PTYPE,SID,IAB,JABMAX,NFIL)
         WRITE (IPR,50)
         CALL WARN
50    FORMAT ('0**WARNING** THE ALPHABETICAL ORDER PARAMETRIC ',
     *   'INFORMATION NOT FOUND. THE STATIONS WILL BE ',
     *   'PROCESSED IN THE ORDER THEY ARE FOUND IN THE PPPDB.')
60    DO 80 L=1,JCMAX
         LOOKUP(L)=JCHANG(L)
         LK=LOOKUP(L)
         IF (IBUG.GT.1) WRITE (IOPDBG,70)L,LOOKUP(L),JCHANG(L),LK
70    FORMAT (' AFTER CALL TO RPPREC: LOOKUP(',I3,')=',I4,
     *   ' JCHANGE(L)=',I3,'LK=',I5)
         LOOKDN(LK)=L
80       CONTINUE
      IF (IBUG.GT.0) WRITE (IOPDBG,90) JCMAX,IERR,(LOOKUP(I),I=1,5)
90    FORMAT (' JCMAX=',I5,' IERR=',I5,' LOOKUP(1-5)=',5I5)
C
C  PROCESS EACH DAY
      PTYPE='PE'
      NPECF=0
      DO 380 JDA=1,NDAYOB
C     SET THE JULIAN DAY OF THE RUN
         JDAY=JDAYO+JDA-1
         IF (IBUG.GT.1) WRITE (IOPDBG,100) JDA,JDAY,JDAMOS
100   FORMAT (' IN VLOOP AT BEGINNING OF DAY LOOP : JDA=',I5,
     *    ' JDAYO=',I5,' JDAMOS=',I8)
C     COMPUTE PE CONSTANTS RELATED TO THE DAY OF THE YEAR
         JULDAY=JDAY
         IF (IBUG.GT.0) WRITE (IOPDBG,120) JULDAY,MOS,IYR
120   FORMAT ('  IN VLOOP JUST BEFORE CALL TO VYRDAY: JULDAY=',I5,
     *   ' MOS=',I5,' IYR=',I8)
         CALL VYRDAY (JULDAY)
         IF (IBUG.GT.0) WRITE (IOPDBG,130)JDAY,DTYPE,MRY,JDAYYR
130   FORMAT (' JUST BEFORE CALL TO VDAY: JDAY=',I8,
     *   ' DTYPE=',A4,' MRY=',I8,' JDAYYR=',I8)
         CALL VDAY (JDAYYR)
         IF (IBUG.GT.0) WRITE (IOPDBG,140)JDAYYR,DTYPE,LRY,MRY
140   FORMAT (' JUST AFTER CALL TO VDAY: JDAYYR=',I8,
     *   ' DTYPE=',A4,' LRY=',I8,' MRY=',I8)
C     READ DATA FROM THE PREPROCESSOR DATA
         IBUFF=1
         IF (IBUG.GT.0) WRITE (IOPDBG,150) DTYPE,JDAY
150   FORMAT (' IN VLOOP : DTYPE=',A4,' JDAY=',I8 )
         IRTRN=1
         CALL RPDDLY (DTYPE,JDAY,IRTRN,MRY,JPNTRS,LFDFIL,LRY,DDATA,
     *      LARFIL,NUMSTA,MSNG,IBUFF,BUFF,IERR)
         IF (IERR.NE.0) THEN
            CALL PSTRDD (JDAY,IERR,MRY,LRY,DTYPE)
            GO TO 450
            ENDIF
         IF (IBUG.GT.0) WRITE (IOPDBG,170) NDAYOB,LFDFIL
170   FORMAT (' IN VLOOP JUST BEFORE STATION LOOP: NDAYOB=',I4,
     *    ' LFDFIL=',I4)
         KSLOT=LFDFIL
         NABSTA=JCMAX
         IF (JCMAX.GT.0)KSLOT=NABSTA
         IF (KSLOT.GT.0) GO TO 210
            WRITE (IPR,200) KSLOT,LFDFIL
200   FORMAT ('0**ERROR** IN VLOOP - ',
     *   'STATION LOOPING TOTAL IS ',I5,' BUT THE NUMBER ',
     *   'OF STATIONS WITH PE DATA IS ',I5,'.')
            CALL ERROR
            GO TO 450
C     PROCESS EACH STATION
210      DO 360 JSTA=1,KSLOT
            KSTA=JSTA
            IF (NABSTA.LT.1) GO TO 220
            KSTA=LOOKUP(JSTA)
220         IF (IBUG.GT.0) WRITE (IOPDBG,230) JSTA,JPNTRS(KSTA),
     *         PTYPE,KSLOT,KSTA
230   FORMAT (' IN THE STATION LOOP OF VLOOP: JPNTRS(',I5,')=',I5,
     *   ' PTYPE=',A4,' KSLOT=',I5,' KSTA OR LOOKUP=',I5)
C        CHECK FOR DELETED STATIONS
            IF (JPNTRS(KSTA).LT.1) GO TO 340
            IF (JDA.GT.1) GO TO 280
C        SET THE POINTER TO BE USED TO READ THE PE PARAMETERS
            SID(1)=BLNK
            SID(2)=BLNK
            JPNTR=(JSTA-1)*58+1
C        READ THE PE PARAMETER RECORD
            IF (IBUG.GT.0) WRITE (IOPDBG,240) JPNTRS(KSTA),PTYPE,
     *         JDA,SID
240   FORMAT (' IN VLOOP JUST BEFORE CALLING RPPREC: JPNTRS(KSTA)=',I8,
     *   ' PTYPE=',A4,' JDA=',I4,' SID=',2A4)
            J4PTR=JPNTRS(KSTA)
            CALL RPPREC (SID,PTYPE,J4PTR,JPPMX,PPARRY,NFIL,IPTRNX,IERR)
            IF (IERR.NE.0) THEN
               CALL PSTRDC (IERR,PTYPE,SID,J4PTR,JPPMX,NFIL)
               ENDIF
            IF (IBUG.GT.0) WRITE (IOPDBG,251) SID,PPARRY(14)
251   FORMAT (' SID=',2A4,' PPARRY(14)=',F5.2)
            DO 260 JPP=1,48
               KPP=JPP+JPNTR-1
               PEPARM(KPP)=PPARRY(JPP)
               IF (JPP.EQ.14) THEN
                  IF (IBUG.GT.0) WRITE (IOPDBG,252) SID,KPP,
     *               PEPARM(KPP)
252   FORMAT (' SID=',2A4,' KPP=',I4,' PEPARM(KPP)=',F5.2)
                  IF (NPECF+1.GT.MPECF) THEN
                     WRITE (IPR,253) MPECF
253   FORMAT ('0**ERROR** MAXIMUM NUMBER OF PE STATION CORRECTION ',
     *   'FACTORS (',I3,') EXCEEDED.')
                     CALL ERROR
                     GO TO 450
                     ENDIF
                  NPECF=NPECF+1
                  PECF(NPECF)=PPARRY(JPP)
                  ENDIF
260            CONTINUE
            IF (IBUG.GT.0 ) CALL VPPREC (PEPARM,IPTRNX,MXPDIM,NFIL,
     *         IERR,ID,JSTA)
C        CALCULATE CONSTANTS THAT DEPEND ON IT'S LATITUDE
            IF (JDA.GT.1) GO TO 280
               IF (JDA.EQ.1) CALL VLOC (JSTA,PEPARM,MXPDIM,DDATA,LRY)
               MOS2=MOS
               IF (MOS.EQ.2.AND.IYRS/4*4.EQ.IYRS) MOS2=13
C           SET DAY OF THE MONTH TO THE DAY OF THE RUN
               JDAMOJ=JDAMOS
280         JDAMO=JDAMOJ+JDA-1
            IF (IBUG.GT.0) WRITE (IOPDBG,290) (LOOKUP(J),J=1,5)
290   FORMAT (' IN VLOOP JUST BEFORE CALL TO VPEEST : ',
     *   'LOOKUP VALUES ARE ',5I4)
            CALL VPEEST (JSTA,JDA,DDATA,PECOMP,PEPARM,MXDDIM,MXPDIM,
     *         MSNG,JPNTRS,JSTA,MOS2)
C        CHECK FOR PASSING THE END OF THE MONTH DURING PROCESSING
            IF (IBUG.GT.0) WRITE (IOPDBG,300) JDAMO,JDA,JDAMOS,MOS2,
     *         LSTDAM(MOS2)
300   FORMAT (' IN VLOOP JUST BEFORE TEST ON PASSING END OF THE MONTH ',
     *   ' JDAMO=',I5,' JDA=',I5,' JDAMOS=',I5,' LSTDAM(',I2,')=',I4)
            IF (IBUG.GT.0) WRITE (IOPDBG,320) JDA,JSTA,MXPDIM,MXDDIM,
     *         JDAY
320   FORMAT (' IN VLOOP JUST BEFORE TEST FOR THE END OF THE RUN AND A',
     *   ' CALL TO VCONS: JDA=',I5,
     *   ' JSTA=',I5,' MXPDIM=',I8,' MXDDIM=',I8,' JDAY=',I8)
            IF ((JDA.EQ.NDAYOB).AND.(JDA.GT.1)) J4PTR=JPNTRS(KSTA)
            IF (JDA.EQ.NDAYOB) CALL VCONS (PECOMP,PEPARM,JDA,JSTA,
     *         MXPDIM,MXDDIM,MOS2,JDAMO,JSTA,J4PTR)
340         IF (IBUG.GT.1) WRITE (IOPDBG,350) JSTA,JDA,NDAYOB,LFDFIL
350   FORMAT (' IN VLOOP AT THE END OF THE JSTA LOOP : JSTA=',I4,
     *   ' JDA=',I4,'  NDAYOB=',I8,' LFDFIL=',I5)
360         CONTINUE
         IF (JDAMO.NE.LSTDAM(MOS)) GO TO 380
            JDAMOJ=1-JDA
            MOS2=MOS+1
            IF (MOS2.LE.12) GO TO 370
               MOS2=1
370         IYR=IYRS+1
380      CONTINUE
C
C  REARRANGE NAMES FOR USE IN VDSPL1
      DO 400 J=1,LFDFIL
         L=(J-1)*58+1
         M=(J-1)*7+1
         STORA=PEPARM(L+1)
         STORB=PEPARM(L+2)
         DO 390 K=1,5
            PEPARM(M+K-1)=PEPARM(L+3+K)
390         CONTINUE
         PEPARM(M+5)=STORA
         PEPARM(M+6)=STORB
400      CONTINUE
      KDISP2=LFDFIL
      KDISP1=1
      CALL VDSPL1 (JPTN,PECOMP,KDISP1,KDISP2,MXDDIM,PEPARM,MXPDIM,
     *   ESTSYM,JPNTRS,LSTDY)
C
      IF (IBUG.GT.0) WRITE (IOPDBG,410) MXPDIM
410   FORMAT (' BACK IN VLOOP AFTER VDSPL1:  MXPDIM=',I6)
C
C  REUSE PARM FILE FOR MAPE PARAMETERS.
      MXP2=MXPDIM/2
C
C  COMPUTE MAPE AREA VALUES
      CALL VMAPE (PECOMP,PEPARM,PEPUSE,MXDDIM,MXPDIM,MXP2,
     *   NPECF,PECF)
      IF (IBUG.GT.0) WRITE (IOPDBG,420) MXP2
420   FORMAT (' BACK IN VLOOP AFTER CALLING VMAPE: MXP2=',I5)
C
450   CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (IPTRCE.GT.0) WRITE (IOPDBG,*) 'EXIT VLOOP'
C
      RETURN
C
      END
