C MODULE VPRLLP
C-----------------------------------------------------------------------
C
C  THIS ROUTINE IS USED WHEN ALL OF THE STATION PARAMETERS
C  WILL NOT FIT IN THE SPACE AVAILABLE IN THE MASTER ARRAY IN
C  ADDITION TO THE COMPUTED VALUES FOR EACH STATION FOR EACH DAY.
C
C  INPUTS:
C    - NUMBER OF DAYS OF OBSERVED DATA
C    - THE AVAILABLE SPACE TO STORE STATION PARAMETERS WHEN AFTER 
C      SPACE IS SET ASIDE FOR ALL OF THE STATION DAILY PE VALUES
C    - THE CURRENT INTERNAL JULIAN DAY, THE CURRENT DAY OF THE YEAR
C    - DAILY MET DATA FOR EACH STATION.
C    - PARAMETRIC DATA FOR EACH STATION.
C
C  OUTPUTS:
C     - CONTROL OVER CALLS TO THE PROGRAM WHICH CALCULATES 
C       THE POTENTIAL EVAPOTRASPORATION AND CALLS TO THE
C       UTILITY READ PROGRAMS TO GET THE NECESSARY DATA
C       AND STATION PARAMETERS.
C
      SUBROUTINE VPRLLP (PECOMP,PEPARM,JDIF,JPNTRS,MXPDIM,DDATA,MXDDIM,
     1 MPECF,NPECF,PECF)
C
      CHARACTER*8 OLDOPN
      INTEGER*2 DDATA(LRY),JPNTRS(100),MSNG,JCHANG(200)
      DIMENSION PEPARM(MXPDIM),PECOMP(MXDDIM),ESTSYM(30)
      DIMENSION PECF(MPECF)
      DIMENSION SID(2),PPARRY(106),PEPUSE(100)
      EQUIVALENCE (PPARRY(6),JCHANG(1))
      COMMON /VFIXD/ LRY,MRY,NDAYS,NDAYOB,LARFIL,LFDFIL
      COMMON /VOPT/ JAPTN,JPTN,JMAPE,LSTDY
      COMMON /VSTUP /PTYPE,DTYPE,METRIC,CPETIM(2),UTYPE,BTYPE,EST(3)
      COMMON /VTIME/ JDAYO,IYRS,MOS,JDAMOS,IHRO,IHRS,JDAMO,JDAYYR
      COMMON /VMODAS/ LSTDAM(13)
      COMMON /VSTCTL/ LOOKUP(200),JCMAX,LOOKDN(200)
      COMMON /FCTIM2/ ITZC,NHOPDB,NHOCAL,NHROFF(8)
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_mape/RCS/vprllp.f,v $
     . $',                                                             '
     .$Id: vprllp.f,v 1.2 1999/07/06 16:32:28 page Exp $
     . $' /
C    ===================================================================
C
      DATA BLNK/4H    /
      DATA ABTYPE/4HOE24/
C
C 
      IF (IPTRCE.GT.0) WRITE(IOPDBG,*) 'ENTER VPRLLP'
C 
      IDEBUG=IPBUG('VPRL')
C
      IOPNUM=-1
      CALL FSTWHR ('VPRLLP  ',IOPNUM,OLDOPN,IOLDOP)
C
C  COMPUTE THE MAXIMUM NUMBER OF STATIONS WHOSE PARAMETER RECORDS CAN 
C  FIT IN THE MASTER ARRAY
      JSPREP=JDIF/58.
      JSPRPO=JSPREP
C
C  COMPUTE THE NUMBER OF CYCLES REQUIRED TO
C  PROCESS ALL OF THE STATIONS DEFINED IN THE AREA
      JREP=LFDFIL/JSPRPO
      IF(IDEBUG.GT.0)WRITE(IOPDBG,20)JSPREP,JREP
20    FORMAT( 'BEFORE THE DAY LOOP IN VPRLLP: JSPREP=',I5,
     1 ' JREP=',I5)
C  CHECK FOR PARTIAL FINAL LOOP.
      JREP1=JREP
      IF(JSPRPO*JREP.LT.LFDFIL)JREP1=JREP+1
      JDAMOJ=JDAMOS
C
C  MOS2 SERVES AS AN INDICATOR OF THE MONTH WHEN A NEW MONTH
C  OCCURS DURING A RUN AND INDICATES THAT ONE OF THE
C  STATIONS HAS ALREADY BEEN PROCESSED BUT SERVES TO
C  CONTINUE TO INDICATE THE NEW MONTH AS THE REMAINING
C  STATIONS ARE PROCESSED.
      MOS2=MOS
C
C  SET MOS2 TO THE MONTH NUMBER TO BE PRINTED WITH THE
C  STATION DATA.  IT WILL BE INCREMENTED IF THE END OF
C  THE MONTH IS REACHED DURING THE RUN, BUT MOS THE
C  VALUE OF THE STARTING MONTH WILL NOT BE CHANGED.
C
      IF(IDEBUG.GT.0)WRITE(IOPDBG,30)NDAYOB
30    FORMAT(' ENTERING DAY LOOP OF VPRLLP: NDAYOB=',I8)
C
      DO 260 JDA=1,NDAYOB
C  DETERMINE THE JULIAN DAY OF THE RUN.
      JDAY=JDAYO+JDA-1
C  SET DAY OF THE MONTH TO THE DAY OF THE RUN
      JULDAY=JDAYO+JDA-1
      CALL VYRDAY (JULDAY)
      CALL VDAY (JDAYYR)
      IRTRN=1
      IF(IDEBUG.GT.0)WRITE(IOPDBG,50)MOS2,JULDAY,JDAY
50    FORMAT(' IN VPRLLP JUST BEFORE CALL TO RPDDLY. MOS2 IS ',
     1 I5,' JULDAY=',I8,' JDAY=',I8)
      IBUFF=1
      CALL RPDDLY(DTYPE,JULDAY,IRTRN,MRY,JPNTRS,LFDFIL,LRY,DDATA,
     1 LARFIL,NUMSTA,MSNG,IBUFF,BUFF,ISTAT)
      IF(IDEBUG.GT.3)CALL PDMPDY(DTYPE,JULDAY,MSNG,JPNTRS,LFDFIL,
     1 DDATA,LARFIL)
      IF(ISTAT.LT.1)GO TO 60
         CALL PSTRDD(JULDAY,ISTAT,MRY,LRY,DTYPE)
         GO TO 350
C  SET UP POINTERS FOR PRINTING STATIONS IN ALPHABETICAL
60    SID(1)=BLNK
      SID(2)=BLNK
      IF(JDA.GT.1)GO TO 120
      IAB=0
      JAB=5+(NUMSTA+1)/2
      JABMAX=200
      DO 70 L=1,200
      LOOKDN(200)=0
70    LOOKUP(L)=0
      IF(IDEBUG.GT.0)WRITE(IOPDBG,80)IAB,JAB,JABMAX
80    FORMAT('  ------ BEFORE CALL TO READ ALPHABETIC LISTING POINTERS'/
     1' IAB=',I5,' JAB=',I5, ' JABMAX=',I5)
      CALL RPPREC(SID,ABTYPE,IAB,JAB,PPARRY,
     1NABFIL,IPTRAB,ISTAT)
      NABSTA=PPARRY(5)
      IF(ISTAT.LT.1)GO TO 100
      WRITE(IPR,90)
90    FORMAT(20X,'  NOTE:  ALPHABETIC LISTING DIRECTORY IS NOT',
     1' YET AVAILABLE.')
      NABSTA=0
      CALL PSTRDC(ISTAT,ABTYPE,SID,IAB,JABMAX,NFIL)
      GO TO 120
100   KSLOT=PPARRY(5)
      JCMAX=KSLOT
      DO 110 JJ=1,JCMAX
      LOOKUP(JJ)=JCHANG(JJ)
      LK=LOOKUP(JJ)
110   LOOKDN(LK)=JJ
C    BEGIN CYCLE OF STATIONS USING THE AVAIALABLE PARAMETER SPACE
120   JPPMX=48
      JSTRT=1
      JSPRPO=JSPREP
      DO 250 JITR=1,JREP1
      IF(IDEBUG.GT.0)WRITE(IOPDBG,130)JITR
130   FORMAT(' IN VPRLLP IN COMPUTATION CYCLE THAT USES AVAILABLE ',
     1'PARAMETER SPACE.  JITR=',I4)
C   SET COUNTER TO LOCATE PARM FILES IN LIMITED SPACE
      JPIDX=0
      DO 240 JSTA=JSTRT,JSPRPO
      JPIDX=JPIDX+1
      KSTA=JSTA
      IF(NABSTA.GT.0)KSTA=LOOKUP(JSTA)
      IF(IDEBUG.GT.0)WRITE(IOPDBG,140)JSTA,JPNTRS(JSTA),JREP,JSPRPO
     1,KSTA,KSLOT,JDA
140   FORMAT(' IN VPRLLP IN STN LOOP CYCLE THAT USES AVAILABLE ',
     1 'PARAMETER SPACE. JPNTRS(',I2,')=',I6,' JREP ',I4,' JSPRPO ',I4 /
     2 ' KSTA=',I5,' KSLOT ',I5,' JDA ',I5)
      JPTR=JPNTRS(KSTA)
      IF(JSTA.GT.KSLOT)GO TO 240
C   CHECK FOR THE LAST DAY OF THE MONTH.
      IF(JDA.GT.1)GO TO 150
      MOS2=MOS
      YR=IYRS
      YRDIF=(YR/4.)-(IYRS/4)
      IF(MOS.EQ.2.AND.YRDIF.LT.0.0001)MOS2=13
150   JDAMO=JDAMOJ+JDA-1
      IF(IDEBUG.GT.0)WRITE(IOPDBG,160)JDAMO,JDA,JDAMOJ,MOS2,
     1LSTDAM(MOS2)
160   FORMAT(' IN VPRLLP JUST BEFORE TEST ON PASSING END OF THE MONTH ',
     1' JDAMO=',I5,' JDA=',I5,' JDAMOJ=',I5,' LSTDAM1(',I2,')=',I4)
      IF(JDAMO.LE.LSTDAM(MOS2))GO TO 180
      JDAMO=1
      JDAMOJ=1-JDA
      MOS2=MOS+1
      IF(MOS2.LE.12)GO TO 170
      MOS2=1
      IYR=IYRS+1
170   MOS2=MOS+1
180   IF(JDA.LE.NDAYOB)GO TO 200
      IF(IDEBUG.GT.0)WRITE(IOPDBG,190)JDA,NDAYOB
190   FORMAT(' IN VPRRLP AFTER TEST SHOWING THAT JDA=',I5,
     1' AND EQUAL TO NDAYOB WHICH=',I5)
200   IF(JPNTRS(KSTA).LT.1)GO TO 240
      SID(1)=BLNK
      SID(2)=BLNK
      IF(IDEBUG.GT.0)WRITE(IOPDBG,210)SID,PTYPE,JPTR,JPPMX
210   FORMAT(' IN VPRLLP JUST BEFORE CALL TO RPPREC.  SID=',2A4,
     1 ' PTYPE=',A4,' JPTR=',I5,' JPPMX=',I5)
      CALL RPPREC(SID,PTYPE,JPTR,JPPMX,PPARRY,NFIL,PTRNXT,ISTAT)
      IF(ISTAT.GT.0)CALL PSTRDC(ISTAT,PTYPE,SID,JPTR,JPPMX,NFIL)
      IF(IDEBUG.GT.0)WRITE(IOPDBG,220)JPPMX,JPIDX
220   FORMAT('  IN VPRLLP JUST AFTER CALL TO RPPREC.  JPPMX=',I8,
     1' JPIDX=',I5)
      DO 230 J=1,48
         JP=(JPIDX-1)*58+J
         PEPARM(JP)=PPARRY(J)
         IF (JPP.EQ.14) THEN
            IF (IDEBUG.GT.0) WRITE (IOPDBG,252) SID,KPP,PEPARM(KPP)
252   FORMAT (' SID=',2A4,' KPP=',I4,' PEPARM(KPP)=',F5.2)
            IF (NPECF+1.GT.MPECF) THEN
               WRITE (IPR,253) MPECF
253   FORMAT ('0**ERROR** MAXIMUM NUMBER OF PE STATION CORRECTION ',
     *   'FACTORS (',I3,') EXCEEDED.')
               CALL ERROR
               GO TO 350
               ENDIF
            NPECF=NPECF+1
            PECF(NPECF)=PPARRY(JPP)
            ENDIF
230      CONTINUE
      IF(IDEBUG.GT.0)CALL VPPREC(PEPARM,PTRNXT,MXPDIM,NFIL,ISTAT,
     1SID,JPIDX)
      CALL VLOC(JPIDX,PEPARM,MXPDIM,DDATA,LRY)
      CALL VPEEST(JSTA,JDA,DDATA,PECOMP,PEPARM,
     1MXDDIM,MXPDIM,MSNG,JPNTRS,JPIDX,MOS2)
      IF(JDA.EQ.NDAYOB)CALL VCONS(PECOMP,PEPARM,JDA,JSTA
     1,MXPDIM,MXDDIM,MOS2,JCRDAO,JPIDX,JPTR)
240   CONTINUE
      JSTRT=JSPRPO+1
      JSPRPO=JSPREP+JSPREP*JITR
      IF(JSPRPO.GT.LFDFIL)JSPRPO=LFDFIL
250   CONTINUE
260   CONTINUE
C    RE-ALINE STATION NAMES IN PARM FILE FOR PRINTING
      IF(JPTN.LT.1)GO TO 340
      KDEX=0
      DO 330 J=1,JREP1
      NSLDEX=(J-1)*JSPREP+1
      NSLEND=J*JSPREP
      IF(NSLEND.GT.LFDFIL)NSLEND=LFDFIL
      DO 320 K=NSLDEX,NSLEND
      KSTA=K
      KDEX=KDEX+1
      IF(NABSTA.GT.0)KSTA=LOOKUP(K)
      JPTR=JPNTRS(KSTA)
      IF(JPTR.LT.1)GO TO 320
      SID(1)=BLNK
      SID(2)=BLNK
      IF(IDEBUG.GT.0)WRITE(IOPDBG,270)SID,PTYPE,J,K,KDEX,KSTA
270   FORMAT(' IN VPRLLP BEFORE CALL TO RPPREC IN NAME REARANGEMENT ',
     1 ' SID=',2A4,' PTYPE=',A4,' J=',I5,' K=',I5,' KDEX=',I5,
     2 ' KSTA=',I5)
      CALL RPPREC(SID,PTYPE,JPTR,JPPMX,PPARRY,NFIL,PTRNXT,ISTAT)
      IF(ISTAT.GT.0)CALL PSTRDC(ISTAT,PTYPE,SID,JPTR,JPPMX,NFIL)
      IF(IDEBUG.GT.0)WRITE(IOPDBG,280)JPPMX,J,KDEX
280   FORMAT(' IN VPRLLP AFTER CALL TO RPPREC FOR NAME REARANGEMENT ',
     1 ' JPPMX=',I8,' JPIDX=',I5,' KDEX=',I5)
      DO 300 L=5,9
      JP=(KDEX-1)*7+L-4
      PEPARM(JP)=PPARRY(L)
      IF(IDEBUG.GT.0)WRITE(IOPDBG,290)L,JP,PEPARM(JP)
290   FORMAT(' AT END OF NORMAL REARRANGEMENT CYCLE.  L=',I4,
     1' PEPARM(',I3,')=',A4)
300   CONTINUE
      JP=(KDEX-1)*7+6
      PEPARM(JP)=PPARRY(2)
      JP=(KDEX-1)*7+7
      PEPARM(JP)=PPARRY(3)
      IF(IDEBUG.GT.0)WRITE(IOPDBG,310)J,K,JREP,JSPREP,LFDFIL
310   FORMAT(' IN THE REARRANGEMENT OF NAMES PART OF VPRLLP ',
     1 ' J=',I5,' K=',I5,' JREP=',I5,' JSPREP=',I5,' LFDFIL=',I5)
320   CONTINUE
330   CONTINUE
      IF(JREP*JSPREP.GT.LFDFIL)GO TO 340
      NSLDEX=(JSPREP)*JREP+1
      JSTRT=1
      CALL VDSPL1 (JPTN,PECOMP,JSTRT,LFDFIL,MXDDIM,PEPARM,MXPDIM,
     1 ESTSYM,JPNTRS,LSTDY)
340   CALL VMAPE (PECOMP,PEPARM,PEPUSE,MXDDIM,MXPDIM,MXPDIM,
     1  NPECF,PECF)
C
350   CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      IF (IPTRCE.GT.0) WRITE(IOPDBG,*) 'EXIT VPRLLP'
C
      RETURN
C
      END
