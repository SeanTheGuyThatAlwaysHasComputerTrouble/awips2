C MEMBER XSMO51
C DESC OUTPUT SIMULATED MODEL VALUES TO TIME-SERIES
C---------------------------------------------------------------------
C
C@PROCESS LVL(77)
C
      SUBROUTINE XSMO51(PO,WK,D,IDPT,LOCWS)
C
C---------------------------------------------------------------------
C  ROUTINE TO OUTPUT SIMULATED VALUES TO TIME-SERIES. CERTAIN TIME-
C  SERIES MUST BE WRITTEN AND OTHERS ARE OPTIONAL.
C---------------------------------------------------------------------
C  WRITTEN BY - KUANG HSU - HRL - OCTOBER 1994
C----------------------------------------------------------------------
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/lts51'
      INCLUDE 'common/unit51'
      INCLUDE 'common/sarr51'
C
      DIMENSION PO(*),WK(*),D(*),IDPT(*),LOCWS(*)
      REAL*8 RESTYP(4)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ssarresv/RCS/xsmo51.f,v $
     . $',                                                             '
     .$Id: xsmo51.f,v 1.3 1998/04/07 12:06:59 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA RESTYP/8H'NOT A' ,8H'UPPER' ,8H'LOWER' ,8H'3-VAR' /
C
C-----------------------------------
C  TRACE OUTPUT IF REQUESTED
C
      IF (IBUG.GE.1) WRITE(IODBUG,1600)
 1600 FORMAT('   *** ENTER XSMO51 ***')
C
      LTW = LOCWS(NRES+1)
      DO 8000 II=1,NRES
      IRES = II
      IPTX=NRES-IRES+10
      LPP=PO(IPTX)
      ISTYP=PO(LPP)
      LPO12 = PO(12)
      NTTS = PO(LPO12)
      NTS = (NTTS-2)/NRES
C
C  SET LOCATIONS OF OUTPUT VARIABLE TRACES IN THE WORK ARRAY.
C
      CALL TSPT51(PO,CO,D,LOCWS,IDPT)
C
      IF (IBUG.LT.2) GO TO 100
C
      IRTYP=ISTYP+1
      WRITE(IODBUG,1605) RESTYP(IRTYP)
 1605 FORMAT(/5X,'** SIMULATED RESULTS FOR ',A8,
     & 'BACKWATER RESERVOIR  **')
C
C  WRITE INST. SIM. DISCHARGES
C
      WRITE(IODBUG,1610)
 1610 FORMAT(/10X,'** INST. SIM. DISCHARGES AT PERIOD START **')
      WRITE(IODBUG,1650) (WK(LWQO1+I-1),I=1,NUM)
 1650 FORMAT(5X,8F10.1)
C
      WRITE(IODBUG,1611)
 1611 FORMAT(/10X,'** SIM. INST. DISCHARGES AT PERIOD END **')
      WRITE(IODBUG,1650) (WK(LWQO2+I-1),I=1,NUM)
C
C  WRITE SIM. MEAN DISCHARGES
C
      WRITE(IODBUG,1612)
 1612 FORMAT(/10X,'** SIM. MEAN DISCHARGES **')
      WRITE(IODBUG,1650) (WK(LWQM+I-1),I=1,NUM)
C
C  WRITE SIM. POOL ELEVATIONS
C
      WRITE(IODBUG,1613)
 1613 FORMAT(/10X,'** SIM. POOL ELEVATIONS **')
      WRITE(IODBUG,1660) (WK(LWEL+I-1),I=1,NUM)
 1660 FORMAT(5X,8F10.2)
C
C  WRITE SIM. STORAGES
C
      WRITE(IODBUG,1614)
 1614 FORMAT(/10X,'** SIM. STORAGES **')
      WRITE(IODBUG,1670) (WK(LWST+I-1),I=1,NUM)
 1670 FORMAT(5X,8F10.0)
      IF(NTS.EQ.10) GO TO 100
C
C  WRITE BACK INST. INFLOW AT PERIOD START
C
      WRITE(IODBUG,1615)
 1615 FORMAT(/10X,'** BACK INST. INFLOW AT PERIOD START **')
      WRITE(IODBUG,1650) (WK(LWBQI1+I-1),I=1,NUM)
C
C  WRITE BACK INST. INFLOW AT PERIOD END
C
      WRITE(IODBUG,1616)
 1616 FORMAT(/10X,'** BACK INST. INFLOW AT PERIOD END **')
      WRITE(IODBUG,1650) (WK(LWBQI2+I-1),I=1,NUM)
C
C  WRITE BACK MEAN INFLOW
C
      WRITE(IODBUG,1617)
 1617 FORMAT(/10X,'** BACK MEAN INFLOW **')
      WRITE(IODBUG,1650) (WK(LWBQIM+I-1),I=1,NUM)
C
C  OUTPUT OF INSTANTANEOUS DISCHARGE AT PERIOD START IS REQUIRED
C
  100 CONTINUE
      LOCTST = LPO12+11+(NRES-IRES)*NTS*5
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      IF(LDQO1.LE.0) GO TO 200
      IDT = PO(LOCTST+3)
      NINT = IDT/MINODT
C
      DO 150 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 150
      D(LDQO1+I-1) = WK(LWQO1+I-1)
  150 CONTINUE
C
C  OUTPUT OF INSTANTANEOUS DISCHARGE AT PERIOD END IS REQUIRED
C
  200 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDQO2.LE.0) GO TO 300
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      IDT = PO(LOCTST+3)
      NINT = IDT/MINODT
C
      DO 250 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 250
      D(LDQO2+I-1) = WK(LWQO2+I-1)
  250 CONTINUE
C
C  FOR OUTPUT OF MEAN DISCHARGE IS OPTIONAL
C
  300 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDQM.LE.0) GO TO 400
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      IDT = PO(LOCTST+3)
      NINT = IDT/MINODT
      DO 350 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 350
      D(LDQM+I-1) = WK(LWQM+I-1)
  350 CONTINUE
C
C  POOL ELEVATION OUTPUT IS OPTIONAL
C
  400 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDEL.LE.0) GO TO 500
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      IDT = PO(LOCTST+3)
      NINT = IDT/MINODT
C
      DO 450 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 450
      D(LDEL+I-1) = WK(LWEL+I-1)
  450 CONTINUE
C
C  STORAGE OUTPUT IS OPTIONAL.
C
  500 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDST.LE.0) GO TO 600
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      LOCDT = LOCTST + 3
      IDT = PO(LOCDT)
      NINT = IDT/MINODT
C
      DO 550 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 550
      D(LDST+I-1) = WK(LWST+I-1)
  550 CONTINUE
C
C  BACKSTED INST. INFLOW AT PERIOD START OUTPUT IS OPTIONAL.
C
  600 CONTINUE
C
C SKIP FIVE TIME SERIES: OBSQO, OBSQOM, OBSH, TRIBQL1, TRIBQL2
      LOCTST = LOCTST + 25
      LOCTST = LOCTST + 5
      IF(LDBQI1.LE.0) GO TO 700
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      LOCDT = LOCTST + 3
      IDT = PO(LOCDT)
      NINT = IDT/MINODT
C
      DO 650 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 650
      D(LDBQI1+I-1) = WK(LWBQI1+I-1)
  650 CONTINUE
C
C  BACKSTED INST. INFLOW AT PERIOD END OUTPUT IS OPTIONAL.
C
  700 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDBQI2.LE.0) GO TO 800
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      LOCDT = LOCTST + 3
      IDT = PO(LOCDT)
      NINT = IDT/MINODT
C
      DO 750 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 750
      D(LDBQI2+I-1) = WK(LWBQI2+I-1)
  750 CONTINUE
C
C  BACKSTED MEAN INFLOW OUTPUT IS OPTIONAL.
C
  800 CONTINUE
      LOCTST = LOCTST + 5
      IF(LDBQIM.LE.0) GO TO 8000
C
C  SET TIME INTERVAL SCHEDULE FOR OUTPUT
C
      LOCDT = LOCTST + 3
      IDT = PO(LOCDT)
      NINT = IDT/MINODT
      DO 850 I=1,NUM
      IF (MOD(I,NINT) .NE. 0) GO TO 850
      D(LDBQIM+I-1) = WK(LWBQIM+I-1)
  850 CONTINUE
 8000 CONTINUE
C
C  ALL DONE OUTPUTTING SIMULATED TRACES TO TIME-SERIES.
C
      IF (IBUG.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT('    *** EXIT XSMO51 ***')
      RETURN
      END

