C MEMBER TLU251
C DESC TWO-DIMENSION TABLE EVALUATION ROUTINE
C
C@PROCESS LVL(77)
C
      SUBROUTINE TLU251 (FCN,IA,ARG,RSL)
C
CC  KSH CHANGE START
CC  NOTE: THIS CODE IS FROM SSARR ROUTINE STLU2 (FCN,IA,ARG,RSL)
CC  KSH CHANGE END
C
C        TWO-DIMENSION TABLE EVALUATION ROUTINE ADAPTED FROM
C        CROHMS ROUTINE HFTL2.
C        TABLE MAY BE POWER SERIES, COORDINATE POINTS, OR SHIFT-OFFSET
C     FROM GEOLOGICAL SURVEY
C
C     INPUT:
C         FCN - RELATION ARRAY IN STANDARD FORMAT (SEE BELOW)
C         IA  - WORD POSITION OF INDEPENDENT VARIABLE,IF FCN IS TABLE.
C         ARG - ARGUMENT; VALUE OF INDEPENDENT VARIABLE.
C      OUTPUT:
C         RSL - ARRAY OF RESULTS OF EVALUATION OF RELATION;
C               RSL(N) CONTAINS VALUE FROM RELATION OF NTH VARIABLE.
C               IF IA=N, RSL(N)=ARG
C      STANDARD RELATION FORMAT:
C    WORD IN FCN ARRAY:
C      1        LENGTH OF ARRAY IN WORDS.
C      2  SCNI -SCAN INDEX MAINTAINED BY STLU2, POINTS TO POSITION IN
C               ARRAY USED BY PREVIOUS REFERENCE.
C      3        BASETIME RELATION WAS LOADED TO FILE (SYSTEM CLOCK TIME)
C      4        RESERVED
C      5-6      RELATION NAME
C      7  FC - FORMAT CODE (REAL);
C         IF FC = 0, POWER SERIES OF THE FORM:
C                 RSL(2) = A*ARG**N + B*ARG**(N-1)...
C                 N IS IN FCN(8) (REAL)
C                 A IS IN FCN(9)
C                 CONSTANT TERM IS IN FCN(N+9), N MAY EQUAL ZERO.
C         FC  = 2, 3, OR 4, FUNCTION IS TABLE OF POINTS. EACH
C               POINT IS IN FC CONSECUTIVE WORDS.
C               POINTS ARE STORED BEGINNING AT FCN(8). 
C               IF FC=2, AND VARIABLES ARE Q AND E,
C               FCN(8)=Q1, FCN(9)=E1, FCN(10)=Q2, FCN(11)=E2,...
C         IF FC=4, 4TH VARIABLE IS STORAGE AND IS STORED
C               IN INTEGER FORMAT.
C               POINTS ARE STORED BEGINNING AT FCN(8). 
C               FCN(8)=Q1, FCN(9)=E1, FCN(10)=NOT USED, FCN(11)=IST1,...
C         FC = 1, USGS SHIFT-OFFSET FORMAT; PROCESSED BY ROUTINE TLUSO
C 8 THRU (END-20)   VALUES OF RELATION, ORGANIZED AS FC INDICATES.
C (END-19) TO END   DESCRIPTION OF RELATION FROM '...' FIELD ON ZCT CARD
      CHARACTER*4 AFCN(2),COTYPE,CUNDEF
      DIMENSION FCN(*),RSL(*),FFCN(2)
      EQUIVALENCE (FFCN(1),AFCN(1))
      REAL*8 DR,DRN
      EQUIVALENCE (FNSCI,NSCI),(IW,W,COTYPE),(IW2,W2),(RL,L)
      EQUIVALENCE (RFC,IFC),(RN,N)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_ssarresv/RCS/tlu251.f,v $
     . $',                                                             '
     .$Id: tlu251.f,v 1.2 2000/07/24 19:52:19 page Exp $
     . $' /
C    ===================================================================
C
C       ISW1 IS A FIRST-TIME SWITCH, SET TO 0 TO START.
      SAVE ISW1, FFCN
      DATA IOW/6/, ISW1/0/
C
      RL=FCN(1)
      IF(L.LT.28.OR.L.GT.8000) GO TO 400
      RFC=FCN(7)
C        TEST FOR SHIFT-OFFSET FORMAT
      IF(IFC.EQ.1) GO TO 500
      IL=7
      ILT=L
C        L IS LENGTH OF TABLE WITHOUT DESCRIPTION.
      L=ILT-20
C        TEST - POWER SERIES
      IF(IFC) 90, 20, 90
C
  20  DY = 0.
      IFC=2
      RN = FCN(IL+1) + .1
      M = N + IL + 1
      IF(N.EQ.0) GO TO 50
      N1=IL+2
      J=M
      DO 40 I= N1, M
C
C        EVALUATE POWER SERIES IN FORM Y = (((A*X + B)*X+C)*X+D)*X +E...
      DY = (DY + FCN(J))*ARG
   40 J=J-1
C        ADD CONSTANT TERM
  50  DY = DY + FCN(M+1)
      IF(IA - 1) 60, 70, 60
  60  RSL(1) = DY
      RSL(2) = ARG
      GO TO 330
  70  RSL(2) = DY
      RSL(1) = ARG
      RETURN
C
C        FUNCTION IS TABLE. TEST CONTROLS FOR VALIDITY.
   90 IF(IFC.GT.4) GO TO 400
      IF(IA.NE.4) GO TO 92
       W=ARG
      IARG=IW
92    IF(IA.LE.0) GO TO 400
      IF(IA.GT.IFC) GO TO 400
C        CONTROLS OK. VERIFY THAT NSCI IS MODULO IFC
      FNSCI=FCN(2)
C        THE TABLE PART OF RECORD STARTS AT WORD 8.
      IF(NSCI.LT.(8)) NSCI=8
C        ADJUST N TO POINT TO ARGUMENT-WORD (IA) IN POINT PRECEDING THE
C        POINT FOUND BY THE LAST CALL TO STLU2.
C        IL =  7, THE LENGTH OF THE HEADER PART OF TABLE RECORD.
      N=NSCI-IL-1
      N=N-MOD(N,IFC) +IA+IL
C       TABLE MUST HAVE AT LEAST 2 POINTS
      IF(L.LT.(IL + 2*IFC)) GO TO 400
C       DONOT ALLOW SEARCH TO START WITH LAST 2 POINTS OF TABLE,
C       BECAUSE LAST POINT MAY BE EMPTY (C1 TABLE, ROUTINE CUPDAT)
      IF(N.GT.(L - 2*IFC)) N=IL+IA
 100  M=N+IFC
C         SET ISWD=0 IF TABLE ASCENDING, ISWD=1 IF DESCENDING.
      ISWD=0
C          RESET 1ST-TIME SWITCH
      ISWS = 0
C         IF INDEP. VARIABLES ARE EQUAL, TRY TO USE 1ST AND 2ND
C         POINTS TO SET ASCENDING/DESCENDING SWITCH.
C        TEST FOR INTEGER ARGUMENT
      IF(IA.EQ.4) GO TO 120
      IF(FCN(N).NE.FCN(M)) GO TO 110
C        IF 1ST 2 POINTS HAVE EQUAL INDEP. VAR.. RETURN 1ST POINT AS ANS
 104  IF((IL+IFC).GE.N) GO TO 300
C         SET N TO 1ST POINT AND TRY AGAIN.
      N=IL+IA
      GO TO 100
 110  IF(FCN(N).LT.FCN(M)) GO TO 150
C        DESCENDING
 130  ISWD=1
      GO TO 150
 120  W=FCN(N)
      W2=FCN(M)
      IF(IW.EQ.IW2) GO TO 104
      IF(IW.GT.IW2) GO TO 130
C
C        SCAN TABLE FOR BRACKETING POINTS
C        WHEN IA = 4, ARG IS FIXED POINT.
 150  IF(IA-4) 154, 155, 154
 154  IF(ISWD.NE.0) GO TO 554
      IF(FCN(N) - ARG) 160, 300, 190
 554  IF(FCN(N)-ARG) 190,300,160
 155  W=FCN(N)
      IF(ISWD.NE.0) GO TO 555
      IF(IW-IARG) 160,300,190
 555  IF(IW-IARG) 190,300,160
C        NOT FAR ENOUGH INTO TABLE
 160  IF(ISWS) 180, 170, 240
C        FIRST TEST, SET1-ISWS
 170  ISWS = -1
C        STILL TOO LOW. MOD HIGHER.
 180  M = N
      N = N + IFC
      IF(N.GT.(L-IFC)) GO TO 230
C         TEST NEXT POINT FOR ASCENDING
      IF(IA.NE.4) THEN
C        ARG IS NOT STORAGE.  SEE IF ASCEND OR DESCEND
         IF(ISWD.EQ.0) THEN
C           ASCENDING INDEPENDENT VARIABLE
            IF(FCN(N)-FCN(M)) 184,184,150
         ELSE
C           DESCENDING INDEPENDENT VARIABLE
            IF(FCN(M)-FCN(N)) 184,184,150
         ENDIF
C        ARG IS STORAGE
      ELSE
         W=FCN(M)
         W2=FCN(N)
         IF(ISWD.EQ.0) THEN
C           ASCENDING INDEPENDENT VARIABLE (STORAGE)
            IF(IW2-IW) 184,184,150
         ELSE
C           DESCENDING INDEPENDENT VARIABLE
            IF(IW-IW2) 184,184,150
         ENDIF
      ENDIF
C       NEXT POINT IS NOT CORRECTLY ASCENDING/DESCENDING
 184  IF(ISW1.NE.0) THEN
C       THIS IS NOT THE FIRST TIME FOR THIS ERROR
          IF(FFCN(1).EQ.FCN(5).AND.FFCN(2).EQ.FCN(6)) GO TO 300
      ELSE
          ISW1=1
      ENDIF
      FFCN(1)=FCN(5)
      FFCN(2)=FCN(6)
      W=ARG
      WRITE(IOW,185) AFCN,FCN(7),IA,ARG,IW
 185  FORMAT(' *** STLU2; CT/ZCT TABLE SEARCH OFF END. EXTRAPOLATION '
     1,'NOT POSSIBLE.'/'     LAST POINT OF TABLE USED AS RESULT. '/
     2 ' NAME=',2A4,', FORMAT CODE =',F4.0,', ARGUMENT WORD NO.=',I2,
     3 ', ARGUMENT=',F15.3,I12)
         GO TO 300
C        TOO FAR INTO TABLE
 190  IF(ISWS) 230, 200, 210
C        FIRST TEST, SET2-ISWS
 200  ISWS = 1
C        STILL TOO FAR, BACKUP
 210  N = N - IFC
C        TEST - OFF END
      IF(N-IL) 220, 220, 150
C        SETUP TO EXTRAPOLATE
 220  N = IA+IL
      GO TO 240
 230  N = N - IFC
C        CALC. INTERPOLATION RATIO
 240  M = N+IFC
      IF(IA-4) 245, 246, 245
C        IF POINTS HAVE EQUAL INDEP VALUES, TREAT AS IF EQUAL TO ARG
 245  IF(FCN(M).EQ.FCN(N)) GO TO 300
      DR = (ARG - FCN(N))/(FCN(M) - FCN(N))
      GO TO 247
 246  W=FCN(N)
      DRN=IARG-IW
      W2=FCN(M)
      DR=IW2-IW
      IF(DR.EQ.0.) GO TO 300
      DR = DRN/DR
C        SETUP TO CALC. DEPENDENT VALUES.
 247  M  = N - IA + 1
      M2 = M + IFC
      DO 270 I = 1, IFC
      IF(I - IA) 250, 259, 250
C        FOURTH ELEMENT IS ALWAYS FIXED-POINT.
 250  IF(I - 4) 254, 255, 254
 254  RSL(I) = DR * (FCN(M2) - FCN(M)) + FCN(M)
      GO TO 260
 255  W2=FCN(M2)
      W=FCN(M)
      DRN=IW2-IW
      DRN=DR*DRN
      IRN = DRN + DSIGN(.5D0,DRN)
      IW2=IRN+IW
      RSL(I) =W2
      GO TO 260
 259  RSL(I) = ARG
 260  M = M + 1
      M2 = M2 + 1
 270  CONTINUE
C
      GO TO 320
C
C        POINT FOUND WITH EQUAL INDEPENDENT VARIABLE.
 300  M = N - IA + 1
      DO 310 I = 1, IFC
      RSL(I) = FCN(M)
 310  M = M + 1
C
 320  NSCI = N
      FCN(2)=FNSCI
C
 330  CONTINUE
      RETURN
 400  FFCN(1)=FCN(5)
      FFCN(2)=FCN(6)
      W=ARG
      WRITE(IOW,401) AFCN,FCN(7),IA,ARG,IW
 401  FORMAT(' *** STLU2 ERROR: CT/ZCT TABLE SETUP WRONG.'/
     1 ' NAME=',2A4,', FORMAT CODE=',F4.0,', ARGUMENT WORD NO.=',I2,
     2 ', ARGUMENT=',F15.3,I11)
      rsl(1)=0.  ! don't quit on error, so user can find table.
      rsl(2)=0.
      rsl(3)=0.
      rsl(4)=0.
      return

C
C        USGS SHIFT-OFFSET FORMAT
C     FCN(7)=1., FCN(8)=NOROWS (REAL), FCN(9)=NSROWS (REAL),
C     FCN(10)=COTYPE (CHARACTER VARIABLE)
C     STARTING IN FCN(11) ARE ARRAYS DOV1,DOV2,DOSO, ALL NOROWS LONG.
C     THEN COMES DSV1 AND DSSH, BOTH NSROWS LONG.  ALL ARRAYS ARE
C     REAL*4 (NOT REAL*8 AS IN CDB4).
 500  NOROWS=FCN(8)
      NSROWS=FCN(9)
      NO2=11+NOROWS
      NOSO=NO2+NOROWS
      NS1=NOSO+NOROWS
      NSSH=NS1+NSROWS
      IF(IA.EQ.1) THEN
         RQ=ARG
      ELSE
         RE=ARG
      ENDIF
C          PICKUP COTYPE; COTYPE IS EQUIV. TO W
      W=FCN(10)

      RSL(1)=RQ
      RSL(2)=RE
      IF(CUNDEF.NE.' ') THEN
          FFCN(1)=FCN(5)
          FFCN(2)=FCN(6)
          WRITE(IOW,'('' CDB4 SHIFT-OFFSET TABLE ERROR: '',
     1    2A4,'', IA,CUNDEF,ARG='',I2,A1,F15.3)') AFCN,IA,CUNDEF,ARG
      ENDIF
      RETURN
      END
