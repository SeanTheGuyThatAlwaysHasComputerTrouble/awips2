C MODULE FUN001
C-----------------------------------------------------------------------
C
C  MAIN ROUTINE FOR THE FCST FUNCTION
C
      SUBROUTINE FUN001
C
      CHARACTER*6 RTNNAM
      CHARACTER*8 FUNCNAME,TECHNAME,SEGOLD,OPNOLD
      PARAMETER (LARGS=84)
      DIMENSION IARGS(LARGS)
C
      INCLUDE 'updaio'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/killcd'
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/fclfls'
      COMMON /FUN5CB/ IFIRST,ICPUF5
      COMMON /FCPUCK/ ICPUT,ICPUON,INCPU
      COMMON /FPSIDS/ NUMBSG,NUMBFG,RIDLO(2,10),RIDLF(2,10)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_top/RCS/fun001.f,v $
     . $',                                                             '
     .$Id: fun001.f,v 1.3 2004/06/23 13:44:05 hank Exp $
     . $' /
C    ===================================================================
C
C
CCC      WRITE (UE,*) 'IN FUN001 - IPR=',IPR
C
      RTNNAM='FUN001'
C
      FUNCNAME='FCEXEC'
C
C  READ PREPROCESSOR PARAMETRIC DATABASE CONTROLS
CHDH  This has been moved down to after the FFG and ASSIM technique
CHDH  values are known!
ccav      CALL RPPPCO (ISTAT)
ccav      IF (ISTAT.GT.0) THEN
ccav         WRITE (IPR,5) RTNNAM,'READING'
ccav5     FORMAT ('0**ERROR** IN ',A,' - ',A,
ccav     *   ' PREPROCESSOR PARAMETRIC DATA BASE CONTROL RECORDS.')
ccav         CALL ERROR
ccav         ENDIF
C
      IOPOLD=IOPNUM
      CALL UMEMOV (ISEG,SEGOLD,2)
      CALL UMEMOV (OPNAME,OPNOLD,2)
      IOPNUM=0
      CALL UMEMOV ('NONE YET',ISEG,2)
      CALL UMEMOV (RTNNAM,OPNAME,2)
C
      NKIN=NKILLS
      NWARN=0
      NERRS=0
      ICPUON=0
      IWRPPP=0
C
      IF (IFIRST.EQ.-45678) THEN
         CALL URTIMR (LAPSE,ICPUF5)
         ELAPSE=LAPSE/100.
         XICPUF=ICPUF5/100.
         WRITE (IODBUG,20) RTNNAM,ELAPSE,XICPUF
20    FORMAT (' AT START OF ',A,' - ELAPSED CPU TIME = ',F6.2,
     *   ' SECONDS',3X,'TOTAL CPU TIME = ',F6.2,' SECONDS ')
         ENDIF
C
      IOUNT=0
      IF (IOUNT.EQ.1) THEN
C
        IMIN=1
        IMAX=9
   
C
C  GET I/O UNIT NUMBERS FOR PRINT, PUNCH, DEBUG AND ERRORS
        TECHNAME='PRINT'
        CALL HPAST (TECHNAME,IPR,ISTAT)
        IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
        IDFLT=6
        CALL FTEKCK (IPR,TECHNAME,IDFLT,IPR,IMIN,IMAX)
        TECHNAME='PUNCH'
        CALL HPAST (TECHNAME,IPU,ISTAT)
        IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
        IDFLT=7
        CALL FTEKCK (IPU,TECHNAME,IDFLT,IPU,IMIN,IMAX)
        TECHNAME='DEBUGPR'
        CALL HPAST (TECHNAME,IODBUG,ISTAT)
        IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
        IDFLT=6
        CALL FTEKCK (IODBUG,TECHNAME,IDFLT,IODBUG,IMIN,IMAX)
C
C  SET I/O UNIT NUMBER FOR ERROR MESSAGE PRINTOUT
        TECHNAME='ERRORPR'
        CALL HPAST (TECHNAME,IOERR,ISTAT)
        IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
        IDFLT=9
        CALL FTEKCK (IOERR,TECHNAME,IDFLT,IOERR,IMIN,IMAX)
C
      ENDIF

cbegin av
CHDH  This code loads the values of the FFG and ASSIM techniques.
      TECHNAME='FFG'
      CALL HPAST (TECHNAME,IFFG,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      TECHNAME='ASSIM'
      CALL HPAST (TECHNAME,IASSIM,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      
      
CHDH  READ PREPROCESSOR PARAMETRIC DATABASE CONTROLS ONLY IF FFG
CHDH  or ASSIM is turned on.
      IF (IFFG.NE.0.OR.IASSIM.NE.0) THEN
          CALL RPPPCO (ISTAT)
          IF (ISTAT.GT.0) THEN
              WRITE (IPR,5) RTNNAM,'READING'
5             FORMAT ('0**ERROR** IN ',A,' - ',A,
     *      ' PREPROCESSOR PARAMETRIC DATA BASE CONTROL RECORDS.')
          CALL ERROR
        ENDIF
      ENDIF
cend av
      
C
C  SET TRACE LEVEL - IN ARGUMENT OF TECH FCDEBUG
      TECHNAME='FCDEBUG'
      CALL HPASTA (TECHNAME,LARGS,IFCDBG,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      IF (IFCDBG.EQ.1) ITRACE=IARGS(84)
C
       IF (ITRACE.GT.0) WRITE (IODBUG,*) 'ENTER ',RTNNAM
C
      IF (KLCODE.GT.5) THEN
         WRITE (IPR,40) FUNCNAME
40    FORMAT ('0**WARNING** FUNCTION ',A,' NOT COMPUTED ',
     *   'BECAUSE ERRORS ENCOUNTERED.')
         CALL WARN
         GO TO 110
         ENDIF
C
C  GET VALUES FOR UNIVERSAL TECHNIQUES
      CALL FILUVO (IQUIT)
C
      NPASS=1
C
70    IF (IQUIT.EQ.0) CALL FCEXEC
C
C  IF CGROUP, ONLY ONE PASS ALLOWED
      IF (ITYPRN.EQ.1) GO TO 90
      NPASS=NPASS+1
      IF (ITYPRN.EQ.3) GO TO 80
C
C  FGROUP
      IF (NPASS.GT.NUMBFG) GO TO 90
      RUNID(1)=RIDLF(1,NPASS)
      RUNID(2)=RIDLF(2,NPASS)
      GO TO 70
C
C  ONESEG
80    IF (NPASS.GT.NUMBSG) GO TO 90
      RUNID(1)=RIDLO(1,NPASS)
      RUNID(2)=RIDLO(2,NPASS)
      GO TO 70
C
90    IF (IWRPPP.EQ.1) THEN
C     WRITE PREPROCESSOR PARAMETRIC DATABASE CONTROLS
         CALL WPPPCO (ISTAT)
         IF (ISTAT.GT.0) THEN
            WRITE (IPR,5) 'WRITING'
            CALL ERROR
            ENDIF
         ENDIF
C
C  CHECK IF EITHER FUNCTION CPUCHECK OR TECHNIQUE SYSBUG (CPU) ON
110   IF (IFIRST.NE.-45678.AND.ICPUON.EQ.0) GO TO 170
C
      IF (ICPUON.EQ.1) THEN
C     TECHNIQUE SYSBUG (CPU) IS ON
         CALL URTIMR (LAPSE,ICPUT)
         TOTCPU=(ICPUT-INCPU)/100.
	 ICPUF5=ICPUT
	 GO TO 150
	 ENDIF
C  FUNCTION CPUCHECK IS ON
      CALL URTIMR (LAPSE,ICPUF5)
      TOTCPU=(ICPUF5-INCPU)/100.
150   WRITE (IPR,160) FUNCNAME,TOTCPU
160   FORMAT (' TOTAL CPU TIME FOR FUNCTION ',A,' = ',F6.2,' SECONDS')
C
170   IF (NKIN.EQ.NKILLS) CALL STOPFN ('FCEXEC  ')
C
      IOPNUM=IOPOLD
      CALL UMEMOV (SEGOLD,ISEG,2)
      CALL UMEMOV (OPNOLD,OPNAME,2)
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'EXIT ',RTNNAM
C
      RETURN
C      
      END
