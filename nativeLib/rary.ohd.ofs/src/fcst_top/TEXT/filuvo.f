C$PRAGMA C (UDATL)
C MODULE FILUVO
C-----------------------------------------------------------------------
C
      SUBROUTINE FILUVO (IQUIT)
C
C  THIS ROUTINE SETS THE VALUES IN FORECAST COMPONENT COMMON BLOCKS 
C  FOR UNIVERSAL TECHNIQUES AND ARGUMENTS.
C
      CHARACTER*6 RTNNAM
      CHARACTER*8 TECHNAME
C
      DIMENSION SBNAME(2),OPHOLD(2)
      DIMENSION IDATE(6),NAMRID(2,3)
      DIMENSION RIDO(2),RIDF(2),RIDC(2)
      PARAMETER (LIARGS=100)
      DIMENSION IARGS(LIARGS)
C
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fcary'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/sysbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fcfutp'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/where'
      INCLUDE 'common/fmodft'
      INCLUDE 'common/fplotc'
      INCLUDE 'common/fdisps'
      INCLUDE 'common/ffgctl'
      COMMON /HDFLTS/XHCL(2),LINPTZ,YHCL(18),LCLHCL,LTZHCL,NPDHCL,NCAHCL
      COMMON /FUN5CB/ IFIRST,ICPUF5
      COMMON /FCPUCK/ ICPUT,ICPUON,INCPU
      COMMON /FPSIDS/ NUMBSG,NUMBFG,RIDLO(2,10),RIDLF(2,10)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_top/RCS/filuvo.f,v $
     . $',                                                             '
     .$Id: filuvo.f,v 1.4 2002/02/11 20:29:54 dws Exp $
     . $' /
C    ===================================================================
C
      DATA BLANK/4H    /,IBLNK/4H    /,IYES/4HYES /
      DATA NAMRID/4HCGRO,4HUP  ,4HFGRO,4HUP  ,4HONES,4HEG  /
      DATA SBNAME/4HFILU,4HVO  /
C
C
      RTNNAM='FILUVO'
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'ENTER ',RTNNAM
C
      IF (IFIRST.NE.-45678) GO TO 30
C
      CALL URTIMR (LAPSE,ICPUF5)
C
      ELAPSE=LAPSE/100.
      XICPUF=ICPUF5/100.
C
      WRITE (IODBUG,20) RTNNAM,ELAPSE,XICPUF
20    FORMAT (' AT START OF ',A,' - ELAPSED CPU TIME = ',F6.2,
     *   ' SECONDS',3X,'TOTAL CPU TIME = ',F6.2,' SECONDS')
C
30    DO 40 I=1,2
         OPHOLD(I)=OPNAME(I)
         OPNAME(I)=SBNAME(I)
40       CONTINUE
      IOPOLD=IOPNUM
      IOPNUM=0
C
C  SET VALUE OF ICPUT IN CB /FCPUCK/
      ICPUON=0
      ICPUT=0
      IF (IFIRST.EQ.-45678) ICPUT=ICPUF5
      INCPU=ICPUT
C
      IALL=0
C
C  GET TECH VALUE AND ARGUMENTS FOR TECH SYSDEBUG
      TECHNAME='SYSDEBUG'
      CALL HPASTA (TECHNAME,LIARGS,ISYDBG,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      NDEBGS=0
C
C  IF SYSDEBUG TECHNIQUE OFF (=0 OR N) DO NOT DECODE ARGUMENTS
      IF (ISYDBG.EQ.0) GO TO 120
C
C  EXTRACT ARGUMENT IALL WHICH TELLS WHETHER OR NOT TO TURN ON
C  ALL SYSTEM DEBUG CODES
C  VALID VALUES OF ARGUMENT ARE 'NO  ' AND 'YES '
      CALL HGTSTR (1,IARGS(61),ICKYES,IFL,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,50) ISTAT
50    FORMAT ('0**ERROR** STATUS OF ',I3,' RETURNED FROM ',
     * 'HGTSTR')
         WRITE (IPR,60)
60    FORMAT (11X,'WHILE DECODING YES OR NO FOR ARGUMENT ALLCDS OF ',
     * 'TECHNIQUE SYSDEBUG')
         CALL ERROR
         GO TO 80
	 ENDIF
C
      IF (ICKYES.EQ.IYES) IALL=1
C
80    IF (IALL.EQ.1) GO TO 120
C
C  LOOP THROUGH 4-CHARACTER DEBUG CODES
C  UNPACK CODES AND STORE IN IDEBGS OF COMMON BLOCK /SYSBUG/
      DO 110 I=1,20
         CALL HGTSTR (1,IARGS(1+(I-1)*3),ICDS,IFL,ISTAT)
         IF (ISTAT.EQ.0) GO TO 100
            WRITE (IPR,50) ISTAT
            WRITE (IPR,90)
90    FORMAT (11X,'WHILE DECODING 4-CHARACTER CODES OF TECHNIQUE ',
     * 'SYSDEBUG')
         CALL ERROR
100      IF (ICDS.EQ.IBLNK) GO TO 110
         NDEBGS=NDEBGS+1
         IDEBGS(NDEBGS)=ICDS
110      CONTINUE
C
120   IBUG=IFBUG('FILU')
C
      ICPUBG=IFBUG('CPU ')
C
      IF (ICPUBG.EQ.1) THEN
         ICPUON=1
         CALL URTIMR (LAPSE,ICPUT)
         IF (IFIRST.EQ.-45678) THEN
            ELAPSE=LAPSE/100.
            XICPUT=ICPUT/100.
            WRITE (IODBUG,130)ELAPSE,XICPUT
130   FORMAT ('0** IN FILUVO ** AFTER GETTING SYSTEM DEBUG CODES'
     * ,'ELAPSED CPU TIME = ',F6.2,' SECONDS, TOTAL CPU TIME = ',
     * F6.2,' SECONDS.')
            ENDIF
	 ENDIF
C
      IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,150) IALL,NDEBGS
150   FORMAT ('0** IN FILUVO - IALL,NDEBGS= ',2I11)
         IF (NDEBGS.GT.0) WRITE (IODBUG,160) (IDEBGS(I),I=1,NDEBGS)
160   FORMAT ('0SYSTEM DEBUG CODES CURRENTLY ACTIVE ARE'/
     *   6X,20(A4,1X))
         ENDIF
C
      ITYPRN=0
      IQUIT=0
      RUNID(1)=BLANK
      RUNID(2)=BLANK
      RIDO(1)=BLANK
      RIDO(2)=BLANK
      RIDF(1)=BLANK
      RIDF(2)=BLANK
      RIDC(1)=BLANK
      RIDC(2)=BLANK
      DO 170 I=1,10
         RIDLO(1,I)=BLANK
         RIDLO(2,I)=BLANK
         RIDLF(1,I)=BLANK
         RIDLF(2,I)=BLANK
170      CONTINUE
C
      ICGID(1)=BLANK
      ICGID(2)=BLANK
      IFGID(1)=BLANK
      IFGID(2)=BLANK
      IDSEGN(1)=BLANK
      IDSEGN(2)=BLANK
C
C  CHECK IF TECHS ONESEG, FGROUP, CGROUP, LISTSEGS OR LISTFGS SET
C
C  TECHNIQUE ONESEG
      TECHNAME='ONESEG'
      CALL HPASTA (TECHNAME,LIARGS,IVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IVALO,TECHNAME,0,IVAL,0,1)
      IF (IVALO.EQ.1) CALL HGTSTR (2,IARGS,RIDO,IFL,ISTAT)
      IF (ISTAT.GT.0) THEN
         WRITE (IPR,50) ISTAT
         WRITE (IPR,180) TECHNAME
180   FORMAT (11X,'WHILE DECODING RUNID FOR TECHNIQUE ',A)
         CALL ERROR
	 ENDIF
C
C  TECHNIQUE FGROUP
      TECHNAME='FGROUP'
      CALL HPASTA (TECHNAME,LIARGS,IVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IVALF,TECHNAME,0,IVAL,0,1)
      IF (IVALF.EQ.1) CALL HGTSTR (2,IARGS,RIDF,IFL,ISTAT)
      IF (ISTAT.GT.0) THEN
         WRITE (IPR,50) ISTAT
         WRITE (IPR,180) TECHNAME
         CALL ERROR
	 ENDIF
C
C  TECHNIQUE CGROUP
      TECHNAME='CGROUP'
      CALL HPASTA (TECHNAME,LIARGS,IVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IVALC,TECHNAME,0,IVAL,0,1)
      IF (IVALC.EQ.1) CALL HGTSTR (2,IARGS,RIDC,IFL,ISTAT)
      IF (ISTAT.GT.0) THEN
         WRITE (IPR,50) ISTAT
         WRITE (IPR,180) TECHNAME
         CALL ERROR
	 ENDIF
C
C  TECHNIQUE LISTSEGS
      TECHNAME='LISTSEGS'
      CALL HPASTA (TECHNAME,LIARGS,IVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IVALLS,TECHNAME,0,IVAL,0,1)
      NUMBSG=0
      IF (IVALLS.LT.1) GO TO 210
      DO 190 I=1,10
         CALL HGTSTR (2,IARGS(1+(I-1)*4),RIDLO(1,I),IFL,ISTAT)
         IF (ISTAT.EQ.0) GO TO 190
            WRITE (IPR,50) ISTAT
            WRITE (IPR,180) TECHNAME
            CALL ERROR
            GO TO 210
190      CONTINUE
C
C  COUNT NUMBER OF SEGMENT IDENTIFIERS
      DO 200 I=1,10
         IF (RIDLO(1,I).EQ.BLANK.AND.RIDLO(2,I).EQ.BLANK) GO TO 210
         NUMBSG=I
200      CONTINUE
C
C  TECHNIQUE LISTFGS
210   TECHNAME='LISTFGS'
      CALL HPASTA (TECHNAME,LIARGS,IVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IVALLF,TECHNAME,0,IVAL,0,1)
      NUMBFG=0
      IF (IVALLF.LT.1) GO TO 240
      DO 220 I=1,10
         CALL HGTSTR (2,IARGS(1+(I-1)*4),RIDLF(1,I),IFL,ISTAT)
         IF (ISTAT.EQ.0) GO TO 220
            WRITE (IPR,50) ISTAT
            WRITE (IPR,180) TECHNAME
            CALL ERROR
            GO TO 240
220      CONTINUE
C
C  COUNT NUMBER OF FORECAST GROUP IDENTIFIERS
      DO 225 I=1,10
         IF (RIDLF(1,I).EQ.BLANK.AND.RIDLF(2,I).EQ.BLANK) GO TO 240
         NUMBFG=I
225      CONTINUE
C
240   IF (IBUG.EQ.0) GO TO 290
C
      WRITE (IODBUG,250) IVALO,IVALF,IVALC,IVALLS,IVALLF,NUMBSG,NUMBFG
250   FORMAT ('0IN FILUVO - IVALO=',I2,', IVALF=',I2,', IVALC=',I2
     * ,', IVALLS=',I2,', IVALLF=',I2,', NUMBSG=',I3,', NUMBFG=',I3)
      WRITE (IODBUG,260)RIDO,RIDF,RIDC
260   FORMAT (6X,'RIDO=',2A4,', RIDF=',2A4,', RIDC=',2A4)
      IF (NUMBSG.GT.0) WRITE (IODBUG,270)((RIDLO(I,J),I=1,2),J=1,NUMBSG)
270   FORMAT (6X,'RIDLO=',10(1X,2A4))
      IF (NUMBFG.GT.0) WRITE (IODBUG,280)((RIDLF(I,J),I=1,2),J=1,NUMBFG)
280   FORMAT (6X,'RIDLF=',10(1X,2A4))
C
290   IVALUE=IVALO+IVALF+IVALC+IVALLS+IVALLF
C
      IF (IVALUE.EQ.0) THEN
         WRITE (IPR,300)
300   FORMAT ('0**ERROR** ONE OF THE TECHNIQUES CGROUP, ',
     * 'FGROUP, ONESEG, LISTFGS OR LISTSEG HAS NOT BEEN SPECIFIED.')
         CALL ERROR
         IQUIT=1
         GO TO 370
	 ENDIF
C
      IF (IVALO.EQ.1) THEN
C     ONESEG TECHNIQUE IS ON
         ITYPRN=3
         RUNID(1)=RIDO(1)
         RUNID(2)=RIDO(2)
         NUMBSG=1
         IF (IVALUE.NE.1) THEN
C        MORE THAN ONE OF ONESEG, FGROUP, CGROUP, LISTSEGS AND LISTFGS
C        SET
            WRITE (IPR,320) 'ONESEG',RUNID
320   FORMAT ('0**WARNING** MORE THAN ONE OF THE TECHNIQUES ',
     *     'ONESEG, FGROUP, CGROUP, LISTSEGS AND LISTFGS HAVE BEEN ',
     *     'SPECIFIED.' /
     * 13X,'TECHNIQUE ',A,' WILL BE USED WITH RUNID ',2A4,'.')
            CALL WARN
	    ENDIF
         GO TO 370
	 ENDIF
C
      IF (IVALF.EQ.1) THEN
C     FGROUP TECHNIQUE IS ON
         ITYPRN=2
         RUNID(1)=RIDF(1)
         RUNID(2)=RIDF(2)
         NUMBFG=1
         IF (IVALUE.NE.1) THEN
C        MORE THAN ONE OF FGROUP, CGROUP, LISTSEGS AND LISTFGS SET
            WRITE (IPR,320) 'FGROUP',RUNID
            CALL WARN
	    ENDIF
         GO TO 370
	 ENDIF
C
      IF (IVALC.EQ.1) THEN
C     CGROUP TECHNIQUE IS ON
         ITYPRN=1
         RUNID(1)=RIDC(1)
         RUNID(2)=RIDC(2)
         IF (IVALUE.NE.1) THEN
C        MORE THAN ONE OF CGROUP, LISTSEGS, AND LISTFGS SET
            WRITE (IPR,320) 'CGROUP',RUNID
            CALL WARN
	    ENDIF
         GO TO 370
	 ENDIF
C
      IF (IVALLS.EQ.1) THEN
C     LISTSEGS TECHNIQUE IS ON
         ITYPRN=3
         RUNID(1)=RIDLO(1,1)
         RUNID(2)=RIDLO(2,1)
         IF (IVALUE.NE.1) THEN
C        TECHNIQUES LISTSEGS AND LISTFGS ARE BOTH SET
            WRITE (IPR,320) 'LISTSEGS',RUNID
            CALL WARN
	    ENDIF
         GO TO 370
	 ENDIF
C
C  TECHNIQUE LISTFGS IS THE ONLY ONE SPECIFIED
      ITYPRN=2
      RUNID(1)=RIDLF(1,1)
      RUNID(2)=RIDLF(2,1)
C
370   IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,380) ITYPRN,RUNID,NUMBSG,NUMBFG
380   FORMAT ('0** IN FILUVO - ITYPRN= ',I3,', RUNID= ',2A4,
     * ', NUMBSG=',I3,', NUMBFG=',I3)
         IF (NUMBSG.GT.0) THEN
	    WRITE (IODBUG,390) ((RIDLO(I,J),I=1,2),J=1,NUMBSG)
390   FORMAT (' SEGMENT IDS= ',10(1X,2A4))
	    ENDIF
         IF (NUMBFG.GT.0) THEN
	    WRITE (IODBUG,400) ((RIDLF(I,J),I=1,2),J=1,NUMBFG)
400   FORMAT (' FGROUP  IDS= ',10(1X,2A4))
	    ENDIF
	 ENDIF
C
C  SET DATES FOR START OF RUN, END OF RUN, AND LAST COMPUTATIONAL
C  DAY FROM ARGUMENTS OF TECHS STARTRUN, ENDRUN AND LSTCMPDY
      TECHNAME='STARTRUN'
      CALL HPASTA (TECHNAME,LIARGS,ISTRUN,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      IDARUN=IARGS(1)/24+1
      IHRRUN=IARGS(1)-IDARUN*24+24
      TECHNAME='ENDRUN'
      CALL HPASTA (TECHNAME,LIARGS,IENRUN,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      LDARUN=IARGS(1)/24+1
      LHRRUN=IARGS(1)-LDARUN*24+24
      TECHNAME='LSTCMPDY'
      CALL HPASTA (TECHNAME,LIARGS,ILCRUN,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      LDACPD=IARGS(1)/24+1
      LHRCPD=IARGS(1)-LDACPD*24+24
      IF (IHRRUN.NE.24) GO TO 410
         IDARUN=IDARUN+1
         IHRRUN=0
410   IF (LHRRUN.NE.0) GO TO 420
         LDARUN=LDARUN-1
         LHRRUN=24
420   IF (LHRCPD.NE.0) GO TO 430
         LDACPD=LDACPD-1
         LHRCPD=24
C
430   IF (IBUG.EQ.1) WRITE (IODBUG,440) IDARUN,IHRRUN,LDARUN,LHRRUN,
     *   LDACPD,LHRCPD
440   FORMAT ('0** IN FILUVO - IDARUN,IHRRUN,LDARUN,LHRRUN,',
     *  'LDACPD,LHRCPD='/11X,6I11)
C
      CALL UDATL (IDATE)
      NOW(1)=IDATE(3)
      NOW(2)=IDATE(4)
      NOW(3)=IDATE(1)
      NOW(4)=IDATE(5)
      NOW(5)=IDATE(6)
C
C  SET INPTZC, LOCAL AND NLSTZ FROM HCL DEFAULT COMMON BLOCK HDFLTS
      INPTZC=LINPTZ
      LOCAL=LCLHCL
      NLSTZ=LTZHCL
C
C  SET DEFAULT MOD TIME ZONE CODE FROM ARGUMENT OF TECH MODTZC
C  IF MODTZC (MTZTEK) EQ ZERO OR ARG (MODTMP) EQ BLANKS USE INPTZC
      TECHNAME='MODTZC'
      CALL HPASTA (TECHNAME,LIARGS,MTZTEK,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (MTZTEK,TECHNAME,0,MTZTEK,0,1)
      MODTZC=INPTZC
      IF (MTZTEK.NE.0) THEN
         CALL HGTSTR (1,IARGS,MODTMP,IFL,ISTAT)
         IF (ISTAT.NE.0) THEN
            WRITE (IPR,50) ISTAT
            WRITE (IPR,450)
450   FORMAT (11X,'WHILE DECODING TIME ZONE CODE FOR TECHNIQUE MODTZC'/
     * 11X,'TIME ZONE CODE FROM FILE USERPARM IS ASSUMED.')
            CALL ERROR
            GO TO 470
	    ENDIF
         IF (MODTMP.NE.IBLNK) MODTZC=MODTMP
	 ENDIF
C
C  SET OUTPUT TIME ZONE NUMBER AND DAYLIGHT SAVINGS SWITCH FROM
C  TECHS NOUTZ AND NOUTDS
470   TECHNAME='NOUTZ'
      CALL HPAST (TECHNAME,NOUTZ,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (NOUTZ,TECHNAME,0,NOUTZ,-12,12)
      TECHNAME='NOUTDS'
      CALL HPAST (TECHNAME,NOUTDS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (NOUTDS,TECHNAME,0,NOUTDS,0,1)
C
      IF (IBUG.EQ.1) WRITE (IODBUG,480) LOCAL,NOUTZ,NOUTDS,NLSTZ,INPTZC,
     *  MODTZC
480   FORMAT ('0** IN FILUVO - LOCAL,NOUTZ,NOUTDS,NLSTZ,INPTZC,',
     *  'MODTZC='/11X,4I11,2(5X,A4))
C
C  NUMBER OF DAYS OF CARRYOVER TO BE SAVED IS VALUE OF TECH NUMCOSAV
      TECHNAME='NUMCOSAV'
      CALL HPASTA (TECHNAME,LIARGS,NCSTOR,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (NCSTOR,TECHNAME,0,NCSTOR,-1,10)
      IF (NCSTOR.LE.0) GO TO 500
C
C  DATES FOR SAVING CARRYOVER ARE IN ARGUMENTS OF TECH NUMCOSAV
      NCSTOR=0
      NEND=NWORDS/7
      DO 490 I=1,NEND
         ICDAY(I)=IARGS(1+(I-1)*7)/24+1
         ICHOUR(I)=IARGS(1+(I-1)*7)-ICDAY(I)*24+24
         IF (ICDAY(I).LE.1) GO TO 510
         NCSTOR=I
490      CONTINUE
      GO TO 510
C
C  TECHNIQUE SAVETDY
500   TECHNAME='SAVETDY'
      CALL HPASTA (TECHNAME,LIARGS,ISVTDY,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (ISVTDY,TECHNAME,0,ISVTDY,0,1)
      IF (ISVTDY.EQ.0) GO TO 510
      NCSTOR=1
C
C  DATE FOR SAVING CARRYOVER IS IN ARGUMENT OF TECH SAVETDY
      ICDAY(1)=IARGS(1)/24+1
      ICHOUR(1)=IARGS(1)-ICDAY(1)*24+24
C
510   IF (IBUG.EQ.1) THEN
         WRITE (IODBUG,520) NCSTOR
520   FORMAT ('0** IN FILUVO - NCSTOR= ',I11)
         IF (NCSTOR.GT.0) THEN
            WRITE (IODBUG,530) (ICDAY(I),ICHOUR(I),I=1,NCSTOR)
530   FORMAT ('0ICDAY,ICHOUR=' / (11X,6I11))
	    ENDIF
	 ENDIF
C
C  CHECK THAT THIS IS A CARRYOVER GROUP RUN IF NCSTOR NE 0
      IF (NCSTOR.EQ.0.OR.ITYPRN.EQ.1) GO TO 560
C
C  CANNOT SAVE CARRYOVER IF NOT A CARRYOVER GROUP RUN
      IF (ITYPRN.NE.0) THEN
         WRITE (IPR,550) (NAMRID(I,ITYPRN),I=1,2)
550   FORMAT ('0**WARNING** THIS IS A ',2A4,' RUN. ',
     * 'CARRYOVER CAN BE SAVED ONLY WITH A CARRYOVER GROUP RUN. ',
     * 'CARRYOVER SAVE TERMINATED.')
         NCSTOR=0
         CALL WARN
	 ENDIF
C
C  TECHNIQUE FUTPRECP - NO ARGUMENTS
560   TECHNAME='FUTPRECP'
      CALL HPAST (TECHNAME,IFPR,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IFPR,TECHNAME,0,IFPR,-1,120)
C
C  TECHNIQUE PRTRCI - NO ARGUMENTS
      TECHNAME='PRTRCI'
      CALL HPAST (TECHNAME,IPRRCI,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IPRRCI,TECHNAME,0,IPRRCI,0,1)
C
C  TECHNIQUE PRTDAYS - NO ARGUMENTS
      TECHNAME='PRTDAYS'
      CALL HPAST (TECHNAME,IPRDAY,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IPRDAY,TECHNAME,0,IPRDAY,0,3)
C
      IOUNT=0
      IF (IOUNT.EQ.1) THEN
C
C  TECHNIQUE ROPRINT - NO ARGUMENTS
      TECHNAME='ROPRINT'
      CALL HPAST (TECHNAME,IPRRO,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IPRRO,TECHNAME,8,IPRRO,6,9)
C
      ENDIF
C
C  TECHNIQUE PAGESIZE - NO ARGUMENTS
      TECHNAME='PAGESIZE'
      CALL HPAST (TECHNAME,LINERO,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (LINERO,TECHNAME,80,LINERO,50,80)
C
C  TECHNIQUE RWWARN - NO ARGUMENTS
      TECHNAME='RWWARN'
      CALL HPAST (TECHNAME,IRWWRN,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IRWWRN,TECHNAME,1,IRWWRN,0,1)
C
C  TECHNIQUE FFG - NO ARGUMENTS
      TECHNAME='FFG'
      CALL HPAST (TECHNAME,IFFG,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IFFG,TECHNAME,0,IFFG,0,2)
      IF (IFFG.EQ.0) GO TO 590
C
C  ENDRUN MUST BE AT LEAST 24 HRS PAST LSTCMPDY FOR AN FFG RUN
C  (RESET TO BE FIRST 12Z AT LEAST 24 HRS AFTER LSTCMPDY)
      LSTCMP=(LDACPD-1)*24+LHRCPD
      LSTRUN=(LDARUN-1)*24+LHRRUN
      IF (LSTRUN.GE.(LSTCMP+24)) GO TO 575
      LOLDDA=LDARUN
      LOLDHR=LHRRUN
      LASTHR=LSTCMP+24
      MOREHR=24-MOD(LASTHR,24)
      IF (MOREHR.EQ.24) MOREHR=0
      LASTHR=LASTHR+MOREHR
      LDARUN=LASTHR/24+1
      LHRRUN=0
      CALL MDYH1 (LOLDDA,LOLDHR,JOMO,JODA,JOYR,JOHR,NOUTZ,
     *   NOUTDS,TZC)
      CALL MDYH1 (LDARUN,LHRRUN,JLMO,JLDA,JLYR,JLHR,NOUTZ,
     *   NOUTDS,TZC)
      CALL MDYH1 (LDACPD,LHRCPD,JCMO,JCDA,JCYR,JCHR,NOUTZ,
     *   NOUTDS,TZC)
      WRITE (IPR,570) JOMO,JODA,JOYR,JOHR,TZC,JCMO,JCDA,JCYR,JCHR,TZC,
     *               JLMO,JLDA,JLYR,JLHR,TZC
570   FORMAT ('0**WARNING** THE FFG TECHNIQUE HAS BEEN TURNED ',
     *    'ON, BUT THE END OF THE RUN SPECIFIED',
     *    ' (',I2.2,'/',I2.2,'/',I4.4,'-',I2.2,A4,')' /
     * 11X,'WAS NOT AT LEAST 24 HOURS BEYOND THE END OF THE ',
     *    'COMPUTATIONAL PERIOD',
     *    ' (',I2.2,'/',I2.2,'/',I4.4,'-',I2.2,A4,').' /
     * 11X,'ENDRUN HAS BEEN RESET TO ',I2.2,'/',I2.2,'/',I4.4,'-',I2.2,
     *    A4,'.')
      CALL WARN
575   IF (IFFG.NE.1) GO TO 590
      IF (NCSTOR.EQ.0) GO TO 590
         WRITE (IPR,580)
580   FORMAT ('0**WARNING** THIS IS A FFG ONLY RUN. '/
     * 'CARRYOVER CANNOT BE SAVED WITH THIS OPTION.', 
     * 'CARRYOVER SAVE TERMINATED.')
         NCSTOR=0
         CALL WARN
C
C  TECHNIQUE METRIC - NO ARGUMENTS
590   TECHNAME='METRIC'
      CALL HPAST (TECHNAME,METRIC,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (METRIC,TECHNAME,0,METRIC,0,1)
C
C  TECHNIQUE MODUNITS - NO ARGUMENTS
      TECHNAME='MODUNITS'
      CALL HPAST (TECHNAME,IUMGEN,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IUMGEN,TECHNAME,2,IUMGEN,0,2)
C
C  TECHNIQUE MODSACUN - NO ARGUMENTS
      TECHNAME='MODSACUN'
      CALL HPAST (TECHNAME,IUMSAC,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IUMSAC,TECHNAME,2,IUMSAC,0,2)
C
C  TECHNIQUE MODAPIUN - NO ARGUMENTS
      TECHNAME='MODAPIUN'
      CALL HPAST (TECHNAME,IUMAPI,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,TECHNAME)
      CALL FTEKCK (IUMAPI,TECHNAME,2,IUMAPI,0,2)
C
C  IF ANY OF MODUNITS, MODSACUN, OR MODAPIUN EQUALS 2
C  SET ITS VALUES TO THAT OF METRIC
      IF (IUMGEN.EQ.2) IUMGEN=METRIC
      IF (IUMSAC.EQ.2) IUMSAC=METRIC
      IF (IUMAPI.EQ.2) IUMAPI=METRIC
C
C  SET NHOPDB AND NHOCAL FROM HCL RFC DEFAULT CB /HDFLTS/
      NHOPDB=NPDHCL
      NHOCAL=NCAHCL
      DO 600 I=1,8
600   NHROFF(I)=0
C
      IF (IBUG.EQ.1) WRITE (IODBUG,610) IFPR,IRWWRN,METRIC,NHOPDB,NHOCAL
610   FORMAT ('0** IN FILUVO - IFPR,IRWWRN,METRIC,NHOPDB,NHOCAL='
     *  ,5I11)
C
      IF (IBUG.EQ.1) WRITE (IODBUG,620) IPRRCI,IPRDAY,IPRRO,LINERO
620   FORMAT ('0** IN FILUVO - IPRRCI,IPRDAY,IPRRO,LINERO='/
     *  11X,4I11)
C
      IF (ICPUBG.EQ.1) THEN
         CALL URTIMR (LAPSE,ICPUT)
         ELAPSE=LAPSE/100.
         XICPUT=ICPUT/100.
         UVOCPU=(ICPUT-INCPU)/100.
         WRITE (IODBUG,630) ELAPSE,XICPUT,UVOCPU
630   FORMAT (' LEAVING FILUVO - ELAPSED CPU TIME = ',F6.2,
     * ' SECONDS',3X,' TOTAL CPU TIME = ',F6.2,' SECONDS',3X,
     * 'TOTAL CPU TIME FOR FILUVO = ',F6.2,' SECONDS')
         ENDIF
C
      OPNAME(1)=OPHOLD(1)
      OPNAME(2)=OPHOLD(2)
      IOPNUM=IOPOLD
C
      IF (ITRACE.GT.0) WRITE (IODBUG,*) 'EXIT ',RTNNAM
C
      RETURN
C
      END
