C$PRAGMA C (GET_APPS_DEFAULTS)
C MODULE ESGINF
C-----------------------------------------------------------------------
C
      SUBROUTINE ESGINF ()
C
C THIS SUBROUTINE WRITES INDIVIDUAL ESP RUN TIME INFO FOR
C EACH SEGMENT.
C
C ORGINALLY BY ED VANBLARGAN - HRL MARCH,1982
C
      DIMENSION SBNAME(2),OLDOPN(2),VARTYP(10),DISPTP(10),
     * BLENTP(2),FUT(2)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/elimit'
      INCLUDE 'common/esprun'
      INCLUDE 'common/eperm'
      INCLUDE 'common/efdate'
      INCLUDE 'common/emod'
      INCLUDE 'common/eswtch'
      INCLUDE 'common/eoutpt'
      INCLUDE 'common/efutp'
      INCLUDE 'common/etsunt'

C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/esginf.f,v $
     . $',                                                             '
     .$Id: esginf.f,v 1.5 2002/02/11 20:28:56 dws Exp $
     . $' /
C    ===================================================================
C
cew variables for esp indir and outdir
      character tmpstr*64, direspts*128
      integer tmplen, dirlen
C
      DATA SBNAME/4HESGI,4HNF  /
      DATA BLENTP/4HTEMP,4HPCPN/,FUT/4HZERO,4HREAL/
      DATA VARTYP/4HMXMD,4HMNMD,4HMD  ,4HSUM ,4HMXIN,4HMNIN,
     1 4HNDTO,4HNDIN,4H    ,4H    /
      DATA DISPTP/4HSUMM,4HARY ,4HFREQ,4HTABL,4HFREQ,4HPLOT,
     * 4*4H    /
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
      OLDOPN(I)=OPNAME(I)
   10 OPNAME(I)=SBNAME(I)
C
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
  900 FORMAT(1H0,17H** ESGINF ENTERED)
C
      WRITE(IPR,602)
602   FORMAT(1H1)
C
C WRITE SEGMENT HEADER
C
      WRITE(IPR,600) ISEG
600   FORMAT(/// 21X,2A4,10H EXECUTION
     * / 21X,18(1H*)
     * // 11X,46HRUNTIME INFORMATION FOR ABOVE SEGMENT FOLLOWS:)
      WRITE(IPR,690)
C
C OUTPUT VARIABLE OPTIONS
C
      WRITE(IPR,690)
      DO 200 IV=1,MAXVAR
      DO 180 IW=1,NUMWIN
      IF(JVAR(IW,IV).EQ.0) GO TO 180
      WRITE(IPR,620) VARTYP(IV),IW
  620 FORMAT(1H ,10X,16HOUTPUT VARIABLE ,A4,18H IS OFF FOR WINDOW,I5)
  180 CONTINUE
  200 CONTINUE
C
C
C PRINT ANY DISPLAYS WHICH ARE OFF
C
      WRITE(IPR,690)
      DO 240 ID=1,MAXDSP
      DO 220 IV=1,MAXVAR
      IF(JDSPS(IV,ID).EQ.0) GO TO 220
      KID=2*ID-1
      WRITE(IPR,630) DISPTP(KID),DISPTP(KID+1),VARTYP(IV)
  630 FORMAT(1H ,10X,8HDISPLAY ,2A4,28H IS OFF FOR OUTPUT VARIABLE ,
     1 A4)
  220 CONTINUE
  240 CONTINUE
C
C CHECK IF FREQUENCY PLOT DESIRED
C
      IF (IFPLT.EQ.0) WRITE(IPR,635)
635   FORMAT(1H ,10X,38HFREQUENCY PLOTS WILL NOT BE PROCESSED.)
C
C KODE AND VALUE OPTIONS
C
      IF (ICRIT.NE.0) WRITE(IPR,640) VARTYP(IOVAR),KODSEG,VALSEG
640   FORMAT(1H0,10X,28HOPTIONS FOR OUTPUT VARIABLE ,A4,4H ARE,
     * 9H  KODE = ,I2,10H  VALUE = ,F10.1)
C
C PRECIP/TEMP BLEND OPTIONS
C
      IF (JBLENT.NE.0) WRITE(IPR,650) BLENTP(1),TWT1,TWT2,ITWTLN,ITBLEN
      IF (JBLENP.NE.0) WRITE(IPR,650) BLENTP(2),PWT1,PWT2,IPWTLN,IPBLEN
650   FORMAT(1H0,10X,36HNEW RUNTIME VALUES FOR GENERATING A ,A4,
     * 17H TIME SERIES ARE:
     * / 16X,40HWEIGHT OF FUTURE DATA AT START OF RUN  =,F5.2
     * / 16X,40HWEIGHT OF FUTURE DATA AT END OF PERIOD =,F5.2
     * / 16X,40HLENGTH OF PERIOD(HRS.) TO DO WEIGHTING =,I5
     * / 16X,40HLENGTH OF PERIOD(DAYS) TO DO BLENDING  =,I5)
C
C FUTURE PRECIP SWITCH FOR BLEND-TS
C
      WRITE(IPR,655) FUT(IFUTP+1)
655   FORMAT(1H ,10X,4HUSE ,A4,35H FUTURE PRECIPITATION IN ANY PRECIP,
     * 45H TIME SERIES GENERATED BY BLEND-TS SUBCOMMAND)
C
C PERMANENT FILES WRITTEN?
C
      IF (IPERM.EQ.0) GO TO 300
      WRITE(IPR,660)
660   FORMAT(1H0,10X,37HOUTPUT TIME SERIES WILL BE WRITTEN TO,
     * 17H PERMANENT FILES.)
C
C READ FROM PERMANENT FILES?
C
300   IF (IFDATE(1).NE.0) WRITE(IPR,670) (IFDATE(I),I=1,4)
670   FORMAT(1H0,10X,45HDATA WILL BE READ FROM PERMANENT FILES DATED ,
     * 2(I2,1H/),I4,4H  HR,I3)
C
C
cew  esp input and output directories
      direspts=''
      tmplen=9
      tmpstr='espts_dir'
      tmpstr(10:10) = char(0)
      call get_apps_defaults(tmpstr,tmplen,direspts,dirlen)
cew esp_in_dir and indirlen from common etsunt
      if(indirlen .gt. 0) then
        direspts(dirlen+1:dirlen+1) = '/'
        direspts=direspts(1:dirlen+1)//esp_in_dir(1:indirlen)
        dirlen = dirlen+indirlen+1
      endif
     
      write (ipr,680) 'INPUT',direspts(1:dirlen)
680   format(11x,'ESP TIME SERIES ',A,' DIRECTORY:' / ' ',A)

      direspts=''

      call get_apps_defaults(tmpstr,tmplen,direspts,dirlen)

cew added espotdir technique value to the directory name
      if(ioutdirlen .gt. 0) then
        direspts(dirlen+1:dirlen+1) = '/'
        direspts=direspts(1:dirlen+1)//esp_out_dir(1:ioutdirlen)
        dirlen = dirlen+ioutdirlen+1
      endif
C
      write (ipr,680) 'OUTPUT',direspts(1:dirlen)

690   FORMAT(1H0)
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
      RETURN
      END
