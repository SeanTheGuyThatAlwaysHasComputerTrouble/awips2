C MODULE EVAC08
C-----------------------------------------------------------------------
C
      SUBROUTINE EVAC08(IDACC,IHACC,LDACC,LHACC,D,A,NDAYS,NHRS,TSID,
     * TYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,DAVG,MDAVG)
C
C ......................................................................
C
C      ACCUMULATOR 08 (NUMBER OF DAYS GT OR LT A VALUE) SUBROUTINE
C
C THIS IS THE ACCUMULATOR SUBROUTINE FOR FINDING THE NUMBER OF DAYS
C THAT THE TIME SERIES IS GREATER THAN (OR LESS THAN DEPENDING ON VALUE
C OF KODE) THE SPECIFIED CRITERIA VALUE.
C ......................................................................
C
C   ROUTINE INITIALLY WRITTEN BY ED VANBLARGAN - HRL - 9/1981
C
C ......................................................................
C
C VARIABLES USED ARE:
C
C IDACC = 1ST JULIAN DAY TO BE ACCUMULATED
C IHACC = 1ST HOUR TO BE ACCM.
C LDACC = LAST JULIAN DAY TO BE ACCM.
C LHACC = LAST HOUR TO BE ACCM.
C     D = ARRAY CONTAINING TIME SERIES DATA
C     A = ACCUMULATOR ARRAY. A(1) IS TOTAL DAYS GT (OR LT) VALUE
C         A(2) IS MAX NUMBER OF CONSECUTIVE DAYS TS IS GT (OR LT) VALUE
C NDAYS = NUMBER OF DAYS ALREADY ACCM.
C  NHRS = NUMBER OF HOURS ALREADY ACCM.
C  TSID = TIME SERIES I.D.
C  TYPE = DATA TYPE
C   IDT = TIME INTERVAL OF TIME SERIES
C    CO = CARRYOVER (VALID ONLY IF NDAYS OR NHRS IS GT 0)
C         ** SEE NOTE UNDER DAVG **
C  KODE = IS 1 TO CHECK NDAYS TS IS GREATER THAN VALUE.
C         IS 2 TO CHECK NDAYS TS IS LESS    THAN VALUE.
C         ALSO IF NEGATIVE MUST CONVERT TO MEAN DAILY VALUE
C VALUE = THIS IS THE CRITERIA VALUE TS GETS CHECKED AGAINST.
C ITSCAL= TIME SCALE OF TIME SERIES
C NUMLOC= NUMBER OF D VALUES PER 24 HR INTERVAL
C LOCIN = 1ST (OR CURRENT) LOCATION IN D ARRAY
C LASTIN= LAST LOCATION WE WANT IN D ARRAY
C KDAYS = COUNTER OF THE NUMBER OF DAYS WE GO THRU
C  KHRS = COUNTER OF THE HOUR FOR EACH D VALUE EACH DAY.
C  DAVG = WORK SPACE ARRAY. CANNOT USE FOR CARRYOVER SINCE THIS ARRAY
C         MAY GET WIPED OUT
C MDAVG = MAXIMUM DAVG ARRAY LENGTH
C
C   KA1 = COUNTER FOR IF TS MEETS CRITERIA VALUE IN A GIVEN DAY.
C   KA2 = COUNTER OF THE NUMBER OF CONSECUTIVE DAYS TS IS GT
C         (OR LT) VALUE.
C .........................................................
C
      DIMENSION SBNAME(2),OLDOPN(2),D(1),A(1),TSID(2),ISUBN(2)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/evac08.f,v $
     . $',                                                             '
     .$Id: evac08.f,v 1.2 2001/06/13 13:36:15 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA NAME,SBNAME/4HEACC,4HEVAC,4H08  /
      DATA INTL/4HINTL/
      DATA MEAN,INST/4HMEAN,4HINST/
C
C
C PUT ERROR TRACES FOR THIS ROUTINE IN COMMON BLK/WHERE
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
10    CONTINUE
C
C GET TRACE LEVEL AND DEBUG CODE.
C
      IF (ITRACE.GE.1) WRITE (IODBUG,115)
115   FORMAT(1H0,14HEVAC08 ENTERED)
      IBUG=IFBUG(NAME)
C
C
C IF NDAYS AND NHRS=0 THEN INITIALIZE VARIABLES AND MOVE ON TO LOOPS...
C   OTHERWISE A(1) HAS A VALID ACCUMULATED VALUE. THEN INITIALIZE SUM
C   AND ICO BOTH =CO.
C
      KA1=0
      KA2=0
      IF (NDAYS.NE.0 .OR. NHRS.NE.0) GO TO 210
      A(1)=0.0
      A(2)=0.0
      SUM=0.0
      ICO=0
      GO TO 400
C
210   IF (IFMSNG(A(1)).NE.0) GO TO 999
      SUM=CO
      ICO=CO
C
C SET VARIABLES
C
400   LOCIN = (IDACC-IDADAT)*24*NPDT/IDT + (IHACC-1)*NPDT/IDT +IVALUE
      LASTIN= (LDACC-IDADAT)*24*NPDT/IDT + (LHACC-1)*NPDT/IDT +IVALUE
C
      KDAYS=NDAYS
      KHRS=IHACC-IDT
      NUMLOC=24/IDT
C
C
C ......................................................................
C
C TIME FOR DEBUG
C
      IF (IBUG.EQ.0) GO TO 600
C
      WRITE(IODBUG,410) A(1),A(2),NDAYS,NHRS,KODE,VALUE
410   FORMAT(1H0,10X,11H** INPUT **
     * // 7X,33HA(1)   A(2) NDAYS NHRS KODE VALUE
     * / 1X,F10.2,F6.1,3X,3I5,F10.2)
C
      WRITE(IODBUG,420) IDACC,IHACC,LDACC,LHACC,TSID,TYPE,
     *IDT,LOCIN,LASTIN,CO
420   FORMAT(// 1H0,23HIDACC IHACC LDACC LHACC,6X,4HTSID,1X,
     *21HTYPE IDT LOCIN LASTIN / 1H0,
     *I5,3I6,2X,2A4,1X,A4,I4,I6,I7 //
     *1H0,11HINPUT CO = ,F10.4 // 1X,16HD ARRAY FOLLOWS:)
C
      WRITE(IODBUG,430) (D(I),I=LOCIN,LASTIN,NPDT)
430   FORMAT(/ 1X,12F10.2)
C
C
C ......................................................................
C
C
C IF KODE = NEGATIVE THEN MUST CONVERT TO MEAN DAILY VALUES
C BEFORE DETERMINING A(1). OTHERWISE CONTINUE ON.
C
600   IF (KODE.LT.0) GO TO 2000
C
C
C *****  POSITIVE KODE  *****
C
C MUST SET KA1 AND KA2 BY DECODING ICO.  KA1 IS IN THE UNITS
C POSITION AND KA2 IS IN THE 100'S POSITION.
C
650   KA2=ICO/100
      KA1=ICO-KA2*100
C
C 2 LOOPS FOLLOW. THEY ARE BASICALLY THE SAME EXCEPT 1ST LOOP IS
C FOR KODE=1 AND 2ND IS FOR KODE=2.
C
C IN EITHER LOOP GO THRU D ARRAY FROM LOCIN TO LASTIN. IF ANY D VALUE
C MEETS CRITERIA VALUE THEN KA1=1
C
C KHRS GETS INCREMENTED BY IDT ON EACH PASS THRU LOOP. AT EACH 24
C HOUR MARK KDAYS GETS INCREMENTED BY 1 AND KHRS GETS RESET TO 0
C AND THEN:
C 1. CHECK KA1, IF KA1 EQ 0 THEN VALUE WAS NOT MET FOR THAT DAY
C    AND KA2 GETS RESET TO 0 AND MOVE ON TO NEXT DAY.
C 2. IF KA1 EQ 1 THEN VALUE WAS MET FOR THAT DAY AND THEN DO:
C     2A. A(1) GETS INCREMENTED BY 1.
C     2B. KA2 GETS INCREMENTED BY 1
C     2C. IF KA2 GT A(2) THE A(2) = KA2.
C     2D. KA1 GETS RESET TO 0.
C     2E. KA2 DOES NOT GET RESET TO 0.
C
      IKOD=IABS(KODE)
      GO TO (700,1550),IKOD
      WRITE(IPR,2015)
2015  FORMAT(1H0,10X,41H**ERROR** IMPOSSIBLE LOCATION AFTER GOTO.)
      CALL ERROR
      GO TO 999
C
C LOOP FOR KODE=1
C
700   DO 1500 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).NE.0) GO TO 1999
        IF (D(I).GT.VALUE) KA1=KA1+1
        KHRS=KHRS+IDT
        IF (KHRS.LT.24) GO TO 1500
        KDAYS=KDAYS+1
        KHRS=0
        IF (KA1.EQ.0) GO TO 1050
C
        A(1)=A(1)+1.
        KA2 =KA2 +1
        IF (KA2.GT.A(2)) A(2)=KA2+0.01
        GO TO 1060
C
1050    KA2=0
1060    KA1=0
1500  CONTINUE
      GO TO 1950
C
C LOOP FOR KODE=2
C
1550  DO 1900 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).NE.0) GO TO 1999
        IF (D(I).LT.VALUE) KA1=KA1+1
        KHRS=KHRS+IDT
        IF (KHRS.LT.24) GO TO 1900
        KDAYS=KDAYS+1
        KHRS=0
        IF (KA1.EQ.0) GO TO 1650
C
        A(1)=A(1)+1.
        KA2 =KA2 +1
        IF (KA2.GT.A(2)) A(2)=KA2+0.01
        GO TO 1660
C
1650    KA2=0
1660    KA1=0
1900  CONTINUE
C
C FOR POSITIVE KODE VALUE MUST STORE BOTH KA1 AND KA2 SOMEWHERE.
C DO THIS BY COMBINING THEM INTO 1 NUMBER, CO.  KA1 GETS STORED
C IN THE UNITS PLACE AND KA2 IN THE 100'S PLACES.
C
1950  CO=KA2*100. + KA1 + 0.0001
      GO TO 900
C
C
C
C *****  NEGATIVE KODE  *****
C
C
C CHECK FOR ONE OF 2 POSSIBLE CASES:
C   1. MEAN (OR ACCM), OTHER THAN 24 HR. IDT
C   2. INST, ANY IDT
C
C  FOR THE CASE OF ALREADY HAVING A MEAN OR ACCM 24 HR TIME SERIES
C SIMPLY LOOP BACK UP TO THE POSITIVE KODE LOOPS SINCE VALUES ARE
C ALREADY MEAN DAILY.....
C OTHERWISE GO AHEAD AND DECODE A(1) TO GET KA2.  KA2 IS STORED
C AS THE DECIMAL PORTION OF A(1).
C
2000  IF (IDT.EQ.24 .AND. ITSCAL.NE.INST) GO TO 650
      IA1=A(1)
      KA2=(A(1)-IA1) * 1000.
C
C
C FOLLOWING LOOPS FOR CONVERTING TO MEAN DAILY VALUES ARE SAME
C LOGIC AS EVAC01.
C
      IF (ITSCAL.EQ.INST) GO TO 4000
C
C
C *****   MEAN OR ACCM - NON 24 HR IDT
C
C LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND COMPUTE 24 HR MEAN OR ACCM
C BY ADDING EACH D VALUE TO SUM UNTIL THE 24 HR INTERVAL IS COMPLETE.
C
C KHRS GETS INCREMENTED BY IDT ON EACH LOOP AND THE INTERVAL IS
C COMPLETE WHEN KHRS=24.
C
C ONCE A 24 HR VALUE (SUM) IS IS COMPUTED THEN:
C     1. KDAYS GETS INCREMENTED BY 1
C     2. CHECK SUM AGAINST CRITERIA...IF NOT MET THEN KA2=-1
C     3. INCREMENT KA2 BY 1.
C     4. IF KA2=0 THEN RESET KHR & SUM AND GO TO END OF LOOP OTHERWISE:
C        4A. A(1)=A(1)+1
C        4B. KA2=KA2+1
C        4C. IF KA2 GT A(2) THEN A(2)=KA2
C
C CO=SUM AT END
C
      DO 3900 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).NE.0) GO TO 1999
        SUM=SUM+D(I)
        KHRS=KHRS+IDT
        IF (KHRS.LT.24) GO TO 3900
        IF (ITSCAL.EQ.MEAN) SUM=SUM/NUMLOC
        KDAYS=KDAYS+1
C
        IF(IABS(KODE).EQ.2) GO TO 3200
        IF(SUM.LE.VALUE) KA2=-1
        GO TO 3400
3200    IF(SUM.GE.VALUE) KA2=-1
C
3400    KA2=KA2+1
        IF (KA2.EQ.0) GO TO 3500
        A(1)=A(1)+1.
        IF(KA2.GT.A(2)) A(2)=KA2+0.01
C
3500    SUM=0.0
        KHRS=0
3900  CONTINUE
      CO=SUM
      GO TO 5000
C
C ****   INST - ANY IDT
C
C LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND COMPUTE 24 HR MEAN
C DO THIS BY ADDING EACH D VALUE TO SUM.  NOTE: FOR INST, THE D VALUES
C AT THE 24TH HR (BOTH PREVIOUS AND CURRENT) ARE DIVIDED BY 2 AND ADDED
C INTO SUM
C
C KHRS GETS INCREMENTED BY IDT ON EACH LOOP AND THE INTERVAL IS
C COMPLETE WHEN KHRS=24.
C
C ONCE A 24 HR VALUE (SUM) IS IS COMPUTED THEN:
C     1. KDAYS GETS INCREMENTED BY 1
C     2. CHECK SUM AGAINST CRITERIA...IF NOT MET THEN KA2=-1
C     3. INCREMENT KA2 BY 1.
C     4. IF KA2=0 THEN RESET KHR & SUM AND GO TO END OF LOOP OTHERWISE:
C        4A. A(1)=A(1)+1
C        4B. KA2=KA2+1
C        4C. IF KA2 GT A(2) THEN A(2)=KA2
C
C CO=SUM AT END
C
4000  DO 4900 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).NE.0) GO TO 1999
        KHRS=KHRS+IDT
        IF (KHRS.GE.24) GO TO 4200
        SUM=SUM+D(I)
        GO TO 4900
C
4200    PARTD=D(I)/2
        IF (ABS(PARTD).LT.1.E-5) PARTD=0.0
        SUM=(SUM+PARTD)/NUMLOC
        KDAYS=KDAYS+1
C
        IF(IABS(KODE).EQ.2) GO TO 4300
        IF(SUM.LE.VALUE) KA2=-1
        GO TO 4400
4300    IF(SUM.GE.VALUE) KA2=-1
C
4400    KA2=KA2+1
        IF (KA2.EQ.0) GO TO 4500
        A(1)=A(1)+1.
        IF(KA2.GT.A(2)) A(2)=KA2+0.01
C
4500    SUM=PARTD
        KHRS=0
4900  CONTINUE
      CO=SUM
C
C MUST STORE KA2 SOMEWHERE. THERFORE DIVIDE KA2 BY 1000 AND
C STORE AS THE DECIMAL PORTION OF A(1).
C THIS TECHNIQUE ASSUMES THAT A(1) AND KA2 ARE LESS THAN 1000
C FOR 2 REASONS... 1. KA2 IS BEING DIVIDED BY 1000 AND
C 2. A REAL NUMBER GT 7 DIGITS MAY LOSE ACCURACY 
C
5000  IA1=A(1)
      A(1)=IA1+KA2/1000.
      GO TO 900
C
C MISSING DATA ENCOUNTERED
C
1999  A(1)=-999.0
      A(2)=-999.0
      CALL MDYH1(IDACC,IHACC,MO,MDAY,MYR,MHR,100,0,INTL)
      MYR=MOD(MYR,100)
      WRITE(IPR,899) TSID,TYPE,IDT,MO,MYR
899   FORMAT(1H0,45H**NOTE** EVAC08 ENCOUNTERED MISSING DATA FOR:,
     * 6H TSID=,2A4,6H TYPE=,A4,5H IDT=,I2,3X,14HINITIAL MONTH=,
     * I2,1H/,I2)
C
C ................DEBUG TIME............................................
C
900   IF (IBUG.EQ.0) GO TO 999
C
      WRITE (IODBUG,910 ) A(1),A(2),CO,KDAYS,KHRS
910   FORMAT(// 11X,10H**OUTPUT** / 1H0,7HA(1) = ,F10.4,8H A(2) = ,F8.1
     */ 1H0,9HEND CO = ,F10.2,7H KDAYS=,I5,6H KHRS=,I5)
C
C ......................................................................
C
C
C PUT ERROR TRACES BACK IN
C
999   IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
