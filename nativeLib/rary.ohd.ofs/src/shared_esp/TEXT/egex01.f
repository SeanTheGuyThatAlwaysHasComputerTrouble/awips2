C MEMBER EGEX01
C  (from old member EEGEX01)
C
      SUBROUTINE EGEX01(D,LD,TSESP,LOC,IER)
C
C ......................................................................
C
C        GENERATE SUBROUTINE #1 - GENERATE DAILY PE
C
C
C THIS ROUTINE WILL GENERATE DAILY PE VALUES FOR THE PERIOD IDA TO LDA
C AND STORE INTO D ARRAY.
C
C PE GENERATION IS DONE USING LINEAR INTERPOLATION BETWEEN THE SINGLE
C DAILY PE VALUES FOR EACH MONTH WHICH ARE STORED IN THE TSESP ARRAY.
C THESE 12 PE VALUES(1 PER MONTH) ARE ASSOCIATED WITH THE 16TH DAY
C OF THE MONTH.
C
C TSESP ARRAY HAS THE 12 PE VALUES (IN TSESP EXTERNAL LOCATION INFO).
C
C ASSUME TIME INTERVAL = 24 HRS.
C
C
C
C SUBROUTINE ORIGINALLY BY :
C   ED VANBLARGAN - HRL - OCT, 1981
C
C ......................................................................
C
C VARIABLES:
C D     = ARRAY WITH TIME SERIES VALUES
C LOCD  = LOCATION IN D ARRAY WE WANT
C TSESP = TSESP ARRAY
C LOC   = INITIAL LOCATION IN TSESP ARRAY FOR THIS TS
C LOCT  = START LOCATION (MINUS 1) IN TSESP FOR 12 MONTHLY PE VALUES
C MOC   = CURRENT MONTH
C IDAY  =   "     DAY
C IYEAR =   "     YEAR
C MOPRE = PREVIOUS MONTH
C MONEX = NEXT MONTH
C ND    = NUMBER OF DAYS IN CURRENT MONTH
C NDPRE =   "    "   "   "  PREVIOUS MONTH
C KDA   = COUNTER OF HOW MANY DAILY PE VALUES ARE GENERATED
C
C
      LOGICAL LBUG
C
      DIMENSION TSESP(1),D(1),NDAYS(12),SBNAME(2),OLDOPN(2)
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fctime'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/egex01.f,v $
     . $',                                                             '
     .$Id: egex01.f,v 1.1 1995/09/17 19:18:42 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA NAME,SBNAME/4HECPE,4HEGEX,4H01  /
      DATA NDAYS/31,28,31,30,31,30,31,31,30,31,30,31/
C
C SET UP ERROR TRACE FOR THIS SUBROUTINE IN COMMON BLK/WHERE/
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
10    CONTINUE
C
C GET TRACE LEVEL AND DEBUG
C
      IER=0
      IF (ITRACE.GE.1) WRITE(IODBUG,50)
50    FORMAT(1H0,14HEGEX01 ENTERED)
C
      LBUG=.FALSE.
      IF (IFBUG(NAME).EQ.0) GO TO 70
      LBUG=.TRUE.
C ...DEBUG
      WRITE(IODBUG,60) IDA,LDA,IDADAT,LD,LOC
60    FORMAT(1X,I5,4H=IDA,1X,I5,4H=LDA,1X,I5,7H=IDADAT,
     * 1X,I5,3H=LD,1X,I5,4H=LOC)
C
C SET VARIABLES; KDA IS A COUNTER, LOCD IS POINTER FOR D ARRAY
C
70    KDA=IDA
      LOCD=IDA-IDADAT+LD
      LOCT=LOC+15-1
C
C CALL MDYH1 TO GET MONTH (CONVERTS JULIAN DAY TO MON,DAY,YR)
C
      CALL MDYH1(IDA,24,MOC,IDAY,IYEAR,I,100,0,TZ)
C
C DETERMINE NUMBER OF DAYS IN CURRENT MONTH AND IN PREVIOUS MONTH.
C ALSO DETERMINE THE PREVIOUS AND NEXT MONTHS NUMBER (MOPRE,MONEX)
C
400   ND=NDAYS(MOC)
      IF (MOC.EQ.2 .AND. (IYEAR/4 * 4).EQ.IYEAR) ND=ND+1
C
      MOPRE=MOC-1
      IF (MOPRE.EQ.0) MOPRE=12
      NDPRE=NDAYS(MOPRE)
      IF (MOPRE.EQ.2 .AND. (IYEAR/4 * 4).EQ.IYEAR) NDPRE=NDPRE+1
C
      MONEX=MOC+1
      IF (MONEX.GT.12) MONEX=1
C
C .........DEBUG TIME......................
C
      IF(LBUG) WRITE(IODBUG,410) ND,NDPRE,MOC,MOPRE,MONEX,
     * TSESP(LOCT+MOC),TSESP(LOCT+MOPRE),TSESP(LOCT+MONEX)
410   FORMAT(1X,40H  ND NDPRE MOC MOPRE MONEX PE(C,PRE,NEX)
     * / 1X,I4,I6,I4,2I6,3(1X,F4.1))
C .................................................................
C
C GENERATE PE BY INTERPOLATION
C    INTERPOLATE BETWEEN MONTHLY VALUES TO GET DAILY PE VALUES. RULES:
C 1. IF IDAY LT 16 USE PREVIOUS AND CURRENT MONTHLY PE VALUES,
C     OTHERWISE USE CURRENT AND NEXT MONTHS PE
C 2. KDAY,IDAY AND LOCD GET INCREMENTED BY 1 FOR EACH VALUE GENERATED
C 3. STORE INTERPOLATED VALUES IN D ARRAY
C 4. IF IDAY LE ND THEN JUST LOOP BACK UP FOR NEXT INTERPOLATION,
C     IF IDAY EXCEEDS ND THEN:
C    A. IDAY=1
C    B. INCREMENT MONTH BY 1
C    C. IF MONTH IS GT 12 THEN MONTH=1 AND YEAR IS INCREMENTED BY 1
C    D. LOOP BACK UP TO CALCULATE ND FOR NEW MONTH
C 5. DROP OUT OF CALCULATIONS WHEN KDA GT LDA
C
500   IF (KDA.GT.LDA) GO TO 999
C
C IF IDAY IS 16 THEN SIMPLY USE THE STORED PE VALUE
C
      IF (IDAY.NE.16) GO TO 600
      D(LOCD)=TSESP(LOCT+MOC)
      GO TO 800
C
C USE GENERAL EQTN Y=MX+B FOR INTERPOLATION.   USE DIFFERENT VALUES
C FOR BEFORE OR AFTER 16TH DAY OF MONTH
C DENOMINATOR IN SLOPE EQTN BELOW IS ACTUALLY DERIVED FROM
C ND-16+16 WHICH SIMPLIFIES TO ND.
C
C ALSO CHECK FIRST FOR POSSIBLE UNDERFLOWS(VERY SMALL NUMERATOR)
C
600   IF (IDAY.GT.16) GO TO 700
C
      CHANG=TSESP(LOCT+MOC) - TSESP(LOCT+MOPRE)
      IF (ABS(CHANG).GT.0.00001) GO TO 610
      D(LOCD)=TSESP(LOCT+MOC)
      GO TO 800
610   X=NDPRE-16+IDAY
      B=TSESP(LOCT+MOPRE)
      SLOPE=CHANG / NDPRE
      GO TO 750
C
700   CHANG=TSESP(LOCT+MONEX) - TSESP(LOCT+MOC)
      IF (ABS(CHANG).GT.0.00001) GO TO 710
      D(LOCD)=TSESP(LOCT+MOC)
      GO TO 800
710   X=IDAY-16
      B=TSESP(LOCT+MOC)
      SLOPE=CHANG / ND
C
750   D(LOCD)= SLOPE * X + B
C
C ...........DEBUG TIME..............
C
800   IF(LBUG) WRITE(IODBUG,810) D(LOCD),LOCD,KDA,IDAY
810   FORMAT(1X,F4.1,2H=D,I6,3H=LD,I6,4H=KDA,I6,5H=IDAY)
C .................................................................
C
C INCREMENT VARIABLES AND DO CHECKS
C
      LOCD=LOCD+1
      KDA=KDA+1
      IDAY=IDAY+1
C
      IF (IDAY.LE.ND) GO TO 500
C
      IDAY=1
      MOC=MOC+1
      IF (MOC.GT.12) MOC=1
      GO TO 400
C
C SET ERROR TRACE IN CB/WHERE/ BACK THE WAY THEY WERE
C
999   IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
