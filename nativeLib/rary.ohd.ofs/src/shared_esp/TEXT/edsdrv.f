C MEMBER EDSDRV
C  (from old member EEDSDRV)
C
      SUBROUTINE EDSDRV(P,MP,A,NYRS,NBYRS,D)
C
C   THIS SUBROUTINE IS THE DRIVER FOR THE DISPLAY SUBROUTINES.
C
C   THIS SUBROUTINE WAS ORIGINALLY WRITTEN BY GERALD N. DAY .
C
      LOGICAL LBUG
C
      INCLUDE 'common/eswtch'
      INCLUDE 'common/evar'
      INCLUDE 'common/eacc'
      INCLUDE 'common/espseg'
      INCLUDE 'common/esprun'
      INCLUDE 'common/etime'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/emod'
      INCLUDE 'common/eyrwt'
C
      DIMENSION SBNAME(2),OLDOPN(2),TDSP(49),HEAD(5),VARNAM(2),P(1),A(1)
      DIMENSION TSID(2),D(1),SMNAME(2,5),RONAME(2,7),TSNAME(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/edsdrv.f,v $
     . $',                                                             '
     .$Id: edsdrv.f,v 1.1 1995/09/17 19:18:34 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA BLANK/4H    /,SIMI/4HSIM /,OBSI/4HOBS /,DEBUG/4HEACC/
      DATA SMNAME/4HUZTD,4HEF  ,4HUZFW,4HC   ,4HLZTD,4HEF  ,4HLZFS,
     1 4HC   ,4HLZFP,4HC   /
      DATA RONAME/4HTCHA,4HNINF,4HIMP-,4HRO  ,4HDIR-,4HRO  ,4HSUR-,
     1 4HRO  ,4HINTE,4HRFLO,4HSUPB,4HASE ,4HPRIM,4HBASE/
      DATA SMZC,ROCL/4HSMZC,4HROCL/
      DATA SBNAME/4HDSDR,4HV   /
      DATA DEBUG2/4HEDSP/
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
      OLDOPN(I)=OPNAME(I)
   10 OPNAME(I)=SBNAME(I)
C
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
  900 FORMAT(1H0,10X,17H** EDSDRV ENTERED)
C
      IBUG=IFBUG(DEBUG)
      IF(IBUG.NE.1) GO TO 11
      WRITE(IODBUG,905)
  905 FORMAT(1H ,10X,3HA =)
      WRITE(IODBUG,910) (A(I),I=1,LENA)
  910 FORMAT(1H ,10X,10F10.2)
   11 CONTINUE
C
      LBUG=.FALSE.
      IF(IFBUG(DEBUG2).EQ.0) GO TO 12
      LBUG=.TRUE.
   12 CONTINUE
C
C   SET FLAG WHICH INDICATES WHETHER OR NOT TO IGNORE THE
C   FIRST YEARS VALUES.
C
      ISKIP=0
      IF(JHSS.EQ.1.OR.JASS.EQ.1) ISKIP=1
      IHYRD=IHYR+ISKIP
      IBHYRD=IBHYR+ISKIP
      NYRSD=NYRS-ISKIP
      NBYRSD=NBYRS
C
C
C   ADJUST YEAR WEIGHTS SO THAT THEY SUM TO ONE
C
      IYR=ISKIP+1
      SUM=0.0
      DO 13 I=IYR,NYRS
      SUM=YRWT(I)+SUM
   13 CONTINUE
      DO 14 I=IYR,NYRS
      YRWT(I)=YRWT(I)/SUM
   14 CONTINUE
C
      IF(IYRWT.EQ.0) GO TO 15
      WRITE(IPR,600) IHYRD,LHYR
  600 FORMAT(1H0,39HTHE WEIGHTS ASSIGNED TO THE WATER YEARS,
     1 I6,1H-,I4,2X,4HARE:)
C
      WRITE(IPR,605) (YRWT(I),I=IYR,NYRS)
  605 FORMAT(10X,20F5.2)
C
   15 LOCP=0
   16 NVAR=P(LOCP+1)
      IF(NVAR.EQ.0) GO TO 999
      IPAGE=1
      NEXVAR=P(LOCP+2)
C
      NWIND=0
      DO 18 J=1,NUMWIN
      IF(JVAR(J,NVAR).NE.0) GO TO 18
      NWIND=NWIND+1
   18 CONTINUE
      IF(NWIND.EQ.0) GO TO 400
      NVAL=NVPV(NVAR)
      DO 20 I=1,2
      VARNAM(I)=P(LOCP+2+I)
   20 CONTINUE
C
      KOD=P(LOCP+5)
      KODE=IABS(KOD)
      VALUE=P(LOCP+6)
      IF(ICRIT.EQ.0) GO TO 25
      IF(NVAR.NE.IOVAR.OR.KODE.NE.KODSEG) GO TO 25
      VALUE=VALSEG
   25 CONTINUE
C
      DO 30 I=1,5
      HEAD(I)=P(LOCP+7+I)
   30 CONTINUE
C
      LOCA=P(LOCP+7)
C
C   GET UNITS FROM PESP ARRAY AND CONVERSION FACTORS FOR DATA
C
      UNITS=P(LOCP+31)
      CALL ECONVT(UNITS,UNITSD,CFACT,CONST,IER)
C
C   CONVERT VALUE TO PROPER UNITS
C
      VALUE=VALUE*CFACT+CONST
C
C
      LTDSP=1
      KOUNT=0
      LA=LOCA
      NACC=0
C
      DO 100 I=1,2
      LL=9*I+3+LOCP
      TSID(1)=P(LL+1)
      TSID(2)=P(LL+2)
      IF(TSID(1).EQ.BLANK.AND.TSID(2).EQ.BLANK) GO TO 100
      TSTYPE=P(LL+3)
      IDT=P(LL+4)
      LD=P(LL+6)
      IVALUE=P(LL+6)*100.-LD*100.+.01
      TSNAME(1)=BLANK
      TSNAME(2)=BLANK
      IF(TSTYPE.NE.SMZC) GO TO 35
      TSNAME(1)=SMNAME(1,IVALUE)
      TSNAME(2)=SMNAME(2,IVALUE)
      GO TO 40
   35 IF(TSTYPE.NE.ROCL) GO TO 40
      TSNAME(1)=RONAME(1,IVALUE)
      TSNAME(2)=RONAME(2,IVALUE)
   40 CONTINUE
      IF(P(LL+5).NE.SIMI) GO TO 60
C
C   SIMULATED TIME SERIES
C
C   CALCULATE THE NUMBER OF VALUES IN THE A ARRAY FOR THE TS.
C
      NACC=LENSIM*NWIND+NACC
C
      DO 50 K=1,3
      IF(K.EQ.1.AND.JHSS.EQ.0) GO TO 50
      IF(K.EQ.2.AND.JASS.EQ.0) GO TO 50
      TDSP(LTDSP+1)=TSID(1)
      TDSP(LTDSP+2)=TSID(2)
      TDSP(LTDSP+3)=TSTYPE
      TDSP(LTDSP+4)=IDT+.01
      TDSP(LTDSP+5)=K+.01
      TDSP(LTDSP+6)=LOCA+.01+ISKIP*NVAL
      TDSP(LTDSP+7)=TSNAME(1)
      TDSP(LTDSP+8)=TSNAME(2)
      KOUNT=KOUNT+1
      LOCA=LOCA+NYRS*NVAL*NWIND
      LTDSP=LTDSP+8
   50 CONTINUE
      GO TO 100
C
   60 IF(P(LL+5).EQ.OBSI) GO TO 62
      WRITE(IPR,610)
  610 FORMAT(1H0,10X,46H**ERROR** ILLEGAL TS TYPE STORED IN PESP ARRAY)
      CALL ERROR
      GO TO 100
   62 CONTINUE
C
C   OBSERVED TIME SERIES
C
C   CALCULATE THE NUMBER OF VALUES IN THE A ARRAY FOR THE TS.
C
      NACC=LENOBS*NWIND+NACC
C
      DO 70 K=1,2
      IF(K.EQ.2.AND.JBPS.EQ.0) GO TO 70
      TDSP(LTDSP+1)=TSID(1)
      TDSP(LTDSP+2)=TSID(2)
      TDSP(LTDSP+3)=TSTYPE
      TDSP(LTDSP+4)=IDT+.01
      TDSP(LTDSP+5)=K+3.01
      TDSP(LTDSP+7)=TSNAME(1)
      TDSP(LTDSP+8)=TSNAME(2)
      IF(K.NE.1) GO TO 65
      IF(IBHYR.LT.IHYR) GO TO 64
      TDSP(LTDSP+6)=LOCA+.01+ISKIP*NVAL
      GO TO 68
C
   64 TDSP(LTDSP+6)=LOCA+(IHYR-IBHYR)*NVAL+.01+ISKIP*NVAL
      GO TO 68
C
C   BASE PERIOD
C
   65 IF(IBHYR.LT.IHYR) GO TO 66
      TDSP(LTDSP+6)=LOCA+(IBHYR-IHYR)*NVAL+.01
      GO TO 68
C
   66 TDSP(LTDSP+6)=LOCA+.01
C
   68 KOUNT=KOUNT+1
      LTDSP=LTDSP+8
   70 CONTINUE
      LOCA=LOCA+LENOBS*NVAL*NWIND
C
  100 CONTINUE
      IF(NVAR.GT.6) GO TO 130
C
C   CONVERT VALUES IN THE A ARRAY TO THE PROPER UNITS.
C
      DO 120 K=1,NACC
      IF(IFMSNG(A(LA)).EQ.1) GO TO 110
      A(LA)=A(LA)*CFACT+CONST
  110 LA=LA+NVAL
  120 CONTINUE
C
C   LOOP THROUGH EACH WINDOW
C
  130 TDSP(1)=KOUNT+.01
      DO 300 J=1,NUMWIN
      IF(JVAR(J,NVAR).NE.0) GO TO 300
      NLOCP=LOCP+36
  150 IF(NLOCP.EQ.NEXVAR) GO TO 290
      IDSPTP=P(NLOCP)
      NUMDP=P(NLOCP+1)
      NXLOCP=NLOCP+NUMDP
      IF(JDSPS(NVAR,IDSPTP).EQ.0) GO TO 200
      NLOCP=NXLOCP
      GO TO 150
C
  200 IF(.NOT.LBUG) GO TO 205
      IP1=NLOCP
      IP2=NLOCP+NUMDP-1
      IT=8*KOUNT+1
      IF(.NOT.LBUG) GO TO 205
      WRITE(IODBUG,920) NVAR,VARNAM,J,NYRSD,NBYRSD,IHYRD,IBHYRD,KODE,
     1 VALUE,UNITSD,IPAGE
  920 FORMAT(1H0,10X,45HNVAR,VARNAM,J,NYRSD,NBYRSD,IHYRD,IBHYRD,KODE,,
     1 19HVALUE,UNITSD,IPAGE=/11X,I5,2X,2A4,6I5,F10.2,2X,A4,I5)
      WRITE(IODBUG,930) (TDSP(I),I=1,IT)
  930 FORMAT(11X,10F10.2)
      WRITE(IODBUG,930) (P(I),I=IP1,IP2)
  205 CONTINUE
C
      GO TO (210,220),IDSPTP
  210 CALL EDEX01(NVAR,HEAD,VARNAM,J,TDSP,P(NLOCP),NYRSD,NBYRSD,IHYRD,
     1 IBHYRD,YRWT(IYR),A,KODE,VALUE,UNITSD,IPAGE,D(1),D(601))
      NLOCP=NXLOCP
      IPAGE=0
      GO TO 150
  220 CALL EDEX02(NVAR,HEAD,VARNAM,J,TDSP,P(NLOCP),NYRSD,NBYRSD,IHYRD,
     1 IBHYRD,YRWT(IYR),A,KODE,VALUE,UNITSD,IPAGE,D(1),D(241),D(547))
      NLOCP=NXLOCP
      IPAGE=0
      GO TO 150
  290 IF(P(NEXVAR).EQ.0) GO TO 300
      IPAGE=2
C
C   INCREMENT POSITION IN A ARRAY FOR NEXT WINDOW
C
      DO 295 I=1,KOUNT
      LENWIN=NYRS*NVAL
      LTDSP=1+(I-1)*8
      ITYPE=TDSP(LTDSP+5)
      IF(ITYPE.GT.3) LENWIN=LENOBS*NVAL
      LOCA=TDSP(LTDSP+6)
      TDSP(LTDSP+6)=LOCA+LENWIN
  295 CONTINUE
C
  300 CONTINUE
  400 IF(NEXVAR.GE.LPESP) GO TO 999
      LOCP=NEXVAR-1
      GO TO 16
  999 CONTINUE
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
