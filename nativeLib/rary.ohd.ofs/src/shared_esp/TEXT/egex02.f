C MODULE EGEX02
C-----------------------------------------------------------------------
C
      SUBROUTINE EGEX02(D,LD,TSESP,LT,IWKLOC,MD,IDLOOP,IHZERO,IER)
C
C ......................................................................
C
C        GENERATE SUBROUTINE #2 - BLEND TIME SERIES
C
C  THIS ROUTINE GENERATES NEW TIME SERIES VALUES BY BLENDING
C  THE HISTORICAL VALUES WITH FUTURE VALUES FROM THE PROCESSED
C  DATA BASE.
C
C SUBROUTINE ORIGINALLY BY - ED VANBLARGAN - HRL - JAN,1982
C
C ......................................................................
C
C VARIABLES:
C D     = ARRAY WITH HISTORICAL(CALIBRATION) TIME SERIES VALUES
C LD    = LOCATION IN D ARRAY WHERE TIME SERIES STARTS
C LOCD  = INITIAL LOCATION IN D ARRAY WHICH WE WANT
C NDV   = NUMBER OF D VALUES USED
C IDA   = FIRST DAY
C IHZERO= CARRYOVER HOUR
C IH1   = INITIAL HOUR CORRESPONDING TO LOCD
C TSESP = TSESP ARRAY
C LT    = INITIAL LOCATION IN TSESP ARRAY FOR THIS TS
C FTSID = TIME SERIES ID (2A4) FOR THE FUTURE DATA
C IDT   = DESIRED TIME INTERVAL OF BLENDED TIME SERIES
C DIM   = DIMENSIONS OF TS
C W     = WEIGHT OF FUTURE DATA AT CURRENT HOUR
C W1    =    "    "    "     "   " TIME JT1
C W2    =    "    "    "     "   " TIME JT2
C LWP   = LENGTH OF WEIGHTING PERIOD IN HOURS
C LBP   = LENGTH OF BLEND PERIOD IN HOURS
C ITP   = INDICATOR IF TEMP OR PRECIP, 0=TEMP 1=PRECIP
C JT    = CURRENT TIME (JULIAN HOURS)
C JT1   = INITIAL TIME
C JT2   = END TIME OF WEIGHTING PERIOD (AND START TIME OF BLEND PERIOD)
C JT3   = END TIME OF BLEND PERIOD (IN JULIAN HOURS)
C NUMT  = NUMBER OF TIME PERIODS OF DATA DESIRED
C IFUTP = INDICATOR FOR FUTURE PRECIP  0=USE ALL ZEROS, 1=USE
C         DATA FROM PROCESS DATA BASE
C INIT  = INITIAL START OF BLEND LOOPS
C IEND  = END OF BLEND LOOPS
C
      CHARACTER*8 OLDOPN,FTSID
C
      DIMENSION TSESP(*),D(*)
      DIMENSION TSIDF(2)
      DIMENSION IHEAD(22)
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/etime'
      INCLUDE 'common/efutp'
      INCLUDE 'common/emod'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/eblend'
      INCLUDE 'common/egentr'
      INCLUDE 'prdcommon/pdatas'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/egex02.f,v $
     . $',                                                             '
     .$Id: egex02.f,v 1.7 2002/02/11 20:32:55 dws Exp $
     . $' /
C    ===================================================================
C
C
      IOPNUM=0
      CALL FSTWHR ('EGEX02  ',IOPNUM,OLDOPN,IOLDOP)
C
      IF (ITRACE.GE.1) WRITE(IODBUG,*) 'ENTER EGEX02'
C
      IBUG=IFBUG('EBLN')
C
      IER=0
C
C   SET CO EQUAL TO ZERO FOR FIRST MONTH OF EACH YEAR
C
      IF(IJDB.NE.(IJDLST+IHLST/24)) GO TO 100
      TSESP(LT+24)=0.0
      TSESP(LT+25)=0.0
      GO TO 110
C
C
C   CHECK IF THE BLENDING HAS BEEN COMPLETED FOR THE TIME SERIES.
C
  100 IF(IFMSNG(TSESP(LT+24)).NE.0) GO TO 999
C
  110 IDT=TSESP(LT+6)
      ITP=TSESP(LT+19)
      TSIDF(1)=TSESP(LT+20)
      TSIDF(2)=TSESP(LT+21)
      DTYPE=TSESP(LT+22)
CCC      LF1=TSESP(LT+23)
CCC      IF (IBUG.EQ.1) WRITE (IODBUG,*) ' IN EGEX02 - FROM TSESP LF1=',LF1
C
C  COMPUTE SPACE NEEDED IN THE WORK PART OF THE D ARRAY FOR FUTURE DATA
      MXBUF=1
      CALL RPRDH (TSIDF,DTYPE,MXBUF,IHEAD,NXBUF,XBUF,FTSID,
     *   ISTAT)
      IF (ISTAT.NE.0) THEN
         IF (ISTAT.EQ.1) THEN
            WRITE (IPR,721) TSIDF,DTYPE
721   FORMAT ('0**ERROR** IN EGEX02 - ',
     *   'TIME SERIES FOR IDENTIFIER ',2A4,
     *   ' AND DATA TYPE ',A4,' NOT FOUND.')
            CALL ERROR
            IER=1
            GO TO 999
            ELSE
               WRITE (IPR,722) TSIDF,DTYPE,ISTAT
722   FORMAT ('0**ERROR** IN EGEX02 - STATUS CODE FROM ROUTINE RPRDH ',
     *   'FOR TIME SERIES FOR IDENTIFIER ',2A4,
     *   ' AND DATA TYPE ',A4,' IS ',I2,'.')
               CALL ERROR
               IER=1
            ENDIF
         GO TO 999
         ENDIF
      ITX=IHEAD(2)
      CALL FDCODE (DTYPE,UNITS,DIM,MSG,NPDT,TSCALE,NADD,IERR)
      MAXDAY=IPRDMD(DTYPE)
      LWORKB=LENHED+(24/ITX)*NPDT*MAXDAY+NXBUF+LRECLT
      LF1=IWKLOC+LWORKB
      IF (IBUG.EQ.1) WRITE (IODBUG,*) ' IN EGEX02 - FROM RPRDH LF1=',LF1
C
      LF=LF1
      NWORK=MD-LF1+1
      MAXBUF=LF1-IWKLOC
C
C   CALCULATE THE JULIAN HOUR OF THE FUTURE DATA.
C
      if( igen .eq. 0) then
      	JLOCAL=FLOCAL
      else
	JLOCAL=0
      endif
cew jt1 is in internal time
      JT1=(IJDB-1)*24+IHB+NHOPDB+IDT-JLOCAL-ISHIFT

C
C   CALL THE BLEND PREPROCESSOR TO GET THE WEIGHTS AND PERIOD LENGTHS
C
      CALL EBLNPP(TSESP,LT,NWORK,IDLOOP,IHZERO,W1,W2,LWP,LBP,MAXLBP,
     1 IFIN)
C
C   CALCULATE THE LOCATION IN THE D ARRAY OF THE REGULAR DATA
C
      IH1=IHZERO+IDT
      LOCD=(IDA-IDADAT) * 24/IDT + IH1/IDT + LD - 1
      ILOCD=LOCD
C
C SET MORE VARIABLES...1ST CHECK THAT LWP AND LBP ARE NOT BOTH ZERO.
C NUMT IS DIFFERENT FOR TEMP AND PRECIP. THEREFORE CHECK ITP
C FLAG. FOR TEMP, NUMT GOES FROM JT1 TO JT2, FOR PRECIP NUMT GOES
C FROM JT1 TO JT3. ALSO NEED 1 LESS FUTD VALUE THAN D VALUE FOR PRECIP.
C
      IF (LWP.EQ.0 .AND. LBP.EQ.0) GO TO 920
      NUMT=LWP/IDT
cew   IF (ITP.EQ.1) NUMT=(LWP+LBP)/IDT-1
cew no longer use 1 less day for precip 
cew caused a problem when lbp = 0
      IF (ITP.EQ.1) NUMT=(LWP+LBP)/IDT
      JT2=JT1+LWP-IDT
      INIT=JT2
C
      IF (IBUG.EQ.1) WRITE(IODBUG,289) TSIDF,IDT,W1,W2,LWP,LBP,IFUTP,
     * ITP,JT1,JT2,IJDLST,IHLST,IJDB,IHB,NHOPDB,JLOCAL,ISHIFT,IH1,
     * LOCD,NUMT,LD,LF1
289   FORMAT(1H0,20HSET VARIABLE VALUES:
     * / 1X,2A4,I7,2F9.6,4I5 / 1X,6(2X,I8),4I5
     * / 1X,4(2X,I8))
C
C   IF NO FUTURE VALUES ARE NEEDED SKIP READ FROM PDB
C
      IF(NUMT.EQ.0) GO TO 360
C
C
C CHECK FUTURE PRECIP SWITCH TO SEE IF WE WANT TO USE FUTURE DATA
C OR USE ALL ZEROS (IFUTP=0)
C
      LF2=LF1+NUMT-1
      IF (IFUTP.EQ.1 .OR. ITP.EQ.0) GO TO 310
      DO 300 I=LF1,LF2
300   D(I)=0.0
      GO TO 360
C
C GET FUTURE DATA FROM PROCESSED DATA BASE. 1ST GET DESIRED UNITS (FOR
C BLENDED TS) FROM FDCODE. MUST THEN CHECK THE ERROR CODE, ISTAT
C
cew  set ifptr to 0 to get both future and observed data.
310   ifptr=0

      CALL FDCODE(TSESP(LT+5),UNITS,DIM,MISS,NVI,TSCAL,NADD,IER)
      LDATA=LF1+NUMT
      CALL RPRDD (TSIDF,TSESP(LT+22),JT1,IDT,NUMT,UNITS,-999.0,
     *   LDATA,D(LF1),IFPTR,MAXBUF,D(IWKLOC),ISTAT)
      ISTAT=ISTAT+1
      GO TO (360,320,315,330,335,340,345),ISTAT
C
      WRITE(IPR,312) ISTAT
312   FORMAT('0**ERROR** IN EGEX02 - STATUS CODE ',I3,' ',
     *   'RETURNED FROM ROUTINE RPRDD NOT RECOGNIZED.')
      GO TO 350
C
C   ONLY WRITE THIS WARNING THE FIRST YEAR
C
  315 IF(IDLOOP.GT.IDARUN) GO TO 360
      WRITE(IPR,316)
316   FORMAT(1H0,10X,44H**WARNING** NOT ENOUGH FUTURE DATA. MISSING ,
     * 12HVALUES USED.)
      CALL WARN
      GO TO 360
C
320   WRITE(IPR,321) TSIDF
321   FORMAT(1H0,10X,25H**ERROR** TIME SERIES ID(,2A4,12H) NOT FOUND.)
      GO TO 350
C
330   WRITE(IPR,331) IDT
331   FORMAT(1H0,10X,34H**ERROR** INVALID TIME INTERVAL = ,I2)
      GO TO 350
C
335   WRITE(IPR,336) UNITS
336   FORMAT(1H0,10X,38H**ERROR** INVALID UNITS CONVERSION TO ,A4)
      GO TO 350
C
340   WRITE(IPR,341)
341   FORMAT(1H0,10X,21H**ERROR** DAIO ERROR.)
C
  345 WRITE(IPR,346)
  346 FORMAT(1H0,10X,32H**ERROR** WORK BUFFER TOO SMALL.)
350   IER=1
      CALL ERROR
      GO TO 999
C
C ....DEBUG.......
C
360   NDV=(LWP+LBP)/IDT
      IF (IBUG.EQ.0) GO TO 400
C
      WRITE(IODBUG,370) (D(I+LOCD-1),I=1,NDV)
370   FORMAT(1X,28HHISTORICAL VALUES(D ARRAY): / 10(1X,F9.2))
C
      IF(NUMT.EQ.0) GO TO 400
      WRITE(IODBUG,375) (D(I),I=LF1,LF2)
375   FORMAT(1X,28HFUTURE VALUES(FUTD ARRAY) : / 10(1X,F9.2))
C ......................................................................
C
C ******  PART 1   ******
C
C DO 1ST PART OF THE BLEND WHICH IS THE WEIGHTING PORTION
C THIS IS THE SAME FOR PRECIP AND TEMP.  1ST CHECK THAT LWP NE 0.
C
C 1ST, CALCULATE THE SLOPE FOR INTERPOLATION SCHEME AND
C CHECK NUMERATOR FOR UNDERFLOWS. THEN LOOP THRU EACH
C TIME PERIOD TO CALCULATE A NEW WEIGHTED VALUE BY THE
C FOLLOWING STEPS:
C        1) CALCULATE WEIGHT FOR CURRENT TIME PERIOD BY INTERPOLATION.
C        2) CALCULATE NEW WEIGHTED VALUE AND INSERT IN D ARRAY.
C        3) DO 1 & 2 ABOVE FOR EACH TIME PERIOD UNTIL TIME JT2 IS
C           REACHED OR UNTIL FUTURE VALUE = -999
C           IF FUTURE VALUE= -999 THEN :
C             3A) FOR TEMP, GO TO TEMP BLENDING LOOP (PART 2)
C             3B) FOR PRECIP, JUST RETURN SINCE PRECIP BLENDING
C                 REQUIRES THE FUTURE DATA TO BE PRESENT.
C        4) IF HISTORICAL VALUE = -999 THEN WE HAVE ERROR
C
400   IF (LWP.EQ.0) GO TO 550
C
      IF(JT2.GT.JT1) GO TO 410
      OLDHST=D(LOCD)
      D(LOCD)=W1*D(LF)+(1-W1)*D(LOCD)
      LOCD=LOCD+1
      LF=LF+1
      GO TO 510
C
410   SLOPE=0.0
      IF (ABS(W2-W1).GT.1.E-4) SLOPE=(W2-W1)/(JT2-JT1)
C
      IF (IBUG.EQ.1) WRITE(IODBUG,415) SLOPE,W1,W2,JT1,JT2
  415 FORMAT(2X,39HSLOPE     W1      W2       JT1     JT2 /1X,3F8.4,2I8)
C
      DO 500 JT=JT1,JT2,IDT
        IF (IFMSNG(D(LOCD)).NE.0) GO TO 899
C
        IF (IFMSNG(D(LF)).EQ.0) GO TO 460
      TSESP(LT+24)=-999.
      IF(LOCD.EQ.ILOCD.OR.ITP.EQ.1) GO TO 900
      KHRS=JT2-JT+IDT
      TSESP(LT+17)=TSESP(LT+17)-KHRS
      LBP=LBP+KHRS
      IF(LBP.GT.MAXLBP) LBP=MAXLBP
      INIT=JT-IDT
        GO TO 510
C
460     W = SLOPE * (JT-JT1) +W1
      OLDHST=D(LOCD)
        D(LOCD) = W * D(LF) + (1.-W) * D(LOCD)
        LOCD=LOCD+1
        LF=LF+1
500   CONTINUE
C
C   CALCULATE THE CARRYOVER VALUES
C
  510 IF(MAXLBP.EQ.0) GO TO 900
      IF(ITP.EQ.1) GO TO 520
C
C   TEMPERATURE CO
C
      DEV=D(LOCD-1)-OLDHST
      DIFFD=DEV*IDT/MAXLBP
      TSESP(LT+24)=DIFFD
      TSESP(LT+25)=DEV
      GO TO 550
C
C   PRECIPITATION CO
C
  520 DIFFD=W2*IDT/MAXLBP
      TSESP(LT+24)=DIFFD
      TSESP(LT+25)=W2
C
C ******  PART 2  ******
C
C NOW DO BLENDING PORTION OF THE BLEND.
C 1ST CHECK THAT LBP NE 0 THEN SET TIMING VARIABLES.
C HAVE 2 LOOPS , ONE FOR TEMP AND ONE FOR PRECIP.
C
550   IF (LBP.EQ.0) GO TO 900
      JT2=INIT
      JT3=JT2+LBP
      INIT=INIT+IDT
cew      IEND=JT3-IDT
cew do not need to subtract off idt here
cew jt2 is the start of the first blending period
      IEND=JT3
      IF (IEND.LT.INIT) GO TO 900
      IF (ITP.EQ.1) GO TO 700
C
C TEMP BLEND
C   TWO VALUES WERE SAVED AFTER THE WEIGHTING WAS COMPLETED, THE
C   DEVIATION BETWEEN THE LAST WEIGHTED VALUE AND THE
C   CORRESPONDING HISTORICAL VALUE SPREAD OVER THE ENTIRE
C   BLEND PERIOD (DIFFD) AND THE DEVIATION. THE ADJUSTMENT TO THE
C   HISTORICAL VALUE CAN BE CALCULATED EACH TIME PERIOD AS
C   DEV-DIFFD, AND STORED AS A NEW DEVIATION.
C
C   NOTE DIFFD AND THE DEVIATION ARE STORED IN TSESP(LT+24)
C   AND TSESP(LT+25) RESPECTIVELY.
C
      DIFFD=TSESP(LT+24)
      OLDDEV=TSESP(LT+25)
      DO 650 JT=INIT,IEND,IDT
      IF(IFMSNG(D(LOCD)).NE.0) GO TO 899
      DEV=OLDDEV-DIFFD
      IF((DEV*OLDDEV).LT.0.) GO TO 920
      D(LOCD)=D(LOCD)+DEV
      LOCD=LOCD+1
      OLDDEV=DEV
  650 CONTINUE
      TSESP(LT+25)=DEV
      GO TO 900
C
C PRECIP BLEND
C
C DO THE PRECIP BLEND THE SAME AS THE WEIGHTING PROCEDURE
C (PART 1). BUT NOW THE WEIGHT IS BLENDED FROM W2(AT TIME
C JT2) TO 0 (AT TIME JT3).
C AS BEFORE, MISSING VALUES ARE AN ERROR.
C   TWO  VALUES WERE SAVED AT THE END OF THE WEIGHTING. W2 AND W2
C   SPREAD OVER LBP TO ARRIVE AT DIFFD. THE ADJUSTED WEIGHT IS THE LAST
C   WEIGHT - DIFFD. THE LAST WEIGHT IS SAVED AS CARRYOVER.
C
C   NOTE DIFFD AND THE CARRYOVER VALUE ARE STORED IN TSESP(LT+24)
C   AND TSESP(LT+25) RESPECTIVELY.
C
  700 DIFFD=TSESP(LT+24)
      W=TSESP(LT+25)
      DO 800 JT=INIT,IEND,IDT
      IF(IFMSNG(D(LOCD)).NE.0) GO TO 899
      IF(IFMSNG(D(LF)).NE.0) GO TO 920
      W=W-DIFFD
      IF(W.LE.0.) GO TO 920
      D(LOCD)=W*D(LF)+(1-W)*D(LOCD)
C
        LOCD=LOCD+1
        LF=LF+1
800   CONTINUE
      TSESP(LT+25)=W
      GO TO 900
C
C ERROR**MISSING D DATA.
C
899   WRITE(IPR,890)
890   FORMAT(1H0,10X,35H**ERROR** MISSING DATA NOT ALLOWED.)
      IER=1
      CALL ERROR
      GO TO 999
C
900   IF(IBUG.EQ.1) WRITE(IODBUG,910) (D(I+ILOCD-1),I=1,NDV)
910   FORMAT(1H0,16HWEIGHTED VALUES: / 1X,10(1X,F9.2))
C
C   CHECK IF BLEND IS FINISHED FOR THE TIME SERIES AND SET CO = -999
C
      IF(IFIN.NE.1) GO TO 999
cew changed this line from 999 to -999
  920 TSESP(LT+24)=-999.
C
999   CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
C
      RETURN
C
      END
