C MODULE EACTIM
C
C   THIS SUBROUTINE CALCULATES START AND END TIMES FOR THE
C   ACCUMULATOR.
C
C   THIS SUBROUTINE WAS WRITTEN BY GERALD N DAY.
C
      SUBROUTINE EACTIM(D,LD,A,LOCA,NVAR,IDLOOP,JWIND,NVAL,NYRS,KNTYR,
     1 TSID,DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,IHZERO,WORK,MAXW,
     2 IFLAG)
C
      INCLUDE 'common/fctime'
      INCLUDE 'common/etime'
      INCLUDE 'common/evar'
      INCLUDE 'common/esprun'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
C
      DIMENSION SBNAME(2),OLDOPN(2),D(1),A(1),TSID(2),WORK(1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/eactim.f,v $
     . $',                                                             '
     .$Id: eactim.f,v 1.2 1998/07/06 11:35:24 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA SBNAME/4HEACT,4HIM  /,ILT/2HLT/,IGT/2HGT/
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
      OLDOPN(I)=OPNAME(I)
   10 OPNAME(I)=SBNAME(I)
C
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
  900 FORMAT(1H0,17H** EACTIM ENTERED)
C
      IDL=IDLOOP
      IF(IHLST.EQ.24) IDL=IDL-1
      LA=LOCA
C
C   CALCULATE WINDOW POSITION WITHIN CURRENT LOOP
C
      KIPOS=IWJD(JWIND)-IJDLST
      KLPOS=LWJD(JWIND)-IJDLST
      CALL MDYH1(IDL,IHLST,IMONTH,IDAY,IYEAR,IHOUR,100,0,TZC)
      IDAL=IDAY
      IF(KNTYR.LE.NYRS) GO TO 15
C
C   KNTYR IS GREATER THAN NYRS
C   THIS HAPPENS WHEN A WINDOW IS GREATER THAN A YEAR LONG. 'IDLOOP' AND
C   THE POSITION PASSED IN THE A ARRAY MUST BE RESET TO CORRESPOND
C   TO THE NYR POSITION. THIS DOES NOT HAPPEN FOR THE CONDITIONAL
C   SIMULATION.
C
C   IF IDL = 2/29 AND THIS IS NOT A LEAP YEAR,
C   SET IDL = 2/28
C
      IYEAR=IYEAR-1
      IF(IMONTH.NE.2.OR.IDAY.NE.29) GO TO 12
      IF(IYEAR.EQ.(4*(IYEAR/4))) GO TO 12
      IDAL=28
   12 CALL FCTZC(100,0,TZC)
      CALL JULDA(IDL,IDUM,IMONTH,IDAL,IYEAR,IHOUR,100,0,TZC)
      LA=LA-NVAL
   15 IWDHST=IDL+KIPOS
      LWDHST=IDL+KLPOS
C
C   CHECK FOR LOCATION OF WINDOW WITHIN CURRENT RUN PERIOD
C
      CALL FDATCK(IWDHST,IWH(JWIND),LDA,LHR,ILT,ISW)
      IF(ISW.EQ.0) GO TO 400
      CALL FDATCK(LWDHST,LWH(JWIND),IDA,IHZERO,IGT,ISW)
      IF(ISW.EQ.0) GO TO 999
      IDACC=IDA
      IHACC=IHZERO
      CALL FDATCK(IWDHST,IWH(JWIND),IDA,IHZERO,IGT,ISW)
      IF(ISW.EQ.0) GO TO 20
      IDACC=IWDHST
      IHACC=IWH(JWIND)
C
C   IFLAG IS A FLAG TO INDICATE WHETHER OR NOT TO SAVE CARRYOVER,
C   (IF THE WINDOW IS LONGER THAN LDA).
C
   20 LDACC=LDA
      LHACC=LHR
      IFLAG=1
      CALL FDATCK(LWDHST,LWH(JWIND),LDA,LHR,ILT,ISW)
      IF(ISW.EQ.0) GO TO 30
      LDACC=LWDHST
      LHACC=LWH(JWIND)
      IFLAG=0
C
   30 NDAYS=IDACC-IWDHST
      NHRS=IHACC-IWH(JWIND)
      IF(NHRS.GE.0) GO TO 40
      NDAYS=NDAYS-1
      NHRS=NHRS+24
C
   40 IF(IHACC.NE.24) GO TO 50
      IHACC=0
      IDACC=IDACC+1
   50 IHACC=IHACC+IDT
      IHACC=(IHACC/IDT)*IDT
      LHACC=(LHACC/IDT)*IDT
      IF(LHACC.GT.0) GO TO 60
      LHACC=24
      LDACC=LDACC-1
   60 CALL FDATCK(IDACC,IHACC,LDACC,LHACC,IGT,ISW)
      IF(ISW.EQ.1) GO TO 400
C
      GO TO (110,120,130,140,150,160,170,180,400,400),NVAR
C
  110 CALL EVAC01(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  120 CALL EVAC02(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  130 CALL EVAC03(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  140 CALL EVAC04(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  150 CALL EVAC05(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  160 CALL EVAC06(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  170 CALL EVAC07(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
  180 CALL EVAC08(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
     1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
      GO TO 400
C 190 CALL EVAC09(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
C    1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
C     GO TO 400
C 200 CALL EVAC10(IDACC,IHACC,LDACC,LHACC,D(LD),A(LA),NDAYS,NHRS,TSID,
C    1 DTYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,WORK,MAXW)
C
  400 IF(IEPASS.EQ.3) GO TO 999
      IF(IDL.LE.IDARUN) GO TO 999
C
C   IF IDL = 2/29 AND THIS IS NOT A LEAP YEAR,
C   SET IDL = 2/28.
C
      IYEAR=IYEAR-1
      IDAL=IDAY
      IF(IMONTH.NE.2.OR.IDAY.NE.29) GO TO 410
      IF(IYEAR.EQ.(4*(IYEAR/4))) GO TO 410
      IDAL=28
  410 CALL FCTZC(100,0,TZC)
      CALL JULDA(IDL,IDUM,IMONTH,IDAL,IYEAR,IHOUR,100,0,TZC)
      LA=LA-NVAL
      GO TO 15
  999 CONTINUE
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
