C MEMBER EVAC01
C  (from old member EEVAC01)
C
      SUBROUTINE EVAC01(IDACC,IHACC,LDACC,LHACC,D,A,NDAYS,NHRS,TSID,
     * TYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,DAVG,MDAVG)
C
C ......................................................................
C
C      ACCUMULATOR 01 (MAX MEAN DAILY VALUE) SUBROUTINE
C
C THIS IS THE ACCUMULATOR SUBROUTINE FOR FINDING THE MAXIMUM MEAN
C DAILY VALUE OF THE D ARRAY FOR THIS WINDOW AND THE NUMBER OF DAYS TO
C THAT MAX.
C ......................................................................
C
C     SUBROUTINE INITIALLY WRITTEN BY
C       ED VANBLARGAN - HRL - MAY, 1981
C
C ......................................................................
C
C
C VARIABLES USED ARE:
C
C IDACC = 1ST JULIAN DAY TO BE ACCUMULATED
C IHACC = 1ST HOUR TO BE ACCM.
C LDACC = LAST JULIAN DAY TO BE ACCM.
C LHACC = LAST HOUR TO BE ACCM.
C     D = ARRAY CONTAINING TIME SERIES DATA
C     A = ACCUMULATOR ARRAY. A(1) IS MAX MEAN DAILY VAL, A(2)IS DAYS TO
C         MAX.
C NDAYS = NUMBER OF DAYS ALREADY ACCM.
C  NHRS = NUMBER OF HOURS ALREADY ACCM.
C  TSID = TIME SERIES I.D.
C  TYPE = DATA TYPE
C   IDT = TIME INTERVAL OF TIME SERIES
C    CO = CARRYOVER (VALID ONLY IF NDAYS OR NHRS IS GT 0)
C  KODE = OPTION CODE.       NOT NECESSARY FOR THIS SUBROUTINE
C VALUE = OPTION VALUE.      NOT NECESSARY FOR THIS SUBROU
C ITSCAL= TIME SCALE OF TIME SERIES
C NUMLOC= NUMBER OF D VALUES PER 24 HR INTERVAL
C LOCIN = 1ST (OR CURRENT) LOCATION IN D ARRAY
C LASTIN= LAST LOCATION WE WANT IN D ARRAY
C   SUM = HOLDS SUM (OR MEAN) OF THE D VALUES FOR CURRENT 24 HR PERIOD
C KDAYS = COUNTER OF THE NUMBER OF DAYS WE GO THRU
C  KHRS = COUNTER OF THE HOUR FOR EACH D VALUE EACH DAY.
C  DAVG = ARRAY CONTAINING THE COMPUTED MEAN DAILY VALUES.
C MDAVG = MAXIMUM DAVG ARRAY LENGTH
C ...............................................................
C
      DIMENSION SBNAME(2),OLDOPN(2),D(1),A(1),TSID(2),DAVG(1),ISUBN(2)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/evac01.f,v $
     . $',                                                             '
     .$Id: evac01.f,v 1.1 1995/09/17 19:19:17 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA MEAN,INST/4HMEAN,4HINST/
      DATA NAME,SBNAME/4HEACC,4HEVAC,4H01  /
      DATA INTL/4HINTL/
C
C
C PUT ERROR TRACES FOR THIS ROUTINE IN COMMON BLK/WHERE
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
10    CONTINUE
C
C GET TRACE LEVEL AND DEBUG CODE.
C
      IF (ITRACE.GE.1) WRITE (IODBUG,115)
115   FORMAT(1H0,14HEVAC01 ENTERED)
      IBUG=IFBUG(NAME)
C
C CHECK A(1)
C
C IF EITHER NHRS OR NDAYS IS GT 0 THEN A(1) HAS A VALID ACCM. VALUE AND
C SUM IS SET=CO. ALSO CHECK THAT A(1) IS NOT MISSING.
C OTHERWISE, A(1) IS SET = TO A VERY SMALL NUMBER(SO THAT IT LOSES OUT
C IN 1ST COMPARISON) AND SUM IS SET = TO 0.
C
      IF (NDAYS.NE.0 .OR. NHRS.NE.0) GO TO 100
      A(1)=-900000.
      SUM=-900000.
      GO TO 110
C
100   IF (IFMSNG(A(1)).NE.0) GO TO 3000
      SUM=CO
C
C SET VARIABLES
C
110   NUMLOC=24/IDT
      LOCIN = (IDACC-IDADAT)*24*NPDT/IDT + (IHACC-1)*NPDT/IDT +IVALUE
      LASTIN= (LDACC-IDADAT)*24*NPDT/IDT + (LHACC-1)*NPDT/IDT +IVALUE
C
      KDAYS=NDAYS
      KHRS=IHACC-IDT
      J=1
C
C
C ......................................................................
C
C TIME FOR DEBUG
C
      IF (IBUG.EQ.0) GO TO 290
C
      WRITE (IODBUG,210) A(1),A(2),NDAYS,NHRS
210   FORMAT(/ 1H0,27HA(1) = MAX MEAN DAILY VALUE /
     *1H0,33HA(2) = NUMBER OF DAYS TO THAT MAX // 1H0,10X,11H** INPUT **
     * / 1H0,6X,22HA(1)  A(2)  NDAYS NHRS / 1H0,F10.2,F6.0,2X,2I4)
C
      WRITE (IODBUG,220) IDACC,IHACC,LDACC,LHACC,TSID,TYPE,
     *IDT,ITSCAL,NUMLOC,LOCIN,LASTIN,CO
220   FORMAT(// 1H0,23HIDACC IHACC LDACC LHACC,6X,4HTSID,1X,
     *35HTYPE IDT ITSCAL NUMLOC LOCIN LASTIN / 1H0,
     *I5,3I6,2X,2A4,1X,A4,I4,3X,A4,I7,I6,I7 //
     *1H0,11HINPUT CO = ,F10.2)
C
C
C ......................................................................
C
C
C CHECK TO BE SURE DAVG ARRAY WILL NOT BE EXCEEDED
C
290   LIMIT=(LDACC-IDACC+1)*NPDT*NUMLOC
      IF (LIMIT.LT.MDAVG) GO TO 400
C
      WRITE(IPR,292) LIMIT,MDAVG
292   FORMAT(1H0,10X,26H**ERROR** DAVG ARRAY NEEDS,
     * I3,23H SPACES BUT MAX SIZE IS,I3)
      CALL ERROR
C
C
C CHECK FOR ONE OF THREE POSSIBLE CASES:
C   1. MEAN (OR ACCM) TIME SCALE, 24 HR. TIME INTERVAL.
C   2. MEAN (OR ACCM), OTHER THAN 24 HR. IDT
C   3. INST, ANY IDT
C
C NOTE: THE LOOP FOR CASE 2 WILL ALSO WORK FOR CASE 1 BUT CASE 1 IS
C SEPARATED SINCE IT IS MORE COMMON AND CAN BE HANDLED BY A MUCH
C SHORTER AND SIMPLER LOOP SINCE IT IS ALREADY A 24 HR. IDT.
C
C
C IN ANY CASE, IF D(CURRENT) IS MISSING, THEN A(1)=-999 AND RETURN.
C
C AT THE END OF ANY CASE, SET CARRYOVER AND GO TO DEBUG OUTPU, THEN
C RETURN.
C
400   IF (ITSCAL.EQ.INST) GO TO 1500
      IF (IDT.NE.24) GO TO 900
C
C CASE 1.   MEAN OR ACCM - 24 HR IDT
C
C SIMPLY LOOP THRU D ARRAY FROM LOCIN TO LASTIN.  KDAYS GETS INCREMENTED
C BY 1 ON EACH LOOP THRU.
C
C IF ANY D IS GT A(1) THEN:
C     1. A(1) IS SET = TO THAT D VALUE
C     2. A(2) IS SET = TO KDAYS
C
C CO =0 AT END SINCE CO IS NOT NEEDED.
C
      DO 800 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).EQ.1) GO TO 1999
        KDAYS=KDAYS+1
C
        DAVG(J)=D(I)
        J=J+1
        IF (D(I).LE.A(1)) GO TO 800
        A(1)=D(I)
        A(2)=KDAYS+0.01
C
800   CONTINUE
      CO=0.0
      GO TO 2000
C
C CASE 2.   MEAN OR ACCM - NON 24 HR IDT
C
C LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND COMPUTE 24 HR MEAN OR ACCM
C BY ADDING EACH D VALUE TO SUM UNTIL THE 24 HR INTERVAL IS COMPLETE.
C
C KHRS GETS INCREMENTED BY IDT ON EACH LOOP AND THE INTERVAL IS
C COMPLETE WHEN KHRS=24.
C
C ONCE A 24 HR VALUE (SUM) IS IS COMPUTED THEN:
C     1. KDAYS GETS INCREMENTED BY 1
C     2. CHECK IF SUM IS GT A(1). IF SO, A(1)=SUM AND A(2)=KDAYS.
C     3. RESET SUM=0 AND KHRS=0
C
C CO=SUM AT END
C
  900 IF(IHACC.EQ.IDT) SUM=0.0
      DO 1400 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).EQ.1) GO TO 1999
        SUM=SUM+D(I)
        KHRS=KHRS+IDT
        IF (KHRS.GE.24) GO TO 1100
        DAVG(J)=-999.
        GO TO 1400
C
1100    IF (ITSCAL.EQ.MEAN) SUM=SUM/NUMLOC
        KDAYS=KDAYS+1
        DAVG(J)=SUM
        J=J+1
        IF (SUM.LE.A(1)) GO TO 1200
        A(1)=SUM
        A(2)=KDAYS+0.01
C
1200    SUM=0.0
        KHRS=0
1400  CONTINUE
      CO=SUM
      GO TO 2000
C
C CASE 3.   INST - ANY IDT
C
C LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND COMPUTE 24 HR MEAN
C DO THIS BY ADDING EACH D VALUE TO SUM.  NOTE: FOR INST, THE D VALUES
C AT THE 24TH HR (BOTH PREVIOUS AND CURRENT) ARE DIVIDED BY 2 AND ADDED
C INTO SUM
C
C KHRS GETS INCREMENTED BY IDT ON EACH LOOP AND THE INTERVAL IS
C COMPLETE WHEN KHRS=24.
C
C ONCE A 24 HR VALUE (SUM) IS IS COMPUTED THEN:
C     1. KDAYS GETS INCREMENTED BY 1
C     2. CHECK IF SUM IS GT A(1). IF SO, A(1)=SUM AND A(2)=KDAYS.
C     3. RESET KHRS=0 AND SUM=D(CURRENT) / 2.
C     4. ALSO CHECK D/2 FOR POSSIBLE UNDERFLOWS.
C
C CO=SUM AT END
C
1500  DO 1900 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).EQ.1) GO TO 1999
        KHRS=KHRS+IDT
        IF (KHRS.GE.24) GO TO 1700
        SUM=SUM+D(I)
        DAVG(J)=-999.
        GO TO 1900
C
1700    PARTD=D(I)/2
        IF (ABS(PARTD).LT.1.E-5) PARTD=0.0
        SUM=(SUM+PARTD)/NUMLOC
        KDAYS=KDAYS+1
        DAVG(J)=SUM
        J=J+1
        IF (SUM.LE.A(1)) GO TO 1800
        A(1)=SUM
        A(2)=KDAYS+0.01
C
1800    SUM=PARTD
        KHRS=0
C
1900  CONTINUE
      CO=SUM
      GO TO 2000
C
C MISSING DATA ENCOUNTERED
C
1999  A(1)=-999.0
      A(2)=-999.0
      CALL MDYH1(IDACC,IHACC,MO,MDAY,MYR,MHR,100,0,INTL)
      MYR=MOD(MYR,100)
      WRITE(IPR,899) TSID,TYPE,IDT,MO,MYR
899   FORMAT(1H0,45H**NOTE** EVAC01 ENCOUNTERED MISSING DATA FOR:,
     * 6H TSID=,2A4,6H TYPE=,A4,5H IDT=,I2,3X,14HINITIAL MONTH=,
     * I2,1H/,I2)
C
C
C ...................DEBUG TIME.........................................
C
2000  IF (IBUG.EQ.0) GO TO 3000
C
      WRITE (IODBUG,2100) A(1),A(2),CO,KDAYS,KHRS
2100  FORMAT(// 1H0,10X,12H** OUTPUT ** / 1H0,29HMAX MEAN DAILY VALUE, A
     *(1) = ,F10.2 / 1H0,24HDAYS TO MAXIMUM, A(2) = ,5X,F10.2 //
     *1H0,9HEND CO = ,F10.1,7H KDAYS=,I5,6H KHRS=,I5)
C
      WRITE (IODBUG,2200)
2200  FORMAT(// 1H0,10HMEAN DAILY,4X,20HD ARRAY FOR THAT DAY /)
C
      J=0
      NDIN=LOCIN
      NDEND=(IDACC-IDADAT)*24*NPDT/IDT + (24-1)*NPDT/IDT + IVALUE
      DO 2500 I=IDACC,LDACC
        J=J+1
C
        WRITE (IODBUG,2300) DAVG(J),(D(M),M=NDIN,NDEND,NPDT)
2300    FORMAT(1H0,13F10.2 / (11X,12F10.2))
C
        NDIN=NDEND+1
        NDEND=NDEND+NUMLOC*NPDT
        IF (NDEND.GT.LASTIN) NDEND=LASTIN
2500  CONTINUE
C
C ......................................................................
C
C
C PUT ERROR TRACES BACK IN
C
3000  IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
