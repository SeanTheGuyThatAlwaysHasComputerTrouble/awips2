C MEMBER EDEX01
C
      SUBROUTINE EDEX01(NVAR,HEAD,VARNAM,IWIND,TDSP,DSP,
     X  NYRS,NBYRS,IHYRD,IBHYRD,YRWT,A,KODE,VALUE,UNITS,IPAGE,X,Y)
CC
C
C         THIS IS THE EXECUTION SUBROUTINE
C         FOR THE SUMMARY TABLE DISPLAY.
C
C
      DIMENSION ITTS(12),TDSP(1),XHD(36),YHD(36),X(12,50),
     X  YBWT(50),A(1),LOC(12),XM(12),XSD(12),XMIN(12),XMAX(12),
     X  YRWT(1),XX(50),HEAD(5),VARNAM(2),AHD1(24),AHD2(24),
     X  IMS(12),Y(12,50),YM(4),YSD(4),YSK(4),YMIN(4),YMAX(4),
     X  MEAN(2),STDEV(2),MINIMU(2),MAXIMU(2)

      CHARACTER*4  FVAL(15)
      CHARACTER*40 FMTA,FMTB
C
C
      INCLUDE 'common/etime'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/evar'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/edex01.f,v $
     . $',                                                             '
     .$Id: edex01.f,v 1.2 2000/12/19 16:04:32 jgofus Exp $
     . $' /
C    ===================================================================
C
      DATA MEAN,STDEV,MINIMU,MAXIMU/4HMEAN,4H    ,4HST D,4HEV  ,
     X  4HMINI,4HMUM ,4HMAXI,4HMUM /
      DATA FVAL/'(   ','5X, ','I4, ','9X, ','6(F1','0.1,','0.2,','0.3,',
     $          '9X) ','2A4,','3X,F','5.0,','1X) ',')   ','4X, '/
      DATA DEBUG/4HEDSP/
C
C  DEBUG TIME
C
      IF (ITRACE.GE.1) WRITE(IODBUG,170)
 170  FORMAT(1H0,14HEDEX01 ENTERED)
      IBUG=IFBUG(DEBUG)
      IF(IBUG.NE.1) GO TO 5
      WRITE(IODBUG,905) NVAR,(HEAD(I),I=1,5),(VARNAM(I),I=1,2),IWIND
  905 FORMAT(1H ,10X,I5,5A4,2A4,I5)
      N=TDSP(1)*8+1
      WRITE(IODBUG,910) (TDSP(I),I=1,N)
  910 FORMAT(1H ,10X,10F10.2)
      WRITE(IODBUG,915) NYRS,NBYRS,KODE,VALUE,IPAGE
  915 FORMAT(1H ,10X,3I5,F10.2,I5)
    5 CONTINUE
C
C  DEFINE AND INITIALIZE VARIABLES
C
      NUM=TDSP(1)
      IBASE=0
      DO 10 I=1,NUM
      II=6+8*(I-1)
      ITTS(I)=TDSP(II)
      LOC(I)=TDSP(II+1)
      IF (ITTS(I).NE.5) GO TO 10
      IBASE=1
 10   CONTINUE
      NUMB=NUM
      IF (IBASE.EQ.1) NUMB=NUMB-1
      NUM2=2*NUMB
      NUM3=3*NUMB
      NUM4=4*NUMB
C
C  CALL MAIN HEADER SUBROUTINE
C
      IF (IPAGE.EQ.0) GO TO 90
      CALL EHEAD(NVAR,HEAD,VARNAM,IWIND,TDSP,UNITS,KODE,VALUE,0)
  90  WRITE(IPR,800)
C
C  WRITE COLUMN HEADERS FOR SUMMARY TABLE
C
      JJ=1
      DO 30 J=1,NUM
      IF (ITTS(J).EQ.5) GO TO 30
      CALL EHEAD1(ITTS(J),XHD(JJ),YHD(JJ))
      JJ=3+JJ
 30   CONTINUE
      CALL EHEAD2(NVAR,NUMB,AHD1,AHD2,KODE,UNITS)
      WRITE(IPR,880)
      WRITE(IPR,940) (XHD(I),I=1,NUM3)
      WRITE(IPR,940) (YHD(I),I=1,NUM3)
      WRITE(IPR,942) (AHD1(I),I=1,NUM4)
      WRITE(IPR,944) (AHD2(I),I=1,NUM4)
      WRITE(IPR,803)
C
C
C
      DO 40 I=1,NUM2
      IMS(I)=0
 40   CONTINUE
 100  CONTINUE
      FMTA = ' '
      FMTB = ' '
C
C  MAIN LOOP FOR SINGLE-VALUED OUTPUT VARIABLES-
C  EXCLUDING BASE PERIOD TIME SERIES
C
      IF (NVPV(NVAR).EQ.2) GO TO 200
      KK=1
      DO 120 I=1,NUM
      IF (ITTS(I).EQ.5) GO TO 120
      II=LOC(I)
      CALL EDSPA(XX,A,NYRS,II,1,NVAR,IMIS,INOR)
      IF (IMIS.EQ.1.OR.INOR.EQ.1) IMS(KK)=1
      DO 110 J=1,NYRS
      X(KK,J)=XX(J)
 110  CONTINUE
      KK=KK+1
 120  CONTINUE
      CALL EMINMX(X,NUMB,NYRS,XMIN,XMAX,IMS)
      IYR=IHYRD
      IFMT=6
      IF(XMAX(1).LT.-998.) GO TO 125
      IF (XMAX(1).LT.100.) IFMT=7
      IF (XMAX(1).LT.1.) IFMT=8
  125 FMTA(1:4)=FVAL(1)
      FMTA(5:8)=FVAL(2)
      FMTA(9:12)=FVAL(3)
      FMTA(13:16)=FVAL(4)
      FMTA(17:20)=FVAL(5)
      FMTA(21:24)=FVAL(IFMT)
      FMTA(25:28)=FVAL(9)
      FMTA(29:32)=FVAL(14)
      FMTB(1:4)=FVAL(1)
      FMTB(5:8)=FVAL(2)
      FMTB(9:12)=FVAL(10)
      FMTB(13:16)=FVAL(2)
      FMTB(17:20)=FVAL(5)
      FMTB(21:24)=FVAL(IFMT)
      FMTB(25:28)=FVAL(9)
      FMTB(29:32)=FVAL(14)
      DO 130 J=1,NYRS
      WRITE(IPR,FMTA)  IYR,(X(I,J),I=1,NUMB)
      IYR=IYR+1
 130  CONTINUE
C
C          COMPUTE MOMENTS AND MIN-MAX
C          OF TIME SERIES.
C
      CALL EMOM3(X,XM,XSD,YRWT,NUMB,NYRS,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MEAN,(XM(I),I=1,NUMB)
      WRITE(IPR,FMTB) STDEV,(XSD(I),I=1,NUMB)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MINIMU,(XMIN(I),I=1,NUMB)
      WRITE(IPR,FMTB) MAXIMU,(XMAX(I),I=1,NUMB)
      GO TO 300
 200  CONTINUE
C
C  MAIN LOOP FOR OUTPUT VARIABLES WITH TWO VALUES-
C  EXCLUDING BASE-PERIOD TIME SERIES
C
      KK=1
      DO 224 I=1,NUM
      IF (ITTS(I).EQ.5) GO TO 224
      II=LOC(I)
      DO 222 J=1,2
      JJ=2*(KK-1)+J
      CALL EDSPA(XX,A,NYRS,II,J,NVAR,IMIS,INOR)
      IF (IMIS.EQ.1.OR.INOR.EQ.1) IMS(JJ)=1
      DO 220 K=1,NYRS
      X(JJ,K)=XX(K)
 220  CONTINUE
 222  CONTINUE
      KK=KK+1
 224  CONTINUE
      CALL EMINMX(X,NUM2,NYRS,XMIN,XMAX,IMS)
      IYR=IHYRD
      IFMT=6
      IF(XMAX(1).LT.-998.) GO TO 226
      IF (XMAX(1).LT.100.) IFMT=7
      IF (XMAX(1).LT.1.) IFMT=8
  226 FMTA(1:4)=FVAL(1)
      FMTA(5:8)=FVAL(2)
      FMTA(9:12)=FVAL(3)
      FMTA(13:16)=FVAL(15)
      FMTA(17:20)=FVAL(5)
      FMTA(21:24)=FVAL(IFMT)
      FMTA(25:28)=FVAL(11)
      FMTA(29:32)=FVAL(12)
      FMTA(33:36)=FVAL(13)
      FMTA(37:40)=FVAL(14)
      FMTB(1:4)=FVAL(1)
      FMTB(5:8)=FVAL(2)
      FMTB(9:12)=FVAL(10)
      FMTB(13:16)=FVAL(5)
      FMTB(17:20)=FVAL(IFMT)
      FMTB(21:24)=FVAL(11)
      FMTB(25:28)=FVAL(12)
      FMTB(29:32)=FVAL(13)
      FMTB(33:36)=FVAL(14)
      DO 230 I=1,NYRS
      WRITE(IPR,FMTA)  IYR,(X(J,I),J=1,NUM2)
      IYR=IYR+1
 230  CONTINUE
C
C          COMPUTE MOMENTS AND MIN-MAX OF TIME SERIES
C          WITH 2*NUM TIME SERIES.
C
      CALL EMOM3(X,XM,XSD,YRWT,NUM2,NYRS,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MEAN,(XM(I),I=1,NUM2)
      WRITE(IPR,FMTB) STDEV,(XSD(I),I=1,NUM2)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MINIMU,(XMIN(I),I=1,NUM2)
      WRITE(IPR,FMTB) MAXIMU,(XMAX(I),I=1,NUM2)
C
C  BASE PERIOD
C
 300  CONTINUE
      IF (IBASE.NE.1) GO TO 999
      WRITE(IPR,803)
      FNBYRS=NBYRS
      FNBYRS=1./FNBYRS
      DO 305 I=1,NBYRS
      YBWT(I)=FNBYRS
 305  CONTINUE
      CALL EHEAD1(5,XHD(1),YHD(1))
      CALL EHEAD2(NVAR,1,AHD1,AHD2,KODE,UNITS)
      WRITE(IPR,940) (XHD(I),I=1,3)
      WRITE(IPR,940) (YHD(I),I=1,3)
      WRITE(IPR,942) (AHD1(I),I=1,4)
      WRITE(IPR,944) (AHD2(I),I=1,4)
      DO 310 I=1,NUM
      IF (ITTS(I).EQ.5) GO TO 320
 310  CONTINUE
 320  IB=I
C
      IMS(1)=0
C
C  BASE PERIOD TIME SERIES FOR SINGLE-VALUED
C  OUTPUT VARIABLES
C
      IF (NVPV(NVAR).EQ.2) GO TO 400
      II=LOC(IB)
      CALL EDSPA(XX,A,NBYRS,II,1,NVAR,IMIS,INOR)
      IF (IMIS.EQ.1.OR.INOR.EQ.1) IMS(1)=1
      DO 330 J=1,NBYRS
      X(1,J)=XX(J)
 330  CONTINUE
      IYR=IBHYR
      DO 340 J=1,NBYRS
      WRITE(IPR,FMTA)  IYR,X(1,J)
      IYR=IYR+1
 340  CONTINUE
C
C          COMPUTE MOMENTS AND MIN-MAX OF BASE PERIOD
C          TIME SERIES
C
      CALL EMOM3(X,XM,XSD,YBWT,1,NBYRS,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MEAN,XM(1)
      WRITE(IPR,FMTB) STDEV,XSD(1)
      CALL EMINMX(X,1,NBYRS,XMIN,XMAX,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MINIMU,XMIN(1)
      WRITE(IPR,FMTB) MAXIMU,XMAX(1)
      GO TO 999
C
C  BASE PERIOD TIME SERIES FOR OUTPUT VARIABLES
C  WITH TWO VALUES.
C
 400  CONTINUE
      II=LOC(IB)
      DO 420 J=1,2
      CALL EDSPA(XX,A,NBYRS,II,J,NVAR,IMIS,INOR)
      IF (IMIS.EQ.1.OR.INOR.EQ.1) IMS(J)=1
      DO 410 K=1,NBYRS
      X(J,K)=XX(K)
 410  CONTINUE
 420  CONTINUE
      IYR=IBHYR
      DO 430 I=1,NBYRS
      WRITE(IPR,FMTA)  IYR,(X(J,I),J=1,2)
      IYR=IYR+1
 430  CONTINUE
C
C         COMPUTE MOMENTS AND MIN-MAX OF BASE PERIOD
C            TIME SERIES WITH NVPV=2
C
      CALL EMOM3(X,XM,XSD,YBWT,2,NBYRS,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MEAN,(XM(I),I=1,2)
      WRITE(IPR,FMTB) STDEV,(XSD(I),I=1,2)
      CALL EMINMX(X,2,NBYRS,XMIN,XMAX,IMS)
      WRITE(IPR,990)
      WRITE(IPR,FMTB) MINIMU,(XMIN(I),I=1,2)
      WRITE(IPR,FMTB) MAXIMU,(XMAX(I),I=1,2)
 999  CONTINUE
C
C
 800  FORMAT(1H0)
 803  FORMAT(1H )
 880  FORMAT(/ 5X,13HSUMMARY TABLE / 5X,13(1H*))
 940  FORMAT(19X,6(3A4,7X))
 942  FORMAT(/ 5X,5HWATER,8X,6(4A4,3X))
 944  FORMAT(5X,4HYEAR,8X,6(4A4,3X))
 990  FORMAT(1H0)
C
C
C
C
      RETURN
      END
