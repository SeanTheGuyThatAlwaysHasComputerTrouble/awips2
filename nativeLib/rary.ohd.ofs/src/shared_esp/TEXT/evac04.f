C MEMBER EVAC04
C  (from old member EEVAC04)
C
      SUBROUTINE EVAC04(IDACC,IHACC,LDACC,LHACC,D,A,NDAYS,NHRS,TSID,
     * TYPE,IDT,NPDT,ITSCAL,IVALUE,CO,KODE,VALUE,DAVG,MDAVG)
C
C ......................................................................
C
C      ACCUMULATOR 04 (CUMULATIVE VALUE) SUBROUTINE
C
C THIS IS THE ACCUMULATOR SUBROUTINE FOR FINDING THE CUMULATIVE
C  VALUE OF THE D ARRAY FOR THIS WINDOW.
C
C CAN HANDLE ANY TIME SERIES(TS) TIME SCALE BUT WAS SPECIFICALLY
C DESIGNED WITH DISCHARGE OR FLOW TS IN MIND!!
C ......................................................................
C
C     SUBROUTINE INITIALLY WRITTEN BY
C       ED VANBLARGAN - HRL - SEPT, 1981
C
C ......................................................................
C
C
C VARIABLES USED ARE:
C
C IDACC = 1ST JULIAN DAY TO BE ACCUMULATED
C IHACC = 1ST HOUR TO BE ACCM.
C LDACC = LAST JULIAN DAY TO BE ACCM.
C LHACC = LAST HOUR TO BE ACCM.
C     D = ARRAY CONTAINING TIME SERIES DATA
C     A = ACCUMULATOR ARRAY. A(1) IS CUMULATIVE VALUE.
C NDAYS = NUMBER OF DAYS ALREADY ACCM.
C  NHRS = NUMBER OF HOURS ALREADY ACCM.
C  TSID = TIME SERIES I.D.
C  TYPE = DATA TYPE
C   IDT = TIME INTERVAL OF TIME SERIES
C    CO = CARRYOVER (VALID ONLY IF NDAYS OR NHRS IS GT 0)
C  KODE = OPTION CODE.       NOT NECESSARY FOR THIS SUBROUTINE
C VALUE = OPTION VALUE.      NOT NECESSARY FOR THIS SUBROU
C ITSCAL= TIME SCALE OF TIME SERIES
C LOCIN = 1ST (OR CURRENT) LOCATION IN D ARRAY
C LASTIN= LAST LOCATION WE WANT IN D ARRAY
C NUMLOC= NUMBER OF D VALUES PER 24 HR TIME INTERVAL.
C   SUM = HOLDS SUM OF THE D VALUES AS A RUNNING TOTAL
C  DAVG = WORK SPACE ARRAY
C MDAVG = MAXIMUM DAVG ARRAY LENGTH
C ................................................................
C
      DIMENSION SBNAME(2),OLDOPN(2),D(1),A(1),TSID(2),DAVG(1),ISUBN(2)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fctime'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_esp/RCS/evac04.f,v $
     . $',                                                             '
     .$Id: evac04.f,v 1.1 1995/09/17 19:19:21 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA IACC,MEAN/4HACCM,4HMEAN/
      DATA NAME,SBNAME/4HEACC,4HEVAC,4H04  /
      DATA INTL/4HINTL/
C
C
C PUT ERROR TRACES FOR THIS ROUTINE IN COMMON BLK/WHERE
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
10    CONTINUE
C
C GET TRACE LEVEL AND DEBUG CODE.
C
      IF (ITRACE.GE.1) WRITE (IODBUG,115)
115   FORMAT(1H0,14HEVAC04 ENTERED)
      IBUG=IFBUG(NAME)
C
C SET VARIABLES
C
C
      LOCIN = (IDACC-IDADAT)*24*NPDT/IDT + (IHACC-1)*NPDT/IDT +IVALUE
      LASTIN= (LDACC-IDADAT)*24*NPDT/IDT + (LHACC-1)*NPDT/IDT +IVALUE
      NUMLOC=24/IDT
C
C
C
C ......................................................................
C
C TIME FOR DEBUG
C
      IF (IBUG.EQ.0) GO TO 290
C
      WRITE (IODBUG,210) A(1),NDAYS,NHRS
210   FORMAT(/ 11X,11H** INPUT **
     * // 1X,F10.2,5H=A(1),I5,6H=NDAYS,I5,5H=NHRS)
C
      WRITE (IODBUG,220) IDACC,IHACC,LDACC,LHACC,TSID,TYPE,
     *IDT,ITSCAL,NUMLOC,LOCIN,LASTIN,CO
220   FORMAT(// 1H0,23HIDACC IHACC LDACC LHACC,6X,4HTSID,1X,
     * 35HTYPE IDT ITSCAL NUMLOC LOCIN LASTIN
     * / 1X,I5,3I6,2X,2A4,1X,A4,I4,3X,A4,1X,2I6,I7
     * // 1X,11HINPUT CO = ,F10.2 // 1X,16HD ARRAY FOLLOWS:)
C
      WRITE(IODBUG,230) (D(I),I=LOCIN,LASTIN,NPDT)
230   FORMAT(/ 1X,12F10.2)
C
C ......................................................................
C
C
C
C CHECK A(1)
C
C IF EITHER NHRS OR NDAYS IS GT 0 THEN A(1) HAS A VALID ACCM VALUE.
C AND SUM =A(1) + ANY CO. ALSO CHECK THAT A(1) IS NOT MISSING.
C OTHERWISE, A(1) IS SET = TO 0 AND SUM=0.
C
290   IF (NDAYS.NE.0 .OR. NHRS.NE.0) GO TO 300
      A(1)=0.
      SUM=0.
      GO TO 400
C
300   IF (IFMSNG(A(1)).NE.0) GO TO 3000
      SUM=A(1)+CO
      IF(ITSCAL.NE.IACC) SUM=A(1)*NUMLOC + CO
C
C CHECK FOR ONE OF TWO POSSIBLE CASES:
C   1. MEAN OR INST TIME SERIES.
C   2. ACCM TIME SERIES.
C
C IN ANY CASE, IF D(CURRENT) IS MISSING, THEN A(1)=-999 AND RETURN.
C
C AT THE END OF ANY CASE, SET CARRYOVER AND GO TO DEBUG OUTPUT, THEN
C RETURN.
C
400   IF (ITSCAL.EQ.IACC) GO TO 1500
C
C CASE 1.   MEAN OR INST TIME SERIES.
C
C LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND ADD EACH D VALUE INTO
C SUM.
C
C AT END OF LOOP THEN:
C  1. CHECK FOR MEAN OR INST TIME SCALE.
C  2. FOR INST A. CO= 1/2 LAST D VALUE
C              B. SUM =SUM - LAST D VALUE + CO
C  3. FOR MEAN, CO=0.
C  4. FOR BOTH, CONVERT TO VOLUME BY DIVIDING SUM BY NUMLOC TO
C     STANDARDIZE EVERYTHING INTO UNITS OF A DAY.
C
      DO 1000 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).EQ.1) GO TO 1999
        SUM=SUM+D(I)
        J=I
C
1000  CONTINUE
C
      IF (ITSCAL.EQ.MEAN) GO TO 1100
      CO=0.5*D(J)
        IF (ABS(CO).LT.1.E-5) CO=0.0
      SUM=SUM-D(J)+CO
      GO TO 1200
C
1100  CO=0.0
C
1200  A(1)=SUM/NUMLOC
      GO TO 2000
C
C CASE 2.   ACCM TIME SERIES
C
C SIMPLY LOOP THRU D ARRAY FROM LOCIN TO LASTIN AND ADD IN EACH
C D VALUE INTO A(1).
C
C
C CO =0 AT END SINCE CO IS NOT NEEDED.
C
1500  DO 1800 I=LOCIN,LASTIN,NPDT
        IF (IFMSNG(D(I)).EQ.1) GO TO 1999
        A(1)=A(1)+D(I)
C
1800  CONTINUE
C
      CO=0.0
      GO TO 2000
C
C MISSING DATA ENCOUNTERED
C
1999  A(1)=-999.0
      CALL MDYH1(IDACC,IHACC,MO,MDAY,MYR,MHR,100,0,INTL)
      MYR=MOD(MYR,100)
      WRITE(IPR,899) TSID,TYPE,IDT,MO,MYR
899   FORMAT(1H0,45H**NOTE** EVAC04 ENCOUNTERED MISSING DATA FOR:,
     * 6H TSID=,2A4,6H TYPE=,A4,5H IDT=,I2,3X,14HINITIAL MONTH=,
     * I2,1H/,I2)
C
C
C ..................DEBUG TIME.........................................
C
2000  IF (IBUG.EQ.0) GO TO 3000
C
      WRITE (IODBUG,2100) A(1),CO,SUM
2100  FORMAT(// 1H0,10X,12H** OUTPUT **
     * / 1X,6HA(1) = ,F10.2 / 1X,9HEND CO = ,F10.2,5H SUM=,F10.2)
C
C ......................................................................
C
C
C PUT ERROR TRACES BACK IN
C
3000  IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
