C MODULE QWRITS
C-----------------------------------------------------------------------
C
C  ROUTINE QWRITS WRITES THE TIME SERIES DATA TO A TEMPORARY FILE.
C
C  ORIGINALLY CODED BY DEBBIE VAN DEMARK - 9/20/84
C
C------------------------------------------------------------------
C
C  INPUT ARGUMENTS:
C     LUTMP  - TEMPRRORAY FILE NUMBER
C     STAID  - STATION IDENTIFIER
C     DESCRP - STATION DESCRIPTION
C     STATE  - STATE
C     ODTYPE - OUTPUT DATA TYPE
C     UNITOT - OUTPUT DATA UNITS
C     INTVAL - TIME INTERVAL
C     NSTEP  - NUMBER OF DATA VALUES
C     NDEC   - NUMBER OF DECIMAL PLACES DESIRED IN PRINTOUT
C     TSDAT  - ARRAY CONTAINING TIME SERIES DATA
C
C  OUTPUT ARGUMENTS:
C     NWRTS  - NUMBER OF TIME SERIES WRITTEN (HAS A VALUE ON INPUT)
C
C-----------------------------------------------------------------------
C
      SUBROUTINE QWRITS (LUTMP,STAID,DESCRP,STATE,ODTYPE,UNITOT,
     $   INTVAL,NSTEP,NDEC,NWRTS,TSDAT)
C
      CHARACTER*4 STATE,ODTYPE,UNITOT
      CHARACTER*4 UNITM,UNITE,DUNIT,DIMM
      CHARACTER*8 STAID,OLDOPN
      CHARACTER*20 DESCRP,STRNG
      DIMENSION TSDAT(*)
C      
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/pptime'
      INCLUDE 'common/qprint'
      INCLUDE 'common/pudbug'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_rrs/RCS/qwrits.f,v $
     . $',                                                             '
     .$Id: qwrits.f,v 1.7 2002/02/11 20:38:03 dws Exp $
     . $' /
C    ===================================================================
C
C
      IOPNUM=-3
      CALL FSTWHR ('QWRITS  ',IOPNUM,OLDOPN,IOLDOP)
C      
      IF (IPTRCE.GT.1) WRITE (IOPDBG,*) 'ENTER QWRITS'
C      
      IBUG=IPBUG('QWRT')
C
C FIRST SET UP POINTERS AND VARIABLES
C  INITS  - FIRST LOCATION IN TSDAT TO WRITE (=1 UNLESS IPLSTD NE 0)
C  NUMR   - NUMBER OF REGULAR VALUES
C  NPER   - NUMBER OF PERIODS IN A DAY
C  NPRLDA - NUMBER OF PERIODS OF REGULAR VALUES IN LASTCMPDAY
      NPER=24/INTVAL
      INITS=1
      NPRLDA=LHRCPD/INTVAL
      NUMR=(LDACPD-IDARUN)*NPER+NPRLDA
      IF (IPLSTD.NE.0) THEN
         NPRLDA=NPRLDA+NPER
         INITS=NUMR-NPRLDA+1
         NUMR=NPRLDA
         ENDIF
C
      IF (IBUG.GT.1) THEN
         WRITE (IOPDBG,*)
     $      ' IDARUN=',IDARUN,
     $      ' LDARUN=',LDARUN,
     $      ' LDACPD=',LDACPD,
     $      ' LHRCPD=',LHRCPD,
     $      ' NSTEP=',NSTEP,
     $      ' INITS=',INITS,
     $      ' NUMR=',NUMR,
     $      ' NPER=',NPER,
     $      ' NPRLDA=',NPRLDA,
     $      ' IPLSTD=',IPLSTD,
     $      ' METRIC=',METRIC,
     $      ' '
         WRITE (IOPDBG,130) (TSDAT(ICOUNT),ICOUNT=1,NSTEP)
         ENDIF
C
C  VARIABLES USED TO SET HOW DATA IS PRINTED ARE:
C   LENGTH - MAXIMUM FORMAT FIELD LENGTH NEEDED BY DATA IN TSDAT
C   MSG    - MISSING DATA INDICATOR:
C             0=NONE
C             1=TRAILING MSG
C             2=EMBEDDED MSG
C   NUMVAL - NUMBER OF DATA VALUES WITHOUT TRAILING BLANKS
C   CONVT  - METRIC CONVERSION FACTOR
C
C  LOOP THRU TSDAT TO:
C   1. IF VALUE IS MISSING SET MISSING FLAG TO YES (MSG=1)
C      AND LOOP TO NEXT VALUE - OTHERWISE IF THERE WAS A
C      MISSING VALUE PREVIOUSLY THEN SET MSG=2 TO INDICATE
C      AN IMBEDDED MISSING VALUE IN THE TIME SERIES.
C   2. DETERMINE NUMVAL (THE POINTER TO LAST NONMISSING VALUE)
C   3. DETERMINE VALMAX (MAXIMUM DATA VALUE)
      VALMAX=-99999.
      NUMVAL=0
      MSG=0
      INEG=0
      DO 30 ICOUNT=INITS,NSTEP
         IF (IFMSNG(TSDAT(ICOUNT)).EQ.0) GO TO 20
            IF (MSG.EQ.0) MSG=1
            GO TO 30
20       NUMVAL=ICOUNT-INITS+1
         IF (MSG.EQ.1) MSG=2
         VALUE=TSDAT(ICOUNT)
         RADD=0.5
         IF (IBUG.GT.1) WRITE (IOPDBG,*) 'VALUE=',VALUE
         IF (VALUE.LT.0.0) THEN
            VALUE=ABS(VALUE)+RADD
            INEG=1
            IF (IBUG.GT.1) WRITE (IOPDBG,*) 'VALUE=',VALUE
            ELSE
               VALUE=VALUE+RADD
               IF (IBUG.GT.1) WRITE (IOPDBG,*) 'VALUE=',VALUE
            ENDIF
         VALMAX=AMAX1(VALUE,VALMAX)
         IF (IBUG.GT.1) WRITE (IOPDBG,*) 'VALMAX=',VALMAX
30       CONTINUE
C
C  CHECK IF ALL DATA ARE MISSING
      IF (NUMVAL.EQ.0) GO TO 80
C      
C CHECK IF NEED TO FILL PART OF LAST DAY WITH MISSING
      IF (MOD(NUMVAL,NPER).NE.0) THEN
         NUMVAL=NUMVAL+NPER-MOD(NUMVAL,NPER)
         DO 40 I=NSTEP+1,NUMVAL
            TSDAT(I)=-999.0
40          CONTINUE            
         MSG=2
         ENDIF
C
      CONVT=1.00
      DUNIT=UNITOT
C            
C  CHECK IF NEED TO CONVERT DATA UNITS
      IF (METRIC.EQ.0) GO TO 70
C      
C  GET THE DATA UNITS IN METRIC
      CALL FDCODE (ODTYPE,UNITM,DIMM,MSNG,NPDT,TSCALE,NUMADD,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,110) ISTAT,ODTYPE
         CALL WARN
         GO TO 70
         ENDIF
C         
C  GET THE CONVERSION FACTORS FROM FCONVT
      CALL FCONVT (UNITM,DIMM,UNITE,CONVT,ADD,ISTAT)
      IF (ISTAT.NE.0) THEN
         WRITE (IPR,120) ISTAT,UNITM,DIMM
         CALL WARN
         GO TO 70
         ENDIF
C         
C  CONVERT VALMAX
      VALMAX=VALMAX/CONVT
      DUNIT=UNITM
C      
C  DETERMINE NUMBER OF CHARACTERS IN LARGEST DATA VALUE
70    MAXVAL=VALMAX+0.01
      MSTRNG=LEN(STRNG)
      CALL UINTCH (MAXVAL,MSTRNG,STRNG,LSTRNG,ISTAT)
      IF (INEG.EQ.1) LSTRNG=LSTRNG+1
C
C  CHECK IF THERE WERE IMBEDDED -999 (MSG=2)
      IF (MSG.EQ.2.AND.LSTRNG.LT.4) LSTRNG=4
C
C  ADD NDEC AND 1 FOR DECIMAL POINT
      LENGTH=LSTRNG+NDEC+1
C
C  WRITE TIME SERIES INFORMATION TO TEMPORARY FILE - USE NUMVAL INSTEAD 
C  OF NSTEP IN CALL TO QPRTTS TO CUT OFF ANY TRAILING STRINGS OF MISSING
C  VALUES
      WRITE (LUTMP) STAID,DESCRP,STATE,ODTYPE,DUNIT,INTVAL,NUMVAL,NUMR,
     $ CONVT,NDEC,LENGTH,(TSDAT(ICOUNT+INITS-1),ICOUNT=1,NUMVAL)
      NWRTS=NWRTS+1
C
      IF (IBUG.GT.0) WRITE (IOPDBG,*)
     $   ' STAID=',STAID,
     $   ' DESCRP=',DESCRP,
     $   ' STATE=',STATE,
     $   ' ODTYPE=',ODTYPE,
     $   ' DUNIT=',DUNIT,
     $   ' INTVAL=',INTVAL,
     $   ' NUMVAL=',NUMVAL,
     $   ' NUMR=',NUMR,
     $   ' CONVT=',CONVT,
     $   ' NDEC=',NDEC,
     $   ' LENGTH=',LENGTH,
     $   ' MAXVAL=',MAXVAL,
     $   ' NWRTS=',NWRTS,
     $   ' '
C
80    CALL FSTWHR (OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      IF (IPTRCE.GT.1) WRITE (IOPDBG,*) 'EXIT QWRITS'
C
      RETURN
C
110   FORMAT ('0**WARNING** STATUS CODE OF ',I2,' ',
     $   'WAS RETURNED FROM ROUTINE FCONVT WHEN CALLED WITH ',
     $   'DATA TYPE CODE ',A,'.')
120   FORMAT ('0**WARNING** STATUS CODE OF ',I2,' ',
     $   'WAS RETURNED FROM ROUTINE FCONVT WHEN CALLED WITH ',
     $   'UNITM=',A,'AND DIMM=',A,'.')
130   FORMAT (' TSDAT ARRAY:' / (1X,13F10.2))
C
      END
