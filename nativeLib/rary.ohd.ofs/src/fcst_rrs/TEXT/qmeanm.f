C MODULE QMEANM
C-----------------------------------------------------------------------
C
C  ROUTINE QMEANM CONVERTS TIME SERIES (WITH MISSING) INTO A TIME 
C  SERIES WITH NO MISSING.
C
C  ORIGINALLY CODED BY DEBBIE VAN DEMARK - 6/7/84
C
C-----------------------------------------------------------------------
C
C  INPUT ARGUMENTS:
C        STAID - STATION ID
C        DTYPE - DATA TYPE CODE
C       UNITOT - OUTPUT DATA UNITS
C       NCOUNT - NUMBER OF DATA VALUES FROM PPDB
C                 0 = ALL TSDAT ARE MISSING
C       LWKBUF - LENGTH OF ARRAY IWKBUF
C       IWKBUF - TIME SERIES WORK ARRAY
C       INTVAL - TIME INTERVAL
C       INTERP - INTERPOLATION OPTION:
C                 0 = LINEAR INTERPOLATE
C                 1 = RETAIN THE PREVIOUS OBSERVATION
C        EXTRP - RECESSION CONSTANT
C        NSTEP - NUMBER OF DATA POINTS
C
C  OUTPUT ARGUMENTS:
C        TSDAT - TIME SERIES DATA ARRAY
C
C-----------------------------------------------------------------------
C
      SUBROUTINE QMEANM (STAID,DTYPE,INTVAL,UNITOT,NCOUNT,
     $   LWKBUF,IWKBUF,INTERP,EXTRP,TSDAT,NSTEP,IER)
C     
      DIMENSION TSDAT(1),IWKBUF(LWKBUF),STAID(2)
      DIMENSION OLDOPN(2)
C      
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/pptime'
      INCLUDE 'prdcommon/pdatas'
      INCLUDE 'common/fctim2'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_rrs/RCS/qmeanm.f,v $
     . $',                                                             '
     .$Id: qmeanm.f,v 1.4 1999/07/06 15:56:42 page Exp $
     . $' /
C    ===================================================================
C
C
      RMISS=-999.
      NUM=1
      IER=0
C
C  LOCTS IS THE POINTER FOR THE TSDAT ARRAY
C
      LOCTS=2
      PREOBS=TSDAT(1)
C
      IF (IPTRCE.GT.0) WRITE(IOPDBG,150)
      IOPNUM=-3
      CALL FSTWHR('QMEANM   ',IOPNUM,OLDOPN,IOLDOP)
      IBUG=IPBUG(4HQMEM)
      IF (IBUG.GT.0) WRITE(IOPDBG,170) STAID,DTYPE,IDSRUN,
     $   INTVAL,NUM,RMISS,LWKBUF,IFUT,UNITOT,NSTEP
      IF (IBUG.GT.0) WRITE(IOPDBG,180) (TSDAT(I),I=1,NSTEP)
C
C FIRST STEP IS TO GET INITIAL VALUE (PREOBS)
C
C SEE IF 1ST VALUE IS MISSING
C
      IF (IFMSNG(PREOBS).EQ.0) GO TO 40
C
C GET INITIAL VALUE FROM PDB
C WANT PDB VALUE THAT IS 1 TIMESTEP BACK FROM 1ST TS VALUE TO BE
C ESTIMATED.
C ALSO CALL MDYH2 TO CONVERT DATE FROM JULIAN
C
      JHOUR = IDSRUN
      IDA=JHOUR/24+1
      IHR=MOD(JHOUR,24)
      CALL MDYH2(IDA,IHR,IM,ID,IY,IH,NZXXX,NDXXX,INPTZC)
C
C MUST CONSIDER OFFSET FOR PDB
C
      JHOUR=JHOUR+NHOPDB
      LPREOBS=1
      CALL RPRDD (STAID,DTYPE,JHOUR,INTVAL,NUM,UNITOT,RMISS,
     $   LPREOBS,PREOBS,IFUT,LWKBUF,IWKBUF,ISTAT)
C
C CHECK ISTAT AND PREOBS
C IF ISTAT=0 AND PREOBS IS NOT MISSING THEN GO AHEAD TO INTERPOLATE
C IF ISTAT=2 THEN PREOBS FROM PDB IS MISSING SO GO AHEAD TO EXTRAPOLATE
C    BACKWARDS. ALSO GO AHEAD IF ISTAT=0 AND PREOBS IS MISSING.
C IF ISTAT OTHER THAN 0 OR 2 THEN DO ERROR FROM QSRPRD
C
      LOCTS=1
      IF (IFMSNG(PREOBS).EQ.0 .AND. ISTAT.EQ.0) GO TO 40
      IF (ISTAT.EQ.2) GO TO 10
      IF (IFMSNG(PREOBS).EQ.1 .AND. ISTAT.EQ.0) GO TO 10
      CALL QSRPRD (ISTAT,STAID,DTYPE,JHOUR,INTVAL,
     $   NUM,UNITOT,RMISS,LWKBUF,LPREOBS)
      IER=1
      GO TO 140
C
C COMES HERE TO EXTRAPOLATE BACK WHEN FIRST VALUES EITHER IN
C PDB OR TSDAT ARE MISSING.  SO GO THRU AND FIND FIRST NONMISSING
C VALUE TO WORK BACK FROM.  IF ALL ARE MISSING GIVE ERROR.
C
10    CONTINUE
C
C FIND FIRST NONMSG
C
      DO 20 I=1,NSTEP
      OB1ST=TSDAT(I)
      LFIRST=I
      IF (IFMSNG(OB1ST).EQ.0) GO TO 30
20    CONTINUE
C
C  ALL ARE MISSING SO TIME SERIES CAN NOT BE FILLED. CALL IT AN ERROR.
C
      WRITE(IPR,160) STAID,DTYPE,IM,ID,IH,INPTZC
      CALL ERROR
      IER=1
      GO TO 140
C
C  NOW HAVE FIRST NONMSG OBS, SO EXTRAPOLATE BACK TO FIRST TIME PERIOD.
C
30    CONTINUE
C
C  SET THE NUMBER OF PERIODS TO FILL (MAKING IT NEGATIVE TELLS
C   QEXTRP THAT THIS IS A BACKWARD EXTRAPOLATION)
C
      LASTMG = -(LFIRST-1)
      CALL QEXTRP (OB1ST,EXTRP,INTVAL,TSDAT(1),LASTMG)
C
      PREOBS=TSDAT(LFIRST)
      LOCTS=LFIRST+1
      IF (LFIRST.EQ.NSTEP) GO TO 140
C
C NOW TIME TO ESTIMATE MISSING VALUES BY INTERPOLATION
C
40    IF (INTERP.EQ.0) GO TO 60
C
C  RETAIN PREVIOUS VALUE.
C
      DO 50 I=LOCTS,NSTEP
      IF (IFMSNG(TSDAT(I)).EQ.1) TSDAT(I)=PREOBS
      PREOBS=TSDAT(I)
50    CONTINUE
      GO TO 140
C
C  IF NO DATA FROM PPDB THEN EXTAPOLATE
C
60    IF (NCOUNT.EQ.0) GO TO 130
70    CONTINUE
C
C  FIND LOCATION OF NEXT MISSING VALUE
C
      DO 80 I=LOCTS,NSTEP
      LNEXM=I
      IF (IFMSNG(TSDAT(I)).EQ.1) GO TO 90
      PREOBS=TSDAT(I)
80    CONTINUE
      GO TO 140
C
C  FIND LOCATION OF NEXT OBS
C
90    LPREOB=LNEXM-1
      LOCTS=LNEXM
      DO 100 I=LOCTS,NSTEP
      LNEXOB=I
      OBSNEX=TSDAT(LNEXOB)
      IF (IFMSNG(OBSNEX).EQ.0) GO TO 110
100   CONTINUE
C
C  MUST EXTRAPLOATE REST OF DATA
C
      GO TO 130
C
C  NOW INTERPPOLATE
C
110   SLOPE=OBSNEX-PREOBS
      IF (ABS(SLOPE).GT.0.001) SLOPE=SLOPE/(LNEXOB-LPREOB)
      LOCTS=LNEXOB-1
      DO 120 I=LNEXM,LOCTS
      TSDAT(I)=SLOPE*(I-LPREOB)+PREOBS
120   CONTINUE
C
C  END OF INTERPOLATION
C
      LOCTS=LNEXOB+1
      IF (LOCTS.GE.NSTEP) GO TO 140
      GO TO 70
C
C EXTRAPOLATE
C
130   CONTINUE
      NTIMES = NSTEP - LOCTS + 1
      CALL QEXTRP (PREOBS,EXTRP,INTVAL,TSDAT(LOCTS),NTIMES)
C
C  WE'RE FINISHED. DO SOME DEBUG IF SO DESIRED.
C
140   CONTINUE
      IF (IBUG.GT.0) WRITE(IOPDBG,180) (TSDAT(I),I=1,NSTEP)
      IF (IER.NE.0) WRITE(IPR,200)
      CALL FSTWHR(OLDOPN,IOLDOP,OLDOPN,IOLDOP)
      IF (IPTRCE.GT.0) WRITE(IOPDBG,190)
C
150   FORMAT('0*** ENTER QMEANM')
160   FORMAT('0**ERROR** DATA FOR STATION ',2A4,' AND DATA TYPE ',A4,
     $ ' WERE MISSING FOR ENTIRE RUN PERIOD AS WAS THE PREVIOUS'
     $ /1X,'TIME SERIES VALUE FOR',I3,'-',I2,I3,A4,
     $ '. TIME SERIES CANNOT BE GENERATED.')
170   FORMAT(1H0,'STAID,DTYPE,IDSRUN,INTVAL,',
     $ 'NUM,RMISS,LWKBUF,IFUT,UNITOT' / 1X,2A4,1X,A4,
     $ I8,2I4,F7.0,2I4,1X,A4,I5)
180   FORMAT(1X,10F10.1)
190   FORMAT('0*** EXIT QMEANM')
200   FORMAT(1X,'PROCESSING WILL CONTINUE WITH NEXT DATA TYPE')
      RETURN
      END
