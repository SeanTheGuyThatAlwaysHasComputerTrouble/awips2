C MODULE QOVLAP
C-----------------------------------------------------------------------
C
C  ROUTINE QOVLAP REMOVES OVERLAPPING PERIODS IN MEAN DATA.
C
C  ORIGINALLY CODED BY DEBBIE VAN DEMARK - 5/18/84
C  MODIFIED BY ED VANBLARGAN - 7/1985 TO MAKE POWER WAVE DIST WORK
C  MODIFIED BY JOE OSTROWSKI - 1/1989:
C    RESET LOCATION IN WORK ARRAY TO START WRITING DATA TO THE
C    EARLIEST OF THE START OF RUN OR THE OBSERVATION TIME MINUS
C    THE RUN PERIOD.  THIS WILL PROPERLY COMPUTE HOURLY AVERAGES
C    FOR THE SITUATION WHERE AN OBS IS MADE WITHIN THE RUN PERIOD,
C    BUT THE PERIOD OF DATA EXTENDS BEFORE THE START OF THE RUN.
C
C-----------------------------------------------------------------------
C
C  INPUT ARGUMENTS
C
C       STAID - STATION IDENTIFIER
C       DTYPE - DATA TYPE CODE
C         OBS - OBSERVED DATA ARRAY
C      NCOUNT - NUMBER OF OBSERVATION * NUMBER OF VALUES PER OBSERVATION
C      IFHOUR - HOUR OF FIRST VALUE IN OBS ARRAY
C        LOBS - LENGTH OF OBS
C        WORK - HOURLY WORK ARRAY
C       LWORK - LENGTH OF WORK
C      IPOINT - POINTER ARRAY
C      LPOINT - LENGTH OF POINTER ARRAY
C        QMIN - LEVEL BELOW WHICH DISTRIBUTION FACTORS ARE USED
C       QDIST - DISTRIBUTION FACTORS
C      INTVAL - TIME INTEVAL OF DATA TO BE WRITTEN
C       AINIT - VALUE USED TO INITIALIZE AND WORK ARRAY
C        IERR - ERROR INDICATOR
C
C-----------------------------------------------------------------------
C
      SUBROUTINE QOVLAP (STAID,DTYPE,OBS,IOBS,NCOUNT,IFHOUR,LOBS,
     $   WORK,LWORK,LPOINT,IPOINT,QMIN,QDIST,INTVAL,AINIT,IERR)
C     
      CHARACTER*8 OPNOLD
C 
      DIMENSION STAID(2)    
      DIMENSION OBS(LOBS),IOBS(LOBS),WORK(LWORK),IPOINT(LPOINT) 
      DIMENSION QDIST(1)
C      
      INCLUDE 'common/ionum'
      INCLUDE 'common/pudbug'
      INCLUDE 'common/pptime'
      INCLUDE 'common/fctim2'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_rrs/RCS/qovlap.f,v $
     . $',                                                             '
     .$Id: qovlap.f,v 1.4 2000/03/14 12:28:32 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (IPTRCE.GT.1) WRITE (IOPDBG,*) 'ENTER QOVLAP'
C
      IBUG=IPBUG('QOVL')
C
      IOPNUM=-3
      CALL FSTWHR ('QOVLAP  ',IOPNUM,OPNOLD,IOLDOP)
C
      IERR=0
C
      MAXWRT=0
      NUMOBS=NCOUNT/3
C
C  INITIALIZE THE POINTER ARRAY
      DO 10 I=1,LPOINT
         IPOINT(I)=0
10       CONTINUE
C
C  FILL POINTER ARRAY WITH THE POSITION IN THE OBS ARRAY OF THE
C  DATA VALUES IN ORDER - OBSERVATIONS WITH SHORTER OBSERVATION PERIODS 
C  COME FIRST - IF OBSERVATION PERIODS ARE THE SAME THE OBSERVATION WITH
C  THE LATER OBSERVATION TIME COMES BEFORE AN EARLIER ONE
      J=0
      DO 50 I=3,NCOUNT,3
         J=J+1
         IF (J.GT.LPOINT) THEN
            WRITE (IPR,190) STAID,DTYPE,'POINTER',LPOINT
	    CALL ERROR
            IERR=1
            GO TO 175
	    ENDIF
C     CHECK IF FIRST OBSERVATION
         IF (I.EQ.3) GO TO 40 
C     IF THE OBSERVATION PERIOD IS LONGER THAN THE PREVIOUS ONE 
C     AND THE OBSERVATION TIME IS LATER FOR OBS WITH THE SAME PERIOD
C     WRITE THE CURRENT OBSERVATION NUMBER TO THE POINTER ARRAY
         K=1
20       IF (IOBS(I).EQ.IOBS(IPOINT(J-K)+2).AND.
     $       IOBS(I-2).LT.IOBS(IPOINT(J-K))) GO TO 40
         IF (IOBS(I).EQ.IOBS(IPOINT(J-K)+2).AND.
     $       IOBS(I-2).GT.IOBS(IPOINT(J-K))) GO TO 30
         IF (IOBS(I).GT.IOBS(IPOINT(J-K)+2).AND.K.GT.1) GO TO 50
         IF (IOBS(I).GT.IOBS(IPOINT(J-K)+2)) GO TO 40
30       IPOINT(J-(K-1))=IPOINT(J-K)
         IPOINT(J-K)=I-2
         IF (J-K.EQ.1) GO TO 50
            K=K+1
            GO TO 20
40       IPOINT(J)=I-2
50       CONTINUE
C
      IF (IBUG.GT.0) THEN
         WRITE (IOPDBG,*) 'VALUES IN POINTER ARRAY:'
         WRITE (IOPDBG,210) (IPOINT(I),I=1,NUMOBS)
	 ENDIF
C
C  DETERMINE WHERE IN THE WORK ARRAY TO START WRITING VALUES - THE
C  FIRST HOURLY VALUE CAN BE SHIFTED BACKWARD IF AN OBSERVATION IS
C  IS MADE WITHIN THE RUN PERIOD BUT THE PERIOD OF THE DATA PUSHES
C  THE FIRST HOURLY VALUE BACK BEFORE THE START OF THE RUN
      DO 60 J=1,NUMOBS
         IBEG=IOBS(IPOINT(J))-IOBS(IPOINT(J)+2)-NHOPDB
         IFHOUR=MIN0(IFHOUR,IBEG)
60       CONTINUE
C
      IFIRST=MIN0(IFHOUR,IDSRUN)
C
C  GET THE VALUES FROM THE OBSERVED DATA ARRAY
      DO 150 I=1,NUMOBS
         ITIME=IOBS(IPOINT(I))-NHOPDB
         DATA=OBS(IPOINT(I)+1)
         IPERD=IOBS(IPOINT(I)+2)
         ISTRT=(ITIME-IPERD)-IFIRST
         ICOUNT=0
         SUM=0.0
         IF (ITIME.LT.IDSRUN) THEN
            JHOUR=ITIME
            IDA=JHOUR/24+1
            IHR=MOD(JHOUR,24)
            CALL MDYH2 (IDA,IHR,IM1,ID1,IY1,IH1,NZXXX,NDXXX,INPTZC)
            JHOUR=IDSRUN
            IDA=JHOUR/24+1
            IHR=MOD(JHOUR,24)
            CALL MDYH2 (IDA,IHR,IM2,ID2,IY2,IH2,NZXXX,NDXXX,INPTZC)
            WRITE (IPR,290) DATA,STAID,DTYPE,IM1,ID1,IY1,IH1,INPTZC,
     *         IM2,ID2,IY2,IH2,INPTZC
            CALL WARN
            GO TO 150
	    ENDIF
C     CHECK IF THERE IS ALREADY A VALUE IN THE ARRAY
         IF (IBUG.GT.0) WRITE (IOPDBG,310) STAID,DTYPE,I,IPOINT(I),
     $      ITIME,IFHOUR,IDSRUN,NUMOBS,IPERD,ISTRT
         IF (IPERD.LT.1) THEN
            JHOUR=ITIME
            IDA=JHOUR/24+1
            IHR=MOD(JHOUR,24)
            CALL MDYH2 (IDA,IHR,IM,ID,IY,IH,NZXXX,NDXXX,INPTZC)
	    IF (IPERD.EQ.0) THEN
               WRITE (IPR,195) STAID,DTYPE,IM,ID,IY,IH,INPTZC
	       ELSE
                  WRITE (IPR,197) IPERD,STAID,DTYPE,IM,ID,IY,IH,INPTZC
	       ENDIF
	    CALL WARN
	    GO TO 150
	    ENDIF
         DO 80 J=1,IPERD
            IF (WORK(ISTRT+J).GT.-999.) SUM=SUM+WORK(ISTRT+J)
            IF (WORK(ISTRT+J).GE.-999.) ICOUNT=ICOUNT+1
80          CONTINUE
C     SKIP OBSERVATION IF ARRAY HAS VALUES FOR ENTIRE PERIOD
         IF (ICOUNT.EQ.IPERD) GO TO 150
C     STORE IN HOURLY ARRAY IF THE ARRAY DOES NOT CONTAIN ANY VALUES
         IDIST=0
         IF (DATA.LT.QMIN.AND.INTVAL.LT.IOBS(IPOINT(I)+2)) IDIST=1
         IF (IDIST.EQ.1) THEN
	    CALL QDNORM (QDIST,ICOUNT,IPERD,ISTRT,WORK,DNORML)
	    ENDIF
         IF (IBUG.GT.0) WRITE (IOPDBG,300) STAID,DTYPE,DATA,QMIN,
     $      INTVAL,IOBS(IPOINT(I)+2),IPERD,ICOUNT,ISTRT,SUM,
     $      (QDIST(J),J=1,24),(WORK(J+ISTRT),J=1,IPERD)
         IF (ICOUNT.GT.0) GO TO 110
C        NO VALUES IN WORK FOR THIS PERIOD
            TOTAL=DATA*IPERD
            DO 100 J=1,IPERD
               LOCW=ISTRT+J
               IF (LOCW.GT.LWORK) THEN
                  WRITE (IPR,190) STAID,DTYPE,'WORK',LWORK
	          CALL ERROR
                  IERR=1
                  GO TO 175
	          ENDIF
               IF (LOCW.GT.MAXWRT) MAXWRT=LOCW
C           CHECK IF DATA IS TO BE DISTRIBUTED
               IF (IDIST.EQ.0) GO TO 90
                  NHOUR=LOCW
                  IF (NHOUR.GT.24) NHOUR=MOD(NHOUR,24)
                  IF (NHOUR.EQ.0) NHOUR=24
                  WORK(LOCW)=TOTAL*QDIST(NHOUR)*DNORML
                  GO TO 100
90             WORK(LOCW)=DATA
100            CONTINUE
            GO TO 150
C     DISTRIBUTE THE LONGER OBSERVATIONS USING THE SHORTER ONES
110      TOTAL=DATA*IPERD
         TOTAL=TOTAL-SUM
         VALUE=0.0
         IF (TOTAL.GE.1.0.AND.(IPERD-ICOUNT).GT.0)
     $      VALUE=TOTAL/(IPERD-ICOUNT)
         DO 140 K=1,IPERD
            LOCW=ISTRT+K
            IF (IDIST.EQ.0) GO TO 120
               NHOUR=LOCW
               IF (NHOUR.GT.24) NHOUR=MOD(NHOUR,24)
               IF (NHOUR.EQ.0) NHOUR=24
               IF (WORK(LOCW).LT.-999.)
     $            WORK(LOCW)=TOTAL*QDIST(NHOUR)*DNORML
               GO TO 130
120         IF (WORK(LOCW).LT.-999.) WORK(LOCW)=VALUE
130         IF (LOCW.GT.MAXWRT) MAXWRT=LOCW
140         CONTINUE
150      CONTINUE
C
      IF (IBUG.GT.0.AND.QMIN.GT.0) THEN
	  WRITE (IOPDBG,*) 'DISTRIBUTION FACTORS:'
          WRITE (IOPDBG,270) (QDIST(K),K=1,24)
	  ENDIF
      IF (IBUG.GT.0.AND.NCOUNT.GT.0) THEN
         WRITE (IOPDBG,*) 'TIMES, VALUES AND PERIODS OF OBSERVED DATA:'
         WRITE (IOPDBG,250) (IOBS(I),OBS(I+1),IOBS(I+2),I=1,NCOUNT,3)
	 ENDIF
C
C  SET ANY DATA THAT STILL HAVE THE INITIALIZED VALUE TO MISSING
      DO 170 I=1,LWORK
         IF (WORK(I).EQ.AINIT) WORK(I)=-999.
170      CONTINUE
C
      IF (IBUG.GT.0.AND.MAXWRT.GT.0) THEN
         WRITE (IOPDBG,*) 'VALUES IN HOURLY WORK ARRAY:'
	 WRITE (IOPDBG,230) (WORK(I),I=1,MAXWRT)
	 ENDIF
C
175   CALL FSTWHR (OPNOLD,IOLDOP,OPNOLD,IOLDOP)
C
      IF (IPTRCE.GT.1) WRITE (IOPDBG,*) 'EXIT QOVLAP'
C      
      RETURN
C
190   FORMAT ('0**ERROR** STATION ',2A4,' AND DATA TYPE ',A4,
     $ ' REQUIRES A ',A,' ARRAY LARGER THAN ',I6,' WORDS.')
195   FORMAT ('0**WARNING** TIME PERIOD IS ZERO',
     $ ' FOR STATION ',2A4,' AND DATA TYPE ',A4,
     $ ' AT ',I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,
     $ '. OBSERVATION IGNORED.')
197   FORMAT ('0**WARNING** TIME PERIOD IS ',I3,
     $ ' FOR STATION ',2A4,' AND DATA TYPE ',A4,
     $ ' AT ',I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,
     $ '. OBSERVATION IGNORED.')
210   FORMAT (' ',10I5)
230   FORMAT (' ',10F10.2)
250   FORMAT (' ',I6,1X,F10.2,1X,I3)
270   FORMAT (' ',10(F7.3))
290   FORMAT ('0**WARNING** AN OBSERVATION OF ',F9.1,
     $     ' WAS ENCOUNTERED FOR STATION ',2A4,' AND DATA TYPE ',A4,
     $     ' AT ',I2.2,'/',I2.2,'/',I4,'-',I2.2,A4 /
     $ 13X,'WHICH IS BEFORE THE START DATE',
     $     ' (',I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,
     $     '). OBSERVATION IGNORED.')
300   FORMAT (' STAID=',2A4,' DTYPE=',A4,' DATA=',F10.2,
     $     ' QMIN=',F10.2,' INTVAL=',I5,' IOBS(IPOINT(I)+2)=',I5,
     $     ' IPERD=',I5,' ICOUNT=',I5 /
     $ ' ISTRT=',I6,' SUM=',F10.2 /
     $ ' ARRAY QDIST:' /
     $ 2(1X,12F10.4/) /
     $ ' ARRAY WORK:' /
     $ (1X,10F10.1))
310   FORMAT (' STAID=',2A4,' DTYPE=',A4,' I=',I5,' IPOINT(I)=',I3,
     $ ' ITIME=',I6,' IFHOUR=',I6,' IDSRUN=',I6,' NUMOBS=',I4,
     $ ' IPERD=',I3,' ISTRT=',I3)
C
      END
