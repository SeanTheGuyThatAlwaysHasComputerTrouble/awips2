C MEMBER PDBINT
C  (from old member UXPDBINT)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 07/27/94.12:20:39 BY $WC21DT
C
C @PROCESS LVL(77)
C
      SUBROUTINE PDBINT (USER,DCBDDN,DCBMBR,DSKUNT,LDEBUG)
C
C          ROUTINE:  PDBINT
C
C             VERSION:  1.0.1
C
C                DATE:  4-21-1983
C
C              AUTHOR:  JANINE FRANZOI
C                       DATA SCIENCES INC
C
C***********************************************************************
C
C          DESCRIPTION:
C
C    THIS ROUTINE INITIALIZES THE PREPROCESSOR DATA BASE INDEX FILE
C    (STATION INFORMATION), THE DAILY DATA FILES, AND THE
C    RIVER, RESERVIOR AND SNOW DATA FILES.  IT ALSO SETS UP A FREEPOOL
C    AREA FOR EXTENDED FILE SPACE FOR THE RRS FILE.
C
C***********************************************************************
C
C          COMMON:
C
      INCLUDE 'uio'
      INCLUDE 'ufreei'
      INCLUDE 'udebug'
      INCLUDE 'pdbcommon/pdunts'
      INCLUDE 'pdbcommon/pdddfc'
      INCLUDE 'pdbcommon/pddtdr'
      INCLUDE 'pdbcommon/pdrrsc'
      INCLUDE 'pdbcommon/pdsifc'
      INCLUDE 'pdbcommon/pdbdta'
      INCLUDE 'pdbcommon/pdhshi'
      INCLUDE 'pdbcommon/pdhshc'
C
C***********************************************************************
C
C          DIMENSION AND TYPE DECLARATIONS:
C
      CHARACTER*(*) USER,DCBDDN,DCBMBR
      CHARACTER*4 XDTYPE
      CHARACTER*8 XWORD
C
      DIMENSION IXARR(16),IRRSAR(16),IFPBUF(16)
      INTEGER*2 IDBUF(32)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob83/rfc/ofs/src/filecrat/RCS/pdbint.f,v $
     . $',                                                             '
     .$Id: pdbint.f,v 1.2 1997/04/06 13:06:14 page Exp $
     . $' /
C    ===================================================================
C
C
C***********************************************************************
C
C          DATA:
C
C***********************************************************************
C
C
      CALL ULINE (LP,2)
      WRITE (LP,420)
C
C  PRINT CARD
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
C
      NUMERR=0
C
      IH8CHR=27
      MXDP=0
      MXDT=0
      IFLP=0
      IFLT=0
      NWORDP=0
      NWORDT=0
C
C  INITIALIZE CONTROL RECORD FOR INDEX FILE
      NWDCTL=16
      NMDTYP=27
      MXDTYP=30
      IPTTYP=4
      MXDDOD=0
      CALL UMEMST (0,IPDDFC,20)
C
C  GET DCB FOR INDEX FILE
      CALL UFLDCB (DCBDDN,DCBMBR,'PDBINDEX',LRECL,LBLOCK,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UFLDCB',IERR
         GO TO 410
         ENDIF
C
C  SET INDEX FILE LOGICAL RECORD LENGTH
      LRCPDI=LRECL/4
C
C  CALCULATE NUMBER OF RECORDS PER TRACK
      LPRINT=2
      CALL UDKBLK (' ',0,DSKUNT,LBLOCK,LPRINT,NBLKS,IPCT,IERR)
      IF (IERR.GT.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UDKBLK',IERR
         GO TO 410
         ENDIF
      NPRBLK=LBLOCK/LRECL
      NPRTRK=NPRBLK*NBLKS
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ NUMBER OF TRACKS FOR INDEX FILE
C
5     CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 5
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 5
      IF (XWORD.EQ.'END') GOTO 230
C
      IF (NFIELD.NE.2) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'INDEX'
         GO TO 10
         ENDIF
      IF (NCHAR.NE.5) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'INDEX'
         GO TO 10
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'INDEX') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'INDEX'
         GO TO 10
         ENDIF
C
C  CHECK NEXT FIELD FOR NUMBER OF TRACKS FOR INDEX FILES
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 10
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),IDXTR)
      CALL ULINE (LP,2)
      WRITE (LP,460) IDXTR
C
C  CALCULATE NUMBER OF RECORDS FOR INDEX FILE
      MXSIFR=IDXTR*NPRTRK
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ NUMBER OF DAILY FILES TO BE INITIALIZED
C
10    CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 10
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 10
C
      IF (NFIELD.NE.2) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'DLYFILES'
         GO TO 20
         ENDIF
      IF (NCHAR.NE.8) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYFILES'
         GO TO 20
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'DLYFILES') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYFILES'
         GO TO 20
         ENDIF
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 20
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),NUMDDF)
      IF (NUMDDF.GT.MAXDDF) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,465) NUMDDF,MAXDDF
         ENDIF
      CALL ULINE (LP,2)
      WRITE (LP,470) NUMDDF
C
C  GET DCB FOR DAILY DATA FILE
      CALL UFLDCB (DCBDDN,DCBMBR,'PDBDLY',LRECL,LBLOCK,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UFLDCB',IERR
         GO TO 410
         ENDIF
C
C  SET DAILY DATA FILE LOGICAL RECORD LENGTH
      LRCPDD=LRECL/4
      LRCPD2=LRCPDD*2
C
C  CALCULATE NUMBER OF RECORDS PER TRACK
      CALL UDKBLK (' ',0,DSKUNT,LBLOCK,LPRINT,NBLKS,IPCT,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UDKBLK',IERR
         GO TO 410
         ENDIF
      NPRBLK=LBLOCK/LRECL
      NPRTRK=NPRBLK*NBLKS
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ NUMBER OF TRACKS FOR DAILY DATA FILES
C
20    CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 20
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 20
C
      IF (NFIELD.NE.NUMDDF+1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'TRACKS'
         GO TO 40
         ENDIF
      IF (NCHAR.NE.6) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'TRACKS'
         GO TO 40
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'TRACKS') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'TRACKS'
         GO TO 40
         ENDIF
C
C  GET NUMBER OF TRACKS FOR DAILY DATA FILES
      DO 30 I=1,NUMDDF
         NFLD=NFLD+1
         IF (IFTYPE(NFLD).NE.1) THEN
            CALL UEROR (LP,1,NUMERR)
            WRITE (LP,450) NFLD
            GO TO 30
            ENDIF
         CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),NDLYTR)
         CALL ULINE (LP,2)
         WRITE (LP,480) KPDDDF(I),NDLYTR
         IPDDFC(1,I)=NDLYTR*NPRTRK
         IF (IPDDB.GT.0) THEN
            CALL ULINE (IOGDB,1)
            WRITE (IOGDB,*) 'I=',I,
     *         ' IPDDFC(1,I)=',IPDDFC(1,I)
            ENDIF
30       CONTINUE
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ DAILY DATA TYPES CARD
C
40    CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 40
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 40
C
      IF (NFIELD.NE.3) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'DLYTYPES'
         GO TO 50
         ENDIF
      IF (NCHAR.NE.8) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYTYPES'
         GO TO 50
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'DLYTYPES') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYTYPES'
         GO TO 50
         ENDIF
      NFLD=2
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      IF (NCHAR.NE.7) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYTYPES'
         GO TO 50
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'MAXDAYS') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DLYTYPES'
         GO TO 50
         ENDIF
      NFLD=3
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 50
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),MAXDAY)
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ DATA TYPE, MAX STATIONS AND MAX DAYS AND FILE NAME
C
50    CALL RPCARD (IBUF,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 50
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 50
C
      IF (NFIELD.GE.2.AND.NFIELD.LE.5) GO TO 60
         CALL WPCARD (IBUF)
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'DATA TYPE'
         GO TO 50
60    IF (NCHAR.LE.4) GO TO 70
      IF (NCHAR.NE.8) THEN
         CALL WPCARD (IBUF)
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,490)
         GO TO 160
         ENDIF
      GO TO 140
70    CALL WPCARD (IBUF)
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XDTYPE,NCHAR)
C
C  CHECK IF DATA TYPE IS VALID
      IX=IPDCKD(XDTYPE)
      IF (IX.EQ.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,490)
         GO TO 160
         ENDIF
C
C  CHECK MAXIMUM NUMBER OF STATIONS
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 160
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),MAXSTA)
      IDDTDR(16,IX)=MAXSTA+IDDTDR(16,IX)
C
      IF (XDTYPE.NE.'PPST') GO TO 80
C
      IF (NFIELD.GE.3) THEN
         ELSE
            CALL UEROR (LP,1,NUMERR)
            WRITE (LP,430) 'DATA TYPE'
            GOTO 160
         ENDIF
C
C  CHECK MAXIMUM NUMBER OF 24 HR PPST STATIONS AND ADD 6 HR NUMBER
C  MAXSTA
      NFLD=NFLD+1
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,500)
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 160
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),MAXS24)
      IDDTDR(16,IX)=(5*MAXSTA)+(2*MAXS24)+1
C
C  IF PG24 OR APIG, ADD 1 TO MAXSTA FOR COUNTER IN RECORD
80    IF (XDTYPE.EQ.'PG24'.OR.XDTYPE.EQ.'APIG')
     *   IDDTDR(16,IX)=IDDTDR(16,IX)+1
C
C  CHECK FOR FIELD WITH NUMBER OF DAYS OF DATA
      IF (NFIELD.GT.NFLD) THEN
         NFLD=NFLD+1
         IF (IFTYPE(NFLD).NE.1) THEN
            CALL UEROR (LP,1,NUMERR)
            WRITE (LP,450) NFLD
            GO TO 160
            ENDIF
         CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),NUMDAY)
         IDDTDR(7,IX)=NUMDAY
         GO TO 90
         ENDIF
C
      IDDTDR(7,IX)=MAXDAY
C
90    INUM=0
C
C  CHECK IF ALL FIELDS PROCESSED
      IF (NFIELD.EQ.NFLD) GO TO 110
C
C  CHECK FILE NAME
      NFLD=NFLD+1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)
      IF (NCHAR.NE.6) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,510)
         GO TO 160
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'PDBDLY') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'DATA TYPE'
         GO TO 160
         ENDIF
      CALL UINTFX (INUM,IFSTOP(NFLD),IFSTOP(NFLD),IERR)
      IF (INUM.GE.1.AND.INUM.LE.5) GO TO 100
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,520)
         GO TO 160
100   IDDTDR(4,IX)=INUM
C
C  -     -     -     -     -     -     -     -     -     -     -     -
C
110   IF (XDTYPE.NE.'TF24') GO TO 120
C
C  CALCULATE POINTER RECORDS FOR FUTURE TEMPERATURE
      NWPTFT=IDDTDR(5,IX)*IDDTDR(16,IX)
      NWDFT=(IDDTDR(7,IX)*4)+2
      NPTREC=IUNRCD(NWPTFT,LRCPD2)+IUNRCD(NWDFT,LRCPD2)
      GO TO 130
C
C  SEE IF DAILY TYPE IS PRECIPITATION OR TEMPERATURE
120   IF (IDDTDR(6,IX).EQ.-1) THEN
         CALL PDSPTP (XDTYPE,MAXSTA,IX,MXDP,MXDT,IFLP,IFLT,NWORDP,
     *      NWORDT,IERR)
         GO TO 50
        ENDIF
C
C  CALCULATE NUMBER OF POINTER RECORDS FOR EACH DAILY DATA TYPE
      NWPTRC=IDDTDR(16,IX)*IDDTDR(5,IX)
C
C  STRANGER REPORT DATA TYPE HAS ONLY ONE POINTER RECORD (LENGTH IS
C  HELD IN WORD 5 OF DIRECTORY)
      IF (XDTYPE.EQ.'PPSR') NWPTRC=IDDTDR(5,IX)
      NPTREC=IUNRCD(NWPTRC,LRCPD2)
C
C  CALCULATE NUMBER OF DATA RECORDS FOR EACH DAILY DATA TYPE
130   NWDDRC=IDDTDR(16,IX)*IDDTDR(6,IX)
C
C  ACCOUNT FOR THE ONE COUNTER WORD WITHIN A STRANGER REPORT RECORD
      IF (XDTYPE.EQ.'PPSR') NWDDRC=NWDDRC+1
      NDLYRC=IUNRCD(NWDDRC,LRCPD2)
C
C  CALCULATE NUMBER OF TOTAL DATA RECORDS FOR ONE DAILY TYPE
      JX=IDDTDR(4,IX)
      NTDDRC=NDLYRC*IDDTDR(7,IX)
      IDDTDR(14,IX)=IPDDFC(2,JX)+1
      IDDTDR(15,IX)=IDDTDR(14,IX)+NPTREC
      IDDTDR(21,IX)=NDLYRC
C
C  UPDATE LAST USED RECORD IN FILE
      IPDDFC(2,JX)=IDDTDR(15,IX)+NTDDRC-1
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'JX=',JX,
     *      ' IPDDFC(2,JX)=',IPDDFC(2,JX)
         ENDIF
      IF (IPDDFC(2,JX).GT.IPDDFC(1,JX)) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,530) KPDDDF(JX)
         ENDIF
C
      GO TO 50
C  -     -     -     -     -     -     -     -     -     -     -     -
C
C
140   IF (MXDP.EQ.0) GO TO 150
C
      NRECP=IUNRCD(NWORDP,LRCPD2)
C
C  CALCULATE POINTER RECORDS FOR <24 HOUR PCPN
      IX=IPDCKD('PPVR')
      NWPTRC=IDDTDR(16,IX)*IDDTDR(5,IX)
      NPTREC=IUNRCD(NWPTRC,LRCPD2)
      IDDTDR(21,IX)=NRECP
C
C  CALCULATE NUMBER OF TOTAL RECORDS FOR PRECIP TYPE
      JX=IDDTDR(4,IX)
      NTDDRC=NRECP*IDDTDR(7,IX)
      IDDTDR(14,IX)=IPDDFC(2,JX)+1
      IDDTDR(15,IX)=IDDTDR(14,IX)+NPTREC
C
C  UPDATE LAST USED RECORD IN FILE
      IPDDFC(2,JX)=IDDTDR(15,IX)+NTDDRC-1
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'JX=',JX,
     *      ' IPDDFC(2,JX)=',IPDDFC(2,JX)
         ENDIF
      IF (IPDDFC(2,JX).GT.IPDDFC(1,JX)) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,530) KPDDDF(JX)
         GO TO 170
         ENDIF
C
150   IF (MXDT.EQ.0) GO TO 170
      NRECT=IUNRCD(NWORDT,LRCPD2)
C
C  CALCULATE POINTER RECORDS FOR <24 HOUR TEMP
      IX=IPDCKD('TAVR')
      NWPTRC=IDDTDR(16,IX)*IDDTDR(5,IX)
      NPTREC=IUNRCD(NWPTRC,LRCPD2)
      IDDTDR(21,IX)=NRECT
C
C  CALCULATE NUMBER OF TOTAL DATA RECORDS FOR DAILY TEMP TYPE
      JX=IDDTDR(4,IX)
      NTDDRC=NRECT*IDDTDR(7,IX)
      IDDTDR(14,IX)=IPDDFC(2,JX)+1
      IDDTDR(15,IX)=IDDTDR(14,IX)+NPTREC
C
C  UPDATE LAST USED RECORD IN FILE
      IPDDFC(2,JX)=IDDTDR(15,IX)+NTDDRC-1
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'JX=',JX,
     *      ' IPDDFC(2,JX)=',IPDDFC(2,JX)
         ENDIF
      IF (IPDDFC(2,JX).GT.IPDDFC(1,JX)) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,530) KPDDDF(JX)
         ENDIF
C
      GO TO 170
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ NUMBER OF TRACKS FOR RRS FILE
C
160   CALL RPCARD (IBUF,IERR)
170   CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 160
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 160
C
      IF (NFIELD.NE.4) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'RRSTRACK'
         GO TO 200
         ENDIF
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      IF (NCHAR.NE.8) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'RRSTRACK'
         GO TO 200
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'RRSTRACK') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'RRSTRACK'
         GO TO 200
         ENDIF
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 200
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),NTRRS)
C
C  GET DCB FOR RRS FILE
      CALL UFLDCB (DCBDDN,DCBMBR,'PDBRRS',LRECL,LBLOCK,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UFLDCB',IERR
         GO TO 410
         ENDIF
C
C  SET RRS DATA FILE LOGICAL RECORD LENGTH
      LRCPDR=LRECL/4
C
C  CALCULATE NUMBER OF RECORDS PER TRACK
      CALL UDKBLK (' ',0,DSKUNT,LBLOCK,LPRINT,NBLKS,IPCT,IERR)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'UDKBLK',IERR
         GO TO 410
         ENDIF
      NPRBLK=LBLOCK/LRECL
      NPRTRK=NPRBLK*NBLKS
C
C  CALCULATE NUMBER OF RECORDS IN RRS FILE
      MXRRSF=NTRRS*NPRTRK
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'MXRRSF=',MXRRSF
         ENDIF
C
C  GET FILE NAME WHERE FREE POOL RECORDS ARE STORED
      NFLD=3
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)
      IF (NCHAR.NE.6) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,510)
         GO TO 200
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'PDBDLY') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'RRSTRACK'
         GO TO 200
         ENDIF
      CALL UINTFX (INUM,IFSTOP(NFLD),IFSTOP(NFLD),IERR)
      IF (INUM.GE.1.AND.INUM.LE.5) GO TO 180
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,520)
         GO TO 200
180   LUFREE=INUM
      IFREE1=IPDDFC(2,LUFREE)+1
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'IFREE1=',IFREE1
         ENDIF
      NFLD=4
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 200
         ENDIF
C
C  GET PERCENT OF FREEPOOL RECORDS
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),IPERFP)
C
C  CALCULATE NUMBER OF FREEPOOL RECORDS
      PERFP=IPERFP
      IFPREC=MXRRSF*PERFP/100.0 +.5
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'IFPREC=',IFPREC
         ENDIF
      MXFRER=IFPREC+IPDDFC(2,LUFREE)
      IF (IPDDB.GT.0) THEN
         CALL ULINE (IOGDB,1)
         WRITE (IOGDB,*) 'MXFREF=',MXFRER
         ENDIF
      IF (MXFRER.GT.IPDDFC(1,LUFREE)) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,530) KPDDDF(LUFREE)
         GO TO 200
         ENDIF
      IPDDFC(2,LUFREE)=MXFRER
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ MAXIMUM STATIONS CARD
C
200   CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 200
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 200
C
      IF (NFIELD.NE.2) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'MAXSTA'
         GO TO 220
         ENDIF
      IF (NCHAR.NE.6) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'MAXSTA'
         GO TO 220
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'MAXSTA') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'MAXSTA'
         GO TO 220
         ENDIF
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 220
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),MAXSTA)
C
C  CHECK FOR MAXIMUM ALLOWABLE STATIONS
      IF (MAXSTA.GT.MXHSHC) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,550) MAXSTA,'PDHSHC',MXHSHC
         ENDIF
      IF (MAXSTA.GT.MXHSHI) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,550) MAXSTA,'PDHSHI',MXHSHI
         ENDIF
C
C  CALCULATE NUMBER OF HASH RECORDS AND SET POINTERS
      NHASHR=MAXSTA*2
      NHSHRC=IUNRCD(NHASHR,LRCPD2)
      IHINRC=IH8CHR+NHSHRC
      INFREC=IHINRC+NHSHRC
      LSTSIF=INFREC
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ MAX FUTURE TEMPERATURE CARD
C
220   CALL RPCARD (IBUF,IERR)
      CALL ULINE (LP,1)
      WRITE (LP,*) ' '
      CALL WPCARD (IBUF)
      IF (IERR.NE.0) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,600) 'RPCARD',IERR
         GO TO 410
         ENDIF
      CALL UFREE (1,72)
C
C  CHECK FOR BLANK CARD
      IF (NFIELD.EQ.0) GO TO 220
C
C  GET FIRST FIELD
      NFLD=1
      NCHAR=IFSTOP(NFLD)-IFSTRT(NFLD)+1
      XWORD=' '
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
C
C  CHECK FOR COMMENT
      IF (XWORD.EQ.'$') GO TO 220
C
      IF (NFIELD.NE.2) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,430) 'MAXFUT'
         GO TO 230
         ENDIF
      IF (NCHAR.NE.6) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'MAXFUT'
         GO TO 230
         ENDIF
      CALL UPACK1 (IBUF(IFSTRT(NFLD)),XWORD,NCHAR)
      IF (XWORD.NE.'MAXFUT') THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,440) 'MAXFUT'
         GO TO 230
         ENDIF
      NFLD=2
      IF (IFTYPE(NFLD).NE.1) THEN
         CALL UEROR (LP,1,NUMERR)
         WRITE (LP,450) NFLD
         GO TO 230
         ENDIF
      CALL UNUMIC (IBUF,IFSTRT(NFLD),IFSTOP(NFLD),MXDDOD)
      GOTO 5
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK ERROR FLAG
230   IF (NUMERR.GT.0) GO TO 410
C
C  INITIALIZE INDEX FILE RECORDS
      NUNIT=KPDSIF
C
C  PRINT DATASET ATTRIBUTES
      IPRERR=1
      CALL UPRDSA ('NONE',NUNIT,'NONE',IPRERR,LP,IERR)
      IF (IERR.GT.0) GO TO 250
C
      CALL UMEMST (0,IXARR,LRCPDI)
      DO 240 I=1,MXSIFR
         CALL UWRITT (NUNIT,I,IXARR,IERR)
         IF (IERR.NE.0) GO TO 390
240      CONTINUE
      CALL ULINE (LP,2)
      WRITE (LP,560) NUNIT,MXSIFR,'.'
C
C  INITIALIZE CONTROL RECORD FOR RRS FILE
250   LXRRSR=1
      IFREEL=LRCPDD
      IFREEN=IFREE1
      CALL UMEMST (0,MAXRSZ,9)
      CALL UMEMOV (USER,IPUSER,2)
C
C  INITIALIZE RRS FILE RECORDS
      NUNIT=KPDRRS
C
C  PRINT DATASET ATTRIBUTES
      IPRERR=1
      CALL UPRDSA ('NONE',NUNIT,'NONE',IPRERR,LP,IERR)
      IF (IERR.GT.0) GO TO 270
C
      CALL UMEMST (0,IRRSAR,LRCPDR)
      DO 260 I=1,MXRRSF
         CALL UWRITT (NUNIT,I,IRRSAR,IERR)
         IF (IERR.NE.0) GO TO 390
260      CONTINUE
      CALL ULINE (LP,2)
      WRITE (LP,560) NUNIT,MXRRSF,'.'
C
C  INITIALIZE DAILY DATA FILES
270   DO 280 I=1,LRCPD2
         IDBUF(I)=MISSNG
280      CONTINUE
      CALL UMEMST (0,IFPBUF,LRCPDD)
      IFPBUF(1)=-1
      DO 340 J=1,NUMDDF
         NUNIT=KPDDDF(J)
C    PRINT DATASET ATTRIBUTES
         IPRERR=1
         CALL UPRDSA ('NONE',NUNIT,'NONE',IPRERR,LP,IERR)
         IF (IERR.GT.0) GO TO 340
         NUMREC=IPDDFC(1,J)
C     CHECK IF FILE CONTAINS RRS FREEPOOL RECORDS
         IF (J.EQ.LUFREE) GO TO 300
            DO 290 IREC=1,NUMREC
               CALL UWRITT (NUNIT,IREC,IDBUF,IERR)
               IF (IERR.NE.0) GO TO 390
290            CONTINUE
            CALL ULINE (LP,2)
            WRITE (LP,560) NUNIT,NUMREC,'.'
            GO TO 340
C     FILE CONTAINS DAILY DATA AND RRS FREEPOOL DATA
300      NDREC=0
         DO 310 IREC=1,IFREE1-1
            CALL UWRITT (NUNIT,IREC,IDBUF,IERR)
            IF (IERR.NE.0) GO TO 390
            NDREC=NDREC+1
310         CONTINUE
C     INITIALIZE RRS FREEPOOL RECORDS
         DO 320 IREC=IFREE1,MXFRER
            CALL UWRITT (NUNIT,IREC,IFPBUF,IERR)
            IF (IERR.NE.0) GO TO 390
320         CONTINUE
         NRREC=MXFRER-IFREE1+1
         CALL ULINE (LP,2)
         WRITE (LP,560) NUNIT,NRREC,' FOR RRS FREEPOOL DATA.'
         DO 330 IREC=MXFRER+1,NUMREC
            CALL UWRITT (NUNIT,IREC,IDBUF,IERR)
            IF (IERR.NE.0) GO TO 390
            NDREC=NDREC+1
330         CONTINUE
         CALL ULINE (LP,2)
         WRITE (LP,560) NUNIT,NDREC,' FOR DAILY DATA.'
340      CONTINUE
C
C  INITIALIZE PP24 AND PPSR IF ANY STATIONS DEFINED
      DO 350 I=1,LRCPD2
         IDBUF(I)=MISSPP
350      CONTINUE
      IX=IPDCKD('PP24')
      IDONE=0
360   IF (IX.EQ.1) THEN
         IF (IDDTDR(7,IX).LT.1) GO TO 380
         J=IDDTDR(15,IX)
         K=IDDTDR(21,IX)*IDDTDR(7,IX)+J-1
         IFILE=IDDTDR(4,IX)
         DO 370 I=J,K
            CALL UWRITT (KPDDDF(IFILE),I,IDBUF,IERR)
            IF (IERR.NE.0) GO TO 390
370         CONTINUE
         ENDIF
380   IDONE=IDONE+1
      IF (IDONE.LT.2) THEN
         IX=IPDCKD('PPSR')
         GO TO 360
         ENDIF
C
C  WRITE CONTROL RECORDS
      CALL WPPDCO (IERR)
C
C  PRINT CONTROL RECORDS AND DIRECTORY DATA
      CALL PDBCTL (LDEBUG)
      GO TO 410
C
C  ERROR MESSAGES
390   CALL UEROR (LP,1,NUMERR)
      WRITE (LP,590)
      GO TO 410
C
410   IF (NUMERR.EQ.0) THEN
         CALL ULINE (LP,2)
         WRITE (LP,620)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
420   FORMAT ('0*** NOTE - BEGIN PREPROCESSOR DATA BASE FILE ',
     *   'INITIALIZATION.')
430   FORMAT ('+*** ERROR - INVALID NUMBER OF FIELDS ON ',A,' CARD.')
440   FORMAT ('+*** ERROR - INVALID IDENTIFIER ON ',A,' CARD.')
450   FORMAT ('+*** ERROR - INTEGER VALUE EXPECTED IN FIELD ',I2,'.')
460   FORMAT ('0*** NOTE - TRACKS FOR INDEX FILE SET TO ',I4,'.')
465   FORMAT ('+*** ERROR - NUMBER OF DAILY DATA FILES SPECIFIED (',
     *   I2,') EXCEEDS MAXIMUM ALLOWED (',I2,').')
470   FORMAT ('0*** NOTE - NUMBER OF DAILY FILES SET TO ',I4,'.')
480   FORMAT ('0*** NOTE - DAILY DATA FILE UNIT ',I2.2,' SET TO ',I4,
     *   ' TRACKS.')
490   FORMAT ('+*** ERROR - INVALID DATA TYPE.')
500   FORMAT ('+*** ERROR - DATA TYPE PPST MUST ALSO SPECIFY NUMBER ',
     *   'OF 24 HOUR STATIONS.')
510   FORMAT ('+*** ERROR - INVALID NUMBER OF CHARACTERS IN FILE NAME.')
520   FORMAT ('+*** ERROR - INVALID FILE NAME.')
530   FORMAT ('+*** ERROR - EXCEEDED MAXIMUM NUMBER OF RECORDS ',
     *   'ALLOCATED IN DAILY DATA FILE ',I4,'.')
550   FORMAT ('+*** ERROR - MAXIMUM NUMBER OF STATIONS (',I5,
     *   ') EXCEEDS NUMBER OF STATIONS THAT CAN BE STORED IN COMMON ',
     *   '/',A,'/ (',I5,').')
560   FORMAT ('0*** NOTE - UNIT ',I2.2,' SUCCESSFULLY INITIALIZED ',
     *   'WITH ',I6,' RECORDS',A)
590   FORMAT ('+*** ERROR - DAIO WRITE ERROR.')
600   FORMAT ('+*** ERROR - ROUTINE ',A,' NOT SUCCESSFULLY CALLED. ',
     *   'STATUS CODE=',I2)
620   FORMAT ('0*** NOTE - PREPROCESSOR DATA BASE FILES ',
     *   'SUCCESSFULLY INITIALIZED.')
C
      END
