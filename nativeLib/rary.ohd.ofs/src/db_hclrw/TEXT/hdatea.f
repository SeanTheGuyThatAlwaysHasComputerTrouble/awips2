C MEMBER HDATEA
C  (from old member HCLDATES)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 11/30/94.10:16:22 BY $WC20SV
C
C @PROCESS LVL(77)
C
      SUBROUTINE HDATEA (NCHAR,DATE,IPACK,NHRADD,NHSWCH,IPRINT,JULDA,
     *   INTHR,JULHR,ISTAT)
C
C   ROUTINE TO PROCESSES A USER SPECIFIED DATE FIELD.
C
C  ARGUMENT LIST:
C
C     NCHAR  - THE NUMBER OF CHARACTERS IN THE DATE FIELD
C     DATE   - ARRAY CONTAINING THE DATE
C     IPACK  - INDICATOR SPECIFYING WHETHER THE DATE ARRAY IS
C              PACKED OR UNPACKED
C               0=UNPACKED (1 CHARACTER PER WORD)
C               1=PACKED (4 CHARACTERS PER WORD)
C     NHRADD - THE NUMBER OF HOURS TO ADD TO THE INTERNAL
C              HOUR AND JULIAN HOUR IF NO HOUR IS DECODED
C     NHSWCH - SWITCH SPECIFYING IF INTERNAL HOUR RANGE
C               0=00 TO 23
C               1=01 TO 24
C     IPRINT - SWITCH SPECIFYING WHETHER OR NOT TO PRINT
C              A WARNING MESSAGE IF FIELD DECODED IS NOT
C              A VALID DATE
C               0=DO NOT PRINT MESSAGE
C               NE 0, PRINT MESSAGE AND CALL WARN
C     JULDA  - JULIAN DAY RETURNED
C     INTHR  - INTERNAL HOUR RETURNED
C     JULHR  - JULIAN HOUR RETURNED
C     ISTAT  - STATUS FLAG
C               0=OK
C               1=INVALID DATE FIELD
C               2=ERROR IN ARGUMENT INPUT
C                 ONE OF IPACK, ISF, IEF, NHRADD OR NHSWCH NOT IN VALID
C
      DIMENSION DATE(1)
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'ufreei'
      COMMON /MDFLTD/ INHOUR
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_hclrw/RCS/hdatea.f,v $
     . $',                                                             '
     .$Id: hdatea.f,v 1.1 1995/09/17 18:41:50 dws Exp $
     . $' /
C    ===================================================================
C
C
C
      IF (IHCLTR.GT.0) WRITE (IOGDB,*) '*** ENTER HDATEA'
C
      ISTAT=0
C
C  CHECK IPACK SWITCH IF DATE MUST BE UNPACKED
      IF (IPACK.EQ.0.OR.IPACK.EQ.1) GO TO 20
C
C  INVALID IPACK - PRINT WARNING AND ASSUME DATE IS UNPACKED
      WRITE (LP,10) IPACK
10    FORMAT ('0**WARNING** IN HDATEA - VALUE OR ARGUMENT ',
     *   'IPACK MUST BE 0 OR 1. ',
     *   'VALUE ENTERED IS ',I6,'. ZERO IS ASSUMED.')
      CALL WARN
C
      ISTAT=2
      JPACK=0
      GO TO 30
C
20    JPACK=IPACK
C
30    LNIBUF=80
C
      IF (NCHAR.LE.LNIBUF) GO TO 40
C
C  TOO MANY CHARACTERS IN DATE ARRAY
      GO TO 60
C
40    IF (JPACK.EQ.1) GO TO 50
C
C  DATA IS UNPACKED SO COPY INTO IBUF
      CALL UMEMOV (DATE,IBUF,NCHAR)
      GO TO 80
C
C  DATA IS PACKED SO UNPACK INTO IBUF
C  COMPUTE NUMBER OF WORDS OF PACKED DATA IN DATE
50    NWORDS=(NCHAR-1)/4+1
      CALL UNPAKS (DATE,IBUF,NWORDS,LNIBUF,IER)
      IF (IER.EQ.0) GO TO 80
C
C  NOT ENOUGH ROOM IN IBUF TO HOLD DATE
60    WRITE (LP,70) NCHAR
70    FORMAT ('0**WARNING** IN HDATEA - DATE FIELD IS TOO LONG. ',
     *   'LENGTH IS ',I3,' CHARACTERS.')
      CALL WARN
      ISTAT=1
      JULDA=0
      INTHR=0
      JULHR=0
      GO TO 90
C
C  DATE IS NOW IN UNPACKED FORM IN IBUF
C  SET VALUES FOR START AND END OF DATE IN IBUF
80    ISFT=1
      IEFT=NCHAR
C
C  DECODE DATE
      CALL HDATEC (ISFT,IEFT,NHRADD,NHSWCH,IPRINT,JULDA,INTHR,JULHR,
     *   ISTAT)
C
90    IF (IHCLTR.GT.0) WRITE (IOGDB,*) '*** EXIT HDATEA'
C
      RETURN
C
      END
