C MODULE HADTEC
C-----------------------------------------------------------------------
C
       SUBROUTINE HADTEC
C
C  THIS ROUTINE DOES THE ADD TECHNIQUE COMMAND.
C
      CHARACTER*8 RTNNAM,RTNOLD
C
      INTEGER NAME(2),FBUF(128),DBUF(256),LBUF(100)
      INTEGER LEFT(2),IRIGHT(2),TNAME(2),IXBUF(4),LDRBUF(40)
C
      INCLUDE 'uiox'
      INCLUDE 'udebug'
      INCLUDE 'udatas'
      INCLUDE 'ufreei'
      INCLUDE 'hclcommon/hwords'
      INCLUDE 'hclcommon/hunits'
      INCLUDE 'hclcommon/hcomnd'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_hclrw/RCS/hadtec.f,v $
     . $',                                                             '
     .$Id: hadtec.f,v 1.2 2002/02/11 20:34:45 dws Exp $
     . $' /
C    ===================================================================
C
C
      RTNNAM='HADTEC'
C
      IF (IHCLTR.GT.0) WRITE (IOGDB,*) 'ENTER ',RTNNAM
C
      IOPNUM=-1
      CALL FSTWHR (RTNNAM,IOPNUM,RTNOLD,IOLDOP)
C
      MAXF=128
      MAXL=40
      MAXD=256
      LMAX=100
C
      ITYPE=2
      ITTYP=3
      IERR=0
      IFRST=0
      LPOS=1
C
C        READ FIRST CARD
C
      NNCARD=1
      CALL HCARDR (NNCARD,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
C
C        GET NAME AND PASSWORD
C
      IFLD=2
      IF (IFLD.LE.NFIELD) GO TO 30
10    CALL ULINE (LP,2)
      WRITE (LP,20)
20    FORMAT ('0**ERROR** FUNCTION NAME REQUIRED ON COMMAND CARD')
      IERR=1
      GO TO 430
30    CONTINUE
      CALL HNMPSW(IFLD,NAME,IPASS,ISTAT)
      IF (ISTAT.NE.0) GO TO 10
      IFLD=IFLD-1
C
C        GET THE FUNCTION RECORD
C
      CALL HFNDDF(NAME,IREC,ITYPE,IXREC)
      IF (IREC.NE.0) GO TO 50
      CALL ULINE (LP,2)
      WRITE (LP,40) NAME
40    FORMAT ('0**ERROR** FUNCTION ',2A4,' NOT PREVIOUSLY DEFINED')
      IERR=1
      GO TO 430
50    CONTINUE
      IUNIT=KDEFNL
      IF (ITYPE.LT.0) IUNIT=KDEFNG
      CALL HGTRDN(IUNIT,IREC,FBUF,MAXF,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
      IPOS=FBUF(9)+9
C
C        CHECK THE PASSWORD
C
      IF (FBUF(6).EQ.IPASS) GO TO 70
      CALL ULINE (LP,2)
      WRITE (LP,60) NAME
60    FORMAT ('0**ERROR** INVALID PASSWORD FOR FUNCTION ',2A4)
      IERR=1
70    CONTINUE
C
C        GET THE DEFAULT RECORD
C
      IDFREC=FBUF(7)
      IF (ITYPE.LT.0) IDFREC=FBUF(8)
      IF (IDFREC.NE.0) GO TO 80
C
C        SET UP A DEFAULT RECORD
C
      CALL UMEMST(0,DBUF,MAXD)
      DBUF(2)=1
      DBUF(3)=5
      IF (ITYPE.LT.0) DBUF(3)=-5
      CALL UMEMOV (NAME,DBUF(4),2)
      DBUF(6)=2
      IF (ITYPE.LT.0) DBUF(6)=-2
      IDPOS=7
      GO TO 90
80    CONTINUE
      CALL HGTRDN(IUNIT,IDFREC,DBUF,MAXD,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
      IDPOS=DBUF(7) * 2+7
90    CONTINUE
C
C        SEE IF MORE FIELDS - ELSE READ A CARD
C
      IFLD=IFLD+1
      IF (IFLD.LE.NFIELD) GO TO 100
      NNCARD=NNCARD+1
      IF (NNCARD.GT.NCARD) GO TO 340
      CALL HCARDR (NNCARD,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
      IFLD=1
100   CONTINUE
C
C        IF FIRST TIME CHECK FOR TECH=
C
      IF (IFRST.EQ.1) GO TO 130
      IFRST=1
      CALL HFEQLS(IFLD,LEFT,IRIGHT,ISTRT)
      IF (LEFT(1).EQ.LTECH) GO TO 120
      CALL ULINE (LP,2)
      WRITE (LP,110)
110   FORMAT ('0**ERROR** CANNOT FIND TECH= AFTER NAME AND PASSWORD')
      IERR=1
      GO TO 90
120   CONTINUE
      IFSTRT(IFLD)=ISTRT
130   CONTINUE
C
C        GET TECHNIQUE NAME
C
      N=IFSTOP(IFLD)
      CALL HFLPRN(IFSTRT(IFLD),IFSTOP(IFLD),IFLPRN)
      IF (IFLPRN.NE.0) N=IFLPRN-1
      NUM=N-IFSTRT(IFLD)+1
      IF (NUM.LE.8) GO TO 150
      CALL ULINE (LP,2)
      WRITE (LP,140) IFLD
140   FORMAT ('0**ERROR** TECHNIQUE NAME IN FIELD ',I2,' IS MORE THAN',
     1       ' 8 CHARACTERS')
      IERR=1
      GO TO 90
150   CONTINUE
      TNAME(2)=IBLNK
      CALL UPACK1(IBUF(IFSTRT(IFLD)),TNAME,NUM)
C
C        SEE IF TECHNIQUE EXISTS
C
      CALL HFNDDF(TNAME,ITREC,ITTYP,ITXREC)
      IF (ITREC.NE.0) GO TO 170
      CALL ULINE (LP,2)
      WRITE (LP,160) TNAME
160   FORMAT ('0**ERROR** TECHNIQUE ',2A4,' NOT PREVIOUSLY DEFINED')
      IERR=1
      GO TO 90
170   CONTINUE
C
C        SEE IF GLOBAL FUNCTION USES A LOCAL TECHNIQUE
C
      IF (ITYPE.GT.0.OR.ITTYP.LT.0) GO TO 190
      CALL ULINE (LP,2)
      WRITE (LP,180) NAME,TNAME
180   FORMAT ('0**ERROR** GLOBAL FUNCTION ',2A4,' CANNOT USE LOCAL ',
     1       'TECHNIQUE ',2A4)
      IERR=1
      GO TO 90
190   CONTINUE
C
C        GET THE INDEX RECORD OF TECHNIQUE
C
      IXUNIT=KINDXL
      IF (ITTYP.LT.0) IXUNIT=KINDXG
      CALL UREADT (IXUNIT,ITXREC,IXBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
      IF (ITTYP.LT.0) IXBUF(4)=-IXBUF(4)
C
C        CHECK FOR ROOM
C
      IPOS=IPOS+1
      IF (IPOS.LE.MAXF) GO TO 210
      CALL ULINE (LP,2)
      WRITE (LP,200)
200   FORMAT ('0**ERROR** FUNCTION BUFFER FULL')
      GO TO 410
210   CONTINUE
C
C        SEE IF TECHNIQUE ALREADY IN FUNCTION
C
      NUM=FBUF(9)
      DO 220 I=1,NUM
         IF (FBUF(I+9).EQ.IXBUF(4)) GO TO 230
220      CONTINUE
      GO TO 250
230   CONTINUE
      CALL ULINE (LP,2)
      WRITE (LP,240) TNAME,NAME
240   FORMAT ('0**ERROR** TECHNIQUE ',2A4,' ALREADY DEFINED IN ',
     *   'FUNCTION ',2A4,'.')
      CALL ERROR
      IERR=1
      GO TO 90
250   CONTINUE
C
C        PUT NEW TECHNIQUE IN FUNCTION RECORD
C
      FBUF(IPOS)=IXBUF(4)
      FBUF(9)=FBUF(9)+1
C
C        PUT GLOBAL REFERENCE IN LDR
C
      IF (ITYPE.LT.0.OR.ITTYP.GT.0) GO TO 270
      LDRBUF(LPOS)=IXBUF(4)
      LPOS=LPOS+1
      IF (LPOS.LE.MAXL) GO TO 270
      CALL ULINE (LP,2)
      WRITE (LP,260)
260   FORMAT ('0**ERROR** LDR BUFFER FULL')
      GO TO 410
270   CONTINUE
C
C        GET DEFAULT VALUE
C
      IDEFLT=1
      IF (IFLPRN.EQ.0) GO TO 310
      IS=IFLPRN+1
      CALL HFRPRN(IS,IFSTOP(IFLD),IFRPRN)
      IF (IFRPRN.NE.0) GO TO 290
      CALL ULINE (LP,2)
      WRITE (LP,280) IFLD
280   FORMAT ('0**ERROR** UNBALANCED PARENTHESIS IN FIELD ',I2)
      IERR=1
      GO TO 90
290   CONTINUE
C
C         SET THE DEFAULT VALUE
C
      IDEFLT=-1
      IF (IBUF(IS).EQ.LETN) IDEFLT=0
      IF (IBUF(IS).EQ.LETY) IDEFLT=1
      IF (IDEFLT.GE.0) GO TO 310
C
C        SEE IF INTEGER VALUE
C
      ISTAT=0
      CALL UINTFX(IDEFLT,IS,IFRPRN-1,ISTAT)
      IF (ISTAT.EQ.0) GO TO 310
      CALL ULINE (LP,2)
      WRITE (LP,300) IFLD
300   FORMAT ('0**ERROR** INVALID DEFAULT VALUE IN FIELD ',I2)
      IERR=1
      GO TO 90
310   CONTINUE
C
C        PUT DEFAULT IN DEFAULT RECORD
C
      IDPOS=IDPOS+2
      IF (IDPOS.LE.MAXD) GO TO 330
      CALL ULINE (LP,2)
      WRITE (LP,320)
320   FORMAT ('0**ERROR** DEFAULT BUFFER FULL')
      GO TO 410
330   CONTINUE
      DBUF(7)=DBUF(7)+1
      DBUF(IDPOS-1)=IXBUF(4)
      DBUF(IDPOS)=IDEFLT
      GO TO 90
340   CONTINUE
C
C        WRITE THE RECORDS
C
      IF (IERR.NE.0) GO TO 430
      IF (IHCLDB.NE.3) GO TO 370
      WRITE (IOGDB,350) (FBUF(I),I=1,IPOS)
350   FORMAT (' FUNCTION=',3I4,3A4,3I5/(10I5))
      WRITE (IOGDB,360) (DBUF(I),I=1,IDPOS)
360   FORMAT (' DEFAULT=',3I4,2A4,2I3/(10I5))
370   CONTINUE
      CALL HREPRD(FBUF,IPOS,DBUF,IDPOS,ISTAT)
      IF (ISTAT.NE.0) GO TO 430
C
C         GET THE LDR RECORD IF HAD LDRS
C
      IF (LPOS.EQ.1) GO TO 430
      CALL HSRLDR(NAME,ITYPE,1,LREC,ISTAT)
      IF (LREC.EQ.0) GO TO 410
      CALL HRLDRR(LREC,LBUF,LMAX,ISTAT)
      IF (ISTAT.NE.0) GO TO 410
C
C        SEE IF ROOM FOR LDR
C
      ILPOS=LBUF(7)+8
      IF (ILPOS+LPOS-2.LE.LMAX) GO TO 390
      CALL ULINE (LP,2)
      WRITE (LP,380)
380   FORMAT ('0**ERROR** LDR BUFFER TOO SMALL')
      GO TO 410
390   CONTINUE
C
C        MOVE NEW LDR REFERENCES TO END OF OLD LDR RECORD
C
      CALL UMEMOV (LDRBUF,LBUF(ILPOS),LPOS-1)
      NUM=LBUF(7)+LPOS-1
      CALL HDWLDR(NAME,ITYPE,LBUF(8),NUM,ISTAT)
      IF (ISTAT.NE.0) CALL ULINE (LP,2)
      IF (ISTAT.NE.0) WRITE (LP,400)
400   FORMAT ('0**ERROR** UNABLE TO WRITE LDR RECORD')
      GO TO 430
C
410   CALL ULINE (LP,2)
      WRITE (LP,420)
420   FORMAT ('0**ERROR** SYSTEM ERROR')
      IERR=1
C
430   IF (IERR.EQ.0) CALL ULINE (LP,2)
      IF (IERR.EQ.0) WRITE (LP,440) NAME
      IF (IERR.EQ.1) CALL ULINE (LP,2)
      IF (IERR.EQ.1) WRITE (LP,450) NAME
440   FORMAT ('0**NOTE** FUNCTION ',2A4,' SUCCESSFULLY UPDATED.')
450   FORMAT ('0**NOTE** FUNCTION ',2A4,' NOT CHANGED.')
      IF (IERR.EQ.0) CALL HPFUNG (FBUF)
C
      RETURN
C
      END
