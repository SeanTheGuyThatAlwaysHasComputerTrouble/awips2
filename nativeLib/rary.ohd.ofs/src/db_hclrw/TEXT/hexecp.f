C MODULE HEXECP
C-----------------------------------------------------------------------
C
      SUBROUTINE HEXECP (ISTAT)
C
C  THIS ROUTINE WILL EXPAND A PROCEDURE. IT SUBSTITUTES ANY PARAMETER
C  VALUES AND WRITE THE CARDS TO A TEMPORARY FILE.
C
C  ARGUMENT LIST:
C
C      NAME     TYPE  I/O   DIM   DESCRIPTION
C      ------   ----  ---   ---   -----------
C      ISTAT      I    I     1    STATUS
C
      CHARACTER*1 ICARD(80),ITEMP(72)
      CHARACTER*1 NAMEP(8)
      CHARACTER*1 IC1(72)
      DIMENSION IRIGHT(2),LEFT(2)
      DIMENSION PRCNAM(2)
      DIMENSION IPARMS(20,150)
      PARAMETER (MIPBUF=2000)
      PARAMETER (MIDBUF=2000)
      PARAMETER (MDLOCL=2000)
      DIMENSION IPBUF(MIPBUF),IDBUF(MIDBUF),IDLOCL(MDLOCL)
C
      INCLUDE 'uiox'
      INCLUDE 'udebug'
      INCLUDE 'ufreei'
      INCLUDE 'udatas'
      INCLUDE 'hclcommon/hdatas'
      INCLUDE 'hclcommon/hprocc'
      INCLUDE 'hclcommon/hunits'
      INCLUDE 'hclcommon/hcomnd'
      INCLUDE 'hclcommon/hsvcrd'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_hclrw/RCS/hexecp.f,v $
     . $',                                                             '
     .$Id: hexecp.f,v 1.4 2001/06/19 12:02:16 dws Exp $
     . $' /
C    ===================================================================
C
      DATA LAND/4H&   /
      DATA ILPAR/4H(   /,IRPAR/4H)   /
C
C
      IF (IHCLTR.GT.0) WRITE (IOGDB,*) 'ENTER HEXECP'
C
C  SAVE NEXT COMMAND FROM ICBUF TO IPBSAV FOR HCARDI
      CALL UMEMOV (ICBUF,IPBSAV,80)
C
      IFIRST=1
      MPARMS=150
      MAXTMP=18
      MAXIC =18
      MAXPM=72
      NPARMS=0
      IERR=0
      REWIND KPROCC
C
C  READ FIRST CARD
      NC=1
      CALL HCARDR (NC,ISTAT)
      IF (ISTAT.NE.0) GO TO 270
      IFIELD=2
C
C  DETERMINE THE PROCEDURE NAME PROVIDED ON THE @EXEC LINE
      N=IFSTOP(IFIELD)-IFSTRT(IFIELD)+1
      MAXCHR=8
      IF (N.GT.MAXCHR) THEN
         WRITE (LP,310) MAXCHR
         IERR=1
         N=8
         ENDIF
      CALL UMEMST (IBLNK,PRCNAM,2)
      CALL UPACK1 (IBUF(IFSTRT(IFIELD)),PRCNAM,N)
C
C  GET THE PROCEDURE
      IT=1
      CALL HGTRCD (IT,PRCNAM,MIPBUF,IPBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 290
C
      IF (IHCLDB.GT.0) WRITE (IOGDB,320) (IPBUF(I),I=1,48)
C
C  CHECK IF PARAMETERS TO BE ASSIGNED VALUES
      IF (IPBUF(9).EQ.0) GO TO 30
C
C  GET DEFAULTS:
C     IF A LOCAL PROC GO TO LOCAL DEFINITION FILE
C     IF A GLOBAL PROC GO TO LOCAL DEFAULT OF GLOBAL DEFINITION FILE
C     (IF NONE GO TO GLOBAL DEFAULT FILE).
C
      IF (IT.LT.0) GO TO 10
C
C  IT IS A LOCAL PROC DEFINITION
      CALL HGTRDN (KDEFNL,IPBUF(7),IDBUF,MIDBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 290
      GO TO 20
C
C  IT IS A GLOBAL PROC DEFINITION
10    CALL HGTRDN (KDEFNG,IPBUF(8),IDBUF,MIDBUF,ISTAT)
      IF (ISTAT.NE.0) GO TO 290
C
C  GET LOCAL DEFAULT FOR GLOBAL DEFINITION
      CALL HGTRDN (KLDFGD,IPBUF(7),IDLOCL,MDLOCL,ISTAT)
      IF (ISTAT.NE.0) GO TO 290
C
C  CHECK IF A PROC DEFAULT
20    IF (IABS(IDBUF(6)).EQ.1) GO TO 30
         WRITE (LP,330) IPBUF(7),IPBUF(8)
         IERR=1
         WRITE (IOGDB,340) (IDBUF(J),J=1,48)
         GO TO 270
C
C  DEFAULT OKAY - PUT LINES PROVIDED WITH THE @EXEC COMMAND INTO
C  A HOLDING AREA FOR LATER USE.
30    IFIELD=IFIELD+1
      IF (IFIELD.LE.NFIELD) GO TO 40
         IF (NC.GE.NCARD) GO TO 80
         NC=NC+1
         CALL HCARDR (NC,ISTAT)
         IF (ISTAT.NE.0) GO TO 290
         IFIELD=1
C
C  ONLY PARAMETERS CAN BE PROVIDED ON THE @EXEC LINE - THEY MUST
C  BE OF THE FORM : PARM=VALUE
40    CALL HFEQLS (IFIELD,LEFT,IRIGHT,ISTRGT)
C
C  CHECK IF WAS PARM=VALUE
      IF (ISTRGT.GT.IFSTRT(IFIELD)) GO TO 50
         WRITE (LP,350) IFIELD
         IERR=1
         GO TO 30
C
C  MOVE INFO INTO PARMS ARRAY - PARM VALUES WILL BE PACKED TO SAVE SPACE
C  FORMAT IS ELEMENTS 1 AND 2 = PARAMETER NAME
C            ELEMENTS 3 THRU 20 = PARM VALUE (UP TO 72 CHARS)
50    IF (NPARMS.LT.MPARMS) GO TO 60
         WRITE (LP,360) MPARMS
         IERR=1
         GO TO 270
60    NPARMS=NPARMS+1
      CALL UMEMOV (LEFT,IPARMS(1,NPARMS),2)
      IF (IHCLDB.GT.0) WRITE (IOGDB,370) LEFT
C
C  PACK STRING (THEORETICALLY) INTO PARMS ARRAY BY REMOVING EXCESSIVE
C  BLANKS (MORE THAN 3 IN ROW ENCODED TO ALTERNATE FORM)
      LEN=IFSTOP(IFIELD)-ISTRGT+1
      IF (LEN.LE.MAXPM) GO TO 70
         WRITE (LP,380) MAXPM
         IERR=1
         GO TO 30
C
C  PLACE INTO PARMS ARRAY
70    CALL HPTSTR (IBUF(ISTRGT),LEN,IPARMS(3,NPARMS),ISTAT)
C
C  FINISHED WITH THIS PARAMETER NAME AND VALUE - CHECK IF MORE
      GO TO 30
C
C  HAVE @EXEC CARD PARMS IN ARRAY - EXPAND THE STORED PROC BY
C    1. PLACING ALL COMMANDS AND OTHER STATEMENTS ONTO A TEMPORARY
C       FILE AND
C    2. ALONG THE WAY SUPPLYING ANY PARAMETER WITH VALUES SUPPLIED
C       ON THE @EXEC LINE OR THE DEFAULTS STORED FOR THE PROC DEFINITION
C  DETERMINE THE NUMBER OF CARD IMAGES IN THE PROCEDURE AND PROCESS
C  EACH ONE.
C  EACH LINE OF THE PROC IS PROCESSED ONE CHARACTER AT A TIME,
C  WHEN A '&' IS FOUND THAT INDICATES A PARM THAT NEEDS TO BE
C  SUPPLIED A VALUE.  THE VALUE IS GOTTEN EITHER FROM ONE SUPPLIED
C  ON THE @EXEC LINE OR FROM THE PROC DEFINITION
80    K=10+IPBUF(9)*2
      NCDIMG=IPBUF(K)
      K=K+1
      DO 260 IC=1,NCDIMG
C     UNPACK THE CARD IMAGE
         LCARD=IPBUF(K)
         CALL HGTSTR (MAXIC,IPBUF(K+1),IC1,LENC,ISTAT)
         IF (IHCLDB.GT.0) WRITE (IOGDB,390) LENC,IC1
C     STRING IS IN IC1 1 CHAR PER BYTE - MUST MOVE TO CARD ARRAY 1 CHAR
C     AT A TIME LOOKING FOR PARMS
C     IF COMMENT MOVE WHOLE CARD
C     IF COMMENT IN MIDDLE MOVE REST WITHOUT LOOKING FOR PARM
         ICMNT=0
C     LX IS THE COUNTER FOR THE NUMBER OF CHARACTERS PROCESSED IN THE
C     STORED PROC
C     LC IS THE COUNTER FOR THE NUMBER OF CHARACTERS PLACED IN THE CARD
C     ARRAY - THIS ARRAY IS WRITTEN TO THE TEMPORARY CARD IMAGE FILE IN
C     EXPANDING THE STORED PROC
         LX=0
         LC=0
         CALL UMEMST (IBLNK,ICARD,20)
90       LX=LX+1
         IC2=IBLNK
         CALL UMOVEX (IC1(LX),1,IC2,1,1)
         IF (IHCLDB.GT.0) WRITE (IOGDB,400) IC2
         IF (IC2.EQ.IDOLR) ICMNT=1
         IF (ICMNT.EQ.1) GO TO 250
         IF (IC2.NE.LAND) GO TO 240
         ILP=0
C     FOUND A PARAMETER THAT MUST BE PROVIDED A VALUE.
C     CHECK FOR BLANK BYTE TO FIND END
         CALL UMEMST (IBLNK,NAMEP,2)
100      LX=LX+1
         IC2=IBLNK
         CALL UMOVEX (IC1(LX),1,IC2,1,1)
         IF (IC2.EQ.IBLNK.OR.IC2.EQ.COMMA) GO TO 120
         IF (IC2.EQ.IEQUAL.OR.IC2.EQ.ILPAR.OR.IC2.EQ.IRPAR) GO TO 120
         IF (ILP.LT.8) GO TO 110
            WRITE (LP,410) NAMEP
            IERR=1
            GO TO 270
110      ILP=ILP+1
         NAMEP(ILP)=IC1(LX)
         IF (LX.LT.LENC) GO TO 100
         IC1(LX)=' '
C     CHECK FOR PARM VALUE - FIRST SEE IF PROVIDED ON @EXEC LINE
120      IF (NPARMS.EQ.0) GO TO 140
            DO 130 IP=1,NPARMS
               CALL UNAMCP (NAMEP,IPARMS(1,IP),II)
               IF (II.EQ.0) GO TO 170
130            CONTINUE
C     PARM VALUE NOT GIVEN ON @EXEC CARD TRY DEFAULTS
C     SEARCH DEFINITION RECORD
140      IF (IPBUF(9).EQ.0) GO TO 160
            NREC=IPBUF(9)
            IPX=10
            DO 150 IP=1,NREC
               CALL UNAMCP (NAMEP,IPBUF(IPX),II)
               IF (II.EQ.0) GO TO 210
               IPX=IPX+2
150            CONTINUE
160      WRITE (LP,420) NAMEP,IC1
         IERR=1
         GO TO 90
C     FOUND PARM VALUE FROM @EXEC CARD - MOVE VALUE FROM SAVED ARRAY
170      CALL HGTSTR (MAXTMP,IPARMS(3,IP),ITEMP,LEN,ISTAT)
C     CHECK IF MAXIMUM CHARACTER EXCEEDED
180      IF (LC+LEN+1.LE.71) GO TO 190
         CALL HWPROC (ICARD,IFIRST,ISTAT)
         CALL UMEMST (IBLNK,ICARD,20)
         LC=0
C     FILL THE CARD ARRAY WITH PARM VALUE
190      DO 200 I=1,LEN
            LC=LC+1
            ICARD(LC)=ITEMP(I)
200         CONTINUE
         IF (IHCLDB.GT.0) WRITE (IOGDB,430) LEN,ICARD
         GO TO 250
C     FOUND PARAMETER IN PROC DEFINITION RECORD - NEED TO GET DEFAULT
C     COMPUTE LOCATION OF DEFAULT IN DEFAULT ARRAY
210      IDP=(IP-1)*14+10
         CALL HGTSTR (MAXTMP,IDBUF(IDP),ITEMP,LEN,ISTAT)
C     CHECK IF GLOBAL OR LOCAL
         IF (IT.GT.0) GO TO 180
         IF (IDLOCL(7).LE.0) GO TO 180
C     CHECK FOR PARM NUMBER IN LOCAL DEFAULT
         ND=IDLOCL(7)
         IX=8
         DO 220 I=1,ND
            IF (IDLOCL(IX).EQ.IP) GO TO 230
            IX=IX+IDLOCL(IX+1)+2
220         CONTINUE
C     DEFAULT NOT FOUND IN LOCAL DEFAULT FILE - USE GLOBAL
         GO TO 180
C     USE LOCAL DEFAULT
230      CALL HGTSTR (MAXTMP,IDLOCL(IX+2),ITEMP,LEN,ISTAT)
         GO TO 180
C     CHECK IF CARD ARRAY ALMOST FULL
240      IF (IC2.NE.IBLNK.OR.LC.LT.60) GO TO 250
            CALL HWPROC (ICARD,IFIRST,ISTAT)
            LC=0
            CALL UMEMST (IBLNK,ICARD,20)
C     A NON-SUBSTITUTION CHARACTER FOUND - PLACE IT INTO CARD ARRAY
250      LC=LC+1
         ICARD(LC)=IC1(LX)
C     CHECK FOR CARD OVERFLOW
         IF (LX.LT.LENC) GO TO 90
         CALL HWPROC (ICARD,IFIRST,ISTAT)
         K=K+LCARD+1
260      CONTINUE
C
C   SAVE OLD VALUE AND RESET ICD TO TEMP UNIT
      ICDSAV=ICD
      ICD=KPROCC
      ENDFILE KPROCC
      REWIND KPROCC
      IPROCF=1
      GO TO 290
C
270   ISTAT=IERR
C
290   IF (IHCLTR.GT.0) WRITE (IOGDB,*) 'EXIT HEXECP - ISTAT=',ISTAT
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
310   FORMAT ('0**ERROR** NUMBER OF CHARACTERS IN PROCDURE NAME ',
     *   'EXCEEDS ',I2,' CHARACTERS.')
320   FORMAT (' IPBUF=',20I5)
330   FORMAT ('0**ERROR** DEFAULT RECORDS ',I5,1X,I5,' INVALID.')
340   FORMAT (' IDBUF=',16I7)
350   FORMAT ('0**ERROR** MISSING PARAMETER NAME IN FIELD ',I2,'.')
360   FORMAT ('0**ERROR** MORE PARAMETERS ARE BEING SET ON THE ',
     *   '@EXEC STATEMENT THAN ARE ALLOWED (',I2,').')
370   FORMAT (' IN HEXECP - LEFT=',2A4)
380   FORMAT ('0**ERROR** PARAMETER VALUE EXCEEDS ',I2,' CHARACTERS.')
390   FORMAT (' LENC=',I3,' IC1=',80A1)
400   FORMAT (' IC2=',A4)
410   FORMAT ('0**ERROR** PARAMETER NAME TOO LONG : ',8A1)
420   FORMAT ('0**ERROR** VALUE MISSING FOR PARAMETER: ',8A1,
     *   ' INPUT=',72A1)
430   FORMAT (' IN HEXECP - LEN=',I4,' ICARD=',80A1)
C
      END
