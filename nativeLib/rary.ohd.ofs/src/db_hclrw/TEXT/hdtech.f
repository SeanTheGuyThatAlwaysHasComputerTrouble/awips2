C MODULE HDTECH
C-----------------------------------------------------------------------
C
      SUBROUTINE HDTECH (IGLFLG,ISTAT)
C
C  THIS ROUTINE DEFINES A GLOBAL OR LOCAL TECHNIQUE.
C
C     ARGUMENT LIST:
C
C       NAME    TYPE  I/O   DIM   DESCRIPTION
C       ------  ----  ---   ---   -----------
C       IGLFLG    I    I      1   GLOBAL/LOCAL FLAG:
C                                   -=GLOBAL
C                                   +=LOCAL
C
      CHARACTER*8 RTNNAM,RTNOLD
C
      DIMENSION ITDEF(512),IDFLT(512)
      DIMENSION IRIGHT(2),LEFT(2)
      DIMENSION IANAME(2)
      DIMENSION IANS(20)
      DIMENSION NAME(2)
      DIMENSION NONAME(2,4)
      DIMENSION WORKB(1024)
C
      EQUIVALENCE (ITDEF(1),WORKB(1)),(IDFLT(1),WORKB(513))
      EQUIVALENCE (NUMGAR,HCNTL(9,2)),(NUMLAR,HCNTL(9,1))
C
      INCLUDE 'uiox'
      INCLUDE 'udebug'
      INCLUDE 'ufreei'
      INCLUDE 'udatas'
      INCLUDE 'hclcommon/hdatas'
      INCLUDE 'hclcommon/hwords'
      INCLUDE 'hclcommon/hcntrl'
      INCLUDE 'hclcommon/hcomnd'
      INCLUDE 'hclcommon/hdflts'
      INCLUDE 'hclcommon/hargmn'
      INCLUDE 'hclcommon/hgargm'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/db_hclrw/RCS/hdtech.f,v $
     . $',                                                             '
     .$Id: hdtech.f,v 1.2 2002/02/11 20:36:20 dws Exp $
     . $' /
C    ===================================================================
C
      DATA LETZ/4HZ   /
      DATA LQUOTE/4H'   /
      DATA ICOLON/4H:   /
      DATA MONAME/4/
      DATA NONAME/4HINCL,4HUDE ,4HINCL,4H    ,
     *            4HMOD ,4H    ,4HEND ,4H    /
C
C
      RTNNAM='HDTECH'
C
      IF (IHCLTR.GT.0) WRITE (IOGDB,*) 'ENTER ',RTNNAM
C
      IOPNUM=-1
      CALL FSTWHR (RTNNAM,IOPNUM,RTNOLD,IOLDOP)
C
      ISTAT=0
C
      LWORKB=1024
      LTDEF=512
      LDFLT=512
      MANS=20
C
C  SAVE ARGUMENT COUNTERS
      NUMLSV=NUMLAR
      NUMGSV=NUMGAR
C
C  READ CARD FROM FILE
      NNCARD=1
      CALL HCARDR (NNCARD,ISTAT)
      IF (ISTAT.NE.0) GO TO 390
C
C  CHECK NAME AND PASSWORD
      IFIELD=3
      IF (IFIELD.LE.NFIELD) GO TO 10
         CALL ULINE (LP,2)
         WRITE (LP,400)
         ISTAT=1
        GO TO 70
C
10    CALL HNMPSW (IFIELD,NAME,IPASS,ISTAT)
      CALL HCKPSW (IGLFLG,IPASS,ISTAT)
      IF (ISTAT.NE.0) GO TO 70
C
C  CHECK IF ALREADY DEFINED
      ITYPE=3
      CALL HFNDDF (NAME,IREC,ITYPE,IRECX)
      IF (IREC.EQ.0) GO TO 20
         CALL ULINE (LP,2)
         WRITE (LP,410) NAME
         CALL ERROR
         ISTAT=1
         GO TO 320
C
C  MAKE SURE NAME IS NOT A RESERVED WORD
20    DO 30 I=1,MONAME
         CALL UNAMCP (NAME,NONAME(1,I),IMATCH)
         IF (IMATCH.NE.0) GO TO 30
         CALL ULINE (LP,2)
         WRITE (LP,420) NAME
         ISTAT=1
30       CONTINUE
C
C  CHECK IF GLOBAL NAME IS SAME AS A LOCAL
      ISTA=0
      IF (IGLFLG.LT.0) CALL HSRLDR (NAME,3,2,IREC,ISTA)
      IF (ISTA.NE.0) ISTAT=ISTA
C
C  CHECK FOR UNIVERSAL FLAG
      IFL=1
      IF (IFIELD.GT.NFIELD) GO TO 60
      CALL HFEQLS (IFIELD,LEFT,IRIGHT,ISTRGT)
      IF (IRIGHT(1).EQ.LUNIV(1)) GO TO 50
      IF (LEFT(1).EQ.LUNIV(1).AND.LEFT(2).EQ.IBLNK) GO TO 40
      IF (LEFT(1).EQ.LUNIV(1).AND.LEFT(2).EQ.LUNIV(2)) GO TO 40
      IF (IFSTOP(IFIELD)-IFSTRT(IFIELD).GT.1) GO TO 60
C
C  CHECK FOR Y OR N
40    IFL=-1
      IF (IRIGHT(1).EQ.LETY) IFL=1
      IF (IRIGHT(1).EQ.LETN) IFL=0
      IF (IFL.GE.0) GO TO 50
      CALL ULINE (LP,2)
      WRITE (LP,430) IFIELD
      ISTAT=1
50    IFIELD=IFIELD+1
C
C  SET UP TECHNIQUE RECORD
60    CALL UMEMST (0,WORKB,LWORKB)
      ITDEF(3)=IGLFLG*3
      CALL UMEMOV (NAME,ITDEF(4),2)
      ITDEF(6)=IPASS
      ITDEF(7)=IFL
      NA=10
      ND=7
C
C  SET UP DEFAULT RECORD
      IDFLT(2)=1
      IDFLT(3)=IGLFLG*5
C
      CALL UMEMOV (NAME,IDFLT(4),2)
      IDFLT(6)=ITDEF(3)
C
C  CHECK ARGUMENTS
70    IF (IFIELD.LE.NFIELD) GO TO 80
      IF (NNCARD.GE.NCARD) GO TO 300
C
C  READ ANOTHER CARD
      NNCARD=NNCARD+1
      CALL HCARDR (NNCARD,IERR)
      IF (IERR.NE.0) GO TO 310
      IFIELD=1
C
C  CHECK FOR COLON
80    CALL USRCHR (ICOLON,IFSTRT(IFIELD),IFSTOP(IFIELD),IX)
      IF (IX.NE.0) GO TO 100
C
C  NO COLON
90    CALL ULINE (LP,2)
      WRITE (LP,440) IFIELD
      ISTAT=1
      IFIELD=IFIELD+1
      GO TO 70
C
C  FOUND A : MAKE SURE A: OR ARG:
100   J=IFSTRT(IFIELD)
      N=IX-J+1
      IF (N.GT.4) N=4
      CALL UPACK1 (IBUF(J),ICHK,N)
      IF (ICHK.NE.LACOLN.AND.ICHK.NE.LARGCL) GO TO 90
      IX=IX+1
      IF (IBUF(IX).EQ.LQUOTE) IX=IX+1
C
C  NOW ARGUMENT NAME - 8 CHARS MAX
      CALL HFEQLS (IFIELD,LEFT,IRIGHT,ISTRGT)
C
C  CHECK FOR EQUAL SIGN
      IF (ISTRGT.EQ.IFSTRT(IFIELD)) GO TO 110
C
C  YES - NAME IS IN LEFT
      NOEQ=0
C
C  FIND BEG AND END OF ARG NAME
      CALL USRCHR (IEQUAL,IX,ISTRGT,IEND)
      IEND=IEND-1
      IF (IBUF(IEND).EQ.LQUOTE) IEND=IEND-1
      N=IEND-IX+1
      GO TO 120
110   NOEQ=1
      N=IFSTOP(IFIELD)-IX+1
C
C  CHECK NAME LENGTH
120   IF (N.LE.8) GO TO 130
         I=IFSTOP(IFIELD)
         CALL ULINE (LP,2)
         WRITE (LP,450) (IBUF(K),K=J,I)
         N=8
         CALL WARN
C  SET ARQUMENT NAME
130   CALL UMEMST (IBLNK,IANAME,2)
      CALL UPACK1 (IBUF(IX),IANAME,N)
C
C  MAKE SURE NAME IS UNIQUE
      IF (ITDEF(10).EQ.0) GO TO 160
      J=ITDEF(10)
      K=11
      DO 150 I=1,J
         CALL UNAMCP (ITDEF(K),IANAME,IMATCH)
         IF (IMATCH.NE.0) GO TO 140
            CALL ULINE (LP,2)
            WRITE (LP,460) IANAME
            ISTAT=1
            GO TO 160
140      K=K+4
150      CONTINUE
C
160   ITYPE=1
      ITYPE1=0
      IF (NOEQ.EQ.0) GO TO 170
      IANS(1)=0
      NANS=1
      GO TO 180
C
C  NOW WORK ON ARGUMENT ITSELF
170   CALL HCKARG (ISTRGT,IFSTOP(IFIELD),ITYPE,IANS,MANS,NANS,IERR)
      IF (IERR.NE.0) ISTAT=1
C
C  CHECK IF TYPE IS CHARACTER STRING
      IF (ITYPE.EQ.3) ITYPE=-(IFSTOP(IFIELD)-ISTRGT+1)
C
C  CHECK FOR A TYPE =FIELD
180   IFIELD=IFIELD+1
      IF (IFIELD.GT.NFIELD) GO TO 250
      J=IFSTRT(IFIELD)
      IF (IBUF(J).EQ.LETA) GO TO 250
C
      CALL HCKTYP (IFIELD,ITYPE1,IERR)
      IF (IERR.NE.0) ISTAT=1
      IFIELD=IFIELD+1
C
C  CHECK IF NO DEFAULT VALUE SET IF SO MAY NEED TO USE DEFAULT STRNG
C  OR DATE
      IF (NOEQ.EQ.0) GO TO 200
      IF (ITYPE1.EQ.5) GO TO 190
      IF (ITYPE1.GT.0) GO TO 210
C
C  USE BLANKS AS DEFAULT
      NANS=1
      CALL HPTSTR (IBLNK,NANS,IANS,IERR)
      IF (IERR.NE.0) ISTAT=1
      GO TO 210
C
C  MAKE DATE DEFAULT *12Z IN LOCAL TIME
190   CALL UMEMST (0,IANS,7)
      IANS(2)=IASTR
      IANS(3)=0
      IANS(4)=IASTR
      IANS(5)=12-TIME(2)
      IANS(6)=TIME(3)
      NANS=7
      GO TO 210
C
200   IF (ITYPE1.GT.0) GO TO 220
C
C  TYPE IS CHARACTERS - CHANGE WHAT EVER IT WAS IF NOT CHARS
      IF (ITYPE.LT.0) GO TO 210
      NANS=IFSTOP(IFIELD-2)-ISTRGT+1
      CALL HPTSTR (IBUF(ISTRGT),NANS,IANS,IERR)
      IF (IERR.NE.0) ISTAT=1
210   ITYPE=ITYPE1
      GO TO 250
C
220   IF (ITYPE1.NE.2.OR.ITYPE.NE.1) GO TO 230
      ITYPE=2
      R=IANS(1)
      CALL USWITC (R,IANS(1))
C
C  CHECK IF DATE WAS CALLED AN INTEGER
230   IF (ITYPE1.NE.5.OR.ITYPE.NE.1) GO TO 240
      CALL HCKDAT (ISTRGT,IFSTOP(IFIELD-2),IANS,IERR)
      IF (IERR.EQ.0) ITYPE=ITYPE1
      NANS=7
C
C  NEED TO FIX ANS VALUES IF CHANGED TYPE
240   IF (ITYPE.EQ.ITYPE1) GO TO 250
         K=IFIELD-1
         CALL ULINE (LP,2)
         WRITE (LP,470) K
         ISTAT=1
         GO TO 70
C
C  MOVE ARG INFO INTO ARRAY
250   IF (ISTAT.NE.0) GO TO 70
      NA=NA+1
      IF (NA.GT.LTDEF) GO TO 380
      ITDEF(10)=ITDEF(10)+1
      CALL UMEMOV (IANAME,ITDEF(NA),2)
      ITDEF(NA+2)=ITYPE
      IADD=0
      IF (ITYPE.EQ.5) IADD=6
      IF (ITYPE.LT.0) IADD=(-ITYPE+8)/4-1
      IF (IGLFLG.LT.0) GO TO 270
      IF (NUMLAR+IADD.LT.MARG) GO TO 260
         CALL ULINE (LP,2)
         WRITE (LP,480) 'LOCAL',MARG
         ISTAT=1
         GO TO 390
260   NUMLAR=NUMLAR+1
      ITDEF(NA+3)=NUMLAR
      NUMLAR=NUMLAR+IADD
      GO TO 290
C
C  GLOBAL ARG
270   IF (NUMGAR+IADD.LT.MGARG) GO TO 280
         CALL ULINE (LP,2)
         WRITE (LP,480) 'GLOBAL',MGARG
         ISTAT=1
         GO TO 390
280   NUMGAR=NUMGAR+1
      ITDEF(NA+3)=-NUMGAR
      NUMGAR=NUMGAR+IADD
290   NA=NA+3
C
C  SET UP DEFAULT FOR ARGUMENT
C  ND IS INDEX OF ARGUMENT IN DEFAULT RECORD
      IDFLT(7)=IDFLT(7)+1
      ND=ND+1
      IF (ND.GT.LDFLT) GO TO 380
      IDFLT(ND)=ITDEF(NA)
      IADD=NANS
      IF (ITYPE.LT.0) IADD=(-ITYPE+8)/4
      IDFLT(ND+1)=IADD
      CALL UMEMOV (IANS,IDFLT(ND+2),NANS)
      ND=ND+IADD+1
      GO TO 70
C
300   IF (ISTAT.EQ.0) GO TO 330
C
310   CALL ULINE (LP,2)
      WRITE (LP,490)
C
320   NUMLAR=NUMLSV
      NUMGAR=NUMGSV
      GO TO 390
C
C  IF LOCAL, ENTER INTO LOCAL DEFINITION REFERENCE FILE
330   IF (IGLFLG.GT.0) CALL HPUTLD (3,NAME,0,IRIGHT,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
      IF (NA.EQ.9) GO TO 370
C
C  LOCAL IF LOCAL TECH ONLY
      IF (IGLFLG.LT.0) GO TO 350
      ITDEF(8)=HCNTL(7,1)+1
      CALL HPTRCD (5,ND,IDFLT,ISTAT)
      IF (ISTAT.EQ.0) GO TO 370
C
340   CALL ULINE (LP,2)
      WRITE (LP,500)
      GO TO 310
C
C  NOW GLOBAL ONLY IF GLOBAL TECHNIQUE
350   ITDEF(9)=HCNTL(7,2)+1
      CALL HPTRCD (-5,ND,IDFLT,ISTAT)
      IF (ISTAT.NE.0) GO TO 340
C
C  RESERVE NUMBER OF RECORDS IN LOCAL DEFAULT
      IF (HCNTL(13,2)+IDFLT(1).LE.HCNTL(12,2)) GO TO 360
         CALL ULINE (LP,2)
         WRITE (LP,510)
         GO TO 310
360   ITDEF(8)= (HCNTL(13,2)+1)
      HCNTL(13,2)=HCNTL(13,2)+IDFLT(1)
C
370   CALL HPTRCD (ITDEF(3),NA,ITDEF,ISTAT)
      IF (ISTAT.NE.0) GO TO 310
C
      IF (IGLFLG.LT.0) CALL ULINE (LP,2)
      IF (IGLFLG.LT.0) WRITE (LP,520) NAME,'GLOBAL'
      IF (IGLFLG.GT.0) CALL ULINE (LP,2)
      IF (IGLFLG.GT.0) WRITE (LP,520) NAME,'LOCAL'
      CALL HPTECG (ITDEF)
      GO TO 390
C
380   CALL ULINE (LP,2)
      WRITE (LP,530) NA,ND
      GO TO 310
C
390   IF (IHCLTR.GT.0) WRITE (IOGDB,*) 'EXIT ',RTNNAM,' - ISTAT=',ISTAT
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
400   FORMAT ('0**ERROR** MISSING TECHNIQUE NAME.')
410   FORMAT ('0**ERROR** TECHNIQUE ',2A4,' ALREADY DEFINED.')
420   FORMAT ('0**ERROR** THE NAME ',2A4,' CANNOT BE USED FOR A ',
     *   'TECHNIQUE.')
430   FORMAT ('0**ERROR** UNIVERSAL FLAG IN FIELD ',I2,
     *   ' MUST BE Y OR N.')
440   FORMAT ('0**ERROR** ARGUMENT EXPECTED IN FIELD ',I2,'.')
450   FORMAT ('0**WARNING** ARGUMENT NAME TRUNCATED TO 8 CHARACTERS : ',
     *   20A1)
460   FORMAT ('0**ERROR** ARGUMENT NAME ',2A4,' ALREADY USED.')
470   FORMAT ('0**ERROR** ARGUMENT TYPE DOES NOT MATCH DEFAULT ',
     *   'IN FIELD ',I2,'.')
480   FORMAT ('0**ERROR** MAXIMUM NUMBER OF ',A,
     *   ' ARGUMENTS (',I4,') EXCEEDED.')
490   FORMAT ('0**ERROR** TECHNIQUE NOT DEFINED.')
500   FORMAT ('0**ERROR** DEFAULT RECORD NOT ENTERED.')
510   FORMAT ('0**ERROR** LOCAL DEFAULT OF GLOBAL DEFINITION FILE ',
     *   'IS FULL.')
520   FORMAT ('0**NOTE** TECHNIQUE ',2A4,' DEFINED AS ',A,'.')
530   FORMAT ('0**ERROR** TECHNIQUE ARRAYS ARE FULL AT',2I5)
C
      END
