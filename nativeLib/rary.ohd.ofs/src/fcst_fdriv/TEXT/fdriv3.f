C MEMBER FDRIV3
C  (from old member FCFDRIV3)
C-----------------------------------------------------------------------
C
C @PROCESS LVL(77)
C
C                             LAST UPDATE: 12/07/2000 BY TLS
C
      SUBROUTINE FDRIV3 (P, MP, C, MC, T, MT, D, MD, TS, MTS, IHZERO,
     1                   NUMOP, IERR)
C
C  THIS ROUTINE CALLS THE EXECUTION ROUTINES FOR OPERATIONS 41 THRU 64.
C
C  ROUTINE INITIALLY WRITTEN BY ERIC ANDERSON - HRL   DECEMBER 1991
C-----------------------------------------------------------------------
C  PASSED ARGUMENTS
C   NAME  I/O
C  ------ ---
C  P       I  REAL THE ENTIRE P ARRAY
C  MP      I  INT  DIMENSION OF THE P()
C  C      I/O REAL THE ENTIRE C ARRAY
C  MC      I  INT  DIMENSION OF THE C()
C  T       I  INT  THE ENTIRE T ARRAY
C  MT      I  INT  DIMENSION OF THE T()
C  D      I/O REAL THE ENTIRE D ARRAY
C  MD      I  INT  DIMENSION OF THE D()
C  TS      I  REAL THE ENTIRE TS ARRAY
C  MTS     I  INT  DIMENSION OF THE TS()
C  IHZERO  I  INT  ZERO HOUR FOR THE PERIOD TO BE EXECUTED
C  NUMOP   I  INT  NUMBER OF THE OPERATION TO BE EXECUTED
C  IERR    O  INT  = 1 IF EX() ROUTINE FOR THIS OPERATION NOT INCLUDED
C
      INTEGER T(MT), MP, MC, MT, MD, MTS, IHZERO, NUMOP, IERR
      REAL    P(MP), C(MC), D(MD), TS(MTS)
C
C  LOCAL VARIABLES
C   NAME
C  ------
C  NUM     NUMBER USED IN COMPUTED GO TO STATEMENT
C  IDT     COMPUTATIONAL TIME INTERVAL
C  NB      NUMBER OF BASINS
C  IT
C  NW
C  ITSIZE
C  LD?     A LOCATION IN THE D ARRAY
C  LP?     A LOCATION IN THE P ARRAY
C  LT?     A LOCATION IN THE T ARRAY
C
      INTEGER NUM, IDT, NB, IT, NW, ITSIZE,
     1        LD1, LD2, LD3, LD4, LD5, LD6, LD7, LD8, LD9,
     2        LD10, LD11, LD12, LD13, LD14, LD15, LD16, LD17,
     3        LP1, LP4, LP5,
     4        LT1, LT2, LT3, LT4, LT5, LT6, LT7
C.......................................................................
C  COMMON BLOCKS.
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/FPROG/MAINUM,VERS,VDATE(2),PNAME(5),NDD
      COMMON/FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     1LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/FCOPPT/LOCT,LPM,LCO
c      INCLUDE 'common/fdbug'
c      INCLUDE 'common/fctime'
c      INCLUDE 'common/fprog'
c      INCLUDE 'common/fcoppt'

C
C  =================================== RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob7/rfc/ofs/src/fcst_fdriv/RCS/fdriv3.f,v $
     . $',                                                             '
     .$Id: fdriv3.f,v 1.17 2004/09/24 20:52:37 jgofus Exp $
     . $' /
C  =====================================================================
C
C.......................................................................
C  TRACE LEVEL FOR THIS ROUTINE=1.
C

      IF (ITRACE .GE. 1) WRITE (IODBUG,1000)
 1000 FORMAT('0','** FDRIV3 ENTERED')
C.......................................................................
C  GO TO THE SECTION FOR THE CURRENT OPERATION.
C
      NUM = NUMOP - 40
      GO TO (41, 42, 43, 44, 45, 46, 99, 48, 49, 50,
     1       51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
     2       61, 62, 63, 64),NUM
      GO TO 99
C.......................................................................
C  API-HAR2 OPERATION #41 - 2ND VERSION OF THE HARRISBURG RFC API
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET LOCATIONS OF DIFFERENT DATA IN THE D ARRAY FROM THE T ARRAY
C   NOW CALL THE EXECUTION ROUTINE.
C
   41 IDT = P(LPM+25)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+6)
      LD3 = T(LOCT+5)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      LD6 = T(LOCT+9)
      CALL EX41 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3), D(LD4), D(LD5),
     1           D(LD6))
      GO TO 100
C.......................................................................
C  RSNWELEV OPERATION #42 - RAIN-SNOW ELEVATION
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET LOCATIONS OF DIFFERENT DATA IN THE D ARRAY FROM THE T ARRAY
C   NOW CALL THE EXECUTION ROUTINE.
C
   42 IDT = P(LPM+1)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      CALL EX42 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3))
      GO TO 100
C.......................................................................
C  API-HFD  OPERATION #43 - THE TAUNTON RFC HARTFORD API
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET LOCATIONS OF DIFFERENT DATA IN THE D ARRAY FROM THE T ARRAY
C   NOW CALL THE EXECUTION ROUTINE.
C
   43 IDT = P(LPM+23)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      CALL EX43 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3), D(LD4), D(LD5))
      GO TO 100
C.......................................................................
C  SARROUTE OPERATION #44 - SSARR ROUTING
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF BEGIN INTERVAL INFLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF END INTERVAL INFLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF BEGIN INTERVAL OUTFLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF END INTERVAL OUTFLOW IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   44 IDT = P(LPM+37)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      CALL EX44 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3), D(LD4))
      GO TO 100
C.......................................................................
C  DELTA-TS OPERATION #45 - RATE OF CHANGE OF TIME SERIES
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET LOCATIONS OF DIFFERENT DATA IN THE D ARRAY FROM THE T ARRAY
C   NOW CALL THE EXECUTION ROUTINE.
C
   45 IDT = P(LPM+4)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      CALL EX45 (P(LPM), C(LCO), D(LD1), D(LD2))
      GO TO 100
C.......................................................................
C  NOMSNG   OPERATION #46 - NO MISSING TIME SERIES
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET LOCATIONS OF DIFFERENT DATA IN THE D ARRAY FROM THE T ARRAY
C   NOW CALL THE EXECUTION ROUTINE.
C
   46 IDT = P(LPM+4)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      CALL EX46 (P(LPM), C(LCO), D(LD1), D(LD2))
      GO TO 100
C.......................................................................
C  MULT/DIV OPERATION #48 - MULTIPLY AND DIVIDE TIME SERIES
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF 1ST INPUT TS IN THE D() FROM THE T().
C   GET THE LOCATION OF 2ND INPUT TS IN THE D() FROM THE T().
C   GET THE LOCATION OF OUTPUT TS IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   48 IDT = P(LPM+4)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      CALL EX48 (P(LPM), D(LD1), D(LD2), D(LD3))
      GO TO 100
C.......................................................................
C  BEGASSIM OPERATION #49 - MARK BEGINNING OF ASSIMILATOR LOOP
C  SHOULD NEVER GET HERE
C
   49 CONTINUE
      GO TO 100
C.......................................................................
C  ASSIM    OPERATION #50 -  ASSIMILATOR OPERATION
C
   50 NB = T(LOCT+4)                    !NBASINS
      NW  = T(LOCT+7+NB*5)              !NWORK + LWORK+MAX
      IT = NDD * NB
      LP1 = T(LOCT+2)                   !PO
      LT1 = LOCT+5                      !IP_PR
      LT2 = LOCT+5+NB                   !IPR_IDT
      LD1 = NW                          !WP_B
      LD2 = NW + NB                     !WP_B_PRD
      LD3 = NW + NB + IT                !WS_B
      LD4 = NW + 2*NB + IT              !RKPMIN
      LD5 = NW + 3*NB + IT              !RKPMAX
      LD6 = NW + 4*NB + IT              !IST_OP
      LD7 = NW + 5*NB + IT              !RKSMIN
      LD8 = NW + 6*NB + IT              !RKSMAX
      LD9 = NW + 7*NB + IT              !ISTNF
      LT3 = T(LOCT + 5 + NB*4)          !QSIM
      LT4 = T(LOCT + 6 + NB*4)          !QOBS
      LT5 = LOCT + 7 + NB*4             !IP_KP
      LD10 = NW + 13*NB + IT            !RKPKS
      LD11 = NW + 14*NB + 2*IT          !IX
      LD12 = NW + 15*NB + 3*IT          !XN
      LD13 = NW + 16*NB + 4*IT          !XV
      LD14 = NW + 17*NB + 5*IT          !RKPOLD
      LD15 = NW + 17*NB + 6*IT          !TEMPTS
      LD16 = NW + 17*NB + 6*IT+ (NB+IT)*(NB+IT)         !TEMPTS2
      LT6 = LOCT+5+NB*2                 !IP_RRPO
      LT7 =  LOCT+5+NB*3                !IP_RRCO
      LP4 = P(LP1+23)                   !ROPTY
      LP5 = P(LP1 + 24)                 !ROPID
      LD17 = NW + 20*NB + 9*IT + (NB+IT)*(NB+IT)        !ARRAY
      ITSIZE = IT + NB
C
      CALL EX50 (P, MP, C, MC, T, MT, TS, MTS, D, MD, IHZERO,
     1 P(LP1), T(LT1), T(LT2), D(LD1), D(LD2), D(LD3), D(LD4), D(LD5),
     2 D(LD6), D(LD7), D(LD8), D(LD9), D(LT3), D(LT4), T(LT5), D(LD10),
     3 D(LD11), D(LD12), D(LD13), D(LD14), D(LD15), D(LD16),
     4 T(LT6), T(LT7),
     5 P(LP1+LP4-1), P(LP1+LP5-1), D(LD17), ITSIZE)
      GO TO 100
C.......................................................................
C  SSARRESV OPERATION #51 - SSARR RESERVOIR SIMULATION
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF WORK SPACE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIME SERIES IN THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
 51   IDT = P(LPM+6)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LT1 = LOCT+5
      CALL EX51 (P(LPM), C(LCO), D, T(LT1), D(LD1))
      GO TO 100
C.......................................................................
C  SUMPOINT OPERATION #52 - SSARR SUMMING POINT
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF BEGIN INTERVAL OUTPUT IN THE D() FROM THE T().
C   GET THE LOCATION OF END INTERVAL OUTPUT IN THE D() FROM THE T().
C   GET THE LOCATION OF THE FIRST INFOLW TIME SERIES IN THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
 52   IDT = P(LPM+23)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LT1 = LOCT+6
      CALL EX52 (P(LPM), C(LCO), D(LD1), D(LD2), T(LT1), D)
      GO TO 100
C.......................................................................
C  LOOKUP3  OPERATION #53 - 3-VARIABLE LOOKUP
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF 1ST INDEPENDENT IN THE D() FROM THE T().
C   GET THE LOCATION OF 2ND INDEPENDENT IN THE D() FROM THE T().
C   GET THE LOCATION OF DEPENDENT IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   53 IDT = P(LPM+23)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      CALL EX53 (P(LPM), D(LD1), D(LD2), D(LD3))
      GO TO 100
C.......................................................................
C  SWB-NILE  OPERATION #54 - NILE SIMPLE WATER BALANCE
C
C   COMPUTATIONAL TIME INTERVAL IS OBTAINED FROM P ARRAY
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF PRECIPITATION (RAIN+SNOWMELT) IN THE D ARRAY.
C   GET THE LOCATION OF TOTAL RUNOFF IN THE D ARRAY.
C   GET THE LOCATION OF POTENTIAL EVAPORATION IN THE D ARRAY.
C   GET THE LOCATION OF STORM RUNOFF IN THE D ARRAY.
C   GET THE LOCATION OF GROUNDWATER RUNOFF OR DISCHARGE IN THE D ARRAY.
C   GET THE LOCATION OF SOIL MOISTURE CONTENTS IN THE D ARRAY.
C   GET THE LOCATION OF AIR TEMPERATURE IN THE D ARRAY.
C   GET THE LOCATION OF PRECIPITATION (RAIN+SNOWFALL) IN THE D ARRAY.
C   GET THE LOCATION OF WATER-EQUIVALENT OF SNOW IN THE D ARRAY.
C   GET THE LOCATION OF FROST EFFICIENCY INDEX IN THE D ARRAY.
C   GET THE LOCATION OF SNOWFALL IN THE D ARRAY.

C   NOW CALL THE EXECUTION ROUTINE.
C
   54 IDT = P(LPM+6)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      LD6 = T(LOCT+9)
      LD7 = T(LOCT+10)
      LD8 = T(LOCT+11)
      LD9 = T(LOCT+12)
      LD10 = T(LOCT+13)
      LD11 = T(LOCT+14)
      CALL EX54 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3), D(LD4), D(LD5),
     1           D(LD6), D(LD7), D(LD8), D(LD9), D(LD10), D(LD11))
      GO TO 100
C.......................................................................
C  FLDWAV OPERATION #55 - DYNAMIC CHANNEL ROUTING
C
C   COMPUTATIONAL TIME INTERVAL IS OBTAINED FROM P ARRAY
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
   55 IDT = P(LPM+15-1)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
C ========
C         ARRAY NB IS IN THE P ARRAY FOR THIS OPERATION
C         ** MUST ADD LPM-1 BECAUSE WHEN LOCATION WHICH WAS STORED
C         FOR NB WAS RELATIVE TO THE BEGINNING OF THE SECOND PART
C         OF THE P ARRAY FOR THIS OPERATION **
      LPNB=T(LOCT+5) + LPM-1
C ========
C         THE FOLLOWING ARE POINTERS TO LOCATIONS IN THE D ARRAY
C         FOR SEVERAL PIECES OF WORKING SPACE NEEDED BY THIS OPERATION *
      LDFFS=T(LOCT+9)
      LDFS=T(LOCT+10)
      LDQA=T(LOCT+11)
      LDYA=T(LOCT+12)
      LDTII=T(LOCT+13)
      LDTO=T(LOCT+15)
C ========
C         THE FOLLOWING ARE POINTERS TO LOCATIONS IN THE T ARRAY
C         WHICH HOLD POINTERS TO TIME SERIES AND WORKING SPACE
C         IN THE D ARRAY
      LTPOLT=T(LOCT+6)
      LTITWT=T(LOCT+7)
      LTPLTIM=T(LOCT+8)
      LTT1=T(LOCT+14)
      LTQLJ=T(LOCT+16)
      LTQUSJ=T(LOCT+17)
      LTQTC=T(LOCT+19)
      LTSTC=T(LOCT+20)
      LTSTN=T(LOCT+21)
      LTST1=T(LOCT+22)
      LTITWS=T(LOCT+23)
      LTPLTS=T(LOCT+24)
      LTQL=T(LOCT+25)
      LTSTT=T(LOCT+26)
      LTSTQ=T(LOCT+27)
      LTQSTR=T(LOCT+28)
      LTNOS=T(LOCT+30)
      LTTID=T(LOCT+31)
      LTSTE=T(LOCT+32)
      LTIRF=T(LOCT+33)

C ========
C         EXTRACT LOCATION OF BEGINNING OF WORKING SPACE AFTER
C         ALL FLDWAV TIME SERIES HAVE BEEN ALLOCATED
C         COMPUTE LENGTH OF WORKING SPACE AVAILABLE TO THIS OPERATION
      LOWORK=T(LOCT+49)
      LENWRK=MD-LOWORK+1
C ========
C  PRINT POINTERS IF DEBUG ON FOR FLDWAV OPERATION
C
      IF(IDBALL.EQ.1) GO TO 2012
      IF(NDEBUG.LT.1) GO TO 2013
      DO 2011 I=1,NDEBUG
      IF(IDEBUG(I).EQ.55)GO TO 2012
 2011 CONTINUE
      GO TO 2013
C
 2012 WRITE(IODBUG,600)IDT,IHR,LCO,LPNB,LDFFS,LDFS,LDQA,LDYA,LDTII,LDTO
 600  FORMAT(1X,7X,'IDT',7X,'IHR',7X,'LCO',6X,'LPNB',5X,'LDFFS',6X,
     . 'LDFS',6X,'LDQA',6X,'LDYA',5X,'LDTII',6X,'LDTO'/1X,10I10)

      WRITE(IODBUG,601) LTPOLT,LTITWT,LTQLJ,LTQUSJ,LTQTC,LTSTC,LTSTN,
     1 LTST1,LTITWS,LTPLTS,LTT1
 601  FORMAT(1X,4X,'LTPOLT',4X,'LTITWT',5X,'LTQLJ',4X,'LTQUSJ',5X,
     . 'LTQTC',5X,'LTSTC',5X,'LTSTN',5X,'LTST1',4X,'LTITWS',4X,'LTPLTS',
     . 6X,'LTT1'/1X,11I10)
      WRITE(IODBUG,602) LTQL,LTSTT,LTSTQ,LTQSTR,LTPLTIM,LTNOS,LTTID,
     . LTSTE,LTIRF,LOWORK,LENWRK,LOCT,LPM
 602  FORMAT(1X,6X,'LTQL',5X,'LTSTT',5X,'LTSTQ',4X,'LTQSTR',3X,
     . 'LTPLTIM',5X,'LTNOS',5X,'LTTID',5X,'LTSTE',5X,'LTIRF',4X,
     . 'LOWORK',4X,'LENWRK',6X,'LOCT',7X,'LPM'/1X,13I10)
      LOCTEN=T(LOCT+1)-1
      WRITE(IODBUG,603)LOCT,LOCTEN
 603  FORMAT(' A DISPLAY OF THE FLDWAV PORTION OF THE T ARRAY ',
     1 'FROM LOCATION ',I6,' THROUGH ',I6,' FOLLOWS.'/' LOCATION'/)
      DO 2014 I=LOCT,LOCTEN,10
      IEND=I+9
      IF(IEND.GT.LOCTEN)IEND=LOCTEN
      WRITE(IODBUG,604)I,(T(J),J=I,IEND)
 604  FORMAT(1X,I6,10(1X,I11))
 2014 CONTINUE
 2013 CONTINUE
C
      CALL EX55(P(LPM),P(LPM),C(LCO),D(LDFFS),D(LDFS),D(LDQA),D(LDTII),
     1 D(LDYA),D,T(LTT1),D,T(LTSTN),D,T(LTQLJ),D,T(LTST1),D,T(LTITWS),
     2 D,T(LTPLTS),D,T(LTQL),D,T(LTQUSJ),D,T(LTQTC),D,T(LTSTC),
     3 D,T(LTSTT),D,T(LTSTQ),D,T(LTQSTR),D,T(LTITWT),D,T(LTPOLT),
     4 D(LDTO),D(LTPLTIM),D,T(LTNOS),D,T(LTTID),D,T(LTSTE),D(LTIRF),
     5 P(LPNB),D(LOWORK),LENWRK)
      GO TO 100
C.......................................................................
C  GLACIER  OPERATION #56 - AKRFC GLACIER
C
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF RAIN + MELT IN THE D() FROM THE T().
C   GET THE LOCATION OF GLACIER RUNNOFF IN THE D() FROM THE T().
C   GET THE LOCATION OF AFI in the D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   56 IDT = P(LPM+7)
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      CALL EX56 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3))
      GO TO 100
C.......................................................................
C  CONS_USE OPERATION #57 - CONSUMPTIVE USE
C
C   THE COMPUTATIONAL TIME INTERVAL IS 24.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF MEAN AREAL TEMPERATURE IN THE D() FROM THE T().
C   GET THE LOCATION OF POTENTIAL EVAPORATION IN THE D() FROM THE T().
C   GET THE LOCATION OF NATURAL FLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF ADJUSTED FLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF DIVERSION FLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF RETURN FLOW IN IN THE D() FROM THE T().
C   GET THE LOCATION OF RETURN FLOW OUT IN THE D() FROM THE T().
C   GET THE LOCATION OF OTHER LOSSES FLOW IN THE D() FROM THE T().
C   GET THE LOCATION OF CROP DEMAND IN THE D() FROM THE T().
C   GET LOCATION OF CROP EVAPO-TRANSPIRATION IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   57 IDT = 24
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      LD6 = T(LOCT+9)
      LD7 = T(LOCT+10)
      LD8 = T(LOCT+11)
      LD9 = T(LOCT+12)
      LD10 = T(LOCT+13)

      CALL EX57 (P(LPM), C(LCO), D(LD1), D(LD2), D(LD3), D(LD4),
     1           D(LD5), D(LD6), D(LD7), D(LD8), D(LD9), D(LD10))
      GO TO 100
C.......................................................................
C  RES-J    OPERATION #58 - JOINT RESERVOIR OPERATIONS
C   EJM - RTi - 12/03/97

C   NOW CALL THE EXECUTION ROUTINE.
C   GET THE COMPUTATIONAL TIME INTERVAL FROM THE P ARRAY.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   PASS ENTIRE D ARRAY
C   GET THE LOCATION OF TS IN THE D() FROM THE T().
C

58    IDT = P(LPM + 2)
      IHR = IHZERO + IDT
      LCO =  T(LOCT + 3)
      CALL EX58( P(LPM), C(LCO), D(1), T(LOCT+4) )
      GO TO 100

C.......................................................................
C  TIDEREV  OPERATION #59 - TIDE BALANCE REVIEW
C
C   THE COMPUTATIONAL TIME INTERVAL IS 1 HR.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF DWOPER OBSERVED STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF NOS STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE1 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE2 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE3 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE4 BALANCE IN IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   59 IDT = 1
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      LD6 = T(LOCT+9)

      CALL EX59 (P(LPM), D(LD1), D(LD2), D(LD3), D(LD4),
     1           D(LD5), D(LD6))
      GO TO 100
C.......................................................................
C  ADJUST-T OPERATION #60 - TIDE ADJUSTMENT
C
C   THE COMPUTATIONAL TIME INTERVAL IS 1 HR.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF DWOPER OBSERVED STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF NOS STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE1 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE2 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE3 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE4 BALANCE IN IN THE D() FROM THE T().
C   GET THE LOCATION OF DWOPER ADJUSTED STAGE IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   60 IDT = 1
      IHR = IHZERO + IDT
      LCO = T(LOCT+3)
      LD1 = T(LOCT+4)
      LD2 = T(LOCT+5)
      LD3 = T(LOCT+6)
      LD4 = T(LOCT+7)
      LD5 = T(LOCT+8)
      LD6 = T(LOCT+9)
      LD7 = T(LOCT+10)

      CALL EX60 (P(LPM), D(LD1), D(LD2), D(LD3), D(LD4),
     1           D(LD5), D(LD6), D(LD7))
      GO TO 100
C.......................................................................
C  STAGEREV  OPERATION #61 - STAGE BALANCE REVIEW
C
C   THE COMPUTATIONAL TIME INTERVAL IS TYPICALLY 1 HR.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF OBSERVED STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF OBS/FCST STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF RANGE LIMIT IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE1 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE2 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE3 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE4 BALANCE IN IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   61 IDT = P(LPM+19)
      IHR = IHZERO + IDT
      LD1 = T(LOCT+3)
      LD2 = T(LOCT+4)
      LD3 = T(LOCT+5)
      LD4 = T(LOCT+6)
      LD5 = T(LOCT+7)
      LD6 = T(LOCT+8)
      LD7 = T(LOCT+9)
C     LD8 = T(LOCT+10)

C     CALL EX61 (P(LPM), D(LD1), D(LD2), D(LD3), D(LD4),
C    1           D(LD5), D(LD6), D(LD7), D(LD8))
      CALL EX61 (P(LPM), D(LD1), D(LD2), D(LD3), D(LD4),
     1           D(LD5), D(LD6), D(LD7))
      GO TO 100
C.......................................................................
C  ADJUST-H OPERATION #60 - STAGE ADJUSTMENT
C
C   THE COMPUTATIONAL TIME INTERVAL IS 1 HR.
C   CALCULATE END OF FIRST TIME INTERVAL USING ZERO HOUR FOR THE PERIOD
C    TO BE EXECUTED PLUS THE COMPUTATIONAL TIME INTERVAL.
C   GET THE LOCATION OF CARRYOVER IN THE C ARRAY FROM THE T ARRAY.
C   GET THE LOCATION OF DWOPER OBSERVED STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF NOS STAGE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE1 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE2 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE3 BALANCE IN THE D() FROM THE T().
C   GET THE LOCATION OF TIDE4 BALANCE IN IN THE D() FROM THE T().
C   GET THE LOCATION OF DWOPER ADJUSTED STAGE IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE.
C
   62 IDT = 1
      IHR = IHZERO + IDT
      LD1 = T(LOCT+3)
      LD2 = T(LOCT+4)
      LD3 = T(LOCT+5)
      LD4 = T(LOCT+6)
      LD5 = T(LOCT+7)
      LD6 = T(LOCT+8)
      LD7 = T(LOCT+9)
C     LD8 = T(LOCT+10)

      CALL EX62 (P(LPM), D(LD1), D(LD2), D(LD3), D(LD4),
C    1           D(LD5), D(LD6), D(LD7), D(LD8))
     1           D(LD5), D(LD6), D(LD7))
      GO TO 100
C.......................................................................
C  SET-TS OPERATION #63  -  SET ENTIRE TIME SERIES TO SPECIFIED VALUE
C
C   THE COMPUTATIONAL TIME INTERVAL IS OBTAINED FROM THE P ARRAY.
C   GET THE LOCATION OF THE TIME SERIES IN THE D() FROM THE T().
C   NOW CALL THE EXECUTION ROUTINE, PASSING LENGTH OF TS FROM THE T().
C
   63 IDT = P(LPM+4)
      IHR = IHZERO + IDT
      LD1 = T(LOCT+3)
C
      CALL EX63 (P(LPM), D(LD1), T(LOCT+4))
      GO TO 100
C.......................................................................
C  DHM-OP OPERATION #64  -  DISTRIBUTED HYDROLOGIC MODELING
C
C   IDT -  COMPUTATIONAL TIME INTERVAL
C   LCO - LOCATION OF THE CARRYOVER VALUE IN THE C() FROM THE T()
C   LD1 - LOCATION OF THE OUTPUT TIME SERIES IN THE D() FROM THE T().
C   T(LOCT+5) - STARTING LOCATION OF INPUT TIME SERIE(S) IN THE D()

C
   64 IF (MAINUM.EQ.1) THEN
          IDT = P(LPM+4)
          IHR = IHZERO + IDT
          LCO = T(LOCT+3)
          LD1 = T(LOCT+4)
          CALL EX64(P(LPM), C(LCO), D(1), D(LD1), T(LOCT+5))
      ENDIF
      GO TO 100
C

C.......................................................................
C  NO EXECUTION ROUTINE FOR THIS OPERATION SO FLAG AS AN ERROR
C
   99 IERR = 1
C.......................................................................
  100 CONTINUE
      RETURN
      END
