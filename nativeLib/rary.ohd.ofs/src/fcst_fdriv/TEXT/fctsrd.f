C MODULE FCTSRD
C-----------------------------------------------------------------------
C
      SUBROUTINE FCTSRD (TS,MTS,D,MD,IHZERO,IERR,JDAMIS,JHRMIS,NWORK)
C
C  THIS ROUTINE READS DATA FROM EXTERNAL DATA FILES AND STORES THE
C  DATA IN THE D ARRAY.
C
      INTEGER*4 MON,DAY,YR,HR
C
      DIMENSION TS(MTS),D(MD)
      PARAMETER (LEXTLOC=50)
      DIMENSION EXTLOC(LEXTLOC)
      DIMENSION TESTYP(5),FPRSW(2)
      CHARACTER*4 FILEID,IDNAME(2)
      CHARACTER*8 SNAME/'FCTSRD'/
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/fprog'
      INCLUDE 'common/ffgctl'
      INCLUDE 'common/fcpuck'
      INCLUDE 'clbcommon/crwctl'
      INCLUDE 'common/fcfutp'
      INCLUDE 'common/fsnw'
      INCLUDE 'common/fsacpr'
      COMMON/FCKTMP/NEEDTX
      INCLUDE 'common/fpwarn'
      COMMON /FCTSRDX/ LDNXT
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fdriv/RCS/fctsrd.f,v $
     . $',                                                             '
     .$Id: fctsrd.f,v 1.6 2006/03/27 17:24:43 aivo Exp $
     . $' /
C    ===================================================================
C
      DATA IBUG/4HTSRW/
      DATA JBUG,STS/4HPRTS,2HTS/
      DATA NTSTYP/5/
      DATA TESTYP/4HMAP ,4HPTPX,4HMARO,4HMAPG,4HMAPX/
      DATA TMAT,TAVG/4HMAT ,4HTAVG/
      DATA FPRSW/4HOFF ,4HON  /
      DATA IDNAME/'    ','    '/
C
C
      IF (ITRACE.GE.1) WRITE (IODBUG,10)
10    FORMAT (' ENTER FCTSRD')
C
      IERR=0
      IERROR=0
      IOPNUM=0
      CALL UMEMOV (SNAME,OPNAME,1)
      JDAMIS=LDA
      JHRMIS=24
      LWKBUF=MD-(NWORK-1)
      IFPRSW=IFPR+1
C
C  SET CONTROL FOR CHECKING FOR MISSING DATA.
      MSGCK=1
C
C  SEARCH THE TS ARRAY FOR INPUT AND UPDATE TIME SERIES
      LOC=1
C
      ICKCPU=IFBUG('CPU ')
      IF (IFBUG(JBUG).EQ.1.OR.IFBUG(IBUG).EQ.1) CALL FDMPA (STS,TS,MTS)
C
C  LOOP THRU TS ARRAY
20    NCTS=TS(LOC)
      IF (NCTS.EQ.0) GO TO 390
      NXLOC=TS(LOC+1)
      IF (NCTS.GT.2) GO TO 380
C
C  FOUND AN INPUT OR UPDATE TIME SERIES.
C  DETERMINE GENERAL INFORMATION FOR THE DATA TYPE.
      DTYPE=TS(LOC+4)
      CALL FDCODE (DTYPE,UNITS,DIM,MSG,NPDT,TSCALE,NADD,IER)
C
C  DETERMINE IF TS DATA TYPE IS ONE AFFECTED BY THE "FUTURE PRECIP"
C  TECHNIQUE. LIST OF ELIGIBLE DATA TYPES DEFINED BY DATA STMTS ABOVE
      IFPCHK = 1
      DO 30 I=1,NTSTYP
         IF (DTYPE .EQ. TESTYP(I)) GO TO 40
30       CONTINUE
      IFPCHK = 0
C
C  GET EXTERNAL LOCATION INFORMATION
40    NUMEXT=TS(LOC+11)
      DO 50 I=1,NUMEXT
         J=LOC+11+I
         IF (I.GT.LEXTLOC) THEN
            WRITE (IPR,45) I,LEXTLOC
45    FORMAT ('0**ERROR** IN FCSTRD - EXTLOC ARRAY POSITION ',I3,' ',
     *   'EXCEEDS ARRAY DIMENSION (',I3,').')
            CALL STOP
            IERR=1
            GO TO 380
            ENDIF
         EXTLOC(I)=TS(J)
50       CONTINUE
C
C  FIND WHERE DATA SHOULD BE PUT IN THE D ARRAY AND THE TIME
C  INTERVAL OF THE DATA.
      LD=TS(LOC+7)
      IDT=TS(LOC+5)
      LDNXT=LD+(24/IDT*31)
CCC      WRITE (IPR,*) 'LD=',LD,' IDT=',IDT,' LDNXT=',LDNXT
C
C  GET  TIME SERIES IDENTIFIER
      CALL UMEMOV (TS(LOC+2),IDNAME,2)
C
C  GET FILE TYPE
      CALL UMEMOV (TS(LOC+9),FILEID,1)
C
C  READ THE DATA AND STORE IN THE D ARRAY
C
C  CHECK IF NWSRFS COFS PROCESSED DATA BASE
      IF (FILEID.EQ.'FPDB') THEN
         IER=0
         CALL FRDPDB (EXTLOC,IDT,UNITS,NPDT,D(LD),LWKBUF,D(NWORK),IER)
         CALL UMEMOV (SNAME,OPNAME,2)
         IF (ICKCPU.EQ.1) THEN
            CALL URTIMR (LAPSE,ICPUT)
            ELAPSE=LAPSE*0.01
            XICPUT=ICPUT*0.01
            WRITE (IODBUG,60) (EXTLOC(I),I=1,3),ELAPSE,XICPUT
60    FORMAT (' IN FCTSRD - AFTER CALL TO FRDPDB FOR ',2A4,1X,A4,
     *   ' : ',
     *   ' ELAPSED CPU TIME = ',F6.2,3X,
     *   ' TOTAL CPU TIME = ',F6.2)
            ENDIF
         IF (IER.EQ.0) GO TO 90
         IERR=1
         GO TO 380
         ENDIF
C
C  CHECK IF CALIBRATION DATA FILES
      IF (FILEID.EQ.'CALB') THEN
         IER=0
         CALL FRDCAL (EXTLOC,IDT,NPDT,UNITS,LD,D,MD,LOC,TS,MTS,MO,
     1      IYEAR,IER)
         CALL UMEMOV (SNAME,OPNAME,2)
         IF (IER.EQ.0) GO TO 90
         IERR=1
         GO TO 380
         ENDIF
C
C  CHECK IF NWSRFS DATACARD FILES
      IF (FILEID.EQ.'CARD') THEN
         IER=0
         CALL FRDCAR (EXTLOC,LD,D,MD,MO,IYEAR,IER)
         CALL UMEMOV (SNAME,OPNAME,2)
         IF (IER.EQ.0) GO TO 90
         IERR=1
         GO TO 380
         ENDIF
C
C  CHECK IF RTI HMDATA FILES.
      IF (FILEID.EQ.'HMDB') THEN
         IER=0
         CALL FRDHMD (EXTLOC,IDT,NPDT,UNITS,LD,D,MD,LOC,TS,MTS,MO,
     +      IYEAR,IER)
         CALL UMEMOV (SNAME,OPNAME,2)
         IF (IER.EQ.0) GO TO 90
         IERR=1
         GO TO 380
         ENDIF
C
      WRITE (IPR,80) FILEID
80    FORMAT ('0**ERROR** IN FCSTRD - FILE TYPE ',A4,
     *   'IS INVALID.')
      CALL STOP
      IERR=1
      GO TO 380
C
C  1. DETERMINE IF FUTURE PRECIP. IS ON OR OFF (IFPR VARIABLE).
C  2. IF FUTURE PRECIP IS "OFF", DETERMINE IF TS TYPE REQUIRES SPECIAL
C     TREATMENT WHEN "FUTURE PRECIP" IS OFF.
C     IF IT IS, ZERO OUT ALL FUTURE TIME PERIODS (BEYOND "LSTCMPDY")
90    IF (IFPR.EQ.-1 .OR. IFPCHK.EQ.0) GO TO 210
      NVAL1=0
      IF (IFPR.EQ.0) GOTO 110
C
      write(*,*)	
      IF (MOD(IFPR,IDT).NE.0) THEN
         IF (IRWWRN.NE.0) THEN
            WRITE (IPR,100) IFPR,IDT,((IFPR+IDT/2)/IDT)*IDT,DTYPE,IDNAME
100         FORMAT ('0**WARNING** VALUE OF TECHNIQUE FUTPRECP (',
     *         I3,') IS NOT A MULTIPLE OF THE DELTA-T (',I2,').' /
     *      13X,'FUTPRECP VALUE WILL BE ROUNDED TO THE NEAREST ',
     *         'MULTIPLE (',I3,') FOR ',A4,' AREA ',A4,A4,' .')
            CALL WARN
            ENDIF
         ENDIF
C
      NVAL1=(IFPR+(IDT/2))/IDT
C
C  DETERMINE WHERE IN D ARRAY FIRST FUTURE PERIOD IS LOCATED, AND
C  NUMBER OF PERIODS IN FUTURE THAT MUST BE ZEROED OUT
C  (NOTE THAT THE DATA TYPES AFFECTED BY THE "FUTURE PRECIP"
C  TECHNIQUE HAVE ONLY A SINGLE VALUE PER TIME PERIOD, HENCE
C  NO CONSIDERATION OF THE NUMBER OF VALUES PER TIME PERIOD
C  ID DETERMINING D ARRAY POSITIONS FOR ZEROING OUT.)
110   J=LD-1
      IHR=IHZERO+IDT
      IF (IHR.GT.24) IHR=24
      IF (LDACPD.LT.IDA) GO TO 120
      IF ((LDACPD.EQ.IDA).AND.(LHRCPD.LT.IHR)) GO TO 120
      L1=J+((LDACPD-IDADAT)*24/IDT+LHRCPD/IDT)+1
      IF (IFPR.GT.0) L1=L1+NVAL1
      GO TO 130
120   L1=LD
      IF (IFPR.GT.0) L1=L1+NVAL1
130   L2=J + (LDA-IDADAT)*24/IDT+(LHR/IDT)
      IF (IFPR.EQ.0) GOTO 170
      NSTEP=0
      DO 140 K=L1-NVAL1,L2
         NSTEP=NSTEP+1
         IF (IFMSNG(D(K)).EQ.1) THEN
            NSTEP=NSTEP-1
            GOTO 150
            ENDIF
140      CONTINUE
150   IF (NVAL1.GT.NSTEP) THEN
         WRITE (IPR,160) NVAL1*IDT,NSTEP*IDT,NSTEP*IDT
160      FORMAT ('0**WARNING** VALUE OF TECHNIQUE FUTPRECP (',
     *      I3,') EXCEEDS THE NUMBER OF HOURS OF FMAP DATA AVAILABLE (',
     *      I3,').' /
     *   13X,'FUTPRECP VALUE WILL BE RESET TO (',I3,').')
         CALL WARN
         IFPR=NSTEP*IDT
         ENDIF
170   IF (L1.GT.L2) GO TO 210
      DO 180 I=L1,L2
         D(I)=0.0
180      CONTINUE
C
      IF (IFBUG(IBUG).EQ.0) GO TO 210
      WRITE (IODBUG,190) FPRSW(IFPRSW),DTYPE
190   FORMAT(' FUTURE PRECIP TECHNIQUE IS ',A4,', AND TIME-SERIES ',
     . 'DATA TYPE IS ',A4,'.')
      WRITE (IODBUG,200)
200   FORMAT(' TIME-SERIES DATA ZEROED OUT FROM LSTCMPDY THRU ',
     . 'END OF RUN.')
C
C  DETERMINE IF TIME SERIES NEEDS TO BE CHECKED FOR MISSING DATA.
C   ALSO BYPASS CHECK IF THIS IS A FLASH-FLOOD-GUIDANCE-ONLY RUN,
C   AND THE TIME-SERIES IS A FORECAST COMPONENT TYPE
210   IF (MSGCK.EQ.0) GO TO 320
      IF (IFFG.EQ.1 .AND. IPRDWC(DTYPE).EQ.1) GO TO 320
C
C  IF MISSING IS ALLOWED, BYPASS SCAN FOR ANY MISSING
      IF (MSG.EQ.1) GO TO 320
C      
C  CHECK IF FUTPRECP TECHNIQUE IS SET TO -1 AND DATYPE IS MAP
C
C  CHECK IF TEMPERATURE DATA NEEDED.
      IF((NOSNOW.EQ.0).OR.(NOFRZE.EQ.0).OR.(NEEDTX.EQ.1)) GO TO 220
      IF ((DTYPE.EQ.TMAT).OR.(DTYPE.EQ.TAVG)) GO TO 320
C
C  CHECK TO SEE IF MISSING VALUES EXIST.
C   NOTE THAT THE NUMBER OF VALUES PER TIME PERIOD (NPDT) IS CONSIDERED
C   AT THIS POINT
220   J=LD-1
      IHR=IHZERO+IDT
      IF (IHR.GT.24) IHR=24
C
C  CALCULATIONS OF L1 AND L2 ESTABLISH THE STARTING AND ENDING
C  POSITIONS IN THE D ARRAY TO CHECK FOR MISSING DATA.
      L1=J+((IDA-IDADAT)*24/IDT+(IHR-1)/IDT)*NPDT+1
      L2=J+((LDA-IDADAT)*24/IDT+(LHR/IDT))*NPDT
      IF (L1.GT.L2) GO TO 320
      DO 230 I=L1,L2
         KI=I
         IF (IFMSNG(D(I)).EQ.1) GO TO 240
230      CONTINUE
C
C  NO MISSING VALUES FOUND
      GO TO 320
C
C  MISSING DATA FOUND.
240   CONTINUE
C
C  CHECK IF OFS PROGRAM
      IF (MAINUM.GT.2) GO TO 290
C
C  PROCESSED DATA BASE CHECKS AND MESSAGE
C   DETERMINE THE JULIAN DAY AND INTERNAL HOUR OF
C   FIRST MISSING PERIOD ENCOUNTERED
      KT=(KI-J-1)/NPDT+1
      KD=(KT-1)/(24/IDT)
      JD=IDADAT+KD
      JH=(KT-KD*(24/IDT))*IDT
C
C  CHECK TO SEE IF "FUTURE PRECIP" TECHNIQUE IS ON AND TS DATA TYPE
C  IS ONE AFFECTED BY "FUTURE PRECIP" TECHNIQUE
      IF (IFPR.LE.0.OR.IFPCHK.EQ.0) GO TO 270
C
C  PROPER CONDITIONS FOUND...
C   IF MISSING FOUND BEFORE OR ON "LSTCMPDY", DO NOTHING.
C   IF MISSING FOUND AFTER "LSTCMPDY", SET VALUES TO ZERO, INSTEAD
C   OF MISSING.
      IF ((JD.LT.LDACPD).OR.(JD.EQ.LDACPD.AND.JH.LE.LHRCPD)) GO TO 270
C
C  MISSING FOUND AFTER "LSTCMPDY". NOW ZERO OUT REMAINDER OF D ARRAY.
C   ALSO, BYPASS ERROR SETTING CODE.  THIS SITUATION IS NOT CONSIDERED
C   AN ERROR.
      DO 250 I=KI,L2
         D(I)=0.0
250      CONTINUE
C
      IF (IFBUG(IBUG).EQ.0) GO TO 320
C
      WRITE (IODBUG,190) FPRSW(IFPRSW),DTYPE
      CALL MDYH2 (JD,JH,MON,DAY,YR,HR,X1,X2,INPTZC)
      WRITE (IODBUG,260) MON,DAY,YR,HR,INPTZC
260   FORMAT(' TIME-SERIES DATA ZEROED OUT FROM FIRST MISSING AT ',
     1 I2,1H/,I2,1H/,I4,1H-,I2,1X,A4,' THRU END OF RUN')
      GO TO 320
C
C  CHECK TO SEE IF EARLIEST TIME OF FOUND MISSING DATA MUST BE RESET.
270   IF (JD.GT.JDAMIS) GO TO 310
      IF ((JD.EQ.JDAMIS).AND.(JH.GE.JHRMIS)) GO TO 310
      JDAMIS=JD
      JHRMIS=JH
	  write(*,*)'JDAMIS=',JDAMIS,'IRWWRN=',IRWWRN
C
C  GENERATE WARNING MESSAGE IF REQUESTED
      IF (IRWWRN.EQ.0) GO TO 310
C
C  ESTABLISH MM/DD/YY FORMAT OF DATE INFORMATION
      CALL MDYH2 (JD,JH,MON,DAY,YR,HR,X1,X2,INPTZC)
      WRITE (IPR,280) TS(LOC+2),TS(LOC+3),DTYPE,IDT,
     1  MON,DAY,YR,HR,INPTZC
280   FORMAT ('0**WARNING** INPUT TIME SERIES ',
     1 2A4,1X,A4,1X,I2,' HOURS CONTAINS MISSING DATA STARTING AT ',
     2 I2.2,'/',I2.2,'/',I4,'-',I2.2,A4,
     3 '. MISSING DATA NOT ALLOWED.')
      CALL WARN
      GO TO 310
C
C  CALIBRATION DATA BASE MESSAGE
290   WRITE (IPR,300) TS(LOC+2),TS(LOC+3),DTYPE,IDT,MO,IYEAR
300   FORMAT ('0**ERROR** INPUT TIME SERIES ',
     1 2A4,1X,A4,1X,I2,' HOURS CONTAINS MISSING DATA FOR ',
     2 I2,'/',I4,
     3 '. MISSING DATA NOT ALLOWED.')
      CALL ERROR
C
310   IF (IERR.EQ.0) IERR=2
C
320   IF (IFBUG(IBUG).EQ.0) GO TO 380
C
      WRITE (IODBUG,330) TS(LOC+2),TS(LOC+3),DTYPE,IDT,LOC
330   FORMAT (' ROUTINE FCTSRD DEBUG--CONTENTS OF D ARRAY FOR ',
     1  2A4,1X,A4,I3,' HOURS',3X,'TS LOC=',I4)
      IF (MAINUM.GT.2) WRITE (IODBUG,340) MO,IYEAR
340   FORMAT (1H+,91X,I2,1H/,I4)
      J=LD-1
      IHR=IHZERO+IDT
      IF (IHR.GT.24) IHR=24
      L1=J+((IDA-IDADAT)*24/IDT+(IHR-1)/IDT)*NPDT+1
      L2=J+((LDA-IDADAT)*24/IDT+(LHR/IDT))*NPDT
      IF (L1.GT.L2) GO TO 360
      WRITE (IODBUG,350) (D(I),I=L1,L2)
350   FORMAT (1H ,12F10.3)
      GO TO 380
360   CONTINUE
      WRITE (IODBUG,370)
370   FORMAT (' NONE WERE READ')
C
C  INCREMENT TO THE NEXT TIME SERIES
380   LOC=NXLOC
      IF (LOC.LE.MTS) GO TO 20
C
390   IF (ITRACE.GE.1) WRITE (IODBUG,400)
400   FORMAT (' EXIT FCTSRD')
C
      RETURN
C
      END
