C MODULE FRDPDB
C-----------------------------------------------------------------------
C
      SUBROUTINE FRDPDB (EXTLOC,IDT,UNITS,NPDT,DATA,LWKBUF,WKBUF,IERR)
C.......................................
C     THIS ROUTINE READS INPUT OR UPDATE TIME SERIES FROM THE
C     PROCESSED DATA BASE.
C.......................................
C     WRITTEN BY ERIC ANDERSON - HRL  JUNE 1981
C     MODIFIED BY GEORGE SMITH - HRL  JUNE 1987 TO CHECK IF AIR TEMP
C       DATA ARE NEEDED BEFORE CHECK START OF FUTURE PERIOD, AND
C       TO ALLOW START OF FUTURE DATA FOR DATA TYPE BFR TO BE 24 HOURS
C       BEFORE TODAYS DATE WITHOUT PRINTING WARNING MESSAGE
C     MODIFIED BY GEORGE SMITH - HRL JAN  1988 TO SET VALUE OF IFPTR
C       AS INPUT TO RPRDD
C.......................................
C
      CHARACTER*4 DTYPE
      CHARACTER*8 TSID
C
      DIMENSION EXTLOC(1),DATA(1),WKBUF(1)
C
C     COMMON BLOCKS
      COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
      COMMON/IONUM/IN,IPR,IPU
      COMMON/WHERE/ISEG(2),IOPNUM,OPNAME(2)
      COMMON/FCTIME/IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,NOW(5),
     1LOCAL,NOUTZ,NOUTDS,NLSTZ,IDA,IHR,LDA,LHR,IDADAT
      COMMON/FCTIM2/INPTZC,NHOPDB,NHOCAL,NHROFF(8)
      COMMON/FPWARN/MODWRN,IRWWRN,IDTWRN
      COMMON/FSNW/NOSNOW,IPRSNW
      COMMON/FSACPR/IPRSAC,NOFRZE
      COMMON/FCKTMP/NEEDTX
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_fdriv/RCS/frdpdb.f,v $
     . $',                                                             '
     .$Id: frdpdb.f,v 1.3 1999/01/20 13:27:53 page Exp $
     . $' /
C    ===================================================================
C
C     DATA STATEMENTS
      DATA BFR/4HBFR /,XMAT/4HMAT /,XTAVG/4HTAVG/
C
C
      IF (ITRACE.GE.3) WRITE (IODBUG,10)
10    FORMAT (' ENTER FRDPDB')
      IBUG=IFBUG('FPDB')
C
      IERR=0
      RMISS=-999.0
      CALL UMEMOV ('FRDPDB  ',OPNAME,2)
      IOPNUM=0
C
C.......................................
C
C  COMPUTE PDB JULIAN HOUR OF FIRST DATA VALUE TO BE READ.
      IHR=IHRRUN+IDT
      IF (IHR.GT.24)IHR=24
      JHOUR=(IDA-1)*24+IHR+NHOPDB
C  COMPUTE NUMBER OF TIME PERIODS OF DATA TO BE READ.
      NUM=LDA*24/IDT+LHR/IDT-(IDA*24/IDT+(IHR-1)/IDT)
C  COMPUTE LOCATION OF FIRST VALUE IN THE DATA ARRAY.
      L=((IDA-IDADAT)*24/IDT+(IHR-1)/IDT)*NPDT+1
C  COMPUTE INPUT VALUE OF IFPTR - IS ACTUALLY ONLY USED IN RPRDD
C    FOR MAP TIME SERIES TO DECIDE WHERE TO SWITCH FROM REGULAR
C    TO FUTURE TIME SERIES.  USES VALUE OF LSTCMPDY FOR SWITCH.
C    IFPTR POINTS TO FIRST HOUR OF FUTURE DATA, LSTCMPDY POINTS
C    TO LAST HOUR OF OBSERVED DATA, SO MUST ADD TIME STEP OF
C    TIME SERIES.
      IFPTR=(LDACPD-1)*24+LHRCPD+NHOPDB+IDT
C
      IF (IBUG.EQ.1) WRITE (IODBUG,20) TSID,DTYPE,JHOUR,IDT,
     1  NUM,UNITS,RMISS,IFPTR,LWKBUF
20    FORMAT (' IN FRDPDB - ABOUT TO CALL RPRDD - TSID=',A,
     1 ', DTYPE=',A,', JHOUR=',I11,', IDT=',I5,', NUM=',I5/
     2 15X,'UNITS=',A4,', RMISS=',F8.2,', IFPTR=',I11,', LWKBUF=',I8)
C
C.......................................
C
      CALL UMEMOV (EXTLOC(1),TSID,2)
      CALL UMEMOV (EXTLOC(3),DTYPE,1)
C
C     READ DATA
      LDATA=L+NUM
      CALL RPRDD (TSID,DTYPE,JHOUR,IDT,NUM,UNITS,RMISS,LDATA,DATA(L),
     1  IFPTR,LWKBUF,WKBUF,IER)
C
      IF (IBUG.EQ.1) WRITE (IODBUG,30) IFPTR,IER
30    FORMAT (' IN FRDPDB - BACK FROM RPRDD - IFPTR=',I11,', IER=',I5)
C
      IF (IER.EQ.0) GO TO 120
C
      IF (IER.EQ.1) THEN
         WRITE (IPR,40) TSID,DTYPE
40    FORMAT ('0**ERROR** TIME SERIES NOT FOUND FOR ',
     *   'IDENTIFIER ',A,' AND DATA TYPE ',A,'.')
         CALL ERROR
         GO TO 110
         ENDIF
      IF (IER.EQ.2) THEN
         IF (IBUG.GT.0) THEN
            IDA=JHOUR/24+1
            IHR=JHOUR-IDA*24+24
            CALL MDYH1 (IDA,IHR,IM,ID,IY,IH,NOUTZ,NOUTDS,TZC)
            WRITE (IODBUG,50) TSID,DTYPE,IM,ID,IY,IH,NUM
50    FORMAT (' IN FRDPDB - DATE NOT FOUND OR NOT ENOUGH DATA ',
     *   'FOR ID ',A,', DATA TYPE ',A,
     *   ' AND DATE ',I2.2,'/',I2.2,'/',I4,'/',I2.2,
     *   ' FOR ',I4,' VALUES')
            ENDIF
         GO TO 120
         ENDIF
      IF (IER.EQ.3) THEN
         WRITE (IPR,60) IDT,TSID,DTYPE
60    FORMAT ('0**ERROR** DATA TIME INTERVAL ',I3,' IS INVALID FOR ',
     *   ' TIME SERIES ',A,' AND DATA TYPE ',A,'.')
         CALL ERROR
         GO TO 110
         ENDIF
      IF (IER.EQ.4) THEN
         WRITE (IPR,70) TSID,DTYPE,UNITS
70    FORMAT ('0**ERROR** INVALID UNITS CONVERSION REQUESTED FOR ',
     *   'TIME SERIES ',A,', DATA TYPE ',A,' AND UNIT ',A,'.')
         CALL ERROR
         GO TO 110
         ENDIF
      IF (IER.EQ.5) THEN
         WRITE (IPR,80) TSID,DTYPE
80    FORMAT ('0**ERROR** READ ERROR READING DATA FOR TIME',
     *   ' SERIES ',A,' AND DATA TYPE ',A,'.')
         CALL ERROR
         GO TO 110
         ENDIF
      IF (IER.EQ.6) THEN
         WRITE (IPR,90) LWKBUF,TSID,DTYPE
90     FORMAT ('0**ERROR** SIZE OF WORK ARRAY (',I5,') IS TOO ',
     *   'SMALL TO READ DATA FOR TIME SERIES ',A,' AND ',
     *   'DATA TYPE ',A,'.')
         CALL ERROR
         GO TO 110
         ENDIF
      WRITE (IPR,100) IER,TSID,DTYPE
100   FORMAT ('0**ERROR** STATUS CODE (',I2,') FROM ROUTINE ',
     *   'RPRDD FOR TIME SERIES ',A,' AND DATA TYPE ',A,
     *   ' IS NOT RECOGNIZED.')
      CALL ERROR
C
110   IERR=1
      GO TO 210
C
C.......................................
C
C     CHECK FUTURE DATA POINTER.
120   IFUT=1
      JHRFUT=0
      IF (LDACPD*24+LHRCPD.GE.LDA*24+(LHR/IDT)*IDT) IFUT=0
      IF (IFPTR.GT.0) GO TO 140
C
C     NO FUTURE DATA VALUES READ.
      IF (IFUT.EQ.0) GO TO 180
      IF (IRWWRN.EQ.0) GO TO 180
      WRITE (IPR,130) TSID,DTYPE,IDT
130   FORMAT ('0**WARNING** THE PDB DID NOT CONTAIN ANY FUTURE DATA ',
     *   'VALUES FOR TIME SERIES ',A,' AND DATA TYPE ',A,
     *   ' AND TIME INTERVAL OF ',I3,' HOURS.')
      CALL WARN
      GO TO 180
C
C     FUTURE DATA WERE READ.
C  SEE IF READING AN AIR TEMP (MAT OR TAVG) TIME SERIES
C  IF SO, AND DO NOT NEED TEMP DATA, DO NOT MAKE CHECK
C  AGAINST START OF FUTURE DATA.
C
140   IF (EXTLOC(3).NE.XMAT.AND.EXTLOC(3).NE.XTAVG) GO TO 160
C
C  HAVE AIR TEMP TIME SERIES
C  CHECK IF TEMP TIME SERIES IS NEEDED
C
      IF (NOSNOW.EQ.0.OR.NOFRZE.EQ.0.OR.NEEDTX.EQ.1) GO TO 160
C
C  AIR TEMP TIME SERIES NOT NEEDED - DO NOT CHECK START OF FUTURE DATA
C
      IF (IBUG.EQ.1) WRITE (IODBUG,150) TSID,DTYPE,IDT
150   FORMAT ('0NO CHECK MADE AGAINST START OF FUTURE DATA FOR ',
     1 'TIME SERIES ',A,1X,A,I3)
      GO TO 180
C
160   JHRFUT=(LDACPD-1)*24+(LHRCPD/IDT)*IDT+IDT+NHOPDB
      IF (JHRFUT.LT.JHOUR) JHRFUT=JHOUR
      IF (JHRFUT.EQ.IFPTR) GO TO 180
      IF (IRWWRN.EQ.0) GO TO 180
      JD=IFPTR-JHRFUT
C
C  CHECK IF DATA TYPE BFR, IF SO ALLOW START OF FUTURE DATA ON PDB
C  TO BE 24 HOURS BEFORE TODAY'S DATE
C
      IF (EXTLOC(3).EQ.BFR.AND.JD.EQ.-24) GO TO 180
C
      WRITE (IPR,170) JD,TSID,DTYPE,IDT
170   FORMAT ('0**WARNING** START OF FUTURE DATA DIFFERS BY ',I3,
     1   ' HRS BETWEEN PDB AND USER (T.S.=',A,1X,A,I3,1X,'HRS).')
      CALL WARN
C
C.......................................
C
C     CHECK FOR DEBUG OUTPUT
180   IF (IBUG.EQ.0) GO TO 210
C     PRINT DEBUG OUTPUT
      WRITE (IODBUG,190) TSID,DTYPE,IDT,UNITS,IHR,JHOUR,NUM,L,
     1   IFUT,IFPTR,JHRFUT
190   FORMAT (' FRDPDB DEBUG=',A,1X,A,I4,1X,A4,7I8)
      LVAL=NUM*NPDT+L-1
      WRITE (IODBUG,200)(DATA(I),I=L,LVAL)
200   FORMAT (1H0,12F10.2)
C
C.......................................
C
210   IF (ITRACE.GE.3) WRITE (IODBUG,220)
220   FORMAT (' EXIT FRDPDB')
C
      RETURN
C
      END
