C MEMBER COX26
C  (from old member FCCOX26)
C
C DESC CARRYOVER TRANSFER FOR OPERATION 26 - RES-SNGL
C
C                             LAST UPDATE: 01/05/94.13:44:11 BY $WC21DT
C
      SUBROUTINE COX26(POLD,COLD,PNEW,CNEW,D,MD)
C
C  CARRYOVER TRANSFER ROUTINE FOR OPERATION 26 - RES-SNGL.
C
C--------------------------------------------------
C  WRITTEN BY -  KSHSU - HRL - JUNE 1990
C---------------------------------------------------
C
      INCLUDE 'common/fdbug'
C
      COMMON BLOCKS
      COMMON/FENGMT/METRIC
      COMMON/IONUM/IN,IPR,IPU
      REAL*8 SUBNAM
      LOGICAL CONV3
      DIMENSION POLD(1),COLD(1),PNEW(1),CNEW(1),X(365),PO(100),CO(100),
     &D(1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_cox/RCS/cox26.f,v $
     . $',                                                             '
     .$Id: cox26.f,v 1.2 1999/04/23 17:16:28 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA BLANK/4H    /
      DATA SUBNAM/8HCOX26   /
      DATA DIML3T/4HL3/T/
C
C----------------------------
C  SET DEBUG AND TRACE LEVELS
C
      IBUG = 0
      CALL FPRBUG(SUBNAM,1,26,IPBUG)
      IF (ITRACE .GT. 0) IBUG=1
      IF (IPBUG .GT. 0) IBUG=2
      NPTO=POLD(11)-1
      NCTO=POLD(15)
      NPTN=PNEW(11)-1
      NCTN=PNEW(15)
      MDTN = PNEW(7)
      NTN = 24/MDTN
      MDTO = POLD(7)
      NTO = 24/MDTO
      IF(IBUG.EQ.0) GO TO 20
C
C  DEBUG OUTPUT - NEW AND OLD PARAMETERS AND CARRYOVER
      WRITE(IODBUG,800)
  800 FORMAT(/1X,'RES-SNGL DEBUG -- OLD AND NEW PARAMETERS AND',
     &' CARRYOVER')
      WRITE(IODBUG,801) NPTO,NPTN,NCTO,NCTN,NTO,NTN
  801 FORMAT(1X,'NPO,NPN,NCO,NCN,NTO,NTN= ',6I5)
      WRITE(IODBUG,802) (POLD(I),I=1,NPTO)
      WRITE(IODBUG,802) (PNEW(I),I=1,NPTN)
      WRITE(IODBUG,802) (COLD(I),I=1,NCTO)
      WRITE(IODBUG,802) (CNEW(I),I=1,NCTN)
  802 FORMAT(1X,15F8.2)
   20 CONTINUE
C
C  PHASE I: NO CARRYOVER TRANSFER IF PARAMER ARRAY HAS BEEN CHANGED
C  PHASE II: PARAMETER CHANGED -- SETQ,SETH,ADJUST,RULEADJ -- 1/24/91
      LOCN=20
      NSUN=PNEW(LOCN)
      LOCN=LOCN+1
      IF(NSUN.EQ.0)GO TO 510
      DO 30 IS=1,NSUN
      NUMN=PNEW(LOCN)
      LOCN=LOCN+4
      IBASE=NUMN/10
C  THE FOLLOWING CHANGE MADE ON 1/24/91
C      IF(NUMN .GT. 1500)GO TO 25
      IF(NUMN .GT. 1500)GO TO 30
C  END OF CHANGE OF 1/24/91
      IGOTO=IBASE -100
C  THE FOLLOWING CHANGE MADE ON 1/24/91
C      GO TO (30,35,35,30,30,30,30,35,30,30,30,35,30),IGOTO
      GO TO (30,30,30,30,30,30,30,35,30,30,30,35,30,30,30),IGOTO
C  25  IGOTO=IBASE-150
C      GO TO (35,30,30,35,30,30,30,30,30,30,30),IGOTO
C  END OF CHANGE OF 1/24/91
   30 CONTINUE
      GO TO 44
   35 CONTINUE
      IF(NTN.NE.NTO) GO TO 36
      IF(NPTN.NE.NPTO) GO TO 37
      IF(NCTN.NE.NCTO) GO TO 38
      GO TO 44
   36 WRITE(IPR,803) NTO,NTN
  803 FORMAT(10X,'OPERATION TIME INTERVAL CHANGED FROM ',I5,' TO',I5)
      GO TO 39
   37 WRITE(IPR,804) NPTO,NPTN
  804 FORMAT(10X,'PARAMETER NO. CHANGED FROM ',I5,' TO',I5)
      GO TO 39
   38 WRITE(IPR,805) NCTO,NCTN
  805 FORMAT(10X,'CARRYOVER NO. CHANGED FROM ',I5,' TO',I5)
   39 I1=2
      I2=6
      WRITE(IPR,806) (PNEW(I),I=I1,I2)
  806 FORMAT(10X,'**WARNING** FOR OPERATION= RES-SNGL ',2X,'NAME= ',5A4,
     1 /10X,'NO CARRYOVER TRANSFER WILL BE PERFORMED DUE TO ',
     2  'PARAMETRIC CHANGES.',
     3 /10X,'CARRYOVER VALUES INPUT DURING THE SEGMENT REDEFINITION ',
     4  'WILL BE USED.')
      GO TO 510
C
C-----------------------------------------
C  TRANSFER GENERAL CARRYOVER
C
   44 CNEW(1) = COLD(1)
      CNEW(2) = COLD(2)
      CNEW(3) = COLD(3)
      CNEW(4) = COLD(4)
      CNEW(5) = COLD(5)
      CNEW(6) = COLD(6)
C
C***********************************************************************
C***********************************************************************
C
C     TRANSFER SPECIFIC SCHEME/UTILITY CARRYOVER
C
      LOCN=20
      NSUN=PNEW(LOCN)
      LOCN=LOCN+1
      IF(NSUN.EQ.0)GO TO 510
      DO 500 IS=1,NSUN
      NUMN=PNEW(LOCN)
      LPN=PNEW(LOCN+1)
      LOCD = LOCN+1
      IF (IS .EQ. NSUN) GO TO 46
      DO 45 I=IS,NSUN
      LOCD = LOCD+4
      LPN1 = PNEW(LOCD)
      IF (LPN1 .NE. 0) GO TO 50
   45 CONTINUE
   46 LPN1 = PNEW(11)
   50 NPNEW = LPN1-LPN
      LTN=PNEW(LOCN+2)
      LCN=PNEW(LOCN+3)
      LOCN=LOCN+4
      IBASE=NUMN/10
      LEVEL=NUMN-IBASE*10
      IF(NUMN .GT. 1500)GO TO 250
C     SELECTION IS A COMPUTATIONAL SCHEME
      IGOTO=IBASE -100
      GO TO (500,1020,1030,500,1050,1060,500,1080,500,1100,
     .   1110,1120,1130,500,500) IGOTO
c      GO TO (500,110,120,500,140,150,500,170,500,190,200,210,220),IGOTO
C***********************************************************************
C
C     PRESCRIBED DISCHARGE COMPUTATIONAL SCHEME -- SETQ
C
 1020 CONTINUE
      NCOLD = 0
      NCNEW = 0
      IOPTN = PNEW(LPN)
      IF(IOPTN.LE.0) GO TO 500
      NCNEW = PNEW(LPN+1)
      IF (NCNEW .EQ. 0) GO TO 500
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .LE. 0) GO TO 1102
      IOPTO = POLD(LPO)
      IF (IOPTO .LE. 0) GO TO 1102
      NCOLD = POLD(LPO+1)
 1102 CONTINUE
      IF (IBUG .GE. 1) WRITE(IODBUG,1190)LEVEL
 1190 FORMAT(/17X,'PRESCRIBED DISCHARGE SCHEME -- SETQ(',I1,1H))
      IF (IBUG .LE. 1) GO TO 1191
      IEND = LPO+NPOLD-1
      IF (NPOLD .GE. 1) WRITE(IODBUG,901) (POLD(I),I=LPO,IEND)
      IEND = LPN+NPNEW-1
      IF (NPNEW .GE. 1) WRITE(IODBUG,901) (PNEW(I),I=LPN,IEND)
 1191 CONTINUE
      DTYPE = PNEW(LTN+2)
      CALL FDCODE(DTYPE,X,DIMN,IX,IX,X,IX,IX)
      DTYPE = POLD(LTO+2)
      CALL FDCODE(DTYPE,X,DIMO,IX,IX,X,IX,IX)
      IF (NCOLD-1) 1103,1104,1105
 1103 DUMY = COLD(2)
      GO TO 1106
 1104 DUMY = COLD(LCO)
 1106 CONTINUE
      IST = LCN
      IEND = LCN+NCNEW-1
      DO 1108 I=IST,IEND
 1108 CNEW(I) = DUMY
      GO TO 1150
 1105 CONTINUE
      IF (NCOLD .GE. 1) CALL TSCV26(COLD,X,NTO,NTN,LCO,NCNEW,NCOLD,D)
      IF (DIMN .NE. DIMO) GO TO 1116
C     SAME UNITS FOR OLD AND NEW TIME SERIES
      IST = LCN
      IEND = LCN+NCNEW-1
      J = 0
      DO 1114 I=IST,IEND
      J = J+1
 1114 CNEW(I) = X(J)
      GO TO 1150
 1116 IF (DIMO .EQ. DIML3T) GO TO 1119
C     OLD TIME SERIES = MEAN DISCHARGE
      IST = LCN+1
      IEND = LCN+NCNEW-1
      J = 0
      DO 1118 I=IST,IEND
      J = J+1
 1118 CNEW(I) = (X(J)+X(J+1))*0.5
      CNEW(IST-1) = X(1)
      GO TO 1150
 1119 CONTINUE
C     OLD TIME SERIES = INSTANTANEOUS DISCHARGE
      IST = LCN
      IEND = LCN+NCNEW-1
      J = 0
      DO 1122 I=IST,IEND
      J = J+1
 1122 CNEW(I) = (X(J)+X(J+1))*0.5
 1150 CONTINUE
      IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     PRESCRIBED ELEVATION COMPUTATIONAL SCHEME -- SETH
C
 1030 CONTINUE
      NCOLD = 0
      NCNEW = 0
      IOPTN = PNEW(LPN)
      IF(IOPTN.LE.0) GO TO 500
      NCNEW = PNEW(LPN+1)
      IF (NCNEW .EQ. 0) GO TO 500
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .LE. 0) GO TO 1202
      IOPTO = POLD(LPO)
      IF (IOPTO .LE. 0) GO TO 1202
      NCOLD = POLD(LPO+1)
 1202 CONTINUE
      IF (IBUG .GE. 1) WRITE(IODBUG,1290)LEVEL
 1290 FORMAT(/17X,'PRESCRIBED ELEVATION SCHEME -- SETH(',I1,1H))
      IEND = LPO+NPOLD-1
      IF (IBUG .GE. 2) WRITE(IODBUG,901) (POLD(I),I=LPO,IEND)
      IEND = LPN+NPNEW-1
      IF (IBUG .GE. 2) WRITE(IODBUG,901) (PNEW(I),I=LPN,IEND)
      IF (NCOLD-1) 1203,1204,1210
 1203 DUMY = COLD(5)
      GO TO 1206
 1204 DUMY = X(1)
 1206 CONTINUE
      IST = LCN
      IEND = LCN+NCNEW-1
      DO 1208 I=IST,IEND
 1208 CNEW(I) = DUMY
      GO TO 1250
 1210 CONTINUE
      IF (NCOLD .GE. 1) CALL TSCV26(COLD,X,NTO,NTN,LCO,NCNEW,NCOLD,D)
      IST = LCN
      IEND = LCN+NCNEW-1
      J = 0
      DO 1214 I=IST,IEND
      J = J+1
 1214 CNEW(I) = X(J)
 1250 CONTINUE
      IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     FILL AND SPILL COMPUTATIONAL SCHEME -- FILLSPILL
C
 1050 NCOLD=0
      NCNEW=1
      IF (IBUG .GE. 1) WRITE(IODBUG,1490)LEVEL
 1490 FORMAT(/17X,'FILL AND SPILL SCHEME -- FILLSPILL(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .EQ. 0 .OR. NTN.NE.NTO) GO TO 1420
      CNEW(LCN) = COLD(LCO)
      NCOLD=1
      GO TO 1430
 1420 CNEW(LCN) = COLD(3)
 1430 CONTINUE
      IF (IBUG .LE. 1) GO TO 500
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) COLD(LCO)
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) CNEW(LCN)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     SPILLWAY ROUTING COMPUTATIONAL SCHEME -- SPILLWAY
C
 10600 NCOLD=0
      NCNEW=1
      IF (IBUG .GE. 1) WRITE(IODBUG,1590) LEVEL
 1590 FORMAT(/17X,'SPILLWAY ROUTING SCHEME -- SPILLWAY(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .EQ. 0 .OR. NTN.NE.NTO) GO TO 1520
      CNEW(LCN) = COLD(LCO)
      NCOLD=1
      GO TO 1530
 1520 CNEW(LCN) = COLD(3)
 1530 CONTINUE
      IF (IBUG .LE. 1) GO TO 500
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) COLD(LCO)
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) CNEW(LCN)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C  DOWNSTREAM H OR Q AND POOL H CONTL'D POOL RELEASE SCHEME -- STPOOLQ
C
 1080 IF (IBUG .GE. 1) WRITE(IODBUG,1790) LEVEL
 1790 FORMAT(/17X,'D/S H OR Q AND POOL H CONTROLLED POOL RELEASE ',
     &'SCHEME -- STPOOLQ(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IBUG .LE. 1) GO TO 1791
      IEND = LPO+NPOLD-1
      IF (NPOLD .GE. 1) WRITE(IODBUG,901) (POLD(I),I=LPO,IEND)
      IEND = LPN+NPNEW-1
      IF (NPNEW .GE. 1) WRITE(IODBUG,901) (PNEW(I),I=LPN,IEND)
 1791 CONTINUE
C   NGN/NGO = NUMBER OF GAGES USED IN NEW/OLD ARRAY
C   NLKN/NLKO = NUMBER OF LAG/K OPERATIONS USED IN NEW/OLD ARRAY
      NGN = PNEW(LPN)
      IF(NGN.GT.2) NGN=NGN/100
      LPND=LPN+1
      IDA=PNEW(LPND)
      IF(IDA.EQ.0)GO TO 1702
      MDTN = PNEW(7)
      IDT= 24/MDTN
      LPND=LPND+IDT
 1702 LPND=LPND+1
      LCND = LCN + 1
      IF (IFIND .EQ. 1) GO TO 1705
      DO 1704 IGN=MNG1,NGN
      CALL STP126(PNEW,LPND,ING,NLKN)
      DO 1706 ILKN=1,NLKN
 1706 CALL STP226(PNEW,LPND,CNEW,LCND)
 1704 CONTINUE
      GO TO 1765
 1705 CONTINUE
      NGO = POLD(LPO)
      IF(NGO.GT.2) NGO=NGO/100
      LPOD=LPO+1
      IDA=POLD(LPOD)
      IF(IDA.EQ.0)GO TO 1708
      MDTO = POLD(7)
      IDT= 24/MDTO
      LPOD=LPOD+IDT
 1708 LPOD=LPOD+1
      LCOD = LCO + 1
      MNG=MIN0(NGN,NGO)
      DO 1720 ING=1,MNG
      CALL STP126(PNEW,LPND,ING,NLKN)
      CALL STP126(POLD,LPOD,ING,NLKO)
      IF (NLKN .NE. NLKO) GO TO 1712
C   LAG/K CARRYOVER TRANSFER
      DO 1710 ILKN=1,NLKN
      CALL COX7(POLD(LPOD),COLD(LCOD),PNEW(LPND),CNEW(LCND))
      CALL STP226(PNEW,LPND,CNEW,LCND)
      CALL STP226(POLD,LPOD,COLD,LCOD)
 1710 CONTINUE
      GO TO 1720
 1712 CONTINUE
C   NO TRANSFER BUT NEED TO MOVE POINTER
      DO 1714 ILKN=1,NLKN
 1714 CALL STP226(PNEW,LPND,CNEW,LCND)
      DO 1716 ILKO=1,NLKO
 1716 CALL STP226(POLD,LPOD,COLD,LCOD)
 1720 CONTINUE
      MNG1=MNG+1
      IF (MNG1 .GT. NGN) GO TO 1726
C   BRING POINTER TO "STPOOLQ" CARRYOVER IN NEW ARRAY
      DO 1722 IGN=MNG1,NGN
      CALL STP126(PNEW,LPND,ING,NLKN)
      DO 1724 ILKN=1,NLKN
 1724 CALL STP226(PNEW,LPND,CNEW,LCND)
 1722 CONTINUE
 1726 CONTINUE
      IF (MNG1 .GT. NGO) GO TO 1736
C   BRING POINTER TO "STPOOLQ" CARRYOVER IN OLD ARRAY
      DO 1732 IGO=MNG1,NGO
      CALL STP126(POLD,LPOD,ING,NLKO)
      DO 1734 ILKO=1,NLKO
 1734 CALL STP226(POLD,LPOD,COLD,LCOD)
 1732 CONTINUE
 1736 CONTINUE
      IF (IBUG .GE. 2) WRITE(IODBUG,900)
     &NGN,NLKN,LPND,LCND,NGO,NLKO,LPOD,LCOD
      ITSN = 0
      IF(PNEW(LTN).NE.BLANK .OR. PNEW(LTN+1).NE.BLANK) ITSN=1
      IF (ITSN .NE. 0) CNEW(LCND)=0.0
      ITSO = 0
      IF(POLD(LTO).NE.BLANK .OR. POLD(LTO+1).NE.BLANK) ITSO=1
      IF (ITSO.NE.0 .AND. ITSN.NE.0) CNEW(LCND)=COLD(LCOD)
C  SEE IF WE USED TIME-SERIES FOR LOCAL FLOW AT FIRST GAGE
C
      IF (ITSO .NE. 0) LCOD=LCOD+1
      IF (ITSN .NE. 0) LCND=LCND+1
      LRN=CNEW(LCN)
      LRO=COLD(LCO)
      IF(LRO.EQ.0 .OR. LRN.EQ.0) GO TO 1765
      IF(NGN.LE.0) GO TO 1765
      DO 1760 J=1,NGN
      LCND=LCND+(J-1)*4
      DO 1755 I=1,4
 1755 CNEW(LCND+I-1)=0.0
      IF (J .GT. NGO) GO TO 1760
      LCOD=LCOD+(J-1)*4
      DO 1756 I=1,3
 1756 CNEW(LCND+I-1)=COLD(LCOD+I-1)
 1760 CONTINUE
 1765 NCOLD=LCOD+4-LCO
      NCNEW=LCND+4-LCN
      IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     UPSTREAM STAGE MINIMIZATION SCEME -- MINH
C
 1100 IF (IBUG .GE. 1) WRITE(IODBUG,930)LEVEL
 930  FORMAT('MINH(',I1,1H))
      IF (IBUG .GE. 1) WRITE(IODBUG,982)CO(LC)
 982  FORMAT(3HUPQ,F11.2)
      LC=LC+1
      IF (IBUG .GE. 1) WRITE(IODBUG,984)CO(LC),CO(LC+1)
 984  FORMAT(7HUPSTAGE,2(F11.2))
      IF (IBUG .GE. 1) WRITE(IODBUG,985)
 985  FORMAT(7HENDMINH)
      GO TO 500
C***********************************************************************
C
C     INDUCED SURCHARGE COMPUTATIONAL SCHEME -- INDSRCHGE
C
 1110 IF (IBUG .GE. 1) WRITE(IODBUG,2090)LEVEL
 2090 FORMAT(/17X,'INDUCED SURCHARGE SCHEME -- INDSRCHGE(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      CNEW(LCN)=COLD(1)
      CNEW(LCN+1)=COLD(4)
      CNEW(LCN+2)=COLD(5)-COLD(4)
      CNEW(LCN+3)=-999.0
      CNEW(LCN+4)=-999.0
      CNEW(LCN+5)=-999.0
      IF (IFIND .EQ. 0 .OR. NTN.NE.NTO) GO TO 2020
      DO 2010 I=1,6
      INEW = LCN+I-1
      IOLD = LCO+I-1
 2010 CNEW(INEW) = COLD(IOLD)
 2020 NCOLD = 6
      NCNEW = 6
      IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     FLASHBOARDS COMPUTATIONAL SCHEME -- FLASHBDS
C
 1120 IF (IBUG .GE. 1) WRITE(IODBUG,2190)LEVEL
 2190 FORMAT(/17X,'FLASHBOARD COMPUTAIONAL SCHEME -- FLASHBDS(',I1,')')
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IEND = LPO+NPOLD-1
      IF (IBUG .GE. 2) WRITE(IODBUG,901) (POLD(I),I=LPO,IEND)
      IEND = LPN+NPNEW-1
      IF (IBUG .GE. 2) WRITE(IODBUG,901) (PNEW(I),I=LPN,IEND)
      LPND = LPN+1
      NBSN = PNEW(LPND)
      LPND = LPND+5
      LPND = LPND+1
      NRL = PNEW(LPND)
      LPND = LPND+2*NRL
      LCND = LCN
      IF(IFIND.NE.0) GO TO 2109
      LCND=LCND+1
      IF(NBSN .EQ. 0)GO TO 2101
      LPND = LPND+6
      NRS = PNEW(LPND)
      LPND=LPND+2*NRS
      LCND=LCND+1
 2101 LPND = LPND+1
      IGATEN = PNEW(LPND)
      IF(IGATEN.EQ.0)GO TO 2102
      LCND=LCND+2
C
 2102 CONTINUE
      LCND=LCND+1
      NCNEW=LCND-LCN+1
      IF(NCNEW.LE.0) GO TO 2140
      IEND=LCN+NCNEW-1
      DO 2105 I=LCN,IEND
 2105 CNEW(I)=0.0
       GO TO 2140
 2109 LPOD = LPO+1
      NBSO = POLD(LPOD)
      LPOD = LPOD+5
      LPOD = LPOD+1
      NRL = POLD(LPOD)
      LPOD = LPOD+2*NRL
      LCOD = LCO
      CNEW(LCND) = COLD(LCOD)
      LCND=LCND+1
      LCOD=LCOD+1
      CNEW(LCND) = COLD(LCOD)
      IF(NBSN .EQ. 0)GO TO 2110
      LPND = LPND+5
      LPND = LPND+1
      NRS = PNEW(LPND)
      LPND=LPND+2*NRS
      LCND=LCND+1
 2110 CONTINUE
      IF(NBSO .EQ. 0)GO TO 2115
      LPOD = LPOD+5
      LPOD = LPOD+1
      NRS = POLD(LPOD)
      LPOD=LPOD+2*NRS
      LCOD=LCOD+1
      CNEW(LCND) = COLD(LCOD)
 2115 CONTINUE
      LPND = LPND+1
      IGATEN = PNEW(LPND)
      IF(IGATEN.EQ.0)GO TO 2120
      LCND=LCND+2
C
 2120 CONTINUE
      LPOD = LPOD+1
      IGATEO = POLD(LPOD)
      IF(IGATEO.EQ.0)GO TO 2125
      LCOD=LCOD+1
      CNEW(LCND-1) = COLD(LCOD)
      LCOD=LCOD+1
      CNEW(LCND) = COLD(LCOD)
C
 2125 LCOD = LCOD+1
      LCND=LCND+1
      CNEW(LCND) = COLD(LCOD)
 2130 NCOLD = LCOD-LCO+1
 2140 NCNEW = LCND-LCN+1
      IF(IFIND.NE.0) GO TO 2145
      DO 2144 I=LCN,LCND
 2144 CNEW(I)=0.0
 2145 IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     POWER GENERATION COMPUTATIONAL SCHEME -- POWERGEN
C
 1130 CONTINUE
      NCOLD=0
      NCNEW=NTN
      IF (IBUG .GE. 1) WRITE(IODBUG,2290)LEVEL
 2290 FORMAT(/17X,'POWER GENERATION SCHEME --  POWERGEN(',I1,1H))
      IEND=LCN+NCNEW-1
      DO 2295 I=LCN,IEND
 2295 CNEW(I)=COLD(2)
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .EQ. 0) GO TO 2230
      NCOLD = NTO
      IF (NCOLD .GE. 1) CALL TSCV26(COLD,X,NTO,NTN,LCO,NCNEW,NCOLD,D)
      CALL CNCO26(CNEW,X,NCNEW,NCNEW,LCN)
 2230 IF (IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C
C     SELECTION IS A UTILITY
C
 250  IGOTO=IBASE-150
      GO TO (260,500,500,290,300,500,500,500,500,500,500,500),IGOTO
C***********************************************************************
C
C     RULE CURVE ADJUST UTILITY -- RULEADJ
C
 260  IF (IBUG .GE. 1) WRITE(IODBUG,2690)LEVEL
 2690 FORMAT(/17X,'RULECURVE ADJUST UTILITY -- RULADJDJ(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IBUG .LE. 1) GO TO 2691
      IEND = LPO+NPOLD-1
      IF (NPOLD .GE. 1) WRITE(IODBUG,901) (POLD(I),I=LPO,IEND)
      IEND = LPN+NPNEW-1
      IF (NPNEW .GE. 1) WRITE(IODBUG,901) (PNEW(I),I=LPN,IEND)
 2691 CONTINUE
C
      NVALN = PNEW(LPN)
      LPND = LPN
      IF (NVALN .LE. 0) GO TO 2610
      LPND = LPND+2*NVALN+1
 2610 CONTINUE
      NDEVN = PNEW(LPND+1)
      IEND=LCN+NDEVN
      DO 2615 I=LCN,IEND
 2615 CNEW(I)=0.0
      IF (IFIND .EQ. 0) GO TO 2630
      CNEW(LCN) = COLD(LCO)*NTN/NTO
      NVALO = POLD(LPO)
      LPOD = LPO
      IF (NVALO .LE. 0) GO TO 2620
      LPOD = LPOD+2*NVALO+1
 2620 CONTINUE
      NDEVO = POLD(LPOD+1)
      NCOLD = NDEVO+1
      NCNEW = NDEVN+1
      LCOP1 = LCO+1
      IF (NDEVO .GE. 1) CALL TSCV26(COLD,X,NTO,NTN,LCOP1,NDEVN,NDEVO,D)
      LCNP1 = LCN+1
      CALL CNCO26(CNEW,X,NDEVN,NDEVN,LCNP1)
 2630 IF (IBUG .LE. 1) GO TO 500
      IF (NDEVO .GE. 1) WRITE(IODBUG,901) (X(I),I=1,NDEVO)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     DISCHARGE AND POOL ELEVATION ADJUSTMENT UTILITY -- ADJUST
C
  290 NCOLD=0
      NCNEW=2
      IF (PNEW(LTN) .EQ. BLANK) GO TO 500
      IF (IBUG .GE. 1) WRITE(IODBUG,2990)LEVEL
 2990 FORMAT(/17X,'POOL ELEV AND DISCHARGE ADJUST UTILITY ',
     &' -- ADJUST(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
C  DEFAULT DEVIATION DIFFERENCE (CNEW) TO 0.0; DEVIATION RATIO TO 1.0
      CNEW(LCN)=1.0
      IF(PNEW(LPN+1) .GE. 1.0) CNEW(LCN)=0.0
      CNEW(LCN+1)=0.0
      IF (IFIND .LE. 0 .OR. POLD(LTO).EQ.BLANK) GO TO 2930
      IF (PNEW(LPN+1) .NE. POLD(LPO+1)) GO TO 2910
C  NO TRANSFER IF CHANGED FROM DIFF TO RATIO OR VISE VERSA
      CNEW(LCN) = COLD(LCO)
      CNEW(LCN+1) = COLD(LCO+1)*NTN/NTO
 2910 NCOLD=2
 2930 CONTINUE
      IF(IBUG .LE. 1) GO TO 500
      IEND = LCO+NCOLD-1
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) (COLD(I),I=LCO,IEND)
      IEND = LCN+NCNEW-1
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) (CNEW(I),I=LCN,IEND)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
      GO TO 500
C***********************************************************************
C
C     BACK COMPUTING INFLOW UTILITY -- BACKFLOW
C
  300 NCOLD=0
      NCNEW=1
      IF (IBUG .GE. 1) WRITE(IODBUG,3090)LEVEL
 3090 FORMAT(/17X,'BACK COMPUTING INFLOW UTILITY -- BACKFLOW(',I1,1H))
      CALL ISUN26(POLD,COLD,LPO,LTO,LCO,NPOLD,IFIND,NUMN)
      IF (IFIND .EQ. 0 .OR. NTN.NE.NTO) GO TO 3020
      CNEW(LCN) = COLD(LCO)
      NCOLD=1
      GO TO 3030
 3020 CNEW(LCN) = COLD(5)
 3030 CONTINUE
      IF (IBUG .LE. 1) GO TO 500
      IF (NCOLD .GE. 1) WRITE(IODBUG,901) COLD(LCO)
      IF (NCNEW .GE. 1) WRITE(IODBUG,901) CNEW(LCN)
      WRITE(IODBUG,900) LPO,LTO,LCO,NPOLD,NCOLD,LPN,LTN,LCN,NPNEW,NCNEW
C***********************************************************************
C
C
C
 500  CONTINUE
      IF(IBUG.EQ.0) GO TO 510
      WRITE(IODBUG,902) (CNEW(I),I=1,NCTN)
  902 FORMAT(5X,'FINAL CARRYOVER ARRAY AFTER CARRYOVER TRANSFER:',
     & /1X,15F8.2)
  510 CONTINUE
  900 FORMAT(5X,10I10)
  901 FORMAT(5X,10F10.2)
      RETURN
      END
