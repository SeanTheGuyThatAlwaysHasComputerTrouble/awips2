C$PRAGMA C (UDATG)
C MODULE DFWPDB
C-----------------------------------------------------------------------
C
      SUBROUTINE DFWPDB (IDSTA,ITYPE,JULTME,MINS,IREV,VALBUF,
     *    NUMOBS,ISCODE,IDQAL,IDSRCE,ITME,IFUT,IRFLG,IERNPR,IDURH,
     *    USERID,IERR,JPRINT)
C
C  THIS ROUTINE SETS UP THE CALLING SEQUENCES FOR THE INPUT DATA
C  TYPE.  THE ROUTINES WPD1S (DAILY), WPD1SF (FUTURE), WPDSS
C  (STRANGER) AND WPDRRS (RRS) POST THE DATA TO THE PPDB.
C
C  ARGUMENT LIST:
C
C    NAME       TYPE  I/O   DIM    DESCRIPTION
C    ------     ----  ---   ---    -----------
C    IDSTA       A8    I     2     STATION ID
C    ITYPE       A4    I     1     DATA TYPE
C    JULTME      I     I   NUMOBS  DATE ARRAY OF DATA(JULIAN HRS)
C    MINS        I     I   NUMOBS  MINUTES OF DATA(USED FOR RRS)
C    IREV        I     I     1     REVISION FLAG:
C                                    0=NO REVISION
C                                    1=REVISION
C    VALBUF      R     I   NUMOBS  DATA VALUES
C    NUMOBS      I     I     1     NUMBER OF OBSERVATIONS
C    ISCODE      A8    I     2     SHEF EXPANDED PARAMETER CODE
C    IDQAL       A4    I     1      DATA QUALIFIER
C    IDSRCE      A8    I     2      DATA SOURCE
C    ITME         I    I     1      TIME SERIES INDICATOR
C    IFUT         I    I     1      FUTURE FLAG
C    IRFLG        I    I     1      REVISION INDICATOR
C    IERNPR       I    I     1      ERROR PRINT INDICATOR
C    IDURH        I    O    NUMOBS  DURATION CODE (ENCODED)
C    USERID       A                 USER IDENTIFIER
C    IERR         I    I     1      STATUS CODE:
C                                    >0 IF PP24 DATA NOT WITHIN
C                                       SPECIFIED TIME LIMITS
C
      CHARACTER*(*) USERID
C
      PARAMETER (LWBUFF=2000)
      DIMENSION WBUFF(LWBUFF)
      PARAMETER (LOBS=600)
      DIMENSION OBS(LOBS)
      PARAMETER (LENDAT=64)
      DIMENSION IDATES(LENDAT)
      DIMENSION IDSTA(2),IDREAL(8)
      DIMENSION VALBUF(*),MINS(*),JULTME(*),IDURH(*)
      DIMENSION IWRITE(10),ISCODE(2)
      DIMENSION IDSRCE(2),LMIN(10),NRTPES(2,4)
      DIMENSION OBS1(30),RLATLN(2)
      DIMENSION JDATE(6)
C
      INCLUDE 'uiox'
      INCLUDE 'udebug'
      INCLUDE 'udatas'
      INCLUDE 'hclcommon/hdflts'
      INCLUDE 'pdbcommon/pdtrrx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shefpost/RCS/dfwpdb.f,v $
     . $',                                                             '
     .$Id: dfwpdb.f,v 1.7 2005/08/12 14:51:18 dws Exp $
     . $' /
C    ===================================================================
C
      DATA LTF24/4HTF24/,LTFMN/4HTFMN/,LTFMX/4HTFMX/,LPP24/4HPP24/
      DATA LETX/4HX   /,LET0/4H0   /,IPPSR/4HPPSR/,IRSTO/4HRSTO/,
     *     IACFT/4HACFT/
      DATA NRTPES/4HQME ,4HQIN ,4HDQME,4HDQIN,4HRQME,4HRQOT,4HRQIM,
     *           4HRQIN/
      DATA LETQ/4HQ   /
      DATA LUL/4HUL  /
      DATA LXC/4HXC  /
      DATA IAESC/4HAESC/
      DATA IZELV/4HZELV/
      DATA IQIN/4HQIN /
      DATA IRQOT/4HRQOT/
C
C
      IF (IDETR.GT.0) WRITE (LP,*) 'ENTER DFWPDB'
C
      NTYPES=1
      ID=1
      NVO=0
      CALL UMEMST (IBLNK,RLATLN,2)
      CALL UMEMST (0,IWRITE,10)
      CALL UMEMST (IBLNK,KODP,1)
C
C  CHECK IF DAILY OR RRS TYPES
      IX=IPDCKD(ITYPE)
      IF (IX.EQ.0) GO TO 140
C
C  DAILY TYPE - GET UNITS AND CONVERSION FACTOR
      CALL PDFUNT (ITYPE,0,IUNIT)
      CONVT=1.0
      CALL UMOVEX (ISCODE,1,KODP,1,2)
      IF (KODP.EQ.LUL) CONVT=24.0
      IF (KODP.EQ.LXC) CONVT=10.0
C
C  CHECK IF FUTURE OR STRANGER STATION
      IF (ITYPE.EQ.LTF24.OR.ITYPE.EQ.LTFMN.OR.ITYPE.EQ.LTFMX) GO TO 60
C
C  MOVE CHARACTER FROM STATION ID TO SEE IF THIS IS STRANGER STATION
      CALL UMEMST (IBLNK,IDREAL,8)
      CALL UMOVEX (IDSTA,1,IDREAL(1),1,1)
      IF (ITYPE.EQ.LPP24.AND.IDREAL(1).EQ.LETX) GO TO 80
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  POST DAILY DATA
C
10    DO 30 I=1,NUMOBS
         IF (VALBUF(I).LE.-999.)GO TO 20
         IF (CONVT.EQ.1.0) GO TO 30
            VALBUF(I)=VALBUF(I)/CONVT
            GO TO 30
20       VALBUF(I)=-999.
30       CONTINUE
C
      IF (IDEDB.GT.0) WRITE (LP,350) IDSTA,ITYPE,IUNIT,IREV,
     *               (JULTME(I),VALBUF(I),I=1,NUMOBS)
C
      IF (IERR.EQ.0) GO TO 40
         IWRITE(1)=2
         ISTAT=3
         GO TO 50
40    CALL WPD1S (IDSTA,0,NTYPES,ITYPE,IUNIT,JULTME(1),JULTME(NUMOBS),
     *           NUMOBS,VALBUF,IWRITE,IREV,ISTAT)
C
      IF (ISTAT.EQ.0) GO TO 300
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.1) GO TO 330
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.2.AND.IWRITE(1).EQ.1) GO TO 330
50    CALL PDBERR (IDSTA,NTYPES,ITYPE,JULTME,VALBUF,IUNIT,NUMOBS,NVLPOB,
     *   MINS,RLATLN,IREV,IFUT,IWRITE,ISTAT)
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  POST FUTURE DATA
C
60    DO 70 I=1,NUMOBS
         IF (VALBUF(I).LT.-999.) VALBUF(I)=-999.
70       CONTINUE
C
      CALL WPD1SF (IDSTA,0,NTYPES,ITYPE,IUNIT,JULTME(1),JULTME(NUMOBS),
     *            NUMOBS,VALBUF,LENDAT,IDATES,IWRITE,IREV,ISTAT)
C
      IF (ISTAT.EQ.0) GO TO 300
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.1) GO TO 330
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.2.AND.IWRITE(1).EQ.1) GO TO 330
      CALL PDBERR (IDSTA,NTYPES,ITYPE,JULTME,VALBUF,IUNIT,NUMOBS,NVLPOB,
     *   MINS,RLATLN,IREV,IFUT,IWRITE,ISTAT)
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  POST STRANGER STATION DATA
C
C  MOVE THE REST OF THE STATION ID INTO ARRAY FOR LAT/LON CHECK
80    J=1
      DO 90 I=2,8
         CALL UMOVEX (IDSTA,I,IDREAL(J),1,1)
         J=J+1
90       CONTINUE
      IF (IDREAL(7).EQ.IBLNK) IDREAL(7)=LET0
      IF (IDEDB.GT.0) WRITE (LP,360) IDREAL
C
C  CONVERT TO A REAL NUMBER FOR LAT/LON CONVERSION
      CALL UFIXED (IDREAL,RLAT,1,3,2,ID,IER)
      CALL UFIXED (IDREAL,RLON,4,7,2,ID,IER)
      IF (IDEDB.GT.0) WRITE (LP,370) RLAT,RLON
      IF (IER.NE.0) GO TO 10
C
C  MOVE LAT/LON INTO ONE WORD FOR POSTING
      RLATLN(1)=RLAT
      RLATLN(2)=RLON
C
C  CONVERT JULIAN HR TO JULIAN DAY
      DO 130 I=1,NUMOBS
         IF (VALBUF(I).LT.-999.) VALBUF(I)=-999.
         IF (IERR.EQ.0) GO TO 100
            ISTAT=5
            GO TO 110
100      JL=JULTME(I)-NHOPDB
         JDY=JL/24+1
         JHR=MOD(JL,24)
         IF (JHR.NE.0) JDY=JDY+1
         CALL WPDSS (JDY,JHR,RLATLN,VALBUF(I),IUNIT,IREV,ISTAT)
         IF (ISTAT.EQ.0) GO TO 120
         IF (IERNPR.EQ.1.AND.ISTAT.EQ.1) GO TO 330
110      ITYPE=IPPSR
         CALL PDBERR (IDSTA,NTYPES,ITYPE,JULTME(I),VALBUF(I),IUNIT,1,
     *      NVLPOB,MINS(I),RLATLN,IREV,IFUT,IWRITE,ISTAT)
         GO TO 130
120      NVO=NVO+1
         VALBUF(NVO)=VALBUF(I)
         JULTME(NVO)=JULTME(I)
130      CONTINUE
      NUMOBS=NVO
      IF (NUMOBS.GT.0) GO TO 300
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  POST RRS DATA
C
C  CHECK IF VALID TYPE
140   IRX=IPDCKR(ITYPE)
      IF (IRX.EQ.0) THEN
         WRITE (LP,380) ITYPE
         GO TO 330
         ENDIF
C
C  GET UNITS
      IUNIT=IRSUNT(IRX)
      IF (ITYPE.EQ.IRSTO) IUNIT=IACFT
      NVLPOB=NVALPO(IRX)
      CALL UMOVEX (ISCODE,1,KODP,1,1)
C
C  GET THE CURRENT Z TIME FROM THE COMPUTER CLOCK
      CALL UDATG (JDATE)
      IYEAR  = JDATE(1)
      IMON   = JDATE(3)
      IDAY   = JDATE(4)
      IHRMIN = JDATE(5)
      IHOUR  = IHRMIN/100
      IMIN   = IHRMIN - 100*IHOUR
      IF (IDEDB.GT.0) WRITE (LP, *) 'IDAY=',IDAY, ' IMON=',
     *  IMON, ' IYEAR=',IYEAR, ' IHRMIN=', IHRMIN, ' IHOUR=',
     *  IHOUR, ' IMIN=',IMIN
C
      CALL DDGCH2 (JLIANC,IYEAR,IMON,IDAY,IHOUR)
C
C  IFHRS SET TO NUMBER OF HOURS PAST CURRENT COMPUTER CLOCK
C  TIME THAT DATA WILL BE ALLOWED TO BE POSTED.
      IFHRS=6
C
C  CHECK FOR THE SPECIAL CASES FOR TULSA AND SLIDELL.
      IF (USERID.EQ.'TUL'.AND.ITYPE.EQ.IQIN) IFHRS=IFHRS+72
      IF (USERID.EQ.'LMRFC'.AND.ITYPE.EQ.IRQOT) IFHRS=IFHRS+240
      JLIANC = JLIANC + IFHRS
      IF (IDEDB.GT.0) WRITE (LP,*) 'JLIANC=',JLIANC
C
C  GET PERIOD FOR RRS OBSERVATIONS FROM DURATION HOUR
      K=1
      DO 230 I=1,NUMOBS
         IF (IDEDB.GT.0) WRITE (LP,*) 'JULTME(',I,')= ', JULTME(I)
         IF (NVLPOB.EQ.2) GO TO 200
         IF (IDURH(I).EQ.2001) IDURH(I)=1024
         IF (IDURH(I).LT.2000) GO TO 160
C        DURATION HOUR INVALID
            WRITE (LP,390) IDURH(I),IDSTA,ITYPE
            GO TO 230
160      IF (IDURH(I).GE.1000) GO TO 190
C     TYPE HAS <1 HOUR DURATION - SEE IF CAN BE CHANGED
         DO 170 II=1,4
            IF (ITYPE.NE.NRTPES(1,II)) GO TO 170
            IF (IDURH(I).GE.30) GO TO 180
            ITYPE=NRTPES(2,II)
            GO TO 140
170         CONTINUE
C     TYPE WAS NOT CHANGED BUT DURATION IS SET TO 1 HOUR
180      IDURH(I)=1
190      IPER=MOD(IDURH(I),1000)
         CALL UMEMOV (IPER,OBS(K+2),1)
C     SEE IF THIS IS A MISSING VALUE - IF REVISION FLAG IS ON SET JULIAN
C     HOUR TO NEGATIVE AND POST. IF REVISION FLAG IS OFF SKIP THIS ONE.
200      IF (VALBUF(I).LE.-999.AND.IREV.EQ.0) GO TO 230
         IF (VALBUF(I).LE.-999.AND.IREV.EQ.1) JULTME(I)=-JULTME(I)
C     MOVE VALUE AND JULIAN HOUR FOR POSTING INTO WRITE BUFFER
         JULHR=IABS(JULTME(I))
         IF (MINS(I).GT.30) JULHR=JULHR+1
         IF (JULTME(I).LT.0) JULHR=-JULHR
C     MAKE A CHECK TO COMPARE THE CURRENT CLOCK TIME PLUS IFHRS TO THE
C     OBSERVATION TIME. IF THE OBSERVED TIME IS GREATER THAN IFHRS
C     INTO THE FUTURE, THEN DO NOT POST, BUT DO WRITE AND ERROR MESSAGE.
         IF (JULHR.GT.JLIANC.AND.IFUT.EQ.0) THEN
            ISTAT= -99
            CALL PDBERR (IDSTA,NTYPES,ITYPE,JULTME(I),VALBUF(I),IUNIT,1,
     *         NVLPOB,MINS(I),RLATLN,IREV,IFUT,IWRITE,ISTAT)
            CALL ULENTH (USERID,LEN(USERID),LENTH)
            WRITE (LP,395) ITYPE,IFHRS,USERID(1:LENTH)
            GO TO 230
            ENDIF
         IF (IDEDB.GT.0) WRITE (LP,*) 'JULHR=',JULHR
         CALL UMEMOV (JULHR,OBS(K),1)
         IF (VALBUF(I).LE.-999.) GO TO 210
         IF (ITYPE.EQ.IRSTO) VALBUF(I)=VALBUF(I)*1000.
         IF (ITYPE.EQ.IZELV) VALBUF(I)=VALBUF(I)*1000.
         IF (ITYPE.EQ.IAESC) VALBUF(I)=VALBUF(I)*0.01
         IF (KODP.EQ.LETQ) VALBUF(I)=VALBUF(I)*1000.
         GO TO 220
210      VALBUF(I)=-999.
220      OBS(K+1)=VALBUF(I)
         K=K+NVLPOB
C     KEEP AN ACTUAL COUNT OF NUMBER OF OBSERVATIONS TO BE POSTED
         NVO=NVO+1
         JULTME(NVO)=JULTME(I)
         MINS(NVO)=MINS(I)
         VALBUF(NVO)=VALBUF(I)
230      CONTINUE
C
      IF (NVO.LT.1) GO TO 330
      NUMOBS=NVO
C
C  CHECK IF REALLY A REVISION AND IF DELETING, DOES A VALUE EXIST THAT
C  SHOULD BE DELETED
      IF ((IRFLG.EQ.0).AND.(IREV.EQ.0)) GO TO 290
      IF (NUMOBS.GT.1) GO TO 290
C
C  SET UP CALL TO READ RRS RECORD TO SET REVISION FLAG
      IREV=0
      JULHR=IABS(JULTME(1))
      IF (MINS(1).GT.30) JULHR=JULHR+1
      CALL RPDRRS (IDSTA,0,ITYPE,NVL,JULHR,JULHR,30,OBS1,NOB,10,LMIN,
     *            LWBUFF,WBUFF,LSTHR,ISTAT)
      IF (IDEDB.GT.0) WRITE (LP,400) ISTAT
      IF (JULTME(1).LT.0) GO TO 240
C
C  NOT TRYING TO DELETE
      IF (ISTAT.EQ.0) GO TO 280
      GO TO 290
C
C  TRYING TO DELETE
240   IF (ISTAT.NE.0) GO TO 310
      IF (NVLPOB.EQ.3) GO TO 260
      IF (MINS(1).GT.0) GO TO 250
      MINS(1)=LMIN(1)
      IF (LMIN(1).LE.30) GO TO 280
      JULTME(1)=JULTME(1)+1
      GO TO 280
250   IF (MINS(1).NE.LMIN(1)) GO TO 320
      GO TO 280
260   IF (NOB.EQ.0) GO TO 310
      DO 270 I=1,NOB
         J=I*3
         IF (OBS(3).EQ.OBS1(J)) GO TO 280
270      CONTINUE
         GO TO 310
C
C  DATA EXISTS FOR THIS DATE AND TIME PERIOD - TURN REVISION FLAG 'ON'
280   IREV=1
C
C  POST RRS DATA TO PPDB
290   IF (IDEDB.GT.0) WRITE (LP,410) IREV
      CALL WPDRRS (IDSTA,0,NTYPES,ITYPE,NVLPOB,IUNIT,NVO,LOBS,OBS,
     *       NUMOBS,MINS,LWBUFF,WBUFF,IWRITE,IFUT,LSTHR,IREV,ISTAT)
C
      IF (ISTAT.EQ.0) GO TO 300
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.1) GO TO 330
      IF (IERNPR.EQ.1.AND.ISTAT.EQ.2.AND.IWRITE(1).EQ.1) GO TO 330
      CALL PDBERR (IDSTA,NTYPES,ITYPE,JULTME,VALBUF,IUNIT,NUMOBS,NVLPOB,
     *   MINS,RLATLN,IREV,IFUT,IWRITE,ISTAT)
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PRINT REPORT OF POSTED DATA
C
300   CALL DFPPST (IDSTA,ITYPE,IUNIT,JULTME,MINS,NUMOBS,VALBUF,
     *             IREV,ISCODE,IDQAL,IDSRCE,ITME,JPRINT)
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
310   JULHR=-JULTME(1)
      CALL JLMDYH (JULHR,IMO,IDA,IYR,IHR)
      WRITE (LP,420) IDSTA,ITYPE,IMO,IDA,IYR,IHR,MINS(1),TIME(3)
      GO TO 330
320   JULHR=-JULTME(1)
      CALL JLMDYH (JULHR,IMO,IDA,IYR,IHR)
      WRITE (LP,430) IDSTA,ITYPE,IMO,IDA,IYR,IHR,TIME(3),
     *   MINS(1),LMIN(1)
C
330   IF (IDETR.GT.0) WRITE (LP,*) 'EXIT DFWPDB'
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
350   FORMAT (' STAID=',2A4,' TYPE=',A4,' UNITS=',A4,' IREV=',
     *       I2/' JULHOUR=',' VALUES=',5(I7,1X,F8.3,1X))
360   FORMAT (' IDREAL=',8A4)
370   FORMAT (' RLAT=',F5.2,' RLON=',F6.2)
380   FORMAT ('0**ERROR** RRS TYPE ',A4,' NOT DEFINED IN PPDB.')
390    FORMAT ('0**ERROR**  DURATIONS GREATER THAN ONE DAY CANNOT ',
     *   'BE POSTED. ENCODED DURATION OF ',I4,' IN STATION ',2A4,
     *   ' FOR TYPE ',A4)
395   FORMAT (' **ERROR** RRS DATA VALUE FOR ',A4,' NOT POSTED ',
     *        'BECAUSE OBS TIME IS GREATER THAN ',I3, ' HOURS AFTER ',
     *        'CURRENT CLOCK TIME FOR USER ',A,'.')
400   FORMAT (' BACK FROM RPDRRS, ISTAT=',I2)
410   FORMAT (' CALL RRS WRITE WITH REVISION SET TO ',I2)
420   FORMAT ('0**WARNING** TRIED TO DELETE VALUE NOT ON PPDB. ',
     *   'STATION:',2A4,' TYPE:',A4,' TIME:',I2.2,'/',I2.2,'/',
     *   I2.2,'-',I2.2,':',I2.2,1X,A3)
430   FORMAT ('0**ERROR** VALUE CANNOT BE DELETED BECAUSE TIME ',
     *   'ENTERED IS NOT EXACTLY THE SAME AS ON THE PPDB.' /
     *   6X,'STATION:',2A4,' TYPE:',A4,' DATE:',I2.2,'/',I2.2,'/',
     *   I2.2,'-',I2.2,1X,A3,'   MIN ENTERED:',I3,'   MIN ON PPDB:',I3)
C
      END
