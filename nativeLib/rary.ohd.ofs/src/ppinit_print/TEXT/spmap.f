C MODLUE SPMAP
C-----------------------------------------------------------------------
C
C  ROUTINE TO PRINT MAP AREA PARAMETERS
C
      SUBROUTINE SPMAP (IPRNT,IVMAP,IVMAPS,MAPID,ITIME,ITMWT,POWER,
     *   NSTWT,ISTWT,NPCPN,NSETS,DESCRP,BASNID,FMAPID,CENTRD,TSTAID,
     *   TSTAWT,CTSTA,CSTAID,CSTAWT,CCSTA,
     *   RADINF,IPMAP,NTECH,IBASN,NBOX,ITECHS,IPD6,IPD24,MDRBOX,
     *   CORMDR,UNUSED,IY,IXB,IXE,NSEGS,X,Y,JX,JY,NBPTS,LFACTR,
     *   PLOT,LARRAY,ARRAY,UNITS,AREA,CAREA,JN,ISTAT)
C
      CHARACTER*4 UNITS,PLOT,DUNITS
      CHARACTER*8 TYPMSG
      CHARACTER*8 MAPID,BASNID,BSNID,FMAPID
      CHARACTER*20 DESCRP
      DIMENSION CENTRD(2)
      DIMENSION TSTAID(2,1),TSTAWT(1),CTSTA(2,1),CSTAID(2,1)
      DIMENSION CSTAWT(NPCPN,1),CCSTA(2,1),UNUSED(1)
      DIMENSION ITECHS(1),IPD6(1),IPD24(1),MDRBOX(1),CORMDR(1)
      DIMENSION IY(1),IXB(1),IXE(1),X(1),Y(1),JX(1),JY(1),JN(1)
      DIMENSION STACOR(2),DESC(5),STAID(2)
      DIMENSION NROW(6),NCOL(6)
      DIMENSION ARRAY(LARRAY)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
      INCLUDE 'scommon/suoptx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/ppinit_print/RCS/spmap.f,v $
     . $',                                                             '
     .$Id: spmap.f,v 1.2 1999/07/07 11:16:42 page Exp $
     . $' /
C    ===================================================================
C
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,180)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('MAP ')
C
      ISTAT=0
C
C  CHECK NUMBER OF LINES LEFT ON PAGE
      IF (IOPNWP.EQ.1) THEN 
          CALL SUPAGE
          ELSE
             IF (ISLEFT(5).GT.0) CALL SUPAGE
          ENDIF
C
C  PRINT HEADING
      IF (IPRNT.EQ.2) THEN
         WRITE (LP,200) DESCRP
         CALL SULINE (LP,2)
         ELSE
            WRITE (LP,190) MAPID
            CALL SULINE (LP,2)
         ENDIF
      WRITE (LP,220) MAPID
      CALL SULINE (LP,2)
C
C  PRINT PARAMETER ARRAY VERSION NUMBER
      IF (LDEBUG.GT.0) THEN
         WRITE (LP,*) 'IVMAP=',IVMAP
         CALL SULINE (LP,2)
         WRITE (LP,*) 'IVMAPS=',IVMAPS
         CALL SULINE (LP,2)
         ENDIF
C
C  PRINT MAP AREA IDENTIFIER, DESCRIPTIVE INFORMATION, CENTROID
C  COORDINATES AND BASIN BOUNDARY IDENTIFIER
      BSNID=BASNID
      CALL SUBLID (BSNID,IERR)
      IBLLGD=0
      CALL SBLLGD (XLON,XLAT,1,CENTRD(1),CENTRD(2),IBLLGD,IERR)
      WRITE (LP,240) DESCRP,XLAT,XLON,BSNID
      CALL SULINE (LP,2)
C
C  SET RADIUS OF INFLUENCE UNITS
      DUNITS='KM'
      CALL SBGRDL (XLAT,RADUNT,IERR)
      IF (UNITS.EQ.'ENGL') THEN
         DUNITS='MI'
         CALL UDUCNV ('KM  ','MI  ',1,1,RADUNT,RADUNT,IERR)
         ENDIF
      IRAD=RADUNT*RADINF+0.5
C
C  PRINT TIME INTERVAL, FUTURE MAP IDENTIFIER AND RADIUS OF INFLUENCE
      WRITE (LP,250) ITIME,FMAPID,RADINF,IRAD,DUNITS(1:LENSTR(DUNITS))
      CALL SULINE (LP,2)
C
C  PRINT POINTER TO MAP AREA PARAMETER RECORD, NUMBER OF WORDS RESERVED
C  FOR NON-UNIVERSAL HCL TECHNIQUES AND VALUES OF NON-UNIVERSAL
C  TECHNIQUES
      IF (LDEBUG.GT.0) THEN
         WRITE (LP,420) IPMAP
         CALL SULINE (LP,2)
         WRITE (LP,450) NTECH
         CALL SULINE (LP,2)
         WRITE (LP,460) (I,ITECHS(I),I=1,NTECH)
         CALL SULINE (LP,2)
         ENDIF
C
      NGTERR=0
C
C  PRINT TYPE OF STATION WEIGHTS
      IF (ISTWT.EQ.1) THEN
         WRITE (LP,270)
         CALL SULINE (LP,2)
         GO TO 10
         ENDIF
      IF (ISTWT.EQ.2) THEN
         WRITE (LP,280)
         CALL SULINE (LP,2)
         GO TO 10
         ENDIF
      IF (ISTWT.EQ.3) THEN
         WRITE (LP,290)
         CALL SULINE (LP,2)
         GO TO 10
         ENDIF
      IF (ISTWT.EQ.4) THEN
         WRITE (LP,300) POWER
         CALL SULINE (LP,2)
         GO TO 10
         ENDIF
      WRITE (LP,260) ISTWT
      CALL SUERRS (LP,2,-1)
      GO TO 30
C
C  PRINT DESCRIPTION, ID, WEIGHT, AND LAT/LON OF MAP STATIONS
10    IF (ISLEFT(6).GT.0) CALL SUPAGE
      IF (NPCPN.EQ.0) THEN
         WRITE (LP,530)
         CALL SULINE (LP,2)
         GO TO 50
         ENDIF
      DUNITS='M'
      IF (UNITS.EQ.'ENGL') DUNITS='FT'
      IF (NSETS.EQ.1) THEN
         WRITE (LP,310) DUNITS(1:LENSTR(DUNITS))
         CALL SULINE (LP,3)
         ENDIF
      IF (NSETS.EQ.2) THEN
         WRITE (LP,360) DUNITS(1:LENSTR(DUNITS))
         CALL SULINE (LP,3)
         ENDIF
      DO 20 I=1,NPCPN
         CALL SUBSTR (CSTAID(1,I),1,8,STAID,1)
         TYPMSG='ERROR'
         CALL SUGTDS (STAID,DESC,STATE,STACOR,STAELV,LARRAY,ARRAY,
     *      TYPMSG,IERR)
         IF (IERR.GT.0) THEN
            NGTERR=NGTERR+1
            GO TO 20
            ENDIF
         JX(I)=STACOR(1)+0.5
         JY(I)=STACOR(2)+0.5
         IBLLGD=0
         CALL SBLLGD (XLON,XLAT,1,STACOR(1),STACOR(2),IBLLGD,IERR)
         VALUE=STAELV
         IF (UNITS.EQ.'ENGL') THEN
            CALL UDUCNV ('M   ','FT  ',1,1,STAELV,VALUE,IERR)
            ENDIF
         IF (ISNWPG(LP).EQ.1) THEN
            IF (NSETS.EQ.1) THEN
               WRITE (LP,310) DUNITS(1:LENSTR(DUNITS))
               CALL SULINE (LP,3)
               ENDIF
            IF (NSETS.EQ.2) THEN
               WRITE (LP,360) DUNITS(1:LENSTR(DUNITS))
               CALL SULINE (LP,3)
               ENDIF
            ENDIF
         IF (NSETS.EQ.1) THEN
            WRITE (LP,320) I,DESC,STAID,CSTAWT(I,1),
     *         XLAT,XLON,VALUE
            CALL SULINE (LP,1)
            ENDIF
         IF (NSETS.EQ.2) THEN
            WRITE (LP,330) I,DESC,STAID,CSTAWT(I,1),CSTAWT(I,2),
     *         XLAT,XLON,VALUE
            CALL SULINE (LP,1)
            ENDIF
20       CONTINUE
C
C  PRINT ARRAY LOCATION OF POINTERS FOR 24 HR STATIONS USED TO
C  COMPUTE MAP
30    IF (LDEBUG.GT.0) THEN
         IF (ISLEFT(4).GT.0) CALL SUPAGE
         WRITE (LP,500)
         CALL SULINE (LP,3)
         DO 40 I=1,NPCPN
            WRITE (LP,510) I,IPD24(I)
            CALL SULINE (LP,1)
40          CONTINUE
         ENDIF
C
C  PLOT BASIN IF AVAILABLE AND REQUESTED
      IF (IBASN.NE.1) GO TO 50
      IPLOT=1
      IF (PLOT.EQ.'NO') IPLOT=0
      IF (PLOT.EQ.' ') IPLOT=IOPPLT
      IF (IPLOT.EQ.0) GO TO 50
C
      IPTYPE=2
      ICOL=80
      DUNITS='KM2'
      IF (UNITS.EQ.'ENGL') DUNITS='MI2'
      VALUE1=CAREA
      VALUE2=AREA
      IF (UNITS.EQ.'ENGL') THEN
         CALL UDUCNV ('KM2 ','MI2 ',1,1,CAREA,VALUE1,IERR)
         CALL UDUCNV ('KM2 ','MI2 ',1,1,AREA,VALUE2,IERR)
         ENDIF
      WRITE (LP,440) LFACTR,DUNITS(1:LENSTR(DUNITS)),VALUE1,VALUE2
      CALL SULINE (LP,4)
      IF (NGTERR.GT.0) THEN
         WRITE (LP,430)
         CALL SULINE (LP,2)
         ENDIF
      IF (NGTERR.EQ.0) THEN
         CALL SBPLOT (IPTYPE,ICOL,IY,IXB,IXE,NSEGS,X,Y,JX,JY,NPCPN,
     *      LFACTR,CENTRD(1),CENTRD(2),JN,IERR)
         ENDIF
C
C  PRINT TYPE OF TIMING WEIGHTS
50    IF (ISLEFT(6).GT.0) CALL SUPAGE
      IF (ITMWT.EQ.1) THEN
         WRITE (LP,380)
         CALL SULINE (LP,2)
         GO TO 60
         ENDIF
      IF (ITMWT.EQ.2) THEN
         WRITE (LP,390)
         CALL SULINE (LP,2)
         GO TO 60
         ENDIF
      IF (ITMWT.EQ.3) THEN
         WRITE (LP,400) POWER
         CALL SULINE (LP,2)
         GO TO 60
         ENDIF
      WRITE (LP,370) ITMWT
      CALL SUERRS (LP,2,-1)
      GO TO 80
C
C  PRINT DESCRIPTION, ID, WEIGHT, AND LAT/LON OF TIMING STATIONS
60    IF (NSTWT.EQ.0) THEN
         WRITE (LP,530)
         CALL SULINE (LP,2)
         GO TO 100
         ENDIF
      DUNITS='M'
      IF (UNITS.EQ.'ENGL') DUNITS='FT'
      WRITE (LP,310) DUNITS(1:LENSTR(DUNITS))
      CALL SULINE (LP,3)
      DO 70 I=1,NSTWT
         CALL SUBSTR (TSTAID(1,I),1,8,STAID,1)
         TYPMSG='ERROR'
         CALL SUGTDS (STAID,DESC,STATE,STACOR,STAELV,LARRAY,ARRAY,
     *      TYPMSG,IERR)
         IF (IERR.GT.0) GO TO 70
         IBLLGD=0
         CALL SBLLGD (XLON,XLAT,1,STACOR(1),STACOR(2),IBLLGD,IERR)
         VALUE=STAELV
         IF (UNITS.EQ.'ENGL') THEN
            CALL UDUCNV ('M   ','FT  ',1,1,STAELV,VALUE,IERR)
            ENDIF
         IF (ISNWPG(LP).EQ.1) THEN
            WRITE (LP,310) DUNITS(1:LENSTR(DUNITS))
            CALL SULINE (LP,3)
            ENDIF
         WRITE (LP,340) I,DESC,TSTAID(1,I),TSTAID(2,I),TSTAWT(I),
     *      XLAT,XLON,VALUE
         CALL SULINE (LP,1)
70       CONTINUE
C
C  PRINT ARRAY LOCATION OF POINTERS FOR 6 HR STATIONS USED FOR TIMING
80    IF (LDEBUG.GT.0) THEN
         IF (ISLEFT(4).GT.0) CALL SUPAGE
         WRITE (LP,480)
         CALL SULINE (LP,3)
         DO 90 I=1,NSTWT
            WRITE (LP,490) I,IPD6(I)
            CALL SULINE (LP,1)
90          CONTINUE
         ENDIF
C
100   IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,540) NBOX,(MDRBOX(I),I=1,NBOX)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      IF (NBOX.EQ.0) THEN
         WRITE (LP,470)
         CALL SULINE (LP,2)
         GO TO 170
         ENDIF
C
C  PRINT LAT/LON PAIRS DEFINING SUBSET OF MDR GRID
      IF (IBASN.EQ.1) GO TO 110
         IF (ISLEFT(5).GT.0) CALL SUPAGE
         WRITE (LP,520) (CORMDR(I),I=1,8)
         CALL SULINE (LP,5)
C
C  PRINT MDR USAGE OPTION AND MDR BOXES ASSIGNED TO THIS AREA
110   IFIN=0
      IMDRPS=1
      JJ=1
120   II=0
      DO 130 I=1,6
         II=II+1
         NROW(I)=(MDRBOX(JJ)/113)+1
         IF (((NROW(I)-1)*113).EQ.MDRBOX(JJ)) NROW(I)=NROW(I)-1
         NCOL(I)=MDRBOX(JJ)-(NROW(I)-1)*113
         JJ=JJ+1
         IF (JJ.LE.NBOX) GO TO 130
            IFIN=1
            GO TO 140
130      CONTINUE
140   IF (IMDRPS.NE.1) GO TO 150
         WRITE (LP,550) (NROW(J),NCOL(J),J=1,II)
         CALL SULINE (LP,2)
         IMDRPS=0
         GO TO 160
150   WRITE (LP,560) (NROW(J),NCOL(J),J=1,II)
      CALL SULINE (LP,1)
160   IF (IFIN.EQ.0) GO TO 120
C
C  PRINT NUMBER OF UNUSED POSITIONS
170   NUMAP=2
      NUMAPS=1
      IF (LDEBUG.GT.0) THEN
         WRITE (LP,350) NUMAPS,NUMAP
         CALL SULINE (LP,2)
         ENDIF
C
      WRITE (LP,210)
      CALL SULINE (LP,2)
C
      IF (ISTRCE.GT.0) THEN
         WRITE (IOSDBG,580)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
180   FORMAT (' *** ENTER SPMAP')
190   FORMAT ('0',33('-'),' ID=',A,2X,85('-'))
200   FORMAT ('0',26('-'),' DESC=',A,2X,78('-'))
210   FORMAT ('0',132('-'))
220   FORMAT ('0*--> MAP PARAMETERS : IDENTIFIER = ',A)
240   FORMAT ('0DESCRIPTION = ',A,3X,
     *   'CENTROID: LATITUDE = ',F7.2,2X,'LONGITUDE = ',F7.2,3X,
     *   'BASIN IDENTIFIER = ',A)
250   FORMAT ('0DATA TIME INTERVAL = ',I2.2,3X,
     *   'FMAP IDENTIFIER = ',A,3X,
     *   'RADIUS OF INFLUENCE = ',F5.1,' GRID UNITS ',
     *      '(APPROXIMATELY ',I3,1X,A,')')
260   FORMAT ('0*** ERROR - IN SPMAP - INDICATOR FOR TYPE OF STATION ',
     *    'WEIGHTS NOT RECOGNIZED: ',I3)
270   FORMAT ('0',5X,'STATION WEIGHTS (PREDETERMINED)')
280   FORMAT ('0',5X,'STATION WEIGHTS (GRID POINT)')
290   FORMAT ('0',5X,'STATION WEIGHTS (THIESSEN)')
300   FORMAT ('0',5X,'STATION WEIGHTS (1/D**POWER WITH POWER = ',F5.2,
     *   ')')
310   FORMAT ('0',T10,'DESCRIPTION',12X,'IDENTIFIER',3X,
     *   'WEIGHT',5X,'LAT',5X,'LONG',5X,'ELEV(',A2,')' /
     *   T10,20('-'),3X,10('-'),3X,8('-'),3X,5('-'),3X,6('-'),3X,8('-'))
320   FORMAT (4X,I3,2X,5A4,3X,2A4,5X,F8.3,3X,F5.2,3X,F6.2,3X,F8.1)
330   FORMAT (4X,I3,2X,5A4,3X,2A4,5X,2(F9.3,3X),F5.2,3X,F6.2,3X,F8.1)
340   FORMAT (4X,I3,2X,5A4,3X,2A4,5X,E8.3,3X,F5.2,3X,F6.2,3X,F8.1)
350   FORMAT ('0NUMBER OF UNUSED POSITIONS (MAPS) = ',I2,
     *   3X,'NUMBER OF UNUSED POSITIONS (MAP) = ',I2)
360   FORMAT ('0',T10,'DESCRIPTION',12X,'IDENTIFIER',3X,
     *   'WINTER WT',3X,'SUMMER WT',3X,'LAT',5X,'LONG',5X,'ELEV(',A2,')'
     *   /
     *   T10,20('-'),3X,10('-'),3X,2(9('-'),3X),5('-'),3X,6('-'),
     *   3X,8('-'))
370   FORMAT ('0*** ERROR - IN SPMAP - INDICATOR FOR TYPE OF TIMING ',
     *    'WEIGHTS NOT RECOGNIZED: ',I3)
380   FORMAT ('0',5X,'TIMING WEIGHTS (PREDETERMINED)')
390   FORMAT ('0',5X,'TIMING WEIGHTS (1/D**2)')
400   FORMAT ('0',5X,'TIMING WEIGHTS (1/D**POWER WITH POWER = ',F5.2,
     *   ')')
420   FORMAT ('0POINTER TO MAP AREA PARAMETER RECORD = ',I5)
430   FORMAT ('0*** NOTE - BASIN BOUNDARY WILL NOT BE PLOTTED BECAUSE ',
     *   'ERROR ENCOUNTERED OBTAINING STATION LOCATIONS.')
440   FORMAT ('0COMPUTED BASIN BOUNDARY DEFINITION AND STATION ',
     *      'LOCATIONS:' /
     *   ' (GRID SPACING = ',I2,3X,'@ = CENTROID',3X,
     *      'AREA (',A,'): COMPUTED = ',F7.1,'  SPECIFIED = ',F7.1,')' /
     *   )
450   FORMAT ('0NUMBER OF WORDS RESERVED FOR NON-UNIVERSAL HCL',
     *   ' TECHNIQUES = ',I2)
460   FORMAT ('0ITECHS(',I1,')=',I2,4(2X,'(',I1,')=',I2))
470   FORMAT ('0MDR USAGE OPTION = NMDR')
480   FORMAT ('0',44X,'PPVR POINTER' / 44X,11('-') /)
490   FORMAT (38X,I2,5X,I5)
500   FORMAT ('0',39X,'PP24 POINTER' / 39X,12('-') /)
510   FORMAT (34X,I2,4X,I5)
520   FORMAT ('0LATITUDE/LONGITUDE PAIRS DEFINING SUBSET OF MDR GRID:' /
     *    1X,'UPPER LEFT  CORNER=(',F7.2,',',F7.2,')' /
     *    1X,'UPPER RIGHT CORNER=(',F7.2,',',F7.2,')' /
     *    1X,'LOWER RIGHT CORNER=(',F7.2,',',F7.2,')' /
     *    1X,'LOWER LEFT  CORNER=(',F7.2,',',F7.2,')')
530   FORMAT ('0NO STATIONS DEFINED')
540   FORMAT (' NBOX=',I3,3X,'MDRBOX(I)=',(20(1X,I5)/))
550   FORMAT ('0MDR BOXES (ROW,COL): ',6(I2,',',I3,4X))
560   FORMAT (22X,6(I2,',',I3,4X))
580   FORMAT (' *** EXIT SPMAP')
C
      END
