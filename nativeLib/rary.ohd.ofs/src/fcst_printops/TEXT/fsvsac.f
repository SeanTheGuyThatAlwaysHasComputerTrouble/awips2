C MEMBER FSVSAC
C  (from old member FCFSVSAC)
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 01/05/95.13:30:02 BY $WC21DT
C
C
C @PROCESS LVL(77)
C
      SUBROUTINE FSVSAC(SEGID,ND,MXD,JDAYS,IHRS,ISFG,P,MP,T,MT,NXD,
     1   NXOLDP,IOTIME,IFLUSH,LINE,IBUG,ITITLE)
C
C     THIS SUBROUTINE STORES CARRYOVER VALUES AND SELECTED PARAMETERS
C     FOR THE SAC-SMA OPERATION.  VALUES FOR EACH SEGMENT
C     ARE READ FROM FILES IN AN ORDER TO MINIMIZE DISK
C     ACCESSES AND STORED IN THE D ARRAY.  THE D ARRAY
C     VALUES ARE PRINTED AS REQUIRED BY CALLING FPRSAC.
C
C     WRITTEN BY...ERIC ANDERSON-HRL  MARCH 1982
C  MODIFIED TO CORRECT PROBLEM WHEN D ARRAY FILLS -
C    SEGMENT CURRENTLY PASSED FROM FPROPS WAS NOT PROPERLY KEPT
C    WHILE PRINTING SEGMENTS STORED IN D ARRAY
C      GEORGE SMITH - HRL - JANUARY 1988.
C
C     THE SAC-SMA INFORMATION IS STORED IN THE D ARRAY BY
C       SEGMENT. THE INFORMATION STORED FOR EACH SEGMENT IS AS FOLLOWS.
C
C     POSITION               CONTENTS
C       1-2               SEGMENT IDENTIFIER
C        3                NUMBER OF SAC-SMA OPERATIONS IN THE SEGMENT.
C        4                IF SPECIAL FGROUP, LOCATION OF CARRYOVER
C                           DATES IN THE OLDP ARRAY.
C                          OTHERWISE=0
C        5                NUMBER OF VALUES IN C ARRAY FOR SEGMENT
C        6                IWOCRY--CARRYOVER WORD OFFSET
C       7-8               CARRYOVER GROUP NAME
C       9-13              SEGMENT DESCRIPTION
C       REST              FOR EACH SAC-SMA OPERATION THE FOLLOWING
C                           IS STORED.
C                           1-2   OPERATION NAME
C                           3-12  PARAMETERS(UZTWM,UZFWM.LZTWM,LZFSM,
C                                   LZFPM,UZK,LZSK,LZPK,PCTIM,ADIMP)
C                           13    LOCATION OF CARRYOVER IN C ARRAY.
C                           14    LOCATION OF FROST INDEX IN C ARRAY
C                                   =0 IF FROZEN GROUND NOT USED.
C                           REST  FOR EACH CARRYOVER DATE 7 VALUES
C                                  PER DATE ARE STORED (UZTWC,UZFWC,
C                                  LZTWC,LZFSC,LZFPC,ADIMC,FGIX)
C
C     VALUES ARE ALL STORED IN UNITS TO BE DISPLAYED.
C     FOR SPECIAL FGROUP, NOTHING IS STORED FOR DATES FOR
C     WHICH THERE IS NO CARRYOVER (JULIAN DATE OF CARRYOVER
C     IS LE ZERO IN OLDP ARRAY).  MISSING VALUE(-999.0) STORED
C     WHEN CARRYOVER CAN NOT BE READ AND WHEN FGIX NOT
C     DEFINED.
C.......................................
      INTEGER T(MT),OLDP
      DIMENSION SEGID(2),JDAYS(MXD),IHRS(MXD),P(MP),IOTIME(3,1)
      DIMENSION SEGN(2),INCSGX(20),CGIDX(2),SEGNIX(2)
C
C     COMMON BLOCKS
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fd'
      INCLUDE 'common/oldp'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/oldt'
      INCLUDE 'common/fc'
      COMMON/FCSEGN/IRSEG,SEGNID(2),IUPSEG(2,5),IDNSEG(2,2),IPREC,
     1 IWOCRY,IFGID(2),CGID(2),SGDSCR(5),ICRDTE(5),MINDT,XLAT,XLONG,
     2 NCA,NDA,NT,NTS,NPA,NCOPS,INCSEG(20),IDEFSG,IEREC,OPEN(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_printops/RCS/fsvsac.f,v $
     . $',                                                             '
     .$Id: fsvsac.f,v 1.2 1997/06/24 19:49:35 page Exp $
     . $' /
C    ===================================================================
C
C
C     DATA STATEMENT
      DATA SC/2HC /
C.......................................
C     CHECK TRACE LEVEL--TRACE LEVEL=2.
      IF(ITRACE.GE.2) WRITE(IODBUG,10)
10    FORMAT(1H0,17H** FSVSAC ENTERED)
C.......................................
C     INITIAL VALUES.
      NP=10
      NC=7
C.......................................
C     PRINTOUT VALUES IN D ARRAY IF IFLUSH=1.
      IF(IFLUSH.EQ.1) GO TO 80
C.......................................
C     CHECK T ARRAY TO FIND NUMBER OF SAC-SMA OPERATIONS IN SEGMENT.
      NSAC=0
      LOCT=1
20    IF(T(LOCT).NE.1) GO TO 30
      NSAC=NSAC+1
      OLDT(NSAC)=LOCT
30    IF(T(LOCT).EQ.-1) GO TO 40
      LOCT=T(LOCT+1)
      IF(LOCT.GT.MT) GO TO 40
      GO TO 20
C     IF NO SAC-SMA OPERATIONS-RETURN
40    IF(NSAC.EQ.0) GO TO 500
C.......................................
C     CHECK IF SPACE IS AVAILABLE TO STORE VALUES FOR THIS
C       SEGMENT.  IF NOT, PRINT AND THEN STORE.
      LEFT=MD-NXD+1
      NEED=13+NSAC*(4+NP+ND*NC)
      IF(ISFG.EQ.1) NEEDOP=2*ND
      IF(NEED.LE.LEFT) GO TO 50
      GO TO 60
50    IF(ISFG.EQ.0) GO TO 310
      LEFT=MOLDP-NXOLDP+1
      IF(NEEDOP.LE.LEFT) GO TO 310
C.......................................
C
C  STORE SOME INFO IN /FCSEGN/ CB FOR CURRENT SEGMENT PASSED
C  FROM FPROPS BEFORE STARTING LOOP TO FILL D ARRAY WITH OTHER
C  CARRYOVER DATES.
C
60    SEGNIX(1)=SEGNID(1)
      SEGNIX(2)=SEGNID(2)
      IWOCRX=IWOCRY
      CGIDX(1)=CGID(1)
      CGIDX(2)=CGID(2)
      NCAX=NCA
      DO 70 IX=1,5
70    INCSGX(IX)=INCSEG(IX)
C
C.......................................
C     READ CARRYOVER AND STORE CARRYOVER FOR REMAINING DATES
C       BEFORE PRINTING VALUES IN THE D ARRAY.
80    IF(ND.EQ.1) GO TO 270
C
C     CHECK FOR DEBUG
      IF(IBUG.EQ.0) GO TO 120
      WRITE(IODBUG,90)SEGID,IWOCRY,NCA,CGID,SEGNID
90    FORMAT('0 ABOUT TO BEGIN READING CARRYOVER FOR OTHER ',
     1 'THAN 1ST DATE'/,5X,'SEGID=',2A4,', IWOCRY=',I9,', NCA=',I5,
     2 ', CGID=',2A4,', SEGNID=',2A4)
      LD=NXD-1
      WRITE(IODBUG,100)(D(I),I=1,LD)
100   FORMAT(1H ,15F8.2)
      IF (ISFG.EQ.0) GO TO 120
      LD=NXOLDP-1
      WRITE(IODBUG,110)(OLDP(I),I=1,LD)
110   FORMAT(1H ,12(I7,I3))
C
C     BEGIN DATE LOOP
120   DO 260 I=2,ND
      LD=1
C
C     SEGMENT INFORMATION
130   SEGN(1)=D(LD)
      SEGN(2)=D(LD+1)
      NSMA=D(LD+2)
      LP=D(LD+3)
      SEGNID(1)=SEGN(1)
      SEGNID(2)=SEGN(2)
      NCA=D(LD+4)
      IWOCRY=D(LD+5)
      CGID(1)=D(LD+6)
      CGID(2)=D(LD+7)
      DO 140 J=1,20
140   INCSEG(J)=1
C
C     GET CARRYOVER DATE
      IF(ISFG.EQ.1) GO TO 150
      JD=JDAYS(I)
      IH=IHRS(I)
      GO TO 160
150   J=LP+(I-1)*2
      JD=OLDP(J)
      IF(JD.LE.0) GO TO 250
      IH=OLDP(J+1)
C
C     READ C ARRAY.
160   CALL FGETCO (SEGN,JD,IH,C,MC,'ERROR',IERR)
      IF(IBUG.GT.0)WRITE(IODBUG,170)SEGN,JD,IH,IERR,IWOCRY,NCA
170   FORMAT(' READING CARRYOVER FOR SEGMENT ',2A4,', DAY-HR=',
     1 I10,'-',I2,', IERR=',I5,', IWOCRY =',I9,', NCA=',I5)
      IF ((IBUG.EQ.2).AND.(IERR.EQ.0)) CALL FDMPA(SC,C,MC)
C     STORE VALUES FOR EACH OPERATION
      DO 240 N=1,NSMA
      K=LD+13+(N-1)*(NP+4+NC*ND)
      L=K+NP+3+(I-1)*NC
      IF(IERR.EQ.0) GO TO 190
      DO 180 J=1,NC
180   D(L+J)=-999.0
      GO TO 240
190   LC=D(K+NP+2)
      LFGIX=D(K+NP+3)
      DO 200 J=1,6
200   D(L+J)=C(LC+J-1)
      IF(METRIC.EQ.1) GO TO 220
      DO 210 J=1,6
210   D(L+J)=D(L+J)*0.03937
220   IF(IFRZE.GT.0) GO TO 230
      D(L+7)=-999.0
      GO TO 240
230   D(L+7)=C(LFGIX)
      IF(METRIC.EQ.0)D(L+7)=32.0+1.8*D(L+7)
240   CONTINUE
C
C     CHECK FOR LAST SEGMENT
250   LD=LD+13+NSMA*(4+NP+ND*NC)
      IF(LD.GE.NXD) GO TO 260
      GO TO 130
260   CONTINUE
C.......................................
C     CHECK FOR DEBUG
270   IF(IBUG.EQ.0) GO TO 280
      LD=NXD-1
      WRITE(IODBUG,100)(D(I),I=1,LD)
C.......................................
C     PRINT VALUES STORED IN THE D ARRAY
C
C>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
C
280   CALL FPRSAC(NXD,D,MD,OLDP,MOLDP,IOTIME,ISFG,LINE,ND,NP,NC,ITITLE)
C
C>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
C
C     IF IFLUSH=1, RETURN--NO MORE TO STORE.
      IF(IFLUSH.EQ.1) GO TO 500
C.......................................
C
C  HAVE PRINTED INFO CURRENTLY IN D ARRAY. RESET D AND OLDP POINTERS
C  AND STORE INFO FOR SEGMENT READ BEFORE PRINTING BEGAN.
C
C     RESET NEXT D AND OLDP POINTERS BEFORE STORING MORE VALUES.
      NXD=1
      NXOLDP=1
C
C  PUT INFO BACK INTO /FCSEGN/ CB VARIABLES ABOUT SEGMENT PASSED
C  FROM FPROPS.
C
      SEGNID(1)=SEGNIX(1)
      SEGNID(2)=SEGNIX(2)
      IWOCRY=IWOCRX
      CGID(1)=CGIDX(1)
      CGID(2)=CGIDX(2)
      NCA=NCAX
      DO 290 IX=1,5
290   INCSEG(IX)=INCSGX(IX)
C.......................................
C
      IF(IBUG.GT.0)WRITE(IODBUG,300)SEGID,IWOCRY,NCA,CGID,SEGNID
300   FORMAT(' FINISHED PRINTING ONE BATCH OF CARRYOVER, NOW ',
     1 'STORE INFO FOR SEGMENT READ BEFORE PRINTING'/
     2 5X,'SEGID=',2A4,', IWOCRY=',I9,', NCA=',I5,
     3 ', CGID=',2A4,', SEGNID=',2A4)
C
C     STORE PARAMETERS AND FIRST CARRYOVER DATE FOR THE SEGMENT
C       IN THE D ARRAY.
C     IF SPECIAL FGROUP STORE CARRYDATES FOR THE SEGMENT IN OLDP
C        (INTEGER ARRAY)
310   IF(ISFG.EQ.0) GO TO 330
      DO 320 I=1,ND
      J=NXOLDP+(I-1)*2
      OLDP(J)=JDAYS(I)
      OLDP(J+1)=IHRS(I)
320   CONTINUE
C.......................................
C     FILL D ARRAY WITH GENERAL INFRO., SELECTED PARAMETERS, AND
C       CARRYOVER FOR THE FIRST DATE FOR EACH SAC-SMA
C        OPERATION WITHIN THE SEGMENT.
330   LD=NXD
C
C     STORE SEGMENT INFRO.
      D(LD)=SEGID(1)
      D(LD+1)=SEGID(2)
      D(LD+2)=NSAC+0.01
      D(LD+3)=0.01
      IF(ISFG.EQ.1)D(LD+3)=NXOLDP+0.01
      D(LD+4)=NCA+0.01
      D(LD+5)=IWOCRY+0.01
      D(LD+6)=CGID(1)
      D(LD+7)=CGID(2)
      DO 340 I=1,5
340   D(LD+7+I)=SGDSCR(I)
C
C     STORE INFRO. FOR EACH SAC-SMA OPERATION AND CO FOR 1ST DATE
C       WANTED.  CO FOR OTHER DATES WILL BE FILLED IN DO LOOP 130
C       JUST BEFORE THEY ARE PRINTED.
C
      DO 470 N=1,NSAC
      LD=NXD+13+(N-1)*(4+NP+ND*NC)
      LOCT=OLDT(N)
      LPO=T(LOCT+2)
C
C     STORE OPERATION NAME.
      D(LD)=P(LPO-5)
      D(LD+1)=P(LPO-4)
      LPM=P(LPO+19)
      LPM=LPO+LPM-1
      IFRZE=P(LPO+23)
C
C     STORE PARAMETERS.
      D(LD+2)=P(LPM+2)
      D(LD+3)=P(LPM+3)
      DO 350 I=1,3
350   D(LD+3+I)=P(LPM+9+I)
      D(LD+7)=P(LPM+4)
      D(LD+8)=P(LPM+13)
      D(LD+9)=P(LPM+14)
      D(LD+10)=P(LPM+5)
      D(LD+11)=P(LPM+6)
      IF(METRIC.EQ.1) GO TO 370
      DO 360 I=1,5
360   D(LD+1+I)=D(LD+1+I)*0.03937
C
C     STORE LOCATION OF CARRYOVER IN C ARRAY FOR THE OPERATION.
370   LC=T(LOCT+3)
      LD=LD+NP+2
      D(LD)=LC+0.01
      LFGIX=0
      IF(IFRZE.EQ.0) GO TO 380
C
C     LOCATION OF FROST INDEX IN C ARRAY.
      NXCO=P(LPO+22)
      LFGIX=LC+6+NXCO
380   D(LD+1)=LFGIX+0.01
      LD=LD+1
C
C     IF CARRYOVER NOT AVAILABLE FOR FIRST DATE FOR SPECIAL
C       FGROUP, GO TO NEXT SAC-SMA OPERATION
      IF(ISFG.EQ.0) GO TO 390
      IF(JDAYS(1).LE.0) GO TO 470
C
C     READ CARRYOVER FOR FIRST DATE IF FIRST SAC-SMA OPERATION
390   IF(N.NE.1) GO TO 400
      CALL FGETCO (SEGID,JDAYS(1),IHRS(1),C,MC,'ERROR',IERR)
      IF(IBUG.GT.0)WRITE(IODBUG,170)SEGID,JDAYS(1),IHRS(1),IERR,
     1 IWOCRY,NCA
      IF ((IBUG.EQ.2).AND.(IERR.EQ.0)) CALL FDMPA(SC,C,MC)
C
C     STORE CARRYOVER VALUES
400   IF(IERR.EQ.0) GO TO 420
C     CARRYOVER COULD NOT BE READ
      DO 410 I=1,NC
410   D(LD+I)=-999.0
      GO TO 470
C     STORE CARRYOVER READ.
420   DO 430 I=1,6
430   D(LD+I)=C(LC+I-1)
      IF(METRIC.EQ.1) GO TO 450
      DO 440 I=1,6
440   D(LD+I)=D(LD+I)*0.03937
450   IF(IFRZE.GT.0) GO TO 460
      D(LD+7)=-999.0
      GO TO 470
460   D(LD+7)=C(LFGIX)
      IF(METRIC.EQ.0) D(LD+7)=32.0+1.8*D(LD+7)
470   CONTINUE
C.......................................
C     CHECK FOR DEBUG
      IF(IBUG.EQ.0) GO TO 490
      WRITE(IODBUG,480)SEGID,NSAC,(OLDT(I),I=1,NSAC)
480   FORMAT(1H0,20HFSVSAC DEBUG--SEGID=,2A4,1X,5HNSAC=,I2,1X,
     1  7HLOCT'S=,20I4)
      LD=NXD+NEED-1
      WRITE(IODBUG,100)(D(I),I=NXD,LD)
      IF(ISFG.NE.1) GO TO 490
      LD=NXOLDP+NEEDOP-1
      WRITE(IODBUG,110)(OLDP(I),I=NXOLDP,LD)
C.......................................
C     UPDATE D AND OLDP ARRAY LOCATIONS BEFORE GOING TO NEXT SEGMENT
490   NXD=NXD+NEED
      IF(ISFG.EQ.1) NXOLDP=NXOLDP+NEEDOP
C.......................................
C     EXIT SUBROUTINE
500   IF(ITRACE.GE.2) WRITE(IODBUG,510)
510   FORMAT(1HO,14H** EXIT FSVSAC)
C.......................................
      RETURN
      END
