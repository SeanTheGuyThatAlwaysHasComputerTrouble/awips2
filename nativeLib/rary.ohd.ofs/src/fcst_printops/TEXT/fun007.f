C MODULE FUN007
C-----------------------------------------------------------------------
C
C   THIS FUNCTION PRINTS CARRYOVER VALUES FOR SELECTED OPERATIONS
C.......................................................................
C
C     FUNCTION ORIGINALLY PROGRAMMED BY
C         GEORGE F. SMITH - HRL - DECEMBER 1982
C     MODIFIED TO ADD SYSDEBUG TECH AND REMOVE PRNTDBUG TECH BY
C         GEORGE F. SMITH - HRL - JANUARY 1985
C  REFERENCES TO /OLDP/ AND /OLDT/ REMOVED - MOLDP AND MOLDT VALUES
C   NOW SET IN BLOCK DATA
C    GEORGE F. SMITH - HRL - JANUARY 1988
C.......................................................................
C
      SUBROUTINE FUN007
C
C     THE TECHNIQUES FOR THIS FUNCTION ARE
C
C      1. PRINT    - SET THE I/O UNIT NUMBER FOR PRINTOUT
C      2. NOUTZ    - SET THE OUTPUT TIME ZONE CODE
C      3. NOUTDS   - SET THE DAYLIGHT SAVINGS TIME SWITCH
C      4. METRIC   - SPECIFY UNITS FOR PRINTOUT OF CARRYOVER
C      5. PRNTCGRP - SPECIFY CARRYOVER GROUP(S) FOR WHICH
C                    CARRYOVER WILL BE PRINTED
C      6. PRNTFGRP - SPECIFY FORECAST GROUP(S) FOR WHICH
C                    CARRYOVER WILL BE PRINTED
C      7. PRNTOPER - SPECIFY THE OPERATION TYPES FOR WHICH
C                    CARRYOVER WILL BE PRINTED
C      8. PRNTDATE - SPECIFY THE DATES FOR WHICH CARRYOVER
C                    WILL BE PRINTED
C      9. PRNTLAST - SPECIFY THAT THE DESIGNATED NUMBER OF
C                    MOST RECENT CARRYOVER DATES WILL BE PRINTED
C     10. PAGESIZE - SPECIFY THE NUMBER OF LINES DISPLAYED ON A PAGE
C     11. SYSDEBUG - SET SYSTEM DEBUG CODES
C.......................................................................
C
      LOGICAL RECENT
      REAL*8 IDGRUP,BLNK8
C
      COMMON/HDFLTS/DX1(2),INPHCL,DFLTNM(2),DX2(16),LCLHCL,LTZHCL,DX3(2)
      INCLUDE 'common/where'
      INCLUDE 'common/fcrfc'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fctim2'
      INCLUDE 'common/sysbug'
      INCLUDE 'common/fcfgs'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fdispl'
C.......................................................................
C
      DIMENSION SUBNAM(2),OLDSUB(2),LIST(2,10)
      DIMENSION LISTYP(10),JUL2(10),IHR2(10)
      DIMENSION IOPN(3),IARGS(70)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_printops/RCS/fun007.f,v $
     . $',                                                             '
     .$Id: fun007.f,v 1.3 2002/02/11 20:40:33 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA IBLNK/4H    /
      DATA IYES/4HYES /
      DATA SUBNAM/4HFUN0,4H07  /,BLNK8/8H        /,IPROP/4HPROP/
C
C     SET WHERE INFO
C
      DO 10 I=1,2
      OLDSUB(I) = OPNAME(I)
10    OPNAME(I) = SUBNAM(I)
      IOLDOP = IOPNUM
      IOPNUM = 0
C
C.......................................................................
C
C  FCCGD
C      COPY 1ST RECORD OF FILE FCCOGDEF INTO CB FCCGD
C-------
      CALL UREADT (KFCGD,1,NSLOTS,IERR)
C
C  FCCGD1
C     FILL CARRYOVER GROUP ID IN CB FCCGD1 WITH BLANKS
C--------
      CALL UMEMOV (BLNK8,CGIDC,2)
C
C  FCFGS
C     COPY 1ST RECORD OF FILE FCFGSTAT INTO CB FCFGS
C     COPY VALUE IDUMYG INTO NFGREC (TOTAL NUMBER OF F GROUPS ON FILE)
C-------
      CALL UREADT (KFFGST,1,FGID,IERR)
      NFGREC=IDUMYG
C
C     SET NOW,LOCAL,NLSTZ,RFCNAM,AND INPTZC
C
      CALL FSETNW
C
      LOCAL=LCLHCL
      NLSTZ=LTZHCL
      INPTZC=INPHCL
      RFCNAM(1)=DFLTNM(1)
      RFCNAM(2)=DFLTNM(2)
C
C  GET VALUE OF TECHNIQUE 'PAGESIZE'
      CALL HPAST(8HPAGESIZE,LX,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPAGESIZE)
      CALL FTEKCK (LX,8HPAGESIZE,80,LX,50,88)
C
      IOUNT=0
      IF (IOUNT.EQ.1) THEN
C
C  GET VALUE FOR IPR FROM TECHNIQUE 'PRINT'
      CALL HPAST(8HPRINT   ,IPR,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRINT   )
      CALL FTEKCK (IPR,8HPRINT   ,6,IPR,1,9)
C
      ENDIF
C
C  GET VALUE FOR NOUTZ FROM TECHNIQUE 'NOUTZ'
      CALL HPAST(8HNOUTZ   ,NOUTZ,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HNOUTZ   )
      CALL FTEKCK (NOUTZ,8HNOUTZ   ,-6,NOUTZ,-12,12)
C
C  GET VALUE FOR NOUTDS FROM TECHNIQUE 'NOUTDS'
      CALL HPAST(8HNOUTDS  ,NOUTDS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HNOUTDS  )
      CALL FTEKCK (NOUTDS,8HNOUTDS  ,0,NOUTDS,0,1)
C
C     SET VALUES IN COMMON BLOCK FDBUG
C
      IODBUG=IPR
      ITRACE=0
      IDBALL=0
      NDEBUG=0
C
C  GET TECH VALUE AND ARGUMENTS FOR TECH SYSDEBUG
      CALL HPASTA (8HSYSDEBUG,70,ISYDBG,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HSYSDEBUG)
      NDEBGS=0
C
C     IF SYSDEBUG TECHNIQUE OFF (=0 OR N) DO NOT DECODE ARGUMENTS
C
      IF (ISYDBG.EQ.0) GO TO 90
C
C     EXTRACT ARGUMENT IALL WHICH TELLS WHETHER OR NOT TO TURN ON
C     ALL SYSTEM DEBUG CODES
C       VALID VALUES OF ARGUMENT ARE 'NO  ' AND 'YES '.
C
      CALL HGTSTR (1,IARGS(63),ICKYES,IFL,ISTAT)
C
      IF (ISTAT.EQ.0) GO TO 40
      WRITE (IPR,20)ISTAT
20    FORMAT (1H0,10X,'**ERROR** STATUS OF ',I3,' RETURNED FROM ',
     1  'HGTSTR')
      WRITE (IPR,30)
30    FORMAT (11X,'WHILE DECODING YES OR NO FOR ARGUMENT ALLCDS OF ',
     1 'TECHNIQUE SYSDEBUG')
      CALL ERROR
      GO TO 50
C
40    IF (ICKYES.EQ.IYES)IALL=1
C
50    IF (IALL.EQ.1) GO TO 90
C
C     LOOP THROUGH 4-CHARACTER DEBUG CODES
C     UNPACK CODES AND STORE IN IDEBGS OF COMMON BLOCK /SYSBUG/
C
      DO 80 I=1,20
      CALL HGTSTR (1,IARGS(1+(I-1)*3),ICDS,IFL,ISTAT)
      IF (ISTAT.EQ.0) GO TO 70
      WRITE (IPR,20)ISTAT
      WRITE (IPR,60)
60    FORMAT (11X,'WHILE DECODING 4-CHARACTER CODES OF TECHNIQUE ',
     1 'SYSDEBUG')
      CALL ERROR
C
70    IF (ICDS.EQ.IBLNK) GO TO 80
C
      NDEBGS=NDEBGS+1
      IDEBGS(NDEBGS)=ICDS
C
80    CONTINUE
C
C     SET DEBUG FLAG - IBUG FOR PRINTING FC VARIABLES
C
90    IBUG=IFBUG(IPROP)
C
C     GET VALUE FOR METRIC FROM TECHNIQUE 'METRIC'
C
      CALL HPAST(8HMETRIC  ,METRIC,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HMETRIC  )
      CALL FTEKCK (METRIC,8HMETRIC  ,1,METRIC,0,1)
C
      LASLIS=0
      NUMOP=0
      NDATES=0
      RECENT=.FALSE.
C
C     GET VALUE FOR TECH PRNTCGRP AND ARGUMENTS WHICH ARE
C     CGROUP IDS
C
      CALL HPASTA (8HPRNTCGRP,70,NCGRPS,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRNTCGRP)
      CALL FTEKCK (NCGRPS,8HPRNTCGRP,0,NCGRPS,0,5)
C
C     IF NCGRPS GT 0 EXPAND IARGS AND STORE NAMES IN 'LIST'
C
      IF (NCGRPS.LT.1) GO TO 130
C
      DO 120 I=1,5
      CALL HGTSTR (2,IARGS(1+(I-1)*4),IDGRUP,IFL,ISTAT)
      IF (ISTAT.LT.1) GO TO 110
      WRITE (IPR,100)ISTAT
100   FORMAT (1H0,10X,'**ERROR** STATUS OF ',I3,' RETURNED ',
     1 'FROM HGTSTR'/11X,'WHILE DECODING CARRYOVER GROUP IDS.')
      CALL ERROR
      GO TO 120
C
110   IF (IDGRUP.EQ.BLNK8) GO TO 120
C
      LASLIS=LASLIS+1
      LISTYP(LASLIS)=1
      CALL UMEMOV (IDGRUP,LIST(1,LASLIS),2)
C
120   CONTINUE
C
130   CONTINUE
C
C     GET VALUE FOR TECH PRNTFGRP AND ARGUMENTS WHICH ARE
C     FGROUP IDS
C
      CALL HPASTA (8HPRNTFGRP,70,NFGRPS,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRNTFGRP)
      CALL FTEKCK (NFGRPS,8HPRNTFGRP,0,NFGRPS,0,5)
C
C     IF NFGRPS GT 0 EXPAND IARGS AND STORE NAMES IN 'LIST'
C
      IF (NFGRPS.LT.1) GO TO 170
C
      DO 160 I=1,5
      CALL HGTSTR (2,IARGS(1+(I-1)*4),IDGRUP,IFL,ISTAT)
      IF (ISTAT.LT.1) GO TO 150
      WRITE (IPR,140)ISTAT
140   FORMAT (1H0,10X,'**ERROR** STATUS OF ',I3,' RETURNED ',
     1 'FROM HGTSTR'/11X,'WHILE DECODING FORECAST GROUP IDS.')
      CALL ERROR
      GO TO 160
C
150   IF (IDGRUP.EQ.BLNK8) GO TO 160
C
      LASLIS=LASLIS+1
      LISTYP(LASLIS)=2
      CALL UMEMOV (IDGRUP,LIST(1,LASLIS),2)
C
160   CONTINUE
C
170   CONTINUE
C
C     GET VALUE FOR TECH PRNTOPER AND ARGUMENTS WHICH ARE
C     OPERATIONS TYPES TO BE PRINTED
C
      CALL HPASTA (8HPRNTOPER,70,NOPERS,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRNTOPER)
      CALL FTEKCK (NOPERS,8HPRNTOPER,0,NOPERS,0,5)
C
C     IF NOPERS GT 0 EXPAND IARGS AND STORE OPERATION NUMBERS
C     IN 'IOPN'
C
      IF (NOPERS.LT.1) GO TO 250
C
      DO 240 I=1,5
      CALL HGTSTR (2,IARGS(1+(I-1)*4),IDGRUP,IFL,ISTAT)
      IF (ISTAT.LT.1) GO TO 190
      WRITE (IPR,180)ISTAT
180   FORMAT (1H0,10X,'**ERROR** STATUS OF ',I3,' RETURNED ',
     1 'FROM HGTSTR'/11X,'WHILE DECODING OPERATION TYPES.')
      CALL ERROR
      GO TO 240
C
190   IF (IDGRUP.EQ.BLNK8) GO TO 240
C
C     TWO CHECKS - ONLY VALID OPERATIONS ARE 'SAC-SMA' (#1),
C     'SNOW-17' (#19) AND 'SNOW-43' (#31), AND OPERATION
C     TYPES CANNOT BE DUPLICATED.
C
      CALL FOPCDE(IDGRUP,NOP)
C
      IF (NOP.EQ.1 .OR. NOP.EQ.19 .OR. NOP.EQ.31) GO TO 210
C
C     INVALID OPERATION TYPE
C
      WRITE (IPR,200)IDGRUP
200   FORMAT (1H0,10X,'**ERROR** AN INVALID OPERATION TYPE ',
     1 'WAS REQUESTED.'/11X,'THE TYPE REQUESTED WAS ',A8)
      CALL ERROR
      GO TO 240
C
210   CONTINUE
C
C     SEE IF TYPE IS DUPLICATE
C
      IF (NUMOP.LT.1) GO TO 230
      DO 220 J=1,NUMOP
      IF (IOPN(J).EQ.NOP) GO TO 240
220   CONTINUE
C
C     ADD OPERATION TYPE TO LIST
C
230   NUMOP=NUMOP+1
      IOPN(NUMOP)=NOP
C
240   CONTINUE
C
250   CONTINUE
C
C     GET VALUE FOR TECH PRNTDATE AND ARGUMENTS WHICH ARE
C     DATES TO BE PRINTED
C
      CALL HPASTA (8HPRNTDATE,70,NDTVAL,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRNTDATE)
      CALL FTEKCK (NDTVAL,8HPRNTDATE,0,NDTVAL,0,10)
C
C     IF NDTVAL GT 0 CONVERT DATES TO JULIAN DAY AND HOUR
C     AND STORE IN 'JUL2' AND 'IHR2'
C
      IF (NDTVAL.LT.1) GO TO 300
C
      DO 290 I=1,10
      IF (IARGS(1+(I-1)*7).LT.1000) GO TO 290
C
C     CONVERT JULIAN HOUR INTO JULIAN DAY AND HOUR IN INTERNAL TIME
C
      JULHR=IARGS(1+(I-1)*7)
C
C     MAKE SURE NO DUPLICATE DATES IN LIST
C
      IF (NDATES.LT.1) GO TO 270
      DO 260 J=1,NDATES
      IF (IARGS(1+(J-1)*7).EQ.JULHR) GO TO 290
260   CONTINUE
C
270   NDATES=NDATES+1
      JUL2(NDATES)=JULHR/24+1
      IHR2(NDATES)=JULHR - (JUL2(NDATES)-1)*24
      IF (IBUG.GT.0) WRITE (IODBUG,280)NDATES,JUL2(NDATES),IHR2(NDATES)
280   FORMAT (' ** IN FUN007 ** NDATES, JUL2, IHR2 =',3I8)
      IF (IHR2(NDATES).GT.0) GO TO 290
      JUL2(NDATES)=JUL2(NDATES)-1
      IHR2(NDATES)=24
      IF (IBUG.GT.0) WRITE (IODBUG,280)NDATES,JUL2(NDATES),IHR2(NDATES)
C
290   CONTINUE
      IF (NDATES.GT.0) GO TO 310
C
300   CONTINUE
C
C     GET VALUE FOR TECH PRNTLAST AND ARGUMENTS WHICH ARE
C     DATES TO BE PRINTED
C
      CALL HPASTA (8HPRNTLAST,70,IPRLST,NWORDS,IARGS,ISTAT)
      IF (ISTAT.GT.0) CALL FPHPWN (ISTAT,8HPRNTLAST)
      CALL FTEKCK (IPRLST,8HPRNTLAST,0,IPRLST,0,1)
C
C     ONLY GET HERE IF DATES OF CARRYOVER TO BE PRINTED HAVE NOT
C     BEEN ENTERED - SO IF PRNTLAST IS NOT ON, NO SPECIFICATION
C     FOR WHICH DATES TO PRINT HAS BEEN MADE.
C
C     ASSUME THAT ONLY ONE DATE - THE MOST RECENT - IS TO BE PRINTED
C
      RECENT=.TRUE.
      NDATES=1
      IF (IPRLST.EQ.1)NDATES=IARGS(1)
C
310   CONTINUE
C
C     THIS CONCLUDES THE INPUT TO THE PRINTOPS FUNCTION
C.......................................................................
C.......................................................................
C.......................................................................
C
C     NOW CHECK TO MAKE SURE THAT ENOUGH INFO HAS BEEN INPUT
C     SO THAT THE PRINTOPS FUNCTION CAN BE PERFORMED.
C
      IF (LASLIS.GT.0.AND.NUMOP.GT.0) GO TO 350
C
C     NOT ENOUGH INFO
C
      WRITE (IPR,320)
320   FORMAT (1H0,10X,'**ERROR** IN FUNCTION PRINTOPS')
C
      IF (LASLIS.LT.1) WRITE (IPR,330)
330   FORMAT (11X,'NO CARRYOVER OR FORECAST GROUPS HAVE BEEN SPECIFIED.'
     *   )
C
      IF (NUMOP.LT.1) WRITE (IPR,340)
340   FORMAT (11X,'NO OPERATIONS TYPES HAVE BEEN SPECIFIED.')
C
      CALL ERROR
      GO TO 410
C
350   CONTINUE
C
      IF (IBUG.LT.1) GO TO 400
C
      WRITE (IODBUG,360)(LISTYP(IJ),LIST(1,IJ),LIST(2,IJ),IJ=1,LASLIS)
360   FORMAT (' ** IN FUN007 ** LISTYP AND LIST ='/(18X,I3,1X,2A4))
      WRITE (IODBUG,370)(IOPN(IJ),IJ=1,NUMOP)
370   FORMAT (18X,'IOPN ='/(15X,I5))
      IF (.NOT.RECENT) WRITE (IODBUG,380)(JUL2(IJ),IHR2(IJ),IJ=1,NDATES)
380   FORMAT (18X,'JUL2 AND IHR2 ='/(15X,2I8))
      WRITE (IODBUG,390)LASLIS,NUMOP,NDATES,RECENT
390   FORMAT (18X,'LASLIS=',I2,',NUMOP=',I2,',NDATES=',I2,',RECENT=',L4)
C.......................................................................
C
400   CALL FPRTPS (LASLIS,LISTYP,LIST,NUMOP,IOPN,NDATES,JUL2,IHR2,
     1  RECENT)
C.......................................................................
C
410   CONTINUE
C
C     CLOSE FORECAST COMPONENT FILES
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDSUB(1)
      OPNAME(2)=OLDSUB(2)
C
      RETURN
C
      END
