C MODULE EPUNCH
C-----------------------------------------------------------------------
C
       SUBROUTINE EPUNCH (PESP,MPESP,TSESP,MTSESP)
C
C   THIS ROUTINE PUNCHES A SEGMENT DEFINITION BY WITHDRAWING THE
C   INFORMATION FROM THE TSESP AND DSP ARRAYS.  THE VALUES ARE
C   CORRECTLY FORMATTED IN THE PUNCH FILE IN THE FORM OF A
C   REDEFSEG COMMAND.
C
C   ORIGINALLY WRITTEN BY M. KANE - 6/1988
C
      DIMENSION PESP(MPESP),TSESP(MTSESP)
      DIMENSION CRDNM(6),NAMTYP(8),IDA(2),FNAME(3),FILNAM(8),STAID(4),
     * HEAD(6),FREQVL(25),TSID(2),TSVAL(2),IPLOTD(5),
     * XNAM1(10),XNAM2(14),OLDOPN(2),SBNAME(2)
C
      CHARACTER*4 VARTYP
C
      REAL IDA,IDT,INDAT,IDTC
C
      INCLUDE 'common/where'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/espseg'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/espinit/RCS/epunch.f,v $
     . $',                                                             '
     .$Id: epunch.f,v 1.3 2001/06/13 13:08:51 dws Exp $
     . $' /
C    ===================================================================
C
      DATA NAMTYP/4HINPU,4HT   ,
     *            4HUPDA,4HTE  ,
     *            4HOUTP,4HUT  ,
     *            4HINTE,4HRNAL/
      DATA CRDNM/4HREDE,4HFSEG,4HDEF-,4HTS  ,4HANAL,4HYSIS/
      DATA CALB,ESP,XMSG,GENR,REPL,CARD/4HCALB,4HESP ,4HMSNG,4HGENR,
     * 4HREPL,4HCARD/
      DATA ROCL,SMZC/4HROCL,4HSMZC/
      DATA SBNAME/4HEPUN,4HCH  /
      DATA CRPE,BLEND/4HCREA,4HBLEN/
      DATA XNAM1/4HUZTD,4HEF  ,4HUZFW,4HC   ,4HLZTD,4HEF  ,
     * 4HLZFS,4HC   ,4HLZFP,4HC   /,XNAM2/4HTCHA,4HNINF,4HIMP-,
     * 4HRO  ,4HDIR-,4HRO  ,4HSUR-,4HRO  ,4HINTE,4HRFLO,4HSUPB,4HASE ,
     * 4HPRIM,4HBASE/
      DATA BLANK,NONE/4H    ,4HNONE/
C
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 M=1,2
       OLDOPN(M)=OPNAME(M)
10     OPNAME(M)=SBNAME(M)
C
      IF (ITRACE.GE.1) WRITE (IODBUG,*) 'ENTER EPUNCH'
C
      IBUG=IFBUG('INIT')
C
C  PUNCH THE FIRST TWO CARDS 'REDEFSEG' AND THE SEGMENT ID
C  THEN PUNCH THE DEF-TS CARD.
      WRITE (IPU,30)  (CRDNM(J),J=1,2),(ID(K),K=1,2)
30    FORMAT(2A4,2X,2A4)
      WRITE (IPU,40) (CRDNM(J),J=3,4)
40    FORMAT (2A4)
C
      NEX=1
      NTS=0
      IRPL=0
      IFUP=0
C
50    I=NEX
      ITSTYP=TSESP(I)
      IF (ITSTYP.LE.0) GO TO 350
      IDA(1)=TSESP(I+2)
      IDA(2)=TSESP(I+3)
      NEX=TSESP(I+1)
      IDT=TSESP(I+4)
      IT=TSESP(I+5)
      INIT=2*TSESP(I)-1
      IEND=INIT+1
C
      IF (ITSTYP.EQ.4) THEN
         FILTYP=BLANK
         ELSE
            FILTYP=TSESP(I+9)
         ENDIF
C
C  PUNCH OUT THE TS CARD UNDER DEF-TS CONTAINING THE
C  TIME SERIES ID, DATA TYPE, AND TIME INT.,THE TIME SERIES
C  TYPE, AND THE FILE TYPE.
C
        IF (IBUG.EQ.0) GO TO 70
         WRITE (IODBUG,60) FILTYP
60       FORMAT(2X,14HFILE TYPE =   ,A4)
C
70    WRITE (IPU,80) (IDA(J),J=1,2),IDT,IT,(NAMTYP(K),K=INIT,IEND),
     * FILTYP
80    FORMAT(2A4,3X,A4,3X,I2,12X,2A4,6X,A4)
C
C      FOR AN INTERNAL TIME SERIES, NO FILE TYPE IS PROVIDED
C      PROCEED TO THE END AND RELOOP.
C
      NADD=TSESP(I+9)
      IF (ITSTYP.EQ.4) GO TO 350
C
      NV=TSESP(I+11)
      NADD=TSESP(I+12+NV)
      NESP=TSESP(I+13+NV+NADD)
      IEXT=I+12
C
C      BRANCH TO THE NEXT STATEMENT DEPENDING ON THE FILE TYPE
C
      IF (FILTYP.EQ.CALB) THEN
        ICASE=1
         GO TO 90
      ELSE IF (FILTYP.EQ.ESP ) THEN
        ICASE=2
           GO TO 110
      ELSE IF (FILTYP.EQ.XMSG) THEN
        ICASE=3
           GO TO 140
      ELSE IF (FILTYP.EQ.GENR) THEN
        ICASE=4
           GO TO 150
      ELSE IF (FILTYP.EQ.CARD) THEN
        ICASE=7
           GO TO 240
      ELSE IF (FILTYP.EQ.REPL) THEN
        ICASE=5
           GO TO 270
      ENDIF
C
C     FILE TYPE = CALB   GATHER THE TIME SERIES HEADER
C
90    FNAME(1)=TSESP(IEXT)
      FNAME(2)=TSESP(IEXT+1)
      FNAME(3)=TSESP(IEXT+2)
      IDTC=TSESP(IEXT+3)
      ITA=TSESP(IEXT+4)
      IBHREC=TSESP(IEXT+5)
      STAID(1)=TSESP(IEXT+6)
      STAID(2)=TSESP(IEXT+7)
      STAID(3)=TSESP(IEXT+8)
      KMONTH=TSESP(IEXT+9)
      KDAY=TSESP(IEXT+10)
      KYEAR=TSESP(IEXT+11)
      KHRMN=TSESP(IEXT+12)
      KSCNDS=TSESP(IEXT+13)
C
C     PUNCH OUT THE TIME SERIES HEADER CARD
C
      WRITE (IPU,100)FNAME,IDTC,ITA,IBHREC,
     * (STAID(J),J=1,3),KMONTH,KDAY,KYEAR,KHRMN,KSCNDS
100   FORMAT(3A4,A4,I4,I6,1H-,3A4,1H-,I2,1H/,I2,1H/,I2,
     *1H-,I4,1H.,I4)
      IF (IRPL.EQ.1) GO TO 290
      IF (IFUP.EQ.1) GO TO 350
      GO TO 300
C
C     FILE TYPE = ESP DATA FILE
C     GATHER TIME SERIES ID, DATA TYPE AND TIME INTERVAL
C
110   IT=TSESP(IEXT+3)
      IDELT=TSESP(IEXT+7)
      IF (ITSTYP.EQ.1) THEN
        WRITE (IPU,120)(TSESP(IEXT+N),N=4,6),(TSESP(IEXT+N-1),
     * N=1,3),IT,IDELT
120     FORMAT(3A4,3X,2A4,2X,A4,1X,I5,I5)
C
      ELSE
        WRITE (IPU,130) (TSESP(IEXT+N),N=4,6),IDELT
130     FORMAT (3A4,2X,I5)
      ENDIF
C
      IF (IRPL.EQ.1) GO TO 290
      IF (IFUP.EQ.1) GO TO 350
      GO TO 300
C
C     FILE TYPE = MISSING DATA
C     NO EXTERNAL INFO NEEDED
C
140   IF (IRPL.EQ.1) GO TO 290
      IF (IFUP.EQ.1) GO TO 350
      GO TO 300
C
C     FILE TYPE = GENR
C     THE GENERATE TYPE CAN BE CREATE-PE OR BLEND-TS
C
150   WRITE (IPU,160)TSESP(IEXT),TSESP(IEXT+1)
160   FORMAT(2A4)
C
C      IF THE GENERATE TYPE IS CREATE-PE, PUNCH THE
C      NEXT CARD WITH THE TWELVE PE VALUES
C
      IF (TSESP(IEXT).EQ.CRPE) THEN
        WRITE (IPU,170) (TSESP(IEXT+J), J=2,13)
170   FORMAT(12F5.0)
C
C      ELSE, IF THE GENERATE TYPE IS BLEND -TS,
C      GATHER THE BLENDING INFORMATION AND THEN PUNCH
C      THE TIME SERIES HEADER CARD
C
      ELSE
        LWP=TSESP(IEXT+4)
        LBP=TSESP(IEXT+5)
        WRITE (IPU,180) (TSESP(IEXT+J),J=2,3),LWP,LBP
180     FORMAT (2F5.2,2I5)
C
C  ON WORKSTATIONS SKIP NEXT SECTION
        IF (tsesp(iext+54).eq.CARD) GO TO 200

        FNAME(1)=TSESP(IEXT+13)
        FNAME(2)=TSESP(IEXT+14)
        FNAME(3)=TSESP(IEXT+15)
        IDTC=TSESP(IEXT+16)
        JDT=TSESP(IEXT+17)
        JBHREC=TSESP(IEXT+18)
        STAID(1)=TSESP(IEXT+19)
        STAID(2)=TSESP(IEXT+20)
        STAID(3)=TSESP(IEXT+21)
        JMONTH=TSESP(IEXT+22)
        JDAY=TSESP(IEXT+23)
        JYEAR=TSESP(IEXT+24)
        JHRMN=TSESP(IEXT+25)
        JSCNDS=TSESP(IEXT+26)
C    PUNCH TIME SERIES HEADER CARD
        WRITE (IPU,190)(TSESP(IEXT+J),J=13,16),JDT,JBHREC,
     *    (TSESP(IEXT+J),J=19,21),JMONTH,JDAY,JYEAR,JHRMN,JSCNDS
190   FORMAT (3A4,A4,I4,I6,1H-,3A4,1H-,I2,1H/,I2,1H/,I2,
     * 1H-,I4,1H.,I4)
      GO TO 230
C
C  CARD TYPE FILE FOR WORKSTATIONS ASSUMED
200   DO 210 II=1,8
210    FILNAM(II)=TSESP(IEXT+40+II)
      WRITE (IPU,220)FILNAM
220   FORMAT(8A4)
      ENDIF
230   IF (IRPL.EQ.1) GO TO 290
      IF (IFUP.EQ.1) GO TO 350
      GO TO 300
C
C END OF GENR FILE TYPE
C
C  CARD TYPE 
240   DO 250 II=1,8
250   FILNAM(II)=TSESP(IEXT+27+II)
      WRITE (IPU,260)FILNAM
260   FORMAT(8A4)
      IF (IRPL.EQ.1) GO TO 290
      IF (IFUP.EQ.1) GO TO 350
      GO TO 300
C
C  FILE TYPE = REPL
C     GATHER TIMES SERIES ID, DATA TYPE, TIME INT., AND
C     THE FILE TYPE.  THE FILE TYPE DETERMINES THE TYPE OF
C     CARDS TO FOLLOW. FOR EXAMPLE, IF THE FILE TYPE TO REPLACE 
C     IS CALB, SET IRPL=0, LOOP BACK TO THE CALB SECTION TO WRITE THE
C     TIME SERIES HEADER CARD, THEN CONTINUE PROCESSING.
C
270   TYPNU=TSESP(I+14+NV+NADD)
      IRPL=1
C
C     REPLACE FILE ESP INFO -  THE NEW TIME SERIES INFO RESIDES
C      IN AN EXTERNAL TSESP LOCATION.
C
      ITNU=TSESP(I+18+NV+NADD)
      WRITE (IPU,280) (TSESP(I+J+NV+NADD),J=15,16),TSESP(I+17+NV+NADD),
     * ITNU,TYPNU
280   FORMAT(2A4,3X,A4,3X,I2,26X,A4)
C
      IF (TYPNU.EQ.CALB) THEN
        GO TO 90
        ELSE IF (TYPNU.EQ.ESP) THEN
         GO TO 110
        ELSE IF (TYPNU.EQ.GENR) THEN
         GO TO 150
        ELSE IF (TYPNU.EQ.CARD) THEN
         GO TO 240
        ELSE IF (TYPNU.EQ.XMSG) THEN
         GO TO 140
      ENDIF
C
C  .........................................................
C
C      RETURN TO THIS POINT IF FILE TYPE = REPL
C
290   IRPL=0
300   IF (ITSTYP.EQ.4) GO TO 350
      IF (FILTYP.NE.REPL) GO TO 310
C
310   IF (ITSTYP.NE.2) GO TO 350
C
C     FOR AN UPDATE TIME SERIES CASE,  THE ESP INFO RESIDES
C     IN AN EXTERNAL TSESP LOCATION.   OUT IS THE DATA FILE
C     CODE FOR OUTPUT.
C
      OUT=TSESP(I+14+NV+NADD)
      NVAL=TSESP(I+15+NV+NADD)
C
C      PUNCH OUTPUT DATA FILE TYPE CODE
C
C  SKIP THIS PRINT OUT IF THE FILE TYPE IS CARD
      IF (FILTYP.EQ.CARD) GO TO 330
      WRITE (IPU,320)OUT
320   FORMAT(A4)
C
      IF (OUT.EQ.NONE) GO TO 350
C
C
      IEXT=I+16+NV+NADD
      IFUP=1
C
C     LOOP BACK TO CALB,ESP,GENR,OR MSNG SECTION TO WRITE
C     NEEDED CARDS. THEN SINCE IFUP=1 GO TO END AND RENEW LOOP
C
      IF (OUT.EQ.CALB) GO TO 90
      IF (OUT.EQ.ESP ) GO TO 110
      IF (OUT.EQ.GENR) GO TO 150
      IF (OUT.EQ.XMSG) GO TO 140
C
C  PRINT CARD TO OUTPUT FOR CARD FILETYPE
330   WRITE (IPU,340)
340   FORMAT(4HCARD)
350   IFUP=0
      IF (NEX.LT.LTSESP) GO TO 50
      WRITE (IPU,360)
360   FORMAT(4HEND )
C
C      END OF DEF-TS SEGMENT
C
C
C     TEST FOR CASE OF NO ANALYSIS REQUESTED
C
      IF (LPESP.EQ.0) GO TO 730
C
C         BEGIN PUNCHING ANALYSIS INFORMATION
C
C  ---------------------------------------------------
C
C
C    WRITE ANALYSIS HEAD CARD
C
      WRITE (IPU,370) (CRDNM(J),J=5,6)
370   FORMAT(2A4)
C
C
      NEX=1
380   I=NEX
      ITYP=PESP(I)
C
      IF (ITYP.LE.0) THEN
        GO TO 710
      ENDIF
C
      NEX=PESP(I+1)
      KODE=PESP(I+4)
      VALUE=PESP(I+5)
      DO 390 J=1,5
        HEAD(J)=PESP(I+J+6)
390   CONTINUE
      KEXT=PESP(I+24)*100
        IF (KEXT.le.1) THEN
         NUMTS=1
        ELSE
         NUMTS=2
      ENDIF
C
C     SET THE NUMBER OF DISPLAYS REQUESTED
C
C
      NDSP=0
      NUMDSP=0
      LOCA=I+35+NDSP
400   IF (LOCA.GE.NEX) GO TO 410
      IDISPT=PESP(LOCA)
      NUMDSP=1+NUMDSP
      IF (IDISPT.EQ.1) NDSP=2
      IF (IDISPT.EQ.2) NDSP=PESP(LOCA+1)
      LOCA=LOCA+NDSP
      GO TO 400
C
C
410    IF (IBUG.EQ.0) GO TO 430
       WRITE (IODBUG,420) NUMDSP
420    FORMAT(22HNUMBER OF DISPLAYS =  ,I3)
C
C
C      PUNCH CARD WITH OUTPUT VARIABLE
C
430   GO TO (440,450,460,470,480,490,500,510),ITYP
C
440   VARTYP='MXMD'
      GO TO 540
C
450   VARTYP='MNMD'
      GO TO 540
C
460   VARTYP='MD  '
      GO TO 540
C
470   VARTYP='SUM '
      GO TO 540
C
480   VARTYP='MXIN'
      GO TO 540
C
490   VARTYP='MNIN'
      GO TO 540
C
500   VARTYP='NDTO'
      GO TO 520
C
510   VARTYP='NDIS'
520   I2=I+2
      I3=I+3
      WRITE (IPU,530) VARTYP,PESP(I2),PESP(I3),NUMTS,NUMDSP,
     *   (HEAD(J),J=1,5),KODE,VALUE
530   FORMAT(A4,6X,2A4,2X,I5,I5,5A4,I5,F10.0)
C
      GO TO 560
C
540   I2=I+2
      I3=I+3
      WRITE (IPU,550) VARTYP,PESP(I2),PESP(I3),NUMTS,NUMDSP,
     *   (HEAD(J),J=1,5)
550   FORMAT(A4,6X,2A4,2X,I5,I5,5A4)
C
C  GO THROUGH LOOP FOR EACH TIME SERIES
560   DO 570 N=1,NUMTS
       TSID(1)=PESP(I+12+(N-1)*9)
       TSID(2)=PESP(I+13+(N-1)*9)
       TSDT=PESP(I+14+(N-1)*9)
       ITSTI=PESP(I+15+(N-1)*9)
       INDAT=PESP(I+16+(N-1)*9)
C
      IF (TSDT.EQ.SMZC) THEN
        NU=(PESP(I+17)-IFIX(PESP(I+17)))*100.*2.-.89
        TSVAL(1)=XNAM1(NU)
        TSVAL(2)=XNAM1(NU+1)
        N1=N+1
        WRITE (IPU,580) (TSID(J),J=1,2),TSDT,ITSTI,INDAT,
     *    (TSVAL(K),K=1,2)
        GO TO 600
C
      ELSE IF (TSDT.EQ.ROCL) THEN
        NU=(PESP(I+17)-IFIX(PESP(I+17)))*100.*2.-.89
        TSVAL(1)=XNAM2(NU)
        TSVAL(2)=XNAM2(NU+1)
        N1=N+1
        WRITE (IPU,580) (TSID(J),J=1,2),TSDT,ITSTI,INDAT,
     *    (TSVAL(K),K=1,2)
        GO TO 600
      ELSE
        N1=N+1
        WRITE (IPU,590) (TSID(J),J=1,2),TSDT,ITSTI,INDAT
      ENDIF
570   CONTINUE
C
580   FORMAT(2A4,3X,A4,3X,I2,1X,A4,2X,2A4)
590   FORMAT(2A4,3X,A4,3X,I2,1X,A4)
600   CONTINUE
C
C
C     LOOP THROUGH THE DISPLAY TYPES
C
      NDSP=0
      DO 690 KK=1,NUMDSP
        IDISPT=PESP(I+35+NDSP)
        IF (IDISPT.EQ.1) THEN
        NDSP=2
        WRITE (IPU,610)
610   FORMAT(9HSUMMARY  )
      GO TO 690
C
        ELSE IF (IDISPT.EQ.2) THEN
          LP=I+33+NDSP
          NDSP=PESP(LP+3)
          INUM=PESP(LP+5)
          IDIST=PESP(LP+4)
          WRITE (IPU,620)
620   FORMAT(9HFREQUENCY)
C
          IF (INUM.EQ.0) THEN
            IPROB=0
            GO TO 640
          ELSE
            IPROB=1
          ENDIF
C
C         GET FREQUENCY VALUES IF INUM > 0
C
            DO 630 IZ=1,INUM
              FREQVL(IZ)=PESP(LP+5+IZ)
630         CONTINUE
      ELSE
        GO TO 690
640   ENDIF
C
        IPLT=PESP(LP+INUM+6)
        IF (IPLT.EQ.0) ISUM=PESP(LP+INUM+7)
        IF (IPLT.EQ.1) ISUM=PESP(LP+INUM+13)
        WRITE (IPU,650) IPROB,INUM,IDIST,IPLT,ISUM
650     FORMAT(5I5)
C
        IF (INUM.NE.0) THEN
         WRITE (IPU,660) (FREQVL(IV),IV=1,INUM)
660     FORMAT(10F5.2)
        ENDIF
C
        IF (IPLT.EQ.1) THEN
          ISAMP=PESP(LP+INUM+7)
          DO 670 JO=1,5
            IPLOTD(JO)=PESP(LP+INUM+7+JO)
670       CONTINUE
C
      WRITE (IPU,680) ISAMP,(IPLOTD(JO),JO=1,5)
680   FORMAT(6I5)
      ENDIF
C
690     CONTINUE
C
       IF (NEX.LE.LPESP) GO TO 380
C
C  PUNCH THE LAST CARDS TO END THE SEGMENT
710   WRITE (IPU,'(A)') 'END'
730   WRITE (IPU,'(A)') 'ENDSEG'
C
       IOPNUM=IOLDOP
       OPNAME(1)=OLDOPN(1)
       OPNAME(2)=OLDOPN(2)
C
      RETURN
C
      END
