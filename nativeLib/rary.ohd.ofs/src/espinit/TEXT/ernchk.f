C MEMBER ERNCHK
C  (from old member EERNCHK)
C
      SUBROUTINE ERNCHK(RTYPE,NAME,P,MP,T,MT,TS,MTS,PESP,MPESP,
     *SPESP,MSPESP,TSESP,MTSESP,TINDX,MTTS)
C
C ......................................................................
C
C          RUNCHECK SUBROUTINE
C
C THIS IS THE RUNCHECK SUBROUTINE.  IT WILL DO THE FOLLOWING FOR
C   EITHER A SEGMENT, AN ENTIRE FORECAST GROUP, OR A CARRYOVEER GROUP.
C     A.) CHECK THAT ALL THE TIME SERIES HAVE BEEN DEFINED.
C     B.) KEEP TRACK OF TIME SERIES BEING  WRITTEN TO ESP FILE
C         (THAT IS OUTPUT TS) AND THOSE CALLED FOR FROM ESP FILE
C         (INPUT TS).
C
C
C SUBROUTINE ORIGINALLY BY :
C   ED VANBLARGAN - HRL - JULY, 1981
C
C ......................................................................
C
C   VARIABLES:
C NAME-NAME OF GROUP OR SEGMENT(2A4)
C RTYPE-TYPE OF GROUP OR SEGMENT
C IDTYP-NUMBER INDICATOR FOR RTYPE
C IFREC-RECORD NUMBER ON FORECAST FILE
C IERSUM-ERROR CODE RETURNED FROM ESGCHK
C IERTOT-TOTAL COUNT OF ERROR CODES RETURNED
C
      INTEGER T(1)
C
      DIMENSION NAME(2),RTYPE(2),P(1),TS(1),PESP(1),SPESP(1),
     * TSESP(1),TINDX(1),SBNAME(2),OLDOPN(2)
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/where'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/espinit/RCS/ernchk.f,v $
     . $',                                                             '
     .$Id: ernchk.f,v 1.1 1995/09/17 18:46:39 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA INAM,SBNAME/4HEINI,4HERNC,4HHK  /
      DATA CGR,FGR,SEG/4HCGRO,4HFGRO,4HSEGM/
C
C SET UP ERROR TRACE FOR THIS SUBROUTINE IN COMMON BLK/WHERE/
C
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
10    CONTINUE
C
C GET TRACE LEVEL AND DEBUG
C
      IF (ITRACE.GE.1) WRITE(IODBUG,100)
100   FORMAT(1H0,14HERNCHK ENTERED)
      IBUG=IFBUG(INAM)
C
C WRITE HEADING
C
      WRITE(IPR,110) NAME,RTYPE
110   FORMAT(1H0,21HRUNCHECK FOLLOWS FOR ,2A4,14H. RUN TYPE IS ,2A4)
C
C CHECK IF WE WANT AN ENTIRE CARRYOVER GROUP, OR FORECAST GROUP,
C OR JUST A SEGMENT.
C
      IDTYP=0
      IF (RTYPE(1).EQ.CGR) IDTYP=1
      IF (RTYPE(1).EQ.FGR) IDTYP=2
      IF (RTYPE(1).EQ.SEG) IDTYP=3
C
      IF (IDTYP.GE.1) GO TO 140
      WRITE (IPR,120)
120   FORMAT(1H0,10X,40H**ERROR** RUN CHECK TYPE IDENTIFIER DOES,
     *53H NOT CONFORM TO ANY ALLOWABLE TYPE. RUNCHECK IGNORED.)
      CALL ERROR
      GO TO 999
C
C CALL FCORDER WHICH SETS UP COMMON BLOCK FCRUNC WHICH GIVES
C RECORDS AND ORDER THEY ARE STORED ON THE FORECAST FILES.
C
140   CALL FCORDR(IDTYP,NAME,IER,P,MP)
C
      IF (IER.EQ.0) GO TO 200
      WRITE (IPR,150)
150   FORMAT(1H0,10X,45H**ERROR** IN SUBROUTINE FCORDR-RUNCHEK QUITS.)
      GO TO 999
C
C LOOP THRU EACH RECORD NUMBER TO BE CHECKED AND CALL SUBROUTINE ESGCHEK
C FOR EACH ONE.
C
200   NUMOUT=0
      IPTR=0
      IERTOT=0
C
      DO 300 ISEGEX=1,NSEGEX
        IFREC=IRSGEX(ISEGEX)
        CALL ESGCHK(IFREC,P,MP,T,MT,TS,MTS,PESP,MPESP,SPESP,
     *  MSPESP,TSESP,MTSESP,TINDX,MTTS,IPTR,NUMOUT,IERSUM)
        IERTOT=IERTOT+IERSUM
300   CONTINUE
C
C
C SEE IF TIME SERIES ALL O.K.(IERTOT=0).
C
      IF (IERTOT.EQ.0) WRITE(IPR,400)
400   FORMAT(1H0,39HEND OF RUNCHECK. ALL TIME SERIES APPEAR,
     *31H TO HAVE BEEN DEFINED PROPERLY.)
C
C ............DEBUG TIME........................
C
      IF (IBUG.EQ.0) GO TO 999
C
      WRITE(IODBUG,500) NUMOUT,IPTR,IFREC,IERTOT
500   FORMAT(1H0,13HERNCHK DEBUG:
     */ 1X,7HNUMOUT=,I5,7H  IPTR=,I5,8H  IFREC=,I5,9H  IERTOT=,I5)
C
      IF (IPTR.GT.0) WRITE(IODBUG,550) (TINDX(I),I=1,IPTR)
550   FORMAT(1X,12HTINDX ARRAY: / 4(2X,2A4,1X,A4,F4.0,1X,3A4))
C ............................................
C
C
C SET ERROR TRACE IN CB/WHERE/ BACK THE WAY THEY WERE
C
999   IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
      RETURN
      END
