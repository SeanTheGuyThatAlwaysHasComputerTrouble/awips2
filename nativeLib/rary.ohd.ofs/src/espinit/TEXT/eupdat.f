C MEMBER EUPDAT
C  (from old member EEUPDAT)
C
C @PROCESS LVL(77)
C
      SUBROUTINE EUPDAT(PTYPE,NAME,P,MP,T,MT,TS,MTS,PESP,MPESP,
     *SPESP,MSPESP,TSESP,MTSESP)
C
C ...............................................................
C           ESP PARAMETER FILE UPDATE SUBROUTINE
C
C    THIS SUBROUTINE IS TO BE RUN AFTER CALIBRATION FILES HAVE BEEN
C    REORDERED OR WHENEVER SUBROUTINE LOCATE PRODUCES AN ERROR MESSAGE
C    SAYING THE TIME SERIES ON THE CALIBRATION DATA FILE WERE FOUND
C    AT A DIFFERENT RECORD THAN THE ONE LISTED ON THE TIME SERIES
C    HEADER CARD.                             M. KANE 12/28/89
C
C ................................................................
C
       DIMENSION  FNAME(3),STAID(3)
       DIMENSION  SBNAME(2), OLDOPN(2), DUM(2)
       DIMENSION P(1),T(1),TS(1),PESP(1),SPESP(1),TSESP(1)
       DIMENSION PTYPE(2),NAME(2),DESC(5)
C
C     SET UP COMMON BLOCKS
C
      INCLUDE 'clbcommon/bhtime'
      INCLUDE 'common/ionum'
      INCLUDE 'common/where'
      INCLUDE 'common/fcrunc'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/espseg'
      INCLUDE 'common/fdbug'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/espinit/RCS/eupdat.f,v $
     . $',                                                             '
     .$Id: eupdat.f,v 1.1 1995/09/17 18:46:46 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA SAME, DESC/4HSAME,5*4H    /
      DATA CALB/4HCALB/
      DATA REPL/4HREPL/
      DATA INAM,SBNAME/4HEUPD,4HEUPD,4HATE /
      DATA CGR,FGR,SEG/4HCGRO,4HFGRO,4HSEGM/
C
C   SET UP ERROR TRACE IN CB/WHERE
C
      IOLDOP=IOPNUM
      IOPNUM=0
      DO 10 I=1,2
        OLDOPN(I)=OPNAME(I)
        OPNAME(I)=SBNAME(I)
   10 CONTINUE
C
C   GET TRACE LEVEL AND DEBUG
C
      IF(ITRACE.GE.1) WRITE(IODBUG,100)
  100 FORMAT(1HO,15H EUPDAT ENTERED)
      IBUG=IFBUG(INAM)
C
C   CHECK FOR CARRYOVER GROUP, FORECAST GROUP, SEGMENT
C
      KOUNT=0
      IDTYPE=0
      IF(PTYPE(1).EQ.CGR) IDTYPE=1
      IF(PTYPE(1).EQ.FGR) IDTYPE=2
      IF(PTYPE(1).EQ.SEG) IDTYPE=3
C
      IF(IDTYPE.EQ.0) THEN
       WRITE(IPR,120)
       CALL ERROR
       GO TO 999
      END IF
  120 FORMAT(1H0,10X,41H**ERROR** UPDATE SEG TYPE IDENTIFIER DOES,
     *55H NOT CONFORM TO ANY ALLOWABLE TYPE. UPDATE SEG IGNORED. )
C
C   CALL FCORDR TO FILL CB/FCRUNC TO GET ORDER OF THE SEGMENTS         0
C   STORED ON THE THE FORECAST FILES.
C
      CALL FCORDR(IDTYPE,NAME,IER,P,MP)
C
C........   DEBUG
C
      IF (IBUG.GE.1) THEN
        WRITE (IPR,130) ITYPRN,RUNID(1),RUNID(2),ISEGEX,NSEGEX,MSEGEX
  130   FORMAT(2X,'DUMP OF COMMON.FCRUNC :',/,2X,I3,2A4,3I6)
      END IF
C
      IF(IER.EQ.0) GO TO 160
      WRITE(IPR,150)
  150 FORMAT(1H0,10X,47H**ERROR** IN SUBROUTINE FCORDR-UPDATE SEG QUITS)
      GO TO 999
C
C   LOOP THROUGH EACH RECORD NUMBER TO BE CHECKED.  CALL SUBROUTINE
C   FGETSEG TO PUT SEGMENT INTO CB/FCSEGN.  IOPT=1 TO SEARCH BY RECORD
C   NUMBER AND NOPARM=1 TO NOT READ THE P,T, AND TS ARRAYS.
C
  160 IOPT=1
      NOPARM=1
C
      DO 300 ISEGEX=1,NSEGEX
        IFREC=IRSGEX(ISEGEX)
        CALL FGETSG(DUM,IFREC,MP,P,MT,T,MTS,TS,IOPT,NOPARM,IER)
C
C........  DEBUG
C
        IF (IBUG.GE.1) THEN
          WRITE(IPR,161)
          WRITE(IPR,162) IRSEG,IDSEGN,IPREC,IWOCRY,IFGID,ICGID,
     *    SGDSCR,ICRDTE,MINDT,NC,ND,NT,NTS,NP,NCOPS,IEREC
C
  161     FORMAT(2X,'DEBUG FROM EUPDAT - CB.FCSEGN '/,2X,'IRSEG,IDSEGN,
     *IPREC,IWOCRY',/,2X,'IFGID,ICGID,SGDSCR,ICRDTE,MINDT',/,
     *    2X,'NC,ND,NT,NTS,NP,NCOPS,IEREC')
  162     FORMAT(/,2X,I5,2X,2A4,2X,2I5,/,2X,2A4,2X,2A4,2X,
     *    5A4,2X,5I5,I5,/,2X,6I5,2X,I5)
        END IF
C
C
        IF(IER.NE.0) THEN
          WRITE(IPR,165) IER,IFREC
  165     FORMAT(1H0,10X,36H**ERROR** SUBROUTINE FGETSG RETURNED,
     *    13H ERROR CODE= ,I3,33H. EUPDAT QUITS FOR RECORD NUMBER ,I5)
          CALL ERROR
          GO TO 999
        END IF
C
C   MAKE SURE IEREC > 1                                                0
C
      IF (IEREC.LT.1) THEN
          WRITE(IPR,170) IEREC,IFREC,IDSEGN
  170     FORMAT(///,10X,' *** NOTE *** ESP RECORD NUMBER WAS ',I6,
     *    /,11X,' FOR FORECAST COMPONENT RECORD NUMBER ', I4,
     *    /,11X,' THE ESPPARM FILE WILL NOT BE UPDATED FOR THE SEGMENT',
     *    ' NAMED ',2A4,/)
          ISEG(1)=IDSEGN(1)
          ISEG(2)=IDSEGN(2)
          GO TO 300
        END IF
C
C
C   CALL ESPRDF TO FILL CB/ESPSEG AND FILL TSESP ARRAY.  THEN
C   PUT SEG ID INTO CB/WHERE.
C
  180   CALL ESPRDF(1,1,IEREC,TSESP,MTSESP,PESP,MPESP,SPESP,MSPESP,IER)
C
        ISEG(1)=ID(1)
        ISEG(2)=ID(2)
C
        IF(IER.NE.0) THEN
          WRITE(IPR,190) IER, IEREC
  190     FORMAT(1H0,10X,36H**ERROR** SUBROUTINE ESPRDF RETURNED,
     *    18H WITH ERROR CODE =,I3,18H FOR RECORD NUMBER,I5)
          CALL ERROR
          GO TO 999
        END IF
C
C    SEARCH THE TSESP ARRAY FOR AN INPUT TIME SERIES FROM THE
C    CALIBRATION DATA FILES.
C
        INEXT=1
  200   I=INEXT
        INEXT=TSESP(I+1)
        IF(INEXT.GT.MTSESP.OR.INEXT.LE.1) GO TO 300
        IEXT=I+12
        IF(TSESP(I).LE.0) GO TO 300
C
C   CHECK FOR INPUT TIME SERIES TYPE   ( TSESP(I) = 1 )
C
C........  DEBUG
C
        IF (IBUG.GE.1) THEN
          WRITE(IPR,111) I,INEXT,ISEGEX,IFREC,IEREC,TSESP(I),TSESP(I+9)
  111     FORMAT(2X,5I5,F4.0,A6)
        END IF
C
        IF(TSESP(I).GT.1.1.OR.TSESP(I).LT.0.9) GO TO 200
C
C   CHECK FOR TYPE OF PROCESSED DATA FILE
C   IF IT IS CALB, GO GET THE EXTERNAL INFORMATION.  IF THE TYPE
C   IS REPL, FIGURE WHERE THE EXTERNAL DATA IS LOCATED AND SEE
C   IF IT IS OF TYPE CALB, IF SO PROCEED AS ABOVE.  IF NOT GO BACK
C   AND GET THE NEXT SEGMENT.
C
        IF(TSESP(I+9).EQ.CALB) GO TO 202
        IF(TSESP(I+9).EQ.REPL) THEN
          NV=TSESP(I+11)
          NADD=TSESP(I+12+NV)
          TYPENU=TSESP(I+14+NV+NADD)
C
C........  DEBUG
C
          IF (IBUG.GE.1) THEN
            WRITE (IPR,982) I,NV,NADD,TYPENU
  982       FORMAT('   I   NV   NADD   TYPENU   :',3I6,A6)
          END IF
C
          IF(TYPENU.EQ.CALB) GO TO 202
C
        END IF
        GO TO 200
C
C    GET THE TIME SERIES INFORMATION FROM THE EXTERNAL LOCATION
C    PORTION OF THE TSESP ARRAY.
C
  202   FNAME(1)=TSESP(IEXT)
        FNAME(2)=TSESP(IEXT+1)
        FNAME(3)=TSESP(IEXT+2)
        TYPE=TSESP(IEXT+3)
        ITA=TSESP(IEXT+4)
        IBHREC=TSESP(IEXT+5)
        LHEAD=IBHREC
        STAID(1)=TSESP(IEXT+6)
        STAID(2)=TSESP(IEXT+7)
        STAID(3)=TSESP(IEXT+8)
        KMO=TSESP(IEXT+9)
        KDA=TSESP(IEXT+10)
        KYR=TSESP(IEXT+11)
        KHRMIN=TSESP(IEXT+12)
        KSEC=TSESP(IEXT+13)
C
C
C   NOW CALL SUBROUTINE LOCATE AT ENTRY POINT LOCATX TO FIND
C   THE TIME SERIES ON THE CALIBRATION DATA FILE. THE RECORD
C   NUMBER WHERE THE TIME SERIES WAS ACTUALLY FOUND IS RETURNED
C   IN CB/BHTIME - LHEAD.  COMPARE THIS VALUE WITH THE RECORD ON THE
C   TSESP  FILE, IBHREC.  IF IT WAS DIFFERENT, WRITE
C   THE CORRECT VALUE BACK TO THE ESP PARAMETER FILE AND PRINT A
C   A MESSAGE ABOUT THE UPDATE.
C
        IDA=0
        LDA=0
        IYR=0
        LYR=0
        UNITS=SAME
C
        CALL CZRORD
        CALL LOCATX(IDA,LDA,IYR,LYR,UNITS,FNAME,TYPE,ITA,STAID,
     *  DESC,NSEQ,LPTR)
C
C........ DEBUG
C
        IF (IBUG.GE.1 ) THEN
          WRITE(IPR,9) LHEAD,IBHREC
    9     FORMAT(' LHEAD AND IBHREC AFTER CALL TO LOCATX   ',2I6,/)
        END IF
C
C
        IF(LHEAD.EQ.IBHREC) GO TO 200
C
C   UPDATE THE TSESP ARRAY WITH THE NEW BLOCK HEADER RECORD NUMBER
C
        TSESP(IEXT+5)=LHEAD+0.01
        KOUNT=KOUNT+1
C
C   CALL ESPWTF TO WRITE THE NEW VALUE BACK TO THE ESP PARAMETER FILE
C
        CALL ESPWTF(IEREC,TSESP,MTSESP,PESP,MPESP,SPESP,MSPESP,IER)
C
C........ DEBUG
C
        IF(IBUG.GE.1) THEN
          WRITE(IPR,7) IEREC,IER,IEXT,LHEAD
    7 FORMAT('  AFTER CALL TO ESPWTFL: IEREC  IER  IEXT  LHEAD ',
     *   /,25X,4I6)
        END IF
C
        IF(IER.EQ.0) GO TO 210
        WRITE(IPR,205) IER,IEREC,FNAME,TYPE,ITA
  205   FORMAT(1H0,10X,42H**ERROR** SUBROUTINE ESPWTF RETURNED IER =,
     *  I3,/,10X,13H FOR SEGMENT ,3A4,2X,A5,2X,I3)
        CALL ERROR
        GO TO 999
C
  210   WRITE(IPR,220) FNAME,TYPE,ITA,KMO,KDA,KYR,KHRMIN,KSEC,
     *LHEAD,ISEG
  220   FORMAT(//,10X,'THE TIME SERIES ',3X,3A4,A4,I4,/,
     *  10X,'CREATED ON        ',I2,'/',I2,'/',I2,' AT ',I4,'.',I4,
     *  /,10X,'HAS BEEN UPDATED IN THE ESPPARM FILE WITH A NEW ',
     *  /10X,'BLOCK HEADER RECORD NUMBER OF ',I6,/,
     *  /10X,' THIS CHANGE OCCURRED IN SEGMENT ',2A4)
        GO TO 200
C
  300 CONTINUE
      GO TO 1000
  999 WRITE(IPR,310)
  310 FORMAT(2X,' SUBROUTINE EUPDAT ENDED DUE TO ERROR ')
C
C   RESET ERROR TRACE
C
      IOPNUM=IOLDOP
      OPNAME(1)=OLDOPN(1)
      OPNAME(2)=OLDOPN(2)
C
 1000 WRITE(IPR,330) KOUNT
  330 FORMAT(// 2X,'PROGRAM EUPDAT COMPLETED.  A TOTAL OF ',I4,
     *' BH RECORD NUMBER(S) HAVE BEEN UPDATED')
C
      RETURN
      END
