C MODULE PIN51
C-----------------------------------------------------------------------
C
C
      SUBROUTINE PIN51(PO,LEFTP,IUSEP,CO,LEFTC,IUSEC,WK,NWK)
C
C DESC  INPUT ROUTINE FOR OPERATION 51 - SSARRESV RESERVOIR OPERATION
C.......................................................................
C
C  OPERATION 51 IS THE SSARR RESERVOIR OPERATION (OP. TYPE 'SSARRESV')
C
C  PIN51 IS BROKEN INTO FOUR MAIN PARTS, EACH OF WHICH IS FURTHER BROKEN
C  DOWN. THEY ARE:
C
C        1) ROUTINE INFL51 - READS, INTERPRETS, AND STORES INTO THE
C             WORK ARRAY THE TITLE, UNIT, TS, AND CO INFO FOR THE INFLOW
C             SECTION OF INPUT FOR OP. 51,
C
C        2) ROUTINE SAR51 - READS, INTERPRETS AND STORES
C             INTO THE WORK ARRAY ALL THE PARMS, TS-INFO AND CARRYOVER
C             FOR RESERVOIR WITHOUT BACKWATER EFFECT (SAR -OPTIONAL).
C
C        3) ROUTINE UPB51 - READS, INTERPRETS AND STORES INTO THE
C             WORK ARRAY ALL THE PARMS, TS-INFO AND CARRYOVER FOR UPPER
C             RESERVOIR WITH BACKWATER EFFECT (UPERBKWR - OPTIONAL).
C
C        4) ROUTINE LWB51 - READS, INTERPRETS AND STORES INTO THE
C             WORK ARRAY ALL THE PARMS, TS-INFO AND CARRYOVER FOR LOWER
C             RESERVOIR WITH BACKWATER EFFECT (LWERBKWR - OPTIONAL).
C
C        5) ROUTINE TRP51 - READS, INTERPRETS AND STORES INTO THE
C             WORK ARRAY ALL THE PARMS, TS-INFO AND CARRYOVER USING
C             3 VARIABLE RELATIONSHIP (3-VAR - OPTIONAL).
C
C        6) ROUTINE WTPC51 - TAKES INFO FROM THE WORK ARRAY AND STORE
C             IT IN A DIFFERENT ORDER AND FORMAT INTO THE PO ARRAY.
C
C  WK(1)-WK(5) FIVE WORD FOR TITLE
C  WK(6) =1, FOR METRIC UNITS; =0, FOR ENGLISH UNITS.
C  WK(7) START LOCATION FOR INFL51 INPUT DATA, = 10
C  WK(8) START LOCATION FOR NON-BACKWATER RESERVOIR INPUT DATA
C  WK(9) START LOCATION FOR BACKWATER RESERVOIR INPUT DATA
C  WK(10) START LOCATION FOR INFLOW TIME SERIES
C  WK(11) TOTAL NUMBER OF VALUES FOR INFLOW TIME SERIES (5 PER TS)
C  WK(12) START LOCATION FOR INFLOW CARRYOVER
C  WK(13) TOTAL NUMBER OF VALUES FOR INFLOW CARRYOVER
C  XWK=WK(8) OR WK(9)
C  XWK+1 START LOCATION FOR PARAMETER
C  XWK+2 TOTAL NUMBER OF VALUES FOR PARAMETER
C  XWK+3 START LOCATION FOR TIME SERIES
C  XWK+4 TOTAL NUMBER OF VALUES FOR TIME SERIES (5 PER TS)
C  XWK+5 START LOCATION FOR CARRYOVER
C  XWK+6 TOTAL NUMBER OF VALUES FOR CARRYOVER
C  XWK+7 & XWK+7 FOR RESERVOIR REGULATION CODE, RESERVED FOR FUTURE
C ** NOTE ** INPUT FOR ALL OF THIS PIN ROUTINE IS FREE FORMAT.
C
C.......................................................................
C  KUANG HSU - HRL - OCTOBER 1994
C................................................................
      DIMENSION PO(*),CO(*),WK(*)
      DIMENSION TITLE(5),IKYUNT(2,4),LKYUNT(4)
      DIMENSION CHAR80(20)
      REAL*8 SNAME
      LOGICAL ALLOK,OKINFL,OKSAR,OKSAB,OKSTOR,NOROOM,OKPOST
C
      INCLUDE 'ufreex'
      INCLUDE 'common/comn51'
      INCLUDE 'common/err51'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/read51'
      INCLUDE 'common/fld51'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_pntb/RCS/pin51.f,v $
     . $',                                                             '
     .$Id: pin51.f,v 1.4 1998/07/02 19:36:44 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA NUMOP/51/,SNAME/8HSSARRESV/
      DATA VERSNO/1.00/
      DATA BLANK/4H    /
C
      DATA IKYUNT/
     .            4HENGL,4HISH ,4HE   ,4H    ,
     .            4HMETR,4HIC  ,4HM   ,4H    /
      DATA LKYUNT/2,1,2,1/
      DATA NKYUNT/4/
      DATA NDUNT/2/
C
C..................................
C  SET DEBUG SWITCH
C
      IBUG = 0
      CALL FPRBUG(SNAME,1,NUMOP,IPBUG)
      IF (ITRACE.GT.0) IBUG = 1
      IF (IPBUG.GT.0)  IBUG = 2
      IF (ITRACE.GE.1) WRITE(IODBUG,1698)
 1698 FORMAT(1H0,'*** ENTER PIN51 ***')
C
C  INITIALIZE NECESSARY VARIABLES
C
      MINODT = 0
      IERR = 0
      NRES = 0
      NPINF = 0
      NPSAB = 0
      NPSAR = 0
      NTINF = 0
      NTSAB = 0
      NTSAR = 0
      NCINF = 1
      NCSAB = 0
      NCSAR = 0
      IUSEW = 0
      LEFTW = NWK
C
      ALLOK = .TRUE.
      OKINFL = .TRUE.
      OKSAR = .TRUE.
      OKSAB = .TRUE.
      NOROOM = .FALSE.
C
      N51TS = 0
C
C  INITIALIZE THE BLOCK DATA OF UFREEX
C
      ICDSTR = 1
      ICDSTP = 72
      NRDCRD = 0
      IPRCRD = 0
      IPRBLN = 0
      MAXFLD = 50
      IPRMPT = 0
C
C  INITIALIZE THE BLOCK DATA OF UDEBUG
C
      IOGDB = 6
      IUTLTR = 0
      IUTLDB = 0
C
C.........................................................
C  FIRST THING IS TO INPUT ALL CARDS FOR SSARRESV OPERATION
C  'END' CARD SIGNALS END OF INPUT. LOCATION OF START AND NUMBER
C  OF LINES OF INPUT FOR INFLOW, SAR, UPERBKWR, LWERBKWR, AND 3-VAR
C  SECTIONS ARE DETERMINED
C
      CALL CARD51
C
C  SET DEFAULT ENGLISH/METRIC SWITCH TO ENGLISH, AND DEFAULT ENGLISH
C   STORAGE TYPE TO ACRE-FEET.
C  SET OFFSET FOR START OF INFO IN INFLOW SECTION
C
      METSAR = 0
C
C  SET TITLE TO ALL BLANKS AS A DEFAULT
C
      DO 3001 I=1,5
      TITLE(I) = BLANK
 3001 CONTINUE
C
C  RESERVE 6 WORDS FOR LOCATION AND NUMBER OF VALUES FOR
C  PARAMETERS, TIME-SERIES AND CARRYOVER OF INFLOW SECTION 
C  NO PARMETERS IS NEEDED NOW, THE CODE IS RETAIN FOR FUTURE USE
      DO 3390 J=1,6
      CALL FLWK51(WK,IUSEW,LEFTW,0.01,501)
 3390 CONTINUE
C
 3200 CONTINUE
C
C
C  TITLE EXPECTED HERE
      IGSTRT = LTITLE
      IF(IGSTRT.LE.0) GO TO 3300
      CALL POSN26(MUNI51,IGSTRT)
C
C  GET KEYWORD 'TITLE'
C
      NUMFLD = 0
      CALL UFLD51(NUMFLD,IERF)
C
C  GET NEXT FIELD ON SAME CARD.
C
      NUMFLD = -2
      CALL UFLD51(NUMFLD,IERF)
      IF (IERF.EQ.1) GO TO 3300
C
      DO 3210 J=1,5
      TITLE(J) = CHAR(J)
 3210 CONTINUE
C------------------------------------------------------------------
C  UNITS EXPECTED HERE
C
 3300 CONTINUE
C
      IGSTRT = LUNITS
      IF(IGSTRT.LE.0) GO TO 3400
      CALL POSN26(MUNI51,IGSTRT)
C
C  GET KEYWORD 'UNITS'
C
      NUMFLD = 0
      CALL UFLD51(NUMFLD,IERF)
C
C  GET NEXT FIELD ON SAME CARD.
C
      NUMFLD = -2
      CALL UFLD51(NUMFLD,IERF)
C
C  IF NOTHING ON CARD AFTER 'UNITS', DEFAULT TO ENGLISH UNITS
C
      IF (IERF.GE.1) THEN
        METSAR = 0
        GO TO 3400
      END IF
C
C  LOOK FOR MATCH OF FIELD FOUND AGAINST ALLOWABLE UNITS SPECS
C  CHECKING ONLY THE FIRST CHARACTER OF FIRST WORD
C
      NUMWD = 1
      CALL SUBSTR(CHAR,1,1,XCHAR,1)
      IVAL = IKEY26(XCHAR,NUMWD,IKYUNT,LKYUNT,NKYUNT,NDUNT)
C
C  IF NOMATCH, DEFAULT TO ENGLISH UNITS
C
      IF (IVAL.EQ.0) IVAL=1
C
      METSAR = (IVAL-1)/2
C
 3400 CONTINUE
C
C  REFILL WORK ARRAY WITH TITLE
C
      DO 3915 I =1,5
          CALL RFIL51(WK,I,TITLE(I))
 3915 CONTINUE
C
C  STORE ENGLISH/METRIC SWITCH = 1 FOR METRIC,
C                              = 0 FOR ENGLISH
C
      LOCUNT = 6
      ENGMET = METSAR + 0.01
      CALL RFIL51(WK,LOCUNT,ENGMET)
C
C............................................................
C  INITIALIZE POINTERS TO LOCATIONS OF INFLOW, SAR,UPERBKWR, LWERBKWR,
C  AND 3-VAR SECTIONS IN WORK ARRAY. INFLOW STARTS ON WORD 4, OTHERS ARE
C  INITIALIZED TO ZERO 
C  AND WILL BE SET WHEN THE PRECEEDING SECTION IS FINISHED
C
      FINLOC = 10.01
      CALL FLWK51(WK,IUSEW,LEFTW,FINLOC,501)
      CALL FLWK51(WK,IUSEW,LEFTW,0.01,501)
      CALL FLWK51(WK,IUSEW,LEFTW,0.01,501)
C.........................................
C
C  FIRST INPUT BLOCK IS FOR INFLOW INFORMATION
C
C
C
C  CHECK FOR INPUT OF 'INFLOW' KEYWORD, CAN'T PROCESS INFLOW INFO
C  UNLESS WE HAVE A 'INFLOW' KEYWORD.
C
      IF (LINFL.GT.0) GO TO 310
      DO 304 I=1,10
 304  WRITE(IPR,305)
 305  FORMAT(10X,'*** ERROR ***'/16X,'NO ''INFLOW'' KEYWORD HAS BEEN ',
     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE INFLOW SUBSECTION'/16X,'OF THE ''SSARRESV'' ',
     .'OPERATION.')
      OKINFL = .FALSE.
      CALL ERROR
      GO TO 9999
C
C  ALSO, AN 'ENDINFLW' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT
C  STREAM FOR DEFINITION OF THIS OPERATION
C
  310 CONTINUE
      IF (NINFL.GT.0) GO TO 320
C
      DO 359 I=1,10
359     WRITE(IPR,360)
  360 FORMAT(10X,'*** ERROR ***'/16X,'NO ''ENDINFLW'' KEYWORD HAS BEEN',
     .' FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE INFLOW SUBSECTION'/16X,'OF THE ''SSARRESV'' '
     .,' OPERATION.')
      OKINFL = .FALSE.
      CALL ERROR
      GO TO 9999
  320 CONTINUE
C
      CALL INFL51(WK,IUSEW,LEFTW,NPINF,NTINF,NCINF,OKINFL)
C
      IF (IBUG.LT.2) GO TO 390
      WRITE(IODBUG,1600)
 1600 FORMAT(//,' *** WORK ARRAY AFTER INFLOW INPUT ***')
      IF (IUSEW.LE.0) GO TO 390
      DO 350 I=1,IUSEW,8
      IE = I+7
      WRITE(IODBUG,1605) I,IE
 1605 FORMAT(' *** POS. NOS. :',I4,' THRU ',I4)
      WRITE(IODBUG,1610) (WK(J),J=I,IE)
  350 CONTINUE
 1610 FORMAT(8F10.2)
  390 CONTINUE
C.............................
C  FLAG AN OVERALL ERROR IF AN ERROR OCCURRED IN INPUTTING INFLOW INFO
C
      ALLOK = ALLOK .AND. OKINFL
C
C  EITHER 'SAR-ENDSAR' OR 'LWERBKWR-ENDLWERB' IS ALLOWED
C 
      IF (LSAR .LE.0 .OR. LLWB.LE.0) GO TO 410
      WRITE(IPR,409)
 409  FORMAT(10X,'*** ERROR ***'
     & /16X,'ONLY ''SAR-ENDSAR'' OR ''LWERBKWR-ENDLWERB'' ',
     & 'KEYWORD IS ALLOWED')
      OKSAR  = .FALSE.
      CALL ERROR
      GO TO 9999
  410 CONTINUE
C
C..............................
C  NEXT BLOCK OF INPUT IS THAT FOR SSARRESV WITHOUT BACKWATER EFFECT
C
C  CHECK FOR INPUT OF 'SAR' KEYWORD, CAN'T PROCESS SAR INFO
C  UNLESS WE HAVE A 'SAR' KEYWORD.
C
      IF (LSAR .LE.0) GO TO 500
C      WRITE(IPR,4750)
C4750 FORMAT(10X,'*** ERROR ***'/16X,'NO ''SAR'' KEYWORD HAS BEEN ',
C     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
C     .'PROCESS THE SAR SUBSECTION'/16X,'OF THE ''SSARRESV'' ',
C     .'OPERATION.')
C      OKSAR  = .FALSE.
C      CALL ERROR
C      GO TO 9999
C
C  ALSO, AN 'ENDSAR ' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT STREAM
C  FOR DEFINITION OF THIS OPERATION
C
      IF (NSAR .GT.0) GO TO 420
C
      WRITE(IPR,4760)
 4760 FORMAT(10X,'*** ERROR ***'/16X,'NO ''ENDSAR '' KEYWORD HAS BEEN ',
     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE SAR SUBSECTION'/16X,'OF THE ''SSARRESV'' '
     .,' OPERATION.')
      OKSAR  = .FALSE.
      CALL ERROR
      GO TO 9999
  420 CONTINUE
C
      NRES = NRES+1
C
C  REFILL 8TH WORD OF WORK ARRAY WITH LOCATION OF START OF 
C  SSARRESV RESERVOIR WITHOUT BACKWATER EFFECT INFORMATION.
C
      SARLOC = IUSEW + 1.01
      CALL RFIL51(WK,8,SARLOC)
C
      CALL SAR51(WK,IUSEW,LEFTW,NPSAR,NTSAR,NCSAR,OKSAR)
C
      IF (IBUG.LT.2) GO TO 490
      WRITE(IODBUG,1620)
 1620 FORMAT(//,' *** WORK ARRAY AFTER SAR INPUT ***')
      IF (IUSEW.LE.0) GO TO 490
      DO 450 I=1,IUSEW,8
      IE = I+7
      WRITE(IODBUG,1605) I,IE
      WRITE(IODBUG,1610) (WK(J),J=I,IE)
  450 CONTINUE
  490 CONTINUE
C
C  ONCE AGAIN, FLAG AN OVERALL ERROR IF ERROR OCCURRED DURING INPUT OF
C   RESERVOIR WITHOUT BACKWATER EFFECT
C
      ALLOK = ALLOK .AND. OKSAR
 500  CONTINUE
C
C.............................................
C  NEXT BLOCK OF INPUT IS THAT FOR SSARRESV WITH BACKWATER EFFECT
C  FROM TRIBUTARY FLOW
C
      IF(LLWB.LE.0) GO TO 600   
C
C  ALSO, AN 'ENDLWERB' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT
C  STREAM FOR DEFINITION OF THIS OPERATION
C
      IF (NLWB .GT.0) GO TO 520
C
      WRITE(IPR,560)
  560 FORMAT(10X,'*** ERROR ***'/16X,'NO ''ENDWERB '' KEYWORD HAS BEEN',
     .' FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE LWERBKWR SUBSECTION'/16X,'OF THE ''SSARRESV'' '
     .,' OPERATION.')
      OKSAR  = .FALSE.
      CALL ERROR
      GO TO 9999
  520 CONTINUE
C
      NRES = NRES+1
C
C  FIRST REFILL 8TH WORD IN WORK WITH THE LOCATION OF THE START OF THE
C  SSARRESV RESERVOIR WITH BACKWATER INFORMATION
C
      SARLOC = IUSEW + 1.01
      CALL RFIL51(WK,8,SARLOC)
C
      CALL LWB51(WK,IUSEW,LEFTW,NPSAR,NTSAR,NCSAR,OKSAR)
C
C  MAXIMUM OF TWO RESERVOIR ALLOWED
C  DOWNSTREAM RESERVOIR CAN ONLY BE CONTROLLED BY A TRIBUTARY
C  
      LWK = WK(8)
      LRTYP = WK(LWK)
      RESTYP = 2.0
      CALL RFIL51(WK,LRTYP,RESTYP)
C
      IF (IBUG.LT.2) GO TO 590
      WRITE(IODBUG,530)
  530 FORMAT(//,' *** WORK ARRAY AFTER LWERBKWR INPUT ***')
      IF (IUSEW.LE.0) GO TO 590
      DO 550 I=1,IUSEW,8
      IE = I+7
      WRITE(IODBUG,1605) I,IE
      WRITE(IODBUG,1610) (WK(J),J=I,IE)
  550 CONTINUE
  590 CONTINUE
C
C  ONCE AGAIN, FLAG OVERALL ERROR IF ERROR OCCURRED DURING INPUT.
C
      ALLOK = ALLOK .AND. OKSAR
 600  CONTINUE
C
C  EITHER 'UPERBKWR-ENDUPERB' OR '3-VAR-END3-VAR' IS ALLOWED
C 
      IF (LUPB .LE.0 .OR. LTRP.LE.0) GO TO 610
      WRITE(IPR,609)
 609  FORMAT(10X,'*** ERROR ***'
     & /16X,'ONLY ''UPERBKWR-ENDUPERB'' OR ''3-VAR-END3-VAR'' ',
     & 'KEYWORD IS ALLOWED')
      OKSAB  = .FALSE.
      CALL ERROR
      GO TO 9999
  610 CONTINUE
C
C.............................................
C  NEXT BLOCK OF INPUT IS THAT FOR SSARRESV WITH BACKWATER EFFECT
C  SKIP IF NO BACKWATER RESERVOIR
C
      IF(LUPB.LE.0) GO TO 700   
C
C  ALSO, AN 'ENDUPB ' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT STREAM
C  FOR DEFINITION OF THIS OPERATION
C
      IF (NUPB .GT.0) GO TO 620
C
      WRITE(IPR,660)
  660 FORMAT(10X,'*** ERROR ***'/16X,'NO ''ENDUPB '' KEYWORD HAS BEEN ',
     .'FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE UPB SUBSECTION'/16X,'OF THE ''SSARRESV'' '
     .,' OPERATION.')
      OKSAB  = .FALSE.
      CALL ERROR
      GO TO 9999
  620 CONTINUE
C
      NRES = NRES+1
C
C  FIRST REFILL 9TH WORD IN WORK WITH THE LOCATION OF THE START OF THE
C  SSARRESV RESERVOIR WITH BACKWATER INFORMATION
C
      SABLOC = IUSEW + 1.01
      CALL RFIL51(WK,9,SABLOC)
C
      CALL UPB51(WK,IUSEW,LEFTW,NPSAB,NTSAB,NCSAB,OKSAB)
      IF (IBUG.LT.2) GO TO 690
      WRITE(IODBUG,630)
  630 FORMAT(//,' *** WORK ARRAY AFTER UPERBKWR INPUT ***')
      IF (IUSEW.LE.0) GO TO 690
      DO 650 I=1,IUSEW,8
      IE = I+7
      WRITE(IODBUG,1605) I,IE
      WRITE(IODBUG,1610) (WK(J),J=I,IE)
  650 CONTINUE
  690 CONTINUE
C
C  ONCE AGAIN, FLAG OVERALL ERROR IF ERROR OCCURRED DURING INPUT.
C
      PO(13) = 2.0
      ALLOK = ALLOK .AND. OKSAB
C
C.............................................
C  NEXT BLOCK OF INPUT IS THAT FOR SSARRESV RESERVOIR USING 
C  THREE-VARIABLE RELATION WITHOUT BACKWATER ROUTING
C
 700  CONTINUE
      IF(LTRP.LE.0) GO TO 800   
C
C  ALSO, AN 'END3-VAR ' STATEMENT MUST HAVE BEEN FOUND IN THE INPUT
C  STREAM FOR DEFINITION OF THIS OPERATION
C
      IF (NTRP .GT.0) GO TO 720
C
      WRITE(IPR,760)
  760 FORMAT(10X,'*** ERROR ***'/16X,'NO ''END3-VAR'' KEYWORD HAS BEEN',
     .' FOUND IN THE INPUT STREAM.'/16X,'THIS KEYWORD IS NECESSARY TO ',
     .'PROCESS THE 3-VAR SUBSECTION'/16X,'OF THE ''SSARRESV'' '
     .,' OPERATION.')
      OKSAB  = .FALSE.
      CALL ERROR
      GO TO 9999
  720 CONTINUE
C
      NRES = NRES+1
C
C  REFILL 9TH WORD IN WORK WITH THE LOCATION OF THE START OF THE
C  SSARRESV RESERVOIR WITH THREE-VARIABLE RELATION
C
      SABLOC = IUSEW + 1.01
      CALL RFIL51(WK,9,SABLOC)
C
      CALL TRP51(WK,IUSEW,LEFTW,NPSAB,NTSAB,NCSAB,OKSAB)
      IF (IBUG.LT.2) GO TO 790
      WRITE(IODBUG,740)
  740 FORMAT(//,' *** WORK ARRAY AFTER 3-VAR INPUT ***')
      IF (IUSEW.LE.0) GO TO 790
      DO 750 I=1,IUSEW,8
      IE = I+7
      WRITE(IODBUG,1605) I,IE
      WRITE(IODBUG,1610) (WK(J),J=I,IE)
  750 CONTINUE
  790 CONTINUE
C
C  ONCE AGAIN, FLAG OVERALL ERROR IF ERROR OCCURRED DURING INPUT.
C
      ALLOK = ALLOK .AND. OKSAB
 800  CONTINUE
C
C..........................................................
C  NEXT CHECK IS FOR AVAILABLE SPACE IN PO ARRAY VERSUS THE AMOUNT
C   NECESSARY TO DEFINE THIS RESERVOIR OPERATION.
C
      LUSEP = 19 + (NPINF+NPSAB+NPSAR) +
     .        (NTINF+NTSAB+NTSAR+1)
C
      LUSEC = NCINF + NCSAB + NCSAR
C
      IF ( (LUSEP.GT.LEFTP) .OR. (LUSEC.GT.LEFTC) ) NOROOM = .TRUE.
C
C...................................................
C  IF AN ERROR HAS OCCURRED FOR ANY REASON, EITHER IN ONE OF THE INPUT
C  ROUTINES OR BECAUSE NOT ENOUGH SPACE IS AVAILABLE, DO NOT STORE
C  INFORMATION IN THE PO ARRAY.
C
      IF (.NOT.ALLOK .OR. NOROOM) GO TO 2000
C
      CALL WTPC51(PO,CO,WK,NRES,VERSNO,OKSTOR)
C
C...................................
C  IF AN ERROR OCCURRED WHILE STORING INFO, RESET THE IUSEP AND IUSEC
C   VARIABLES TO THE ERROR OR NO-USE CONDITION.
C
      IF (.NOT.OKSTOR) GO TO 2000
C...............................
C  OTHERWISE, COMPUTE THE NO. OF WORDS OF WORK SPACE NEEDED,
C  DO SOME MISCELLANEOUS POST-INPUT PROCESSING,
C  AND, SET THE NUMBER OF WORDS USED IN PO AND CO ARRAYS
C  AND THE NUMBER OF WORDS LEFT IN BOTH ARRAYS.
C
      CALL WKSP51(PO,NWKSP)
C
      PO(16) = NWKSP + 0.01
C
      IUSEP = LUSEP
      IUSEC = LUSEC
C
C      METSAR=PO(8)
      CALL ETOM51(PO)
C      
C      IF (IBUG.LT.2 .OR. METSAR.EQ.1) GO TO 9999
C      NTL = PO(14)
C      WRITE(IODBUG,1650)
C 1650 FORMAT(//,' *** PO ARRAY AFTER ETOM51 ***')
C      DO 950 I=1,NTL,8
C      IE = I+7
C      WRITE(IODBUG,1605) I,IE
C      WRITE(IODBUG,1610) (PO(J),J=I,IE)
C  950 CONTINUE
      GO TO 9999
C
C...................................
C  ERROR HAS OCCURRED SOMEWHERE, SO PRINT MESSAGE AND RESET USE COUNTERS
C
 2000 CONTINUE
      IUSEP = 0
      IUSEC = 0
C
      DO 965 IJK=1,5
      IF (NOROOM) WRITE(IPR,970) LEFTP,LUSEP,LEFTC,LUSEC
  970 FORMAT(/10X,'*** ERROR ***',/
     .10X,' MORE SPACE IS REQUIRED TO STORE THE PARAMETERS AND ',
     .'CARRYOVER FOR THIS RESERVOIR OPERATION THAN IS AVAILABLE.'/,
     .10X,' FOR STORING PARAMETERS IN THE P ARRAY, ',I4,' WORDS ARE ',
     .'AVAILABLE; ',I4,' WORDS ARE NEEDED.'/,
     .10X,' FOR STORING CARRYOVER IN THE C ARRAY, ',I4,' WORDS ARE ',
     .'AVAILABLE; ',I4,' WORDS ARE NEEDED.')
 965  CONTINUE
C
C  WRITE INFLOW ERROR MESSAGE
C
      WRITE(IPR,980)
  980 FORMAT(/10X,'*** ERROR ***',/
     & 11X,'DUE TO THE ABOVE ERRORS, THE CURRENT ATTEMPT AT DEFINING ',
     & 'THE SSARR RESERVOIR OPERATION',
     & /11X,10H'SSARRESV',' HAS BEEN ABORTED.')
      CALL ERROR
C
C
 9999 CONTINUE
      IF (ITRACE.GE.1) WRITE(IODBUG,1699)
 1699 FORMAT(1H0,'*** EXIT PIN51 ***')
      RETURN
      END










