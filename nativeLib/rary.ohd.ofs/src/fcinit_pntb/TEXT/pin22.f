C MEMBER PIN22
C
       SUBROUTINE PIN22(P0,LEFTP,IUSEP,C0,LEFTC,IUSEC)
C
C  REVISIONS:
C
C   REV 1.2:
C   881120:
C    -- TO REDUCE LOCAL P ARRAY DIMENSION TO ITS LARGEST SIZE NEEDED
C        WHEN NR IS LARGEST (6).  ALSO, CHANGE TOTALP TO
C        END UP AS THE SUM OF THE STATIC, ALWAYS NEEDED, PARAMETER
C        STORAGE SPACE + VARIABLE AMOUNT OF SPACE USED BY P (INSTEAD OF
C        HAVING TOTALP AS A CONSTANT).
C       ALSO, DO AWAY WITH THE NEED FOR DIMENSIONING A Y ARRAY LOCALLY.
C       CHECK ET MONTHLY DEMAND VALUES FOR .GE. 0
C
C  881213:
C   -- CHECK EACH PARAMETER STANDARD DEVIATION ESTIMATE TO BE .LE.
C       3.0 TIMES ITS CORRESPONDING PARAMETER VALUE
C   -- CHECK THAT SQRT OF EACH SOIL TERM OF INITIAL STATE COVARIANCE
C       MATRIX IS .LE. 3.0 TIMES ITS CORRESPONDING INITIAL MEAN STATE
C  --  IF ADIMC .GT. LZTWM, SET ADIMC = LZTWM
C
C   REV 1.3:
C  890717:
C  --  CHANGED SYNTAX TO BE IBM FORTRAN IV (H-EXTENDED) COMPATIBLE
C
C  900219:  MODIFIED SO XM MUST BE .LE. 50.0 INSTEAD OF .LE. 2.0
C
C   REV 1.4:  000425
C  --  MODIFIED TO CREATE STDEV SIM DISCHARGE TIME SERIES IN PRD
C
C   REV 1.5:  001024
C  --  CORRECTED TO RESTORE 13 LINES OF FORECAST OUTPUT TO SCREEN
C  --  12 LINES WERE PRODUCED BY 1.4 DUE TO INCOMPLETE MODIFICATION
C
C************* PARAMETER LIST ******************************************
C...STORES ALL OF PARAMETERS, TIME SERIES IDENTIFICATION, OPTIONS,
C... TITLES, ETC. FOR THE OPERATION (OUTPUT WRT PIN)
       REAL P0(1)
C
C...HOW MUCH SPACE IS LEFT IN SEGMENT P ARRAY (MAX AMOUNT AVAILABLE FOR
       INTEGER LEFTP
C
C...HOW MUCH SPACE IN P ARRAY WILL BE USED BY THIS OPERATION (OUTPUT)
       INTEGER IUSEP

C...STORES CARRYOVER FOR THE OPERATION (OUTPUT)
       REAL C0(1)
C
C...HOW MUCH SPACE IS LEFT IN SEGMENT C ARRAY (MAX AMOUNT AVAILABLE FOR
       INTEGER LEFTC
C
C...HOW MUCH SPACE IN C ARRAY WILL BE USED BY THIS OPERATION (OUTPUT)
       INTEGER IUSEC
C
C*************** VARIABLES STORED IN PARAMETER & CARRYOVER ARRAYS ******
C...PARAMETERS AND POINTERS TO THEIR STORAGE LOCATION IN P0 & C0 ARRAYS
C
C THIS SCHEME
C    DECLARES A POINTER VARIABLE FOR EVERY INPUT PARAMETER AND CARRYOVER
C     VARIABLE FOR THE SS-SAC OPERATIONN.  THE CONTENTS OF EACH POINTER
C     VARIABLE INDICATES WHERE ITS CORRESPONDING PARAMETER/
C     CARRYOVER VARIABLE'S STORAGE BEGINS IN THE FC P0 OR C0 ARRAY.
C
C-----------------------------------------------------------------------
C
C A. VARIABLES STORED IN P0 ARRAY, BUT NOT IN NON-FC COMMON, & THEIR POI
C
C*** PARAMETER VARIABLES AND POINTERS TO THEIR LOCATIONS IN P0 ARRAY.
C   THE PARAMETER
C     VARIABLES ARE DECLARED WITH A CERTAIN TYPE, DIMENSION, AND NAME.
C     EACH VARIABLE HAS A POINTER ASSOCIATED WITH IT.  THE NAME OF THE
C     POINTER IS THE SAME AS THE VARIABLE NAME EXECPT THAT A P IS ADDED
C     TO THE START OF THE NAME.  THIS POINTER CONTAINS THE INDEX OF THE
C     ARRAY WHERE THE START OF STORAGE FOR THE POINTERS CORRESPONDING
C     PARAMETER VARIABLE BEGINS.
C   VARIABLES WHICH INDICATE THE DIMENSION SIZE OF AN ARRAY HAVE THE
C     SAME NAME AS THE ARRAY BUT WITH 'S' FOR THE 1ST CHARACTER.
C
C...VERSION (REVISION) NUMBER OF THE SS-SAC OPERATION AND ITS PARAMETER
C... POINTER ASSIGNMENTS
       REAL OPVER
       INTEGER POPVER
C
C...RUN LABEL
       REAL ILBL(15)
       INTEGER PILBL
C
C...MODEL REFERENCE NUMBER - FC OPERATION NUMBER
       INTEGER MRNO, PMRNO
C
C...INDEX OF LAST ELEMENT OF SS-SAC P ARRAY USED FOR MODEL PARAM STORAGE
       INTEGER NCC1, PNCC1
C
C...POINTER TO WHERE NUMBER OF SOIL PARAMETERS USED IS STORED IN P
       INTEGER PNPA
C
C...POINTER TO WHERE NUMBER OF Q PARAMETERS USED IS STORED IN P
       INTEGER PNQ
C
C...NUMBER OF ROUTER PARAMETERS USED
       INTEGER NR, PNR
C
C...COEFFICIENT OF GENERIC NON-LINEAR ROUTING RESERVOIR
       INTEGER PALPD
       REAL ALPD
C
C...CONSTANT S.D. & COEFFICIENT OF VARIATION OF DISCHARGE
       INTEGER PR1
       REAL R1
       INTEGER PR2
       REAL R2
C
C...SACRAMENTO MODEL INITIAL CONDITIONS
       INTEGER PSCM, SSCM
       REAL SCM(6)
C
C...SQUARE ROOT OF DIAG ELEMENTS OF SACRAMENTO INIT STATE COVAR MATRIX
       INTEGER PSCMCV, SSCMCV
       REAL SCMCV(12)
C
C...NUMBER OF SOIL STATES OF SACREMENTO MODEL
       INTEGER PNORG
       INTEGER NORG
C
C...PRECIPITATION TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSP(2)
       INTEGER PTSP
C
C...DISCHARGE TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSD(2)
       INTEGER PTSD
C
C...EVAPOTRANSPIRATION TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSE(2)
       INTEGER PTSE
C
C...SIMULATED DISCHARGE TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSS(2)
       INTEGER PTSS
C
C...SIMULATED DISCHARGE STDEV TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSSD(2)
       INTEGER PTSSD
C
C...COVARIANCE FACTORS TIME-SERIES INTERNAL IDENTIFIER NAME
       REAL TSFA(2)
       INTEGER PTSFA
C
C...PRECIPITATION TIME-SERIES DATA TYPE CODE
       REAL DTCP
       INTEGER PDTCP
C
C...DISCHARGE TIME-SERIES DATA TYPE CODE
       REAL DTCD
       INTEGER PDTCD
C
C...EVAPOTRANSPIRATION TIME-SERIES DATA TYPE CODE
       REAL DTCE
       INTEGER PDTCE
C
C...SIMULATED DISCHARGE TIME-SERIES DATA TYPE  CODE
       REAL DTCS
       INTEGER PDTCS
C
C...SIMULATED DISCHARGE STDEV TIME-SERIES DATA TYPE  CODE
       REAL DTCSD
       INTEGER PDTCSD
C
C...COVARIANCE FACTORS TIME-SERIES DATA TYPE  CODE
       REAL DFAC
       INTEGER PDFAC
C
C...INTERVAL BETWEEN ET TIME-SERIES DATA VALUES
       INTEGER PNHRSE
C
C...INTERVAL BETWEEN OBSERVED OR SIMULATED DISCHARGE TIME-SERIES DATA
       INTEGER PNHRSD
C
C...POINTER TO PRECIPITATION CONSTANT STANDARD DEVIATION VALUE IN P
       INTEGER PPCSD
C
C...POINTER TO PRECIPITATION COEFFICIENT OF VARIATION IN P
       INTEGER PPCV
C
C...POINTER TO EVAPORATION CONSTANT DEVIATION VALUE IN P
       INTEGER PECSD
C
C...POINTER TO EVAPORATION COEFFICIENT OF VARIATION VALUE IN P
       INTEGER PECV
C
C...POINTER TO LOCATION OF FIRST DIAG TERM OF MODEL ERROR SD IN P
       INTEGER PDTSD
C
C...POINTER TO NUMBER OF DIAG TERMS OF MODEL ERROR SD
       INTEGER PNDTSD
C
C...POINTER TO LOCATION OF 1ST SOIL PARAMETER IN P
       INTEGER PSP
C
C...POINTER TO LOCATION OF 1ST ROUTER PARAMETER IN P
       INTEGER PRP
C
C...SWITCH TO SELECT:
C...  IF ETSW=1 => ET POTENTIAL TIME SERIES & 12 MONTHLY CORRECTION FACT
C...  IF     =0 => 12 LONG-TERM MEAN, ACTUAL ET DEMAND VALUES
       INTEGER PETSW
C
C...POINTER TO WHERE 12 ET NUMBERS ARE STORED IN P0 PARAMETER ARRAY
C... THESE NUMBERS ARE:  -- 12 MONTHLY CORRECTION FACTORS IF ETSW =1
C...                     -- 12 MONTHLY DEMAND MEANS IF ETSW = 0
       INTEGER PETDAT
C
C...POINTER TO INITIAL CONDITIONS DISCHARGE VALUE
       INTEGER PXDIS1
C
C...TOTAL AMOUNT OF SPACE IN P0 ARRAY REQUIRED FOR PARAMETERS
C... = PP + P0(PNCC1) - 1 ELEMENTS
       INTEGER TOTALP
C
C-----------------------------------------------------------------------
C
C B. POINTERS FOR VARIABLES STORED IN BOTH P0 AND IN NON-FC COMMON
C
C...TIME INTERVAL, IN HOURS, BETWEEN OBSERVED DATA OR FORECAST STEPS
C... AND SHOULD BE EQUAL TO THE INTERVAL BETWEEN PRECIP & DISCHARGE DATA
       INTEGER PNHST
C
C...LOCATION OF SS-SAC PARAMETER ARRAY (FOR EXEC SUBROUTINE) WITHIN P0
       INTEGER PP
C
C...CATCHMENT AREA IN SQKM
       INTEGER PAREA
C
C... EXPONENT PARAMETER OF GENERIC NON-LINEAR ROUTING RESERVOIR
       INTEGER PXM
C
C...COEFFICIENT PARAMETER OF GENERIC NON-LINEAR ROUTING RESERVOIR
       INTEGER PALP
C
C...???
       INTEGER PQ
C
C...MAX COEFF OF VARIATION ALLOWED FOR STAT. LINEARIZATION
C    (IF = 0, NO STAT LIN IS PERFORMED)
       INTEGER PCFVMX
C
C...COEFF OF INPUT COMPONENT OF MODEL ERROR COVARIANCE
       INTEGER PALINP
C...COEFF OF PARAMETER COMPONENT OF MODEL ERROR COVARIANCE
       INTEGER PALPAR
C
C...STANDARD DEVIATION OF RAINFALL-RUNOFF MODEL PARAMETER ESTIMATES
       INTEGER PPSTDV
C
C...NUMBER OF SUBDIVISIONS
       INTEGER PSUBS
C
C-----------------------------------------------------------------------
C
C C. POINTERS FOR VARIABLES STORED IN BOTH NON-FC COMMON AND IN C0
C
       INTEGER PY
C
       INTEGER PYST
C
C
C...TOTAL STORAGE REQUIRED IN C0 FOR CARRYOVER
C... = (NR+NORG) + (NR+NORG)*(NR+NORG-1)/2 + 1 (FOR INITIAL DISCHARGE)
       INTEGER TOTALC
C
C***********************************************************************
C
       REAL P(60)
       REAL Y(91)
       REAL ALP(6)
       REAL Q(12)
       REAL PSTDV(20)
C
C********************** OTHER VARIABLES USED ***************************
C
       INTEGER NCC
       INTEGER NPA0,NPA1
       INTEGER IAL
       INTEGER I6
       INTEGER ISL
       INTEGER IJ
       INTEGER NC1
       REAL SNAME(2)
C...ERROR STATUS RETURN FROM FC SUBROUTINES
       INTEGER ISTAT
       INTEGER NWORD
       INTEGER ICKDIM
       INTEGER MISSOK
C...NUMBER OF DATA VALUES/TIME INTERVAL
       INTEGER NDINT
C...DIMENSION OF EACH TIME SERIES
       REAL*4 DIMTSP, DIMTSD, DIMTSE, DIMTSS, DMTSSD, DIMFAC
       REAL PUNITS, EUNITS, DUNITS, SUNITS, SDUNIT, FUNITS
       REAL PTSCAL, ETSCAL, DTSCAL, STSCAL, SDTSCL, FTSCAL
       INTEGER NADDIT
C
C...FLAG TO SIGNAL THAT AN FILE INPUT ERROR OCCURED
       INTEGER IOERR
C...STATEMENT NUMBER THAT THE FILE I/O ERROR OCCURED IN
       INTEGER IOSTMT
C
C...FLAG TO SIGNAL THAT THE P0 OR C0 ARRAY SPACE WAS EXCEEDED
       INTEGER IFLAGP
       INTEGER IFLAGC
C
       INTEGER ETSW
C
       REAL PROP(6)
       REAL COEF
       INTEGER KK, KKK
       INTEGER KK1
       REAL CI(12)
       REAL CV, CSD
C
C...DISCHARGE FOR 1ST TIME STEP
       REAL XDIS1
C
C...EITHER ET CORRECTION FACTORS, OR MONTHLY MEAN DEMAND VALUES
       REAL ETDAT(12)
C
       INTEGER NCHGE(18)
       INTEGER IOLD
       REAL POLD(18)
C
       INTEGER NOPER
C...SOIL PARAMETER NAMES
       REAL*8 PNAME(14)
C
C**************** FC COMMON BLOCKS *************************************
C
C..INPUT/OUTPUT LOGICAL UNIT NUMBERS:
C...  IN  = FOR CARD IMAGE INPUT
C...  IPR = FOR PRINTED OUTPUT
C...  IPU = FOR PUNCHED OUTPUT
       COMMON /IONUM/IN,IPR,IPU
C
C...FOR DEBUGGING:
       COMMON /FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
C
       COMMON /FCONIT/IVALUE
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_pntb/RCS/pin22.f,v $
     . $',                                                             '
     .$Id: pin22.f,v 1.4 2002/05/15 13:40:36 hank Exp $
     . $' /
C    ===================================================================
C
C
C***********************************************************************
C
       DATA SNAME/4HPIN2,4H2   /
       DATA NOPER/22/
       DATA PNAME/8HUZTWM   ,8HUZFWM   ,8HLZTWM   ,8HLZFPM   ,
     +            8HLZFSM   ,8HUZK     ,8HLZPK    ,8HLZSK    ,
     +            8HZPERC   ,8HREXP    ,8HPFREE   ,8HSIDE    ,
     +            8HADIMP   ,8HPCTIM   /
C
C***********************************************************************
C
C...SHOULD ALWAYS BE THE 1ST EXECUTABLE STATEMENT IN FC PRIMARY SUBROUTI
       CALL FPRBUG (SNAME,1,NOPER,IBUG)
C
C-----------------------------------------------------------------------
C
C **LOAD POINTERS TO PARAMETER VARIABLES IN P0
C
       POPVER= 1
       PILBL = POPVER + 1
       PMRNO = PILBL  +15
       PNCC1 = PMRNO  + 1
       PNR   = PNCC1  + 1
       PALPD = PNR    + 1
       PXM   = PALPD  + 1
       PALP  = PXM    + 1
       PSCM  = PALP   + 6
       PSCMCV= PSCM   + 6
       PNORG = PSCMCV +12
       PTSP  = PNORG  + 1
       PTSD  = PTSP   + 2
       PTSE  = PTSD   + 2
       PTSS  = PTSE   + 2
       PDTCP = PTSS   + 2
       PDTCD = PDTCP  + 2
       PDTCE = PDTCD  + 2
       PDTCS = PDTCE  + 2
       PNHST = PDTCS  + 2
       PNHRSE= PNHST  + 1
       PNHRSD= PNHRSE + 1
       PAREA = PNHRSD + 1
       PQ    = PAREA  + 1
       PCFVMX= PQ     +12
       PALINP= PCFVMX + 1
       PALPAR= PALINP + 1
       PPSTDV= PALPAR + 1
       PPCSD = PPSTDV +20
       PPCV  = PPCSD  + 1
       PECSD = PPCV   + 1
       PECV  = PECSD  + 1
       PR1   = PECV   + 1
       PR2   = PR1    + 1
       PDTSD = PR2    + 1
       PNDTSD= PDTSD  + 1
       PNPA  = PNDTSD + 1
       PSP   = PNPA   + 1
       PRP   = PSP    + 1
       PNQ   = PRP    + 1
       PETSW = PNQ    + 1
       PETDAT= PETSW  + 1
       PXDIS1= PETDAT +12
       PSUBS = PXDIS1 + 1
       PTSSD = PSUBS  + 1
       PDTCSD= PTSSD  + 2
       PTSFA = PDTCSD + 2
       PDFAC = PTSFA  + 2
C
       PP    = PDFAC  + 1
C
       PY     =   1
C
C-----------------------------------------------------------------------
C
C...RESET ERROR FLAGS
       IOERR = 0
       IFLAGP = 0
       IFLAGC = 0
C
C...INPUT TITLE ARRAY
       IOSTMT = 500
500    READ(IN,621,ERR=501) (ILBL(I),I=1,15)
       GO TO 502
501    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
502    CONTINUE
       CALL CKSR22 (IFLAGP,PILBL,15,ILBL,LEFTP,P0)
C
C**** CHANGE THIS CONSTANT IF EITHER:
C  1) THE PARAMS.INC INCLUDE FILE FOR PARAMETER POINTERS CHANGES.  THE
C      REVISION CONSTANT READ BY PIN AND STORED IN P0 WILL BE CHECKED
C      AGAINST THE HARDWIRED REVISION CONSTANT IN EX.  IF THE FILE
C      CHANGES, THEN BOTH SUBROUTINES SHOULD HAVE THE CONSTANT UPDATED
C      TO THE SAME FILE AND BE RECOMPILED & BOUND.
C  2) THE CODE OF THE PIN ROUTINE CHANGES.  IF SO, THEN THE CODE FOR EX
C      SHOULD BE MODIFIED ACCORDINGLY AND ASSIGNED THE SAME REVISION
C      CONSTANT.  BOTH PIN & EX SHOULD THEN BE RE-COMPILED & BOUND.
C
C...OPERATION VERSION (REVISION) NUMBER
C...VERSION 1.1, 880712, COMPLETED CONVERSION FOR USE IN NWSFC
C      OPVER = 1.1
C...CHANGES MADE TO PARAMETER POINTERS & STORAGE
C      OPVER = 1.2
C...CHANGES MADE FOR USE UNDER OS FORTRAN IV (H-EXTENDED)
C      OPVER = 1.3
C...MODIFIED TO USE OUTPUT TIME SERIES FOR SIM DISCH STDEV 
C      OPVER = 1.4
C...MODIFIED TO RESTORE MISSING LINE OF SCREEN OUTPUT
C      OPVER = 1.5
C...MODIFIED TO USE INPUT TIME SERIES OF COVARIANCE FACTORS
       OPVER = 1.6
       CALL CKSR22 (IFLAGP,POPVER,1,OPVER,LEFTP,P0)
C
C...MODEL REFERENCE NUMBER- OPERATION IDENTIFIER NUMBER
       MRNO = 22
       CALL CKSI22 (IFLAGP,PMRNO,1,MRNO,LEFTP,P0)
C
C...TIME-SERIES IDENTIFIERS
       IOSTMT = 540
CJAS..added TSFA to read in the CV factor times series ID
540    READ(IN,625,ERR=541) (TSP(I),I=1,2), (TSE(I),I=1,2),
     +  (TSD(I),I=1,2), (TSS(I),I=1,2), (TSSD(I),I=1,2),
     +  (TSFA(I),I=1,2)
625    FORMAT(2A4,2X,2A4,2X,2A4,2X,2A4,2X,2A4,2X,2A4)
       GO TO 5411
541    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5411   CONTINUE
       CALL CKSR22 (IFLAGP,PTSP,2,TSP,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PTSE,2,TSE,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PTSD,2,TSD,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PTSS,2,TSS,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PTSSD,2,TSSD,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PTSFA,2,TSFA,LEFTP,P0)
C
C...TIME-SERIES DATA TYPE CODES
       IOSTMT = 542
CJAS..added DFAC to read in the CV factor times series type
542    READ(IN,626,ERR=543) DTCP,DTCE,DTCD,DTCS,DTCSD,DFAC
626    FORMAT(A4,2X,A4,2X,A4,2X,A4,2X,A4,2X,A4)
       GO TO 5431
543    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5431   CONTINUE
       CALL CKSR22 (IFLAGP,PDTCP,1,DTCP,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PDTCE,1,DTCE,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PDTCD,1,DTCD,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PDTCS,1,DTCS,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PDTCSD,1,DTCSD,LEFTP,P0)
       CALL CKSR22 (IFLAGP,PDFAC,1,DFAC,LEFTP,P0)
C
C...TIME-SERIES INTERVAL FOR EVAPORATION (IF ONE IS USED), AND
C...NUMBER OF SUBDIVISIONS FOR COMPUTATIONAL INTERVAL
       IOSTMT = 544
544    READ(IN,5441,ERR=545) NHRSE
5441   FORMAT(I5,F5.1)
       GO TO 5451
545    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5451   CONTINUE
       CALL CKSI22 (IFLAGP,PNHRSE,1,NHRSE,LEFTP,P0)
C
C...SWITCHES & OPTIONS
       IOSTMT = 504
504    READ(IN,*,ERR=505) NHST,ETSW
       GO TO 5051
505    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5051   CONTINUE
       CALL CKSI22 (IFLAGP,PNHST,1,NHST,LEFTP,P0)
C
       IF ( ((24/NHST)*NHST) .EQ. 24) GOTO 801
           WRITE (IPR,90) NHST
90         FORMAT(//,10X,'**ERROR** COMPUTE TIME INTERVAL= ',I2,/,
     +      10X,' BUT ONLY INTERVALS OF 1,2,3,4,6,8,12, AND 24'
     +      '  ARE ALLOWED.')
           CALL ERROR
801    CONTINUE
C
C...FORCE DISCHARGE TIME SERIES INTERVAL TO BE SAME AS PRECIP INTERVAL
       NHRSD = NHST
       CALL CKSI22 (IFLAGP,PNHRSD,1,NHRSD,LEFTP,P0)
C
C...CHECK EVAPORATION TIME SERIES INTERVAL, IF USED
       IF (ETSW .NE. 1) GO TO 803
       IF ( (NHRSE/NHST)*NHST .EQ. NHRSE) GO TO 802
           WRITE (IPR,909) NHRSE
909        FORMAT(//,10X,'**ERROR** ET DATA INTERVAL= ',I2,/,
     +      10X,' IS NOT A MULTIPLE OF THE COMPUTE TIME INTERVAL.')
           CALL ERROR
802    CONTINUE
803    CONTINUE
       CALL CKSI22 (IFLAGP,PETSW,1,ETSW,LEFTP,P0)
C
C...OPERATION WILL NEVER USE DEFAULT CARRYOVER
       IVALUE = 0
C
C...IF ETSW = 1, THEN READ 12 MONTHLY POTENTIAL ET CORRECTION FACTORS,
C                 AND A POTENTIAL ET TIME SERIES WILL BE USED
C...        = 0, THEN READ 12 MONTHLY MEAN ACTUAL ET DEMAND VALUES,
C                 IN PLACE OF A TIME-SERIES.
       IOSTMT = 536
536    READ (IN,612,ERR=537) (ETDAT(I),I=1,12)
       GO TO 5371
537    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5371   CONTINUE
       DO 800 I = 1,12
           IF(ETDAT(I) .GE. 0) GO TO 804
               IF (ETSW .NE. 1) GO TO 806
                   WRITE (IPR,538) I,ETDAT(I)
538                FORMAT(//,10X,'**ERROR** ET CORRECTION FACTOR#',I2,
     +              ' = ',E10.3,/,
     +              10X,' CANNOT BE NEGATIVE.')
               GO TO 805
C
806            CONTINUE
                   WRITE (IPR,5381) I,ETDAT(I)
5381               FORMAT(//,10X,'**ERROR** ET DEMAND VALUE#',I2,
     +              ' = ',E10.3,/,
     +              10X,' CANNOT BE NEGATIVE.')
805            CONTINUE
               CALL ERROR
804        CONTINUE
800    CONTINUE
       CALL CKSR22 (IFLAGP,PETDAT,12,ETDAT,LEFTP,P0)
C
C
C...CONVERT FEET TO METERS
       COEF=0.3048
C
C
C...START FILLING PARAMETER ARRAY P FROM POSITION 11
       NPA1=10
C
C...READ MODIFIED-SACRAMENTO MODEL PARAMETERS
C...#OF PARAMETERS
       NPA = 18
C...STORE THE #OF PARAMETERS (NPA) IN ELEMENT NPA1 OF P WITHIN P0
       CALL CKSI22 (IFLAGP,PP+NPA1-1,1,NPA,LEFTP,P0)
C...STORE THE LOCATION OF NPA WITHIN P (NPA1) IN P0 (PNPA)
       CALL CKSI22 (IFLAGP,PNPA,1,NPA1,LEFTP,P0)
C
       NPA0=NPA1+1
       NPA1=NPA+NPA1
CC      READ(IN,612) (P(I),I=NPA0,NPA1)
       IOSTMT = 508
C...1ST PARAMETER & LAST 3 PARAMETERS HARDWIRED
       P(NPA0)   = 1.0
       P(NPA1-2) = 8.0
       P(NPA1-1) = 8.0
       P(NPA1)   = 8.0
       N1 = NPA0+1
       N2 = NPA1-3
508    READ (IN,612,ERR=509) (P(I),I=N1,N2)
       GO TO 5091
509    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5091   CONTINUE
C
       ICHGE = 0
       DO 507 I = 1,18
507    NCHGE(I) = 0
C
C...INSURE THAT CAPACITIES ARE NOT EQUAL TO 0.0
C...CHECK 2ND PARAMETER - UZTWM
       IF (P(NPA0+1) .GE. 0.1) GO TO 810
           POLD(1) = P(NPA0+1)
           NCHGE(1) = 1
           P(NPA0+1)=0.1
           ICHGE = ICHGE+1
810    CONTINUE
C
C...CHECK 3RD PARAMETER - UZFWM
       IF (P(NPA0+2) .GE. 0.1) GO TO 811
           POLD(2) = P(NPA0+2)
           NCHGE(2) = 1
           P(NPA0+2)=0.1
           ICHGE = ICHGE+1
811    CONTINUE
C
C...CHECK 4TH PARAMETER - LZTWM
       IF (P(NPA0+3) .GE. 0.1) GO TO 812
           POLD(3) = P(NPA0+3)
           NCHGE(3) = 1
           P(NPA0+3)=0.1
           ICHGE = ICHGE+1
812    CONTINUE
C
C...CHECK 5TH PARAMETER - LZFPM
       IF (P(NPA0+4) .GE. 0.1) GO TO 813
           POLD(4) = P(NPA0+4)
           NCHGE(4) = 1
           P(NPA0+4)=0.1
           ICHGE = ICHGE+1
813    CONTINUE
C
C...CHECK 6TH PARAMETER - LZFSM
       IF (P(NPA0+5) .GE. 0.1) GO TO 814
           POLD(5) = P(NPA0+5)
           NCHGE(5) = 1
           P(NPA0+5)=0.1
           ICHGE = ICHGE+1
814    CONTINUE
C
C...CHECK 7TH PARAMETER - UZK
       IF (P(NPA0+6) .LE. 1.0) GO TO 815
           POLD(6) = P(NPA0+6)
           NCHGE(6) = 1
           P(NPA0+6) = 1.0
           ICHGE = ICHGE + 1
815    CONTINUE
C
C...CHECK 8TH PARAMETER - LZPK
       IF (P(NPA0+7) .LE. 1.0) GO TO 816
           POLD(7) = P(NPA0+7)
           NCHGE(7) = 1
           P(NPA0+7) = 1.0
           ICHGE = ICHGE+1
816    CONTINUE
C
C...CHECK 9TH PARAMETER - LZSK
       IF (P(NPA0+8) .LE. 1.0) GO TO 817
           POLD(8) = P(NPA0+8)
           NCHGE(8) = 1
           P(NPA0+8) = 1.0
           ICHGE = ICHGE+1
817    CONTINUE
C
C...CHECK 10TH PARAMETER - ZPERC
       IF (P(NPA0+9) .GE. 1.0E-04) GO TO 818
           POLD(9) = P(NPA0+9)
           NCHGE(9) = 1
           P(NPA0+9) = 1.0E-04
           ICHGE = ICHGE+1
818    CONTINUE
C
C...CHECK 11TH PARAMETER - REXP
       IF (P(NPA0+10) .GE. 1.0E-04) GO TO 819
           POLD(10) = P(NPA0+10)
           NCHGE(10) = 1
           P(NPA0+10) = 1.0E-04
           ICHGE = ICHGE+1
819    CONTINUE
C
C...CHECK 12TH PARAMETER - PFREE
       IF (P(NPA0+11) .LE. 1.0) GO TO 820
           POLD(11) = P(NPA0+11)
           NCHGE(11) = 1
           P(NPA0+11) = 1.0
           ICHGE = ICHGE+1
820    CONTINUE
C
C...CHECK 13TH PARAMETER - SIDE
       IF (P(NPA0+12) .GE. 0.0) GO TO 821
           POLD(12) = P(NPA0+12)
           NCHGE(12) = 1
           P(NPA0+12) = 0.0
           ICHGE = ICHGE+1
821    CONTINUE
C
C...CHECK 15TH PARAMETER - PCTIM
       IF (P(NPA0+14) .LE. 1.0) GO TO 822
           POLD(14) = P(NPA0+14)
           NCHGE(14) = 1
           P(NPA0+14) = 1.0
           ICHGE = ICHGE+1
822    CONTINUE
C
C...CHECK 14TH PARAMETER - ADIMP
       IF (P(NPA0+13) .LE. (1.0-P(NPA0+14)) ) GO TO 823
           POLD(13) = P(NPA0+13)
           NCHGE(13) = 1
           P(NPA0+13) = 1.0 - P(NPA0+14)
           ICHGE = ICHGE+1
823    CONTINUE
C
       IF (ICHGE .EQ. 0) GO TO 825
           WRITE (IPR,910) ICHGE
910        FORMAT(/10X,'**WARNING**',1X,I2,' SACREMENTO MODEL'
     +      ' PARAMETERS'
     +      ' WERE CHANGED,',/,10X,' BECAUSE THEY WERE ASSIGNED'
     +      ' IMPOSSIBLE VALUES.')
           DO 911 I = 1,14
               IF (NCHGE(I) .EQ. 1)
     +         WRITE (IPR,912) PNAME(I),POLD(I),P(NPA0+I)
912            FORMAT(15X,A8,' : ',E10.3,' CHANGED TO ',
     +          E10.3)
               CALL WARN
911        CONTINUE
825    CONTINUE
C
C...TRANSFER SOIL PARAMETERS FROM P TO P0
       CALL CKSR22 (IFLAGP,PP+NPA0-1,NPA,P(NPA0),LEFTP,P0)
C...STORE LOCATION OF 1ST SOIL PARAMETER IN P AS PSP
       CALL CKSI22 (IFLAGP,PSP,1,NPA0,LEFTP,P0)
C
C...CATCHMENT AREA (SQKM)
       IOSTMT = 510
510    READ(IN,612,ERR=511) AREA
       GO TO 5111
511    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5111   CONTINUE
       IF (AREA .GT. 0.0) GOTO 826
           WRITE (IPR,92)
92         FORMAT(/10X,'**ERROR** CATCHMENT AREA CANNOT BE'
     +      ' .LE. 0.',/)
           CALL ERROR
826    CONTINUE
       CALL CKSR22 (IFLAGP,PAREA,1,AREA,LEFTP,P0)
C
C
C...NUMBER OF MODEL ROUTING RESERVOIRS
       IOSTMT = 512
512    READ(IN,611,ERR=513) NR
       GOTO 5131
513    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5131   CONTINUE
       IF (NR.GE.1 .AND. NR.LE.6) GOTO 827
           IOLD = NR
           IF (NR .LT. 1) NR = 1
           IF (NR .GT. 6) NR = 6
           WRITE (IPR,91)IOLD,NR
91         FORMAT(/10X,'**WARNING**  NUMBER OF RESERVOIRS'
     +      ' WAS CHANGED',/,15X,'FROM ',I3,' TO ',I3)
           CALL WARN
827    CONTINUE
       CALL CKSI22 (IFLAGP,PNR,1,NR,LEFTP,P0)
C
C...ROUTING RESERVOIR PARAMETERS (SAME FOR EACH RESERVOIR)
       IOSTMT = 514
514    READ(IN,612,ERR=515) XM, ALPD
       GOTO 5151
515    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5151   CONTINUE
       IF (XM.GE.0.5 .AND. XM.LE.50.0) GOTO 828
           OLD = XM
           IF (XM .LT. 0.5) XM = 0.5
           IF (XM .GT. 2.0) XM = 2.0
           WRITE (IPR,93) OLD,XM
93         FORMAT(/10X,'**WARNING**  ROUTING RESERVOIR'
     +      ' EXPONENT PARAMETER'
     +      ' WAS CHANGED',/,15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
828    CONTINUE
       CALL CKSR22 (IFLAGP,PXM,1,XM,LEFTP,P0)
C
       IF (ALPD .GE. 1.0E-02) GOTO 829
            OLD = ALPD
            ALPD = 1.0E-02
            WRITE (IPR,931) OLD,ALPD
931         FORMAT(/10X,'**WARNING** ROUTING RESERVOIR'
     +       ' COEFFICIENT PARAMETER'
     +       ' WAS CHANGED',/,15X,'FROM ',E10.3,' TO ',E10.3)
            CALL WARN
829    CONTINUE
       CALL CKSR22 (IFLAGP,PALPD,1,ALPD,LEFTP,P0)
C
       PROP(1)=1.0
       ALP(1)=ALPD
       CALL CKSR22 (IFLAGP,PALP,1,ALPD,LEFTP,P0)
C
       IF (NR.EQ.1) GOTO 830
           DO 3534 IAL=2,NR
               PROP(IAL)=0.0
               ALP(IAL)=ALPD
               CALL CKSR22 (IFLAGP,PALP+IAL-1,1,ALPD,LEFTP,P0)
3534       CONTINUE
830    CONTINUE
C
3535   CONTINUE
       NCC=NPA1+1
C
C...STORE NR IN P ARRAY WITHIN P0
       CALL CKSI22 (IFLAGP,PP+NCC-1,1,NR,LEFTP,P0)
C
C...STORE THE LOCATION OF 1ST ROUTER PARAMETER IN P ARRAY AS PRP
       CALL CKSI22 (IFLAGP,PRP,1,NCC+1,LEFTP,P0)
       DO 35 I=1,NR
           NCC=NCC+1
           P(NCC)=PROP(I)
           CALL CKSR22 (IFLAGP,PP+NCC-1,1,PROP(I),LEFTP,P0)
35     CONTINUE
       DO 36 I=1,NR
           NCC=NCC+1
           P(NCC)=ALP(I)
           CALL CKSR22 (IFLAGP,PP+NCC-1,1,ALP(I),LEFTP,P0)
36     CONTINUE
       NCC=NCC+1
       P(NCC)=XM
       CALL CKSR22 (IFLAGP,PP+NCC-1,1,XM,LEFTP,P0)
C
       NCC=NCC+1
       NCC1=NCC+1
C
C...READ  COEFFICIENT OF VARIATION & CONSTANT ST. DEV. OF MAP
       IOSTMT = 516
CC      READ(IN,612,ERR=517,IOSTAT=IOS) P(NCC),P(NCC1)
516    READ(IN,612,ERR=517) CV,CSD
       GOTO 5171
517    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5171   CONTINUE
       IF (CV.GE.0.0 .AND. CV.LE.5.0) GOTO 831
           OLD = CV
           IF (CV .LT. 0.0) CV = 0.0
           IF (CV .GT. 5.0) CV = 5.0
           WRITE (IPR,94) OLD,CV
94         FORMAT(/10X,'**WARNING** MAP COEF OF VARIATION',/,10X,
     +                 ' VARIANCE PARAMETER WAS CHANGED',/,15X,
     +                 'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
831    CONTINUE
C...UPDATE P0 ARRAY FOR CV AND STORE ITS LOCATION IN P ARRAY AS PPCV
       CALL CKSR22 (IFLAGP,PP+NCC-1,1,CV,LEFTP,P0)
       CALL CKSI22 (IFLAGP,PPCV,1,NCC,LEFTP,P0)
C
       IF (CSD .GE. 1.0E-02) GOTO 832
           OLD = CSD
           CSD = 1.0E-02
           WRITE (IPR,941) OLD,CSD
941        FORMAT(/10X,'**WARNING** MAP CONSTANT STANDARD DEVIATION',/,
     +             10X,' VARIANCE PARAMETER WAS CHANGED',/,15X,
     +                 'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
832    CONTINUE
C...UPDATE P0 ARRAY FOR CSD AND STORE ITS LOCATION IN P AS PPCSD
       CALL CKSR22 (IFLAGP,PP+NCC1-1,1,CSD,LEFTP,P0)
       CALL CKSI22 (IFLAGP,PPCSD,1,NCC1,LEFTP,P0)
C
       NCC=NCC+2
       NCC1=NCC+1
C
C...READ COEFFICIENT OF VARIATION AND CONSTANT ST. DEV. OF EVAPOTRANSPIR
       IOSTMT = 518
CC      READ(IN,612,ERR=519,IOSTAT=IOS) P(NCC),P(NCC1)
518    READ(IN,612,ERR=519) CV,CSD
       GO TO 5191
519    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5191   CONTINUE
       IF (CV.GE.0.0 .AND. CV.LE.5.0) GOTO 833
           OLD = CV
           IF (CV .LT. 0.0) CV = 0.0
           IF (CV .GT. 5.0) CV = 5.0
           WRITE (IPR,95) OLD,CV
95         FORMAT(/10X,'**WARNING** ET COEF OF VARIATION',/,10X,
     +                 ' VARIANCE PARAMETER WAS CHANGED',/,15X,
     +                 'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
833    CONTINUE
C...UPDATE P0 ARRAY FOR CV AND STORE ITS LOCATION IN P ARRAY AS PECV
       CALL CKSR22 (IFLAGP,PP+NCC-1,1,CV,LEFTP,P0)
       CALL CKSI22 (IFLAGP,PECV,1,NCC,LEFTP,P0)
C
       IF (CSD .GE. 1.0E-02) GOTO 834
           OLD = CSD
           CSD = 1.0E-02
           WRITE (IPR,951) OLD,CSD
951        FORMAT(/10X,'**WARNING** ET CONSTANT STANDARD DEVIATION',/,
     +             10X,' VARIANCE PARAMETER WAS CHANGED',/,15X,
     +                 'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
834    CONTINUE
C...UPDATE P0 ARRAY FOR CSD AND STORE ITS LOCATION IN P AS PECSD
       CALL CKSR22 (IFLAGP,PP+NCC1-1,1,CSD,LEFTP,P0)
       CALL CKSI22 (IFLAGP,PECSD,1,NCC1,LEFTP,P0)
C
       NCC=NCC+2
       NCC1=NCC+1
C
C...READ CONSTANT ST. DEV. OF DISCHARGE & COEFFICIENT OF VARIATION
       IOSTMT = 520
CC      READ(IN,612,ERR=521,IOSTAT=IOS) P(NCC),P(NCC1)
520    READ(IN,612,ERR=521) CSD,CV
       GOTO 5211
521    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5211   CONTINUE
       IF (CSD .GE. 1.0E-02) GOTO 835
           OLD = CSD
           CSD = 1.0E-02
           WRITE (IPR,96) OLD,CSD
96         FORMAT(/10X,'**WARNING** DISCHARGE CONSTANT STANDARD'
     +                 ' DEVIATION',/,
     +             10X,' VARIANCE PARAMETER WAS CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
835    CONTINUE
       CALL CKSR22 (IFLAGP,PP+NCC-1,1,CSD,LEFTP,P0)
C
       IF (CV.GE.0.0 .AND. CV.LE.5.0) GOTO 836
           OLD = CV
           IF (CV .LT. 0.0) CV = 0.0
           IF (CV .GT. 5.0) CV = 5.0
           WRITE (IPR,961) OLD,CV
961        FORMAT(/10X,'**WARNING** DISCHARGE COEF OF VARIATION',/,
     +             10X,' VARIANCE PARAMETER WAS CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
836    CONTINUE
       CALL CKSR22 (IFLAGP,PP+NCC1-1,1,CV,LEFTP,P0)
C
       R1=CSD
       CALL CKSR22 (IFLAGP,PR1,1,CSD,LEFTP,P0)
       R2=CV
       CALL CKSR22 (IFLAGP,PR2,1,CV,LEFTP,P0)
C
C...DIAGONAL TERMS OF MODEL ERROR STANDARD DEVIATION
       NCC1=NCC+NR+7
       NCC=NCC+2
C
CC      READ(IN,612) (P(I),I=NCC,NCC1)
C...INSTEAD, HARDWIRE TERMS; ALL BUT THE 7TH ARE SAME
       DO 300 I=NCC,NCC1
           P(I) = 1.0E-05
           IF ( (I-NCC+1).EQ.7 .AND. (NCC1-NCC+1).GT.7) P(I) = 1.0E-01
300    CONTINUE
C
C...UPDATE P ARRAY WITHIN P0
       NDTSD = NCC1-NCC+1
       CALL CKSR22 (IFLAGP,PP+NCC-1,NDTSD,P(NCC),LEFTP,P0)
C
C...STORE THE LOCATION OF 1ST DIAGONAL TERM IN P AT PDTSD
       CALL CKSI22 (IFLAGP,PDTSD,1,NCC,LEFTP,P0)
C
C...STORE THE #OF TERMS AT PNDTSD
       CALL CKSI22 (IFLAGP,PNDTSD,1,NDTSD,LEFTP,P0)
C
C...STORE LAST ELEMENT OF P ARRAY USED
       CALL CKSI22 (IFLAGP,PNCC1,1,NCC1,LEFTP,P0)
C
       KK1=0
       DO 37 I=NCC,NCC1
           P(I)=P(I)*P(I)
           CALL CKSR22 (IFLAGP,PP+I-1,1,P(I),LEFTP,P0)
           KK1=KK1+1
           Q(KK1)=P(I)
           CALL CKSR22 (IFLAGP,PQ+KK1-1,1,P(I),LEFTP,P0)
37     CONTINUE
C
C...STORE NUMBER OF Q VALUES USED
       CALL CKSI22 (IFLAGP,PNQ,1,KK1,LEFTP,P0)
C
C...READ MAXIMUM COEF. OF VARIATION ALLOWED FOR STAT. LINEARIZATION
C... IF ZERO NO STAT LIN IS PERFORMED
       CFVMX = 0
       CALL CKSR22 (IFLAGP,PCFVMX,1,CFVMX,LEFTP,P0)
C
C...READ MODEL ERROR COVARIANCE COEFFICIENTS
       IOSTMT = 526
526    READ(IN,612,ERR=527) ALINP,ALPAR
       GOTO 5271
527    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5271   CONTINUE
       IF (ALINP .GE. 1.0E-02) GOTO 837
           OLD = ALINP
           ALINP = 1.0E-02
           WRITE (IPR,97) OLD,ALINP
97         FORMAT(/10X,'**WARNING** COEF OF INPUT COMPONENT ',/,
     +             10X,' OF MODEL-ERROR COVARIANCE CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
837    CONTINUE
       CALL CKSR22 (IFLAGP,PALINP,1,ALINP,LEFTP,P0)
C
       IF (ALPAR .GE. 1.0E-02) GOTO 838
           OLD = ALPAR
           ALPAR = 1.0E-02
           WRITE (IPR,971) OLD, ALPAR
971        FORMAT(/10X,'**WARNING** COEF OF PARAMETER COMPONENT',/,
     +             10X,' OF MODEL-ERROR COVARIANCE CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
838    CONTINUE
       CALL CKSR22 (IFLAGP,PALPAR,1,ALPAR,LEFTP,P0)
C
C...READ STANDARD DEVIATION OF RAINFALL-RUNOFF MODEL PARAMETER ESTIMATES
       DO 371 I=1,20
           PSTDV(I)=0.0
371    CONTINUE
CC      READ(IN,612) (PSTDV(I),I=1,16)
C
       IOSTMT = 528
528    READ (IN,612,ERR=529) (PSTDV(I),I=1,16)
       GOTO 5290
529    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5290   CONTINUE
       DO 5291 I = 1,14
           IF (PSTDV(I).GE.1.0E-08 .AND.
     +      PSTDV(I).LE.(3.0*P(NPA0+I)) ) GOTO 839
               OLD = PSTDV(I)
               IF (PSTDV(I) .LT. 1.0E-08) PSTDV(I) = 1.0E-08
               IF (PSTDV(I) .GT. 3.0*P(NPA0+I) )PSTDV(I) = 3.0*P(NPA0+I)
               WRITE (IPR,98) PNAME(I),OLD,PSTDV(I)
98             FORMAT(/10X,'**WARNING** STANDARD DEVIATION OF MODEL',/,
     +                 10X,' PARAMETER ESTIMATE WAS CHANGED',/,
     +                 15X,'FOR: ',A8,' FROM ',E10.3,' TO ',E10.3)
               CALL WARN
839        CONTINUE
5291   CONTINUE
       IF (PSTDV(15).GE.1.0E-08 .AND. PSTDV(15).LE.3.0*XM) GOTO 840
           OLD = PSTDV(15)
           IF (PSTDV(15) .LT. 1.0E-08) PSTDV(15) = 1.0E-08
           IF (PSTDV(15) .GT. 3.0*XM)  PSTDV(15) = 3.0*XM
           WRITE (IPR,981) OLD,PSTDV(15)
981        FORMAT(/10X,'**WARNING** STANDARD DEVIATION OF ROUTING',/,
     +             10X,' RESERVOIR EXPONENT PARAMETER WAS CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
840    CONTINUE
       IF (PSTDV(16).GE.1.0E-08 .AND. PSTDV(16).LE. 3.0*ALPD) GOTO 8401
           OLD = PSTDV(16)
           IF (PSTDV(16) .LT. 1.0E-08)  PSTDV(16) = 1.0E-08
           IF (PSTDV(16) .GT. 3.0*ALPD) PSTDV(16) = 3.0*ALPD
           WRITE (IPR,982) OLD,PSTDV(16)
982        FORMAT(/10X,'**WARNING** STANDARD DEVIATION OF ROUTING',/,
     +             10X,' RESERVOIR COEFFICIENT PARAMETER WAS CHANGED',/,
     +             15X,'FROM ',E10.3,' TO ',E10.3)
           CALL WARN
8401    CONTINUE
       CALL CKSR22 (IFLAGP,PPSTDV,16,PSTDV,LEFTP,P0)
C
C...READ SACRAMENTO INITIAL CONDITIONS
CC      READ(NR11,612) (SCM(I),I=1,6)
       IOSTMT = 530
530    READ (IN,612,ERR=531) (SCM(I),I=1,6)
       GOTO 5311
531    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5311   CONTINUE
C
C...CHECK STATE VARIABLES OF MODIFIED-SACREMENTO MODEL INITIAL
C... CONDITIONS FOR ILLEGITIMATE VALUES
       L=0
       DO 1200 I = 1,6
1200   CI(I) = SCM(I)
C
C...CHECK 1ST (UZTWC) AGAINST 2ND PARAMETER (UZTWM)
       IF (SCM(1).LE.P(NPA0+1) .AND. SCM(1).GE.0.0) GOTO 841
           IF (SCM(1) .LT. 0.0) SCM(1) = 0.0
           IF (SCM(1) .GT. P(NPA0+1) ) SCM(1) = P(NPA0+1)
           L=1
841    CONTINUE
C...CHECK 2ND (UZFWC) AGAINST 3RD PARAMETER (UZFWM)
       IF (SCM(2).LE.P(NPA0+2) .AND. SCM(2).GE.0.0) GOTO 842
           IF (SCM(2) .LT. 0.0) SCM(2) = 0.0
           IF (SCM(2) .GT. P(NPA0+2)) SCM(2) = P(NPA0+2)
           L=1
842    CONTINUE
C...CHECK 3RD (LZTWC) AGAINST 4TH PARAMETER (LZTWM)
       IF (SCM(3).LE.P(NPA0+3) .AND. SCM(3).GE.0.0) GOTO 843
           IF (SCM(3) .LT. 0.0) SCM(3) = 0.0
           IF (SCM(3) .GT. P(NPA0+3) ) SCM(3) = P(NPA0+3)
           L=1
843    CONTINUE
C...CHECK 4TH (LZFPC) AGAINST 5TH PARAMETER (LZFPM)
       IF (SCM(4).LE.P(NPA0+4) .AND. SCM(4).GE.0.0) GOTO 844
           IF (SCM(4) .LT. 0.0) SCM(4) = 0.0
           IF (SCM(4) .GT. P(NPA0+4) ) SCM(4) = P(NPA0+4)
           L=1
844    CONTINUE
C...CHECK 5TH (LZFSC) AGAINST 6TH PARAMETER (LZFSM)
       IF (SCM(5).LE.P(NPA0+5) .AND. SCM(5).GE.0.0) GOTO 845
           IF (SCM(5) .LT. 0.0) SCM(5) = 0.0
           IF (SCM(5) .GT. P(NPA0+5) ) SCM(5) = P(NPA0+5)
           L=1
845    CONTINUE
C...CHECK 6TH (ADIMC) AGAINST 4TH PARAMETER (LZTWM)
       IF (SCM(6).LE.P(NPA0+3) .AND. SCM(6).GE.0.0) GOTO 846
           IF (SCM(6) .LT. 0.0) SCM(6) = 0.0
C               SCM(6) = P(NPA0+1)+P(NPA0+3)
           IF (SCM(6) .GT. P(NPA0+3) ) SCM(6) = P(NPA0+3)
           L=1
846    CONTINUE
C
       IF (L .EQ. 0) GOTO 847
           WRITE (IPR,905)
905        FORMAT(/10X,'**WARNING** INITIAL STATE VARIABLES'
     +      ' CONTAIN IMPOSSIBLE VALUES,',/,10X,
     +      ' AND WERE CHANGED.',/,
     +      T20,'UZTWC',T30,'UZFWC',T40,'LZTWC',T50,'LZFPC',
     +      T60,'LZFSC',T70,'ADIMC')
           WRITE (IPR,9051) (CI(I),I=1,6)
9051       FORMAT(10X,'INITIAL:',3(T20,6E10.3,/))
           WRITE (IPR,9052) (SCM(I),I=1,6)
9052       FORMAT(10X,'CHANGED:',3(T20,6E10.3,/))
           CALL WARN
847    CONTINUE
C
C...TRANSFER THE STATE VARIABLES TO CARRYOVER ARRAY
       CALL CKSR22 (IFLAGP,PSCM,6,SCM,LEFTP,P0)
       I6=6+NR
C
C
C...READ SQUART ROOT  OF INITIAL STATE COVARIANCE MATRIX
       IOSTMT = 532
532    READ(IN,612,ERR=533) (SCMCV(I),I=1,I6)
       GOTO 5330
533    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5330   CONTINUE
C
       L = 0
       DO 5331 I = 1,I6
5331   CI(I) = SCMCV(I)
       DO 5332 I = 1,6
           IF (SCM(I).EQ.0.0) GOTO 848
               IF (SCMCV(I) .LE. (3.0*SCM(I)) ) GOTO 8481
                   SCMCV(I) = 3.0*SCM(I)
                   L=1
8481           CONTINUE
848        CONTINUE
5332   CONTINUE
       DO 5333 I = 1,I6
           IF (SCMCV(I) .GE. 1.0E-08) GOTO 849
               SCMCV(I) = 1.0E-08
               L = 1
849        CONTINUE
5333   CONTINUE
       IF (L .EQ. 0) GOTO 850
           WRITE (IPR,99)
99         FORMAT(/10X,'**WARNING** DIAGONAL ELEMENTS OF '
     +                 'INITIAL STATE COVARIANCE',/,
     +             10X,' MATRIX CONTAIN IMPOSSIBLE VALUES '
     +                 'AND WERE CHANGED:')
           WRITE (IPR,9051) (CI(I),I=1,I6)
           WRITE (IPR,9052) (SCMCV(I),I=1,I6)
           CALL WARN
850    CONTINUE
C
       DO 43 ISL=1,I6
           SCMCV(ISL)=SCMCV(ISL)*SCMCV(ISL)
           CALL CKSR22 (IFLAGP,PSCMCV+ISL-1,1,SCMCV(ISL),LEFTP,P0)
43     CONTINUE
C
C
C..NUMBER OF STATES OF SACREMENTO MODEL
       NORGR=6
       CALL CKSI22 (IFLAGP,PNORG,1,NORGR,LEFTP,P0)
       NC=NR+NORGR
       NDM=NC+NC*(NC+1)/2
C
C...INPUT CARRY-OVER INFORMATION
C    Y : STATE MEANS AND TRIANGULAR PORTION OF COVARIANCE STATE-MATRIX
C        ONLY THE UPPER TRIANGULAR PORTION OF THE COVARIANCE MATRIX IS S
C        BY ROWS
C
C...GET DISCHARGE CARRYOVER VALUE
       IOSTMT = 534
534    READ (IN,*,ERR=535) XDIS1
       GOTO 5351
535    CALL IOER22 (SNAME,IOS,IOSTMT,IOERR)
5351   CONTINUE
       IF (XDIS1 .GE. 0.0) GOTO 851
           WRITE (IPR,9911)
9911       FORMAT(/10X,'**ERROR** INITIAL DISCHARGE PARAMETER'
     +      ' CANNOT BE NEGATIVE.',/)
           CALL ERROR
851    CONTINUE
       CALL CKSR22 (IFLAGC,PY+NDM,1,XDIS1,LEFTC,C0)
       CALL CKSR22 (IFLAGP,PXDIS1,1,XDIS1,LEFTP,P0)
C
       DO 41 ISL=1,6
           Y(ISL)=SCM(ISL)
41     CONTINUE
       CALL CKSR22 (IFLAGC,PY,6,SCM,LEFTC,C0)
C
       NC1=NC+1
C
       KKK=0
       DO 1014 I=NC1,NDM
           Y(I)=0.
           CALL CKSR22 (IFLAGC,PY+I-1,1,Y(I),LEFTC,C0)
           KK=0
           DO 1013 J=1,NC
               KK=KK+NC-J+2
               IF(I.EQ.KK) KKK=KKK+1
               IF(I.NE.KK) GOTO 852
                   Y(I)=SCMCV(KKK)
                   CALL CKSR22 (IFLAGC,PY+I-1,1,Y(I),LEFTC,C0)
852            CONTINUE
1013       CONTINUE
1014   CONTINUE
C
       ZQM0=XDIS1
       IF (ZQM0 .LE. 1.E-2) GO TO 4444
       DO 4441 ISG=1,NR
           ISG1=ISG+NORGR
           Y(ISG1)=(ZQM0/ALP(ISG))**(1./XM)
           CALL CKSR22 (IFLAGC,PY+ISG1-1,1,Y(ISG1),LEFTC,C0)
4441   CONTINUE
       GO TO 4446
C
4444   DO 4445 ISG=1,NR
           ISG1=ISG+NORGR
           Y(ISG1)=0.
           CALL CKSR22 (IFLAGC,PY+ISG1-1,1,Y(ISG1),LEFTC,C0)
4445   CONTINUE
C
4446   CONTINUE
C
       TOTALP = PP + NCC1 - 1
       TOTALC = NDM+1
C
C------------------ CHECKS ---------------------------------------------
C
C...CHECK THAT THERE IS ENOUGH SPACE IN THE LARGE INTERNAL P (PARAMETER)
C... ARRAY FOR OPERATIONS WHICH USE THESE PARAMETERS
       IUSEP = TOTALP
       IF (IFLAGP .NE. 1) GOTO 855
           WRITE (IPR,900) (SNAME(I),I=1,2),TOTALP,LEFTP
900        FORMAT (1H0,10X,'**ERROR** ',2A4,' NEEDS',I4,
     +      ' WORDS IN P ARRAY,',/,10X,' BUT ONLY',I4,' ARE AVAILABLE.')
           CALL ERROR
           IUSEP = 0
855    CONTINUE
C
C...CHECK THAT THERE IS ENOUGH SPACE IN THE LARGE INTERNAL C (CARRYOVER)
C... ARRAY FOR OPERATIONS WHICH USE THIS CARRYOVER
       IUSEC = TOTALC
       IF (IFLAGC .NE. 1) GOTO 856
           WRITE (IPR,901) (SNAME(I),I=1,2),TOTALC,LEFTC
901        FORMAT (1H0,10X,'**ERROR** ',4A2,' NEEDS',I4,
     +      ' WORDS IN C ARRAY,',/,10X,' BUT ONLY',I4,' ARE AVAILABLE.')
           CALL ERROR
           IUSEC = 0
856    CONTINUE
C
C...CHECK THAT THE PRECIPITATION DATA-TYPE IS PROPERLY DEFINED
       CALL FDCODE (DTCP,PUNITS,DIMTSP,MISSOK,NDINT,PTSCAL,
     +  NADDIT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 857
           WRITE (IPR,9021) DTCP
9021       FORMAT (1H0,10X,'**ERROR** ',A4,' PRECIPITATION '
     +      'DATA-TYPE IS INVALID.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
857    CONTINUE
C
C...CHECK THAT THE PRECIPITATION TIME-SERIES IS PROPERLY DEFINED
C... INDICATES THAT THE DIMENSION OF THE TS SHOULD BE CHECKED,
C...  WITH THE 5TH ARGUMENT RETURNING THE DIMENSION
       ICKDIM = 0
C...0 = DO NOT ALLOW MISSING VALUES, 1 = ALLOW
       MISSOK = 0
C...SHOULD ONLY HAVE 1 DATA VALUE/TIME INTERVAL
       NDINT  = 1
       CALL CHEKTS (TSP,DTCP,NHST,ICKDIM,DIMTSP,MISSOK,NDINT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 858
           WRITE (IPR,902) (TSP(I),I=1,2)
902        FORMAT (1H0,10X,'**ERROR** ',2A4,' PRECIPITATION '
     +      'TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
858    CONTINUE
C
C...CHECK THAT THE DISCHARGE DATA-TYPE IS PROPERLY DEFINED
       CALL FDCODE (DTCD,DUNITS,DIMTSD,MISSOK,NDINT,DTSCAL,
     +  NADDIT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 859
           WRITE (IPR,9031) DTCD
9031       FORMAT (1H0,10X,'**ERROR** ',A4,' DISCHARGE '
     +      'DATA-TYPE IS INVALID.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
859   CONTINUE
C
C...CHECK THAT THE DISCHARGE TIME-SERIES IS PROPERLY DEFINED
       ICKDIM = 0
       MISSOK = 1
       NDINT  = 1
       CALL CHEKTS (TSD,DTCD,NHST,ICKDIM,DIMTSD,MISSOK,NDINT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 860
           WRITE (IPR,903) (TSD(I),I=1,2)
903        FORMAT (1H0,10X,'**ERROR** ',2A4,' DISCHARGE '
     +      'TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
860    CONTINUE
C
C...CHECK THAT THE SIMULATED DISCHARGE DATA-TYPE IS PROPERLY DEFINED
       CALL FDCODE (DTCS,SUNITS,DIMTSS,MISSOK,NDINT,STSCAL,
     +  NADDIT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 861
           WRITE (IPR,9032) DTCS
9032       FORMAT(/10X,'**ERROR** ',A4,' SIMULATED DISCHARGE'
     +      ' DATA-TYPE IS INVALID.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
861    CONTINUE
C
C...CHECK THAT THE SIMULATED DISCHARGE TIME-SERIES IS PROPERLY DEFINED
       ICKDIM = 0
C...DO NOT ALLOW MISSING DATA VALUES
       MISSOK = 0
       NDINT = 1
       CALL CHEKTS (TSS,DTCS,NHST,ICKDIM,DIMTSS,MISSOK,NDINT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 862
           WRITE (IPR,9033) (TSS(I),I=1,2)
9033       FORMAT(/10X,'**ERROR** ',2A4,' SIMULATED DISCHARGE'
     +      ' TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
862    CONTINUE
C
C...CHECK THAT THE SIM DISCHARGE STDEV DATA-TYPE IS PROPERLY DEFINED
       CALL FDCODE (DTCSD,SDUNIT,DMTSSD,MISSOK,NDINT,SDTSCL,
     +  NADDIT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 8610
           WRITE (IPR,9030) DTCSD
9030       FORMAT(/10X,'**ERROR** ',A4,' SIMULATED DISCHARGE STDEV'
     +      ' DATA-TYPE IS INVALID.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
8610   CONTINUE
C
C...CHECK THAT THE SIMULATED DISCHARGE STDEV TS IS PROPERLY DEFINED
       ICKDIM = 0
C...DO NOT ALLOW MISSING DATA VALUES
       MISSOK = 0
       NDINT = 1
       CALL CHEKTS (TSSD,DTCSD,NHST,ICKDIM,DMTSSD,MISSOK,NDINT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 8624
           WRITE (IPR,9034) (TSSD(I),I=1,2)
9034       FORMAT(/10X,'**ERROR** ',2A4,' SIMULATED DISCHARGE STDEV'
     +      ' TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
8624    CONTINUE
C
C...CHECK THAT THE COVARIANCE FACTORS DATA-TYPE IS PROPERLY DEFINED
       CALL FDCODE (DFAC,FUNIT,DIMFAC,MISSOK,NDINT,FTSCAL,
     +  NADDIT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 8618
           WRITE (IPR,9038) DFAC
9038       FORMAT(/10X,'**ERROR** ',A4,' MAP VARIANCE MODIFIERS'
     +      ' DATA-TYPE IS INVALID.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
8618   CONTINUE
C
C...CHECK THAT THE COVARIANCE FACTORS TIME SERIES IS PROPERLY DEFINED
       ICKDIM = 0
C...DO NOT ALLOW MISSING DATA VALUES
       MISSOK = 0
       NDINT = 1
       CALL CHEKTS (TSFA,DFAC,NHST,ICKDIM,DIMFAC,MISSOK,NDINT,ISTAT)
       IF (ISTAT .EQ. 0) GOTO 8629
           WRITE (IPR,9039) (TSFA(I),I=1,2)
9039       FORMAT(/10X,'**ERROR** ',2A4,' MAP VARIANCE MODIFIERS'
     +      ' TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
           CALL ERROR
           IUSEP = 0
           IUSEC = 0
8629   CONTINUE
C
C...IF USING IT, CHECK THAT THE EVAPORATION DATA-TYPE IS PROPERLY DEFINE
       IF (ETSW .NE. 1) GOTO 863
           CALL FDCODE (DTCE,EUNITS,DIMTSE,MISSOK,NDINT,ETSCAL,
     +      NADDIT,ISTAT)
           IF (ISTAT .EQ. 0) GOTO 864
               WRITE (IPR,9041) DTCE
9041           FORMAT (1H0,10X,'**ERROR** ',A4,' EVAPORATION '
     +          'DATA-TYPE IS INVALID.')
               CALL ERROR
               IUSEP = 0
               IUSEC = 0
864        CONTINUE
C
C
C...CHECK THAT THE EVAPORATION TEMPERATURE TIME-SERIES IS PROPERLY DEFIN
           ICKDIM = 0
           MISSOK = 0
           NDINT  = 1
           CALL CHEKTS (TSE,DTCE,NHRSE,ICKDIM,DIMTSE,MISSOK,NDINT,ISTAT)
           IF (ISTAT .EQ. 0) GOTO 865
               WRITE (IPR,904) (TSE(I),I=1,2)
904            FORMAT (1H0,10X,'**ERROR** ',2A4,' EVAPORATION '
     +          'TIME-SERIES HAS NOT BEEN PROPERLY DEFINED.')
               CALL ERROR
               IUSEP = 0
               IUSEC = 0
865        CONTINUE
C
863    CONTINUE
C
C
980    IF (ITRACE .GT. 0) WRITE (IODBUG,991)
991    FORMAT(/10X,'** EXIT PIN22.')
C
       RETURN
C
C-----------------------------------------------------------------------
C
611    FORMAT(10I5)
612    FORMAT(7E10.3)
621    FORMAT(1X,15A4)
623    FORMAT(20X,'THIS RUN PRODUCES THE INITIAL FORECAST IN A',
     *   ' FLOOD-FORECAST SEQUENCE')
628    FORMAT(/20X,'TIME INTERVAL OF OBSERVED DATA :',I3,' HRS')
636    FORMAT(/20X,'PARAMETER ARRAY VALUES :'/(20X,6E10.3))
638    FORMAT(/20X,'BASIN AREA : ',F8.2,'SQ-KM')
639    FORMAT(////30X,'U S E R   I N P U T'///)
C
C
       END
