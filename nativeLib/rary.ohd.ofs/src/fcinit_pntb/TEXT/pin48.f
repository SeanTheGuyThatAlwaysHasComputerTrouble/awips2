C MEMBER PIN48
C-----------------------------------------------------------------------
C
C MULT/DIV OPERATION INPUT SUBROUTINE
C
C OHIO RIVER FORECAST CENTER/DAN MULLEN 6/7/94 VER 1
C
C THIS PROGRAM READS THE TWO TIME SERIES NAMES TO BE USED IN THE
C OPERATION AND CONDUCTS ERROR CHECKING.
C
        SUBROUTINE PIN48 (PO, ILEFTP, IUSEP)
C
C DECLARE VARIABLES AND COMMON BLOCKS
C
        INTEGER DIVMUL
        COMMON /FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
        COMMON /IONUM/IN,IPR,IPU
        DIMENSION PO(12),TSIN1(2),TSIN2(2),SNAME(2),TSOUT(2)
        REAL   TREAL
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_pntb/RCS/pin48.f,v $
     . $',                                                             '
     .$Id: pin48.f,v 1.3 1996/07/16 20:58:39 dws Exp $
     . $' /
C    ===================================================================
C
        DATA TREAL   /4hREAL/
        DATA SNAME(1)/4hPIN4/
        DATA SNAME(2)/4h8   /
C
C DESIGNATE TRACE LEVELS
C
        CALL FPRBUG(SNAME,1,48,IBUG)
        IF(IBUG.EQ.1) WRITE(IODBUG,1001)
1001    FORMAT(/,10X,'DEBUG INPUT SUBROUTINE FOR MULT/DIV OPERATION')
        IF(IBUG.EQ.1) WRITE(IODBUG,1002)
1002    FORMAT(/,18X,'10',8X,'20',8X,'30')
        IF(IBUG.EQ.1) WRITE(IODBUG,1003)
1003    FORMAT(10X,'----+----+----+----+----+----+')
C
C INITIALIZE VARIABLES
C
        IUSEP=0
        IVER=1
C
C READ INPUT CARDS
C
        READ(IN,1004) TSIN1,TSIN1D,INTTS1,TSIN2,TSIN2D,INTTS2
1004    FORMAT(2X,2A4,1X,A4,3X,I2,2X,2A4,1X,A4,3X,I2)
        READ(IN,1011) TSOUT,TSOUTD,DIVMUL
1011    FORMAT(2X,2A4,1X,A4,2X,I2)
C      IF(IBUG.EQ.1) WRITE(IODBUG,1005)TSIN1,TSIN1D,INTTS1,TSIN2,TSIN2D,
C     & INTTS2,TSOUT,TSOUTD,DIVMUL
C1005   FORMAT(/,1X,2X,2A4,1X,A4,3X,I2,2X,2A4,1X,A4,3X,I2,2X,2A4,1X,A4,
C     & 2X,I2)
C
C CHECK TIME SERIES
C
       IERROR=0
       INTTSO=INTTS1
       CALL FDCODE(TSIN1D,TS1UNT,DIM1,IMSGTS1,INVAL1,TSCAL1,INAD1,IERR1)
       CALL FDCODE(TSIN2D,TS2UNT,DIM2,IMSGTS2,INVAL2,TSCAL2,INAD2,IERR2)
       CALL FDCODE(TSOUTD,TSOUNT,DIMO,IMSGTSO,INVALO,TSCALO,INADO,IERRO)
       CALL CHEKTS(TSIN1,TSIN1D,INTTS1,0,DIMQ1,0,1,IERROR1)
       CALL CHEKTS(TSIN2,TSIN2D,INTTS2,0,DIMQ2,0,1,IERROR2)
       CALL CHEKTS(TSOUT,TSOUTD,INTTSO,0,DIMQO,0,1,IERRORO)
       IF(IERR1.EQ.1) IERROR=1
       IF(IERR2.EQ.1) IERROR=1
       IF(IERRO.EQ.1) IERROR=1
       IF(IERROR1.EQ.1) IERROR=1
       IF(IERROR2.EQ.1) IERROR=1
       IF(IERRORO.EQ.1) IERROR=1
C
C CHECK FOR ERRORS
C
        IF(IERROR.EQ.0)GO TO 11
        WRITE(IPR,1006)
1006    FORMAT(1H0,10X,'MULT/DIV OPERATION WILL BE IGNORED',
     &  ' BECAUSE OF PRECEEDING ERRORS.')
        RETURN
C
C CHECK THAT BOTH TS HAVE THE SAME UNITS
C
11      IF(DIVMUL.EQ.1) GO TO 15
        IF(TS1UNT.EQ.TS2UNT) GO TO 16
        WRITE(IPR,1008) TSIN1,TSIN1D,TS1UNT,TSIN2,TSIN2D,TS2UNT
1008    FORMAT(1H0,5X,'** ERROR ** TIME SERIES DO NOT HAVE ',
     &  'THE SAME UNITS.',/,1X,'ID=',2A4,1X,'DATA TYPE=',A4,1X,
     &  'UNITS=',A4,/,1X,'ID=',2A4,1X,'DATA TYPE=',A4,1X,'UNITS=',
     &  A4)
        CALL ERROR
16      IF(TSOUNT.EQ.TREAL) GO TO 12
        WRITE(IPR,1012) TSOUT,TSOUTD,TSOUNT
1012    FORMAT(1H0,2X,'** ERROR ** OUTPUT TIME SERIES MUST ',
     &  'HAVE "REAL" UNITS FOR DIVIDE OPTION.',/,1X,'ID=',2A4,1X,
     &  'DATA TYPE=',A4,1X,'UNITS=',A4)
        CALL ERROR
        RETURN
 15     IF(TS1UNT.EQ.TSOUNT) GO TO 17
        WRITE(IPR,1013) TSIN1,TSIN1D,TS1UNT,TSOUT,TSOUTD,TSOUNT
1013    FORMAT(1H0,2X,'** ERROR ** TIME SERIES DO NOT HAVE ',
     &  'THE SAME UNITS.',/,1X,'ID=',2A4,1X,'DATA TYPE=',A4,1X,
     &  'UNITS=',A4,/,1X,'ID=',2A4,1X,'DATA TYPE=',A4,1X,'UNITS=',
     &  A4)
        CALL ERROR
17      IF(TS2UNT.EQ.TREAL) GO TO 12
        WRITE(IPR,1014) TSIN2,TSIN2D,TS2UNT
1014    FORMAT(1H0,2X,'** ERROR ** SECOND INPUT TIME SERIES MUST ',
     &  'HAVE "REAL" UNITS FOR MULTIPLY OPTION.',/,1X,'ID=',2A4,1X,
     &  'DATA TYPE=',A4,1X,'UNITS=',A4)
        CALL ERROR
        RETURN
C
C CHECK FOR SPACE IN P ARRAY
C
12      IERROR=0
        IUSEP=12
        CALL CHECKP(IUSEP,ILEFTP,IERROR)
        IF(IERROR.EQ.0)GO TO 13
        IUSEP=0
        RETURN
C
C LOAD INFORMATION INTO PO
C
13      PO(1)=IVER+0.01
        PO(2)=TSIN1(1)
        PO(3)=TSIN1(2)
        PO(4)=TSIN1D
        PO(5)=INTTS1+0.01
        PO(6)=TSIN2(1)
        PO(7)=TSIN2(2)
        PO(8)=TSIN2D
        PO(9)=TSOUT(1)
        PO(10)=TSOUT(2)
        PO(11)=TSOUTD
        PO(12)=DIVMUL+0.01
C
C DEBUG OUTPUT
C
        IF(IBUG.EQ.0) GO TO 14
        WRITE(IODBUG,1009)
1009    FORMAT(/1X,'MULT/DIV DEBUG--CONTENTS OF PO ARRAY.')
        WRITE(IODBUG,1010) (PO(N),N=1,IUSEP)
1010    FORMAT(1X,'PO=',F5.2,2X,2A4,1X,A4,F5.2,2X,2A4,1X,A4,2X,
     &  2A4,1X,A4,1X,F5.2)
C
C CONTENTS OF PO ARRAY - MULT/DIV OPERATION
C
C POSIT    CONTENTS
C   1      VERSION NUMBER OF OPERATION
C  2-3     INPUT TIME SERIES 1
C   4      DATA TYPE OF INPUT TIME SERIES 1
C   5      TIME INTERVAL OF INPUT TIME SERIES 1
C  6-7     INPUT TIME SERIES 2
C   8      DATA TYPE FOR INPUT TIME SERIES 2
C 9-10     OUTPUT TIME SERIES
C  11      DATA TYPE OF OUTPUT TIME SERIES
C  12      DIVISION/MULTIPLICATION FLAG
C
14      CONTINUE
        RETURN
        END
