C MEMBER TAB21
C  (from old member FCTAB21)
C
C DESC -- THIS SUBROUTINE COMPUTES THE OPERATIONS TABLE ENTRIES FOR
C DESC    THE DYNAMIC ROUTING OPERATION - 'DWOPER' - OPERATION NUMBER 21
C                             LAST UPDATE: 02/14/94.14:38:20 BY $WC30JL
C
C @PROCESS LVL(77)
      SUBROUTINE TAB21(T,LEFT,IUSET,NXT,LP,P,LC,TS,MTS,NWORK,NDD,LWORK,
     1                 IDT)
C.......................................................................
C     SUBROUTINE ORIGINALLY WRITTEN BY
C             GEORGE F SMITH - HRL   MARCH 1982.
C     MODIFIED BY GEORGE F SMITH - HRL   DECEMBER 1984
C             BECAUSE OF CHANGES IN THE DWOPER OPERATION
C     MODIFIED BY GEORGE F. SMITH - HRL  MARCH 1986
C             TO ADD WORK SPACE FOR XDIV ARRAY
C     MODIFIED BY GEORGE F. SMITH - HRL  JULY 1986
C             TO INCLUDE SPACE NEEDED TO HOLD PARAMETERS DURING
C             EXECUTION (VARIABLE IDUMPO) IN THE TOTAL D ARRAY SPACE
C             (VARIABLE LWORK) NEEDED BY DWOPER
C     MODIFIED BY GEORGE F. SMITH - HRL  MARCH 1988
C             TO CHANGE SPACE ALLOWED FOR ARRAYS FS, STC, QTC, TII,
C             DTH, YA, QA
C     MODIFIED BY JANICE M. LEWIS - HRL  FEBRUARY 1992
C             TO ADD NUMBER OF RATING CURVES IN THE T ARRAY
C     MODIFIED BY JANICE M. LEWIS - HRL  NOVEMBER 1997
C             TO ADD BLEND TIDE * ADJUST T.S. OPTIONS
C.......................................................................
C
      DIMENSION T(*),TS(MTS),P(*)
      INTEGER T
C
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
C
      DIMENSION DUMMY(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_pntb/RCS/tab21.f,v $
     . $',                                                             '
     .$Id: tab21.f,v 1.5 1999/07/07 13:05:43 page Exp $
     . $' /
C    ===================================================================
C
C
      DATA DUMMY/4HDUMM,4HY   /
C
C     TRACE LEVEL=1 - DEBUG SWITCH IBUG
C
      CALL FPRBUG(8HTAB21   ,1,21,IBUG)
C.......................................................................
C
C     JN IS TOTAL NUMBER OF RIVERS
      JN=P(25)
C
C     COMPUTE NUMBER OF OBSERVED (NUO) AND COMPUTED (NUC) VALUES
C     NEEDED FOR DUMMY SPACE PASSED TO EX21.
C
      DHF=P(22)
      NDHF=DHF
      NUO=NDD*24/NDHF
C
      DHFO=P(103)
      NDHFO=DHFO
      NUC=NDD*24/NDHFO
C
      TM=P(40)
      KITPR=P(101)
      DHFC=TM*KITPR
      NUT=NDD*24/DHFC + 0.5
      IF(IBUG.EQ.1) WRITE(IODBUG,5) NDD,KITPR,TM,DHFC,NUT
    5 FORMAT(2X,' NDD KITPR   TM DHFC   NUT='/2X,I3,I6,2F5.1,I6)
C
C     EXTRACT TOTAL NUMBER OF VARIOUS TYPES OF TIME SERIES.
C
C     NUMLAD IS TOTAL NUMBER OF ITWTS AND POOLTS TIME SERIES
      NUMLAD=P(116)
C
C     LOC IS THE STARTING LOCATION IN THE P ARRAY OF THE NUMBER OF
C       STT, STC AND QTC TIME SERIES ON EACH RIVER.
C     NRT1 IS TOTAL NUMBER OF STT, STC AND QTC TIME SERIES
  335 NRT1=0
      LOC=P(62)
      IF(LOC.EQ.0)GO TO 345
      DO 340 J=1,JN
      CALL CONV21(P(LOC-1+J),JADD,1)
  340 NRT1=NRT1+JADD
C
C     LOC IS THE STARTING LOCATION IN THE P ARRAY OF THE NUMBER OF
C       QL TIME SERIES ON EACH RIVER.
C     NQL IS TOTAL NUMBER OF QL TIME SERIES
  345 NQL=0
      LOC=P(60)
      IF(LOC.EQ.0)GO TO 355
      DO 350 J=1,JN
      CALL CONV21(P(LOC-1+J),JADD,1)
  350 NQL=NQL+JADD
C
C     LOC IS THE STARTING LOCATION IN THE P ARRAY OF THE NUMBER OF
C       QSTR TIME SERIES ON EACH RIVER.
C     NQSTR IS THE TOTAL NUMBER OF QSTR TIME SERIES
  355 NQSTR=0
      LOC=P(104)
      IF(LOC.EQ.0)GO TO 365
      DO 360 J=1,JN
      CALL CONV21(P(LOC-1+J),JADD,1)
  360 NQSTR=NQSTR+JADD
C
C     LOC IS THE STARTING LOCATION IN THE P ARRAY OF THE NUMBER OF
C       QLSTR AND DIV TIME SERIES ON EACH RIVER.
C     NDIV IS THE TOTAL NUMBER OF FLOW DIVERSIONS
  365 NDIV=0
      LOC=P(109)
      IF(LOC.EQ.0)GO TO 375
      DO 370 J=1,JN
      CALL CONV21(P(LOC-1+J),JADD,1)
  370 NDIV=NDIV+JADD
C
C     NTDUM IS TOTAL NUMBER OF STT AND QL TIME SERIES WHICH ARE
C     DUMMY (I.E., THEY DO NOT COME FROM 'FILLED' PART OF D ARRAY,
C     BUT REQUIRE WORK SPACE).
  375 NTDUM=P(119)
C.......................................................................
C
C     ONE TIME SERIES EACH OF WORK SPACE NEEDED FOR
C         DTH(NUT)
C         FFS(NUO+1)
C         FS(NUT+1)
C         QA(NUT)
C         TII(NUT)
C         T1(NUO)
C         YA(NUT)
C         TO(NUO)
c  added irf for adjust t.s. option
C         IRF(NUT)
C
C     ONE TIME SERIES PER RIVER OF WORK SPACE NEEDED FOR
C     (ACTUALLY NEED SPACE FOR JN-1 TIME SERIES
C         QLJ(NUO,JN) - ARRAY LOQLJ IS START OF QLJ ARRAYS
C
C     WORK SPACE NEEDED FOR
C         QLT(NUO,NQL)
C         QTC(NUT,NRT1)
C         STC(NUT,NRT1)
C         QLSTR(NUC,NDIV)
C         POOLT(NUC,NUMLAD)
C         ITWT(NUC,NUMLAD)
C         XDIV(NUO,NDIV)
C
C     'FILLED' PORTIONS OF THE D ARRAY PROVIDED FOR
C         STN(NUO)
C         ST1(NUO,JN)
C         ITWTS(NUO,NUMLAD)
C         POOLTS(NUO,NUMLAD)
C         QL(NUO,NQL)
C         STT(NUO,NRT1)
C         QSTR(NUO,NQSTR)
C         DIV(NUO,NDIV)
C         XNOS(NUT)
C         TIDE(NUT)
C         STE(NUO,NRT1)
C
C     **NOTE** OF THE TOTAL OF THE STT AND QL ARRAYS (NQL+NRT1)
C         NTDUM ARRAYS ARE DUMMY AND THE REMAINDER ARE FROM THE 'FILLED'
C         PORTION OF THE D ARRAY -- THE TIME SERIES ID FOR THESE NTDUM
C         TIME SERIES IS 'DUMMY   '.
C.......................................................................
C
C     THE LOCATION OF THE BEGINNING OF ARRAY NB IS IN LOCATION P(56)
C
      LONB=P(56)
C.......................................................................
C
C     COMPUTE TOTAL SPACE NEEDED IN T ARRAY
C
C         NEED FIVE LOCATIONS PLUS
C         ONE FOR START OF NB ARRAY PLUS
C         ONE FOR EACH TIME SERIES USED
C
C         NOW ADD FIVE LOCATIONS (NOTE ... NO SPACES LEFT FOR FUTURE)
C
      NEEDT = 5
C
C         NOW ADD LOCATIONS FOR ARRAYS USING WORK SPACE
C         (EXCEPT THE NTDUM ARRAYS INCLUDED IN QL AND STT)
C
C  added array for adjust t.s. option
      NEEDT = NEEDT + 2*NUMLAD + 9 + JN + NQL + 2*NRT1 + 2*NDIV 
C
      IF(NUMLAD.EQ.0) NEEDT = NEEDT + 2
      IF(NQL.EQ.0)    NEEDT = NEEDT + 1
      IF(NRT1.EQ.0)   NEEDT = NEEDT + 2
      IF(NDIV.EQ.0)   NEEDT = NEEDT + 2
C
C         NOW ADD LOCATIONS FOR 'FILLED' ARRAYS
C         (INCLUDE WORK SPACE ARRAYS IN QL AND STT)
C
C ADDED TWO T.S. FOR TIDE
      NEEDT = NEEDT + 1 + JN + 2*NUMLAD + NQL + NQSTR + NDIV + 2
C
      KPL2=P(100)
      IF(KPL2.NE.0 )NEEDT = NEEDT + NRT1
      IF(KPL2.GT.1 )NEEDT = NEEDT + NRT1
C
      IF(NUMLAD.EQ.0) NEEDT = NEEDT + 2
      IF(NQL.EQ.0)    NEEDT = NEEDT + 1
      IF(NRT1.EQ.0.OR.KPL2.EQ.0)   NEEDT = NEEDT + 1
      IF(KPL2.LE.1)   NEEDT = NEEDT + 1
      IF(NQSTR.EQ.0)  NEEDT = NEEDT + 1
      IF(NDIV.EQ.0)   NEEDT = NEEDT + 1
C
C         NOW ADD ONE SPACE FOR LOCATION OF NB ARRAY IN P ARRAY
C
      NEEDT = NEEDT + 1
C
C         NOW ADD ONE SPACE FOR LOCATION OF RATING CURVE IDS IN P ARRAY
C
      NEEDT = NEEDT + 1
C
C         NOW ADD NINETEEN SPACES FOR POINTERS IN T ARRAY TO OTHER
C         LOCATIONS IN THE T ARRAY WHICH ARE THE START OF THE
C         SETS OF LOCATIONS IN THE D ARRAY FOR THE FOLLOWING
C         TIME SERIES
C             QLJ
C             QLT
C             QTC
C             STC
C             QLSTR
C             POOLT
C             ITWT
C             XDIV
C             STN
C             ST1
C             ITWTS
C             POOLTS
C             QL
C             STT
C             QSTR
C             DIV
C             XNOS
C             TIDE
C             STE
C             IRF  <== this one doesn't count
C
      NEEDT=NEEDT+19
C
C         NOW ADD ONE SPACE TO STORE FIRST LOCATION IN D ARRAY
C         OF WORKING SPACE AFTER ALL DWOPER TIME SERIES HAVE
C         BEEN ALLOCATED
C
      NEEDT=NEEDT+1
C
      IF(IBUG.EQ.1)WRITE(IODBUG,988)JN,DHF,NDHF,NUO,DHFO,NDHFO,NUC,NUT,
     1 NUMLAD,NRT1,NQL,NQSTR,NDIV,NTDUM,LONB,NEEDT,LEFT,NXT
  988 FORMAT(11X,'*** IN SUBROUTINE TAB21 ***  JN, DHF, NDHF, ',
     1 'NUO, DHFO, NDHFO, NUC, NUT ='/39X,I3,F5.1,I6,I5,F6.1,I7,2I5/
     2 11X,'NUMLAD, NRT1, NQL, NQSTR, NDIV, NTDUM, LONB, NEEDT, ',
     3 'LEFT, NXT ='/11X,I6,I6,I5,I7,I6,I7,I6,I7,I6,I5)
C
C     CHECK TO SEE IF ENOUGH SPACE IS AVAILABLE IN T ARRAY
C
      CALL CHECKT(NEEDT,LEFT,IERR)
      IF(IERR.EQ.0) GO TO 10
C
C     NOT ENOUGH SPACE IN T ARRAY - SET IUSET TO ZERO AND RETURN
C
      IUSET=0
      LWORK=0
      GO TO 220
C
   10 CONTINUE
C......................................................................
C     ENOUGH SPACE - BEGIN TO FILL T ARRAY
C
C**********************************************************************
C**********************************************************************
C
C     **** CONTENTS OF T ARRAY FOR DWOPER OPERATION ****
C
C     POSITION    CONTENTS
C     --------    --------
C
C         1       OPERATION NUMBER (21)
C         2       LOCATION IN T ARRAY OF START OF NEXT OPERATION
C         3       LOCATION IN P ARRAY OF PARAMETERS FOR THIS OPERATION
C         4       LOCATION IN C ARRAY OF CARRYOVER FOR THIS OPERATION
C         5       LOCATION IN P ARRAY OF 1ST RATING CURVE ID (0 IF NONE)
C                 -- NOTE -- THE ABOVE THREE LOCATIONS ARE RELATIVE TO
C                            THE BEGINNING OF THE ENTIRE P AND C ARRAYS
C         6       LOCATION IN P ARRAY OF ARRAY NB FOR THIS OPERATION
C                 -- NOTE -- THIS LOCATION IS RELATIVE TO START OF
C                            THE 'SECOND PORTION OF THE P ARRAY'
C                            FOR THIS OPERATION
C         7       POINTER IN T FOR LOCATION IN D OF XDIV (WORK SPACE)
C         8       POINTER IN T FOR LOCATION IN D OF POOLT (WORK SPACE)
C         9       POINTER IN T FOR LOCATION IN D OF ITWT (WORK SPACE)
C        10       LOCATION IN D ARRAY OF DWOPER ARRAY DTH (WORK SPACE)
C        11       LOCATION IN D ARRAY OF DWOPER ARRAY FFS (WORK SPACE)
C        12       LOCATION IN D ARRAY OF DWOPER ARRAY FS (WORK SPACE)
C        13       LOCATION IN D ARRAY OF DWOPER ARRAY QA (WORK SPACE)
C        14       LOCATION IN D ARRAY OF DWOPER ARRAY TII (WORK SPACE)
C        15       LOCATION IN D ARRAY OF DWOPER ARRAY T1 (WORK SPACE)
C        16       LOCATION IN D ARRAY OF DWOPER ARRAY YA (WORK SPACE)
C        17       LOCATION IN D ARRAY OF DWOPER ARRAY TO (WORK SPACE)
C
C        18       POINTER TO LOCATION IN **** ENTIRE T ARRAY **** FOR
C                   LOCATION IN D ARRAY OF DWOPER ARRAY QLJ (WORK SPACE)
C        19       POINTER IN T FOR LOCATION IN D OF QLT (WORK SPACE)
C        20       POINTER IN T FOR LOCATION IN D OF QTC (WORK SPACE)
C        21       POINTER IN T FOR LOCATION IN D OF STC (WORK SPACE)
C        22       POINTER IN T FOR LOCATION IN D OF QLSTR (WORK SPACE)
C        23       POINTER IN T FOR LOCATION IN D OF STN (INPUT TS)
C        24       POINTER IN T FOR LOCATION IN D OF ST1 (INPUT TS)
C        25       POINTER IN T FOR LOCATION IN D OF ITWTS (INPUT TS)
C        26       POINTER IN T FOR LOCATION IN D OF POOLTS (INPUT TS)
C        27       POINTER IN T FOR LOCATION IN D OF QL (SOME INPUT TS,
C                     SOME WORK SPACE)
C        28       POINTER IN T FOR LOCATION IN D OF STT (SOME INPUT TS,
C                     SOME WORK SPACE)
C        29       POINTER IN T FOR LOCATION IN D OF QSTR (OUTPUT TS)
C        30       POINTER IN T FOR LOCATION IN D OF DIV (INPUT TS)
C
C        31       LOCATION OF START OF WORKING SPACE IN D ARRAY AFTER
C                     ALL DWOPER TIME SERIES HAVE BEEN ALLOCATED
C        32       TOTAL NUMBER OF RATING CURVES IN THE OPERATION
C        33       POINTER IN T FOR LOCATION IN D OF XNOS (INPUT TS)
C        34       POINTER IN T FOR LOCATION IN D OF TIDE (OUTPUT TS)
C        35       POINTER IN T FOR LOCATION IN D OF STE (OUTPUT TS)
C        36       POINTER IN T FOR LOCATION IN D OF IRF (WORK SPACE)
C     37-END      LOCATIONS IN D FOR VARIOUS DWOPER ARRAYS
C                 -- NOTE -- THERE MAY BE MORE THAN ONE TIME SERIES
C                     FOR MOST ARRAYS
C
C***********************************************************************
C***********************************************************************
C
      T(1)=21
      T(2)=NXT+NEEDT
      T(3)=LP
      T(4)=LC
      LRC=P(69)
      T(5)=0
      IF(LRC.GT.0)T(5)=LP+LRC-1
      T(32)=P(36)
C
C     NOW STORE LOCATION OF START OF NB ARRAY WHICH IS IN P(56),
C     EX21 EXPECTS TO BE PASSED THIS ARRAY SEPARATELY FROM REST OF
C     P ARRAY TO GIVE IT AN INTEGER NAME.
C
      T(6)=LONB
C
C     FILL SPACE RESERVED FOR FUTURE USE WITH ZEROES
C
C     ***** NONE LEFT !!! *****
C
C         SET START OF WORKING SPACE
C         START FILLING LOCATIONS OF TIME SERIES
C         VARIABLE LOCDUM IS START OF AVAILABLE WORK SPACE IN D ARRAY
C         WILL BE UPDATED AS EACH TIME SERIES IS ENTERED
C
      LOCDUM=NWORK
C
C         COMPUTE NEEDED WORK SPACE AS DETERMINE WHICH ARRAYS ARE USED
C
      NEEDW=0
C
C         ARRAY DTH
      T(10)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
C         ARRAY FFS
      T(11)=LOCDUM
      LOCDUM=LOCDUM+NUO+1
      NEEDW=NEEDW+NUO+1
C         ARRAY FS
      T(12)=LOCDUM
      LOCDUM=LOCDUM+NUT+1
      NEEDW=NEEDW+NUT+1
C         ARRAY QA
      T(13)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
C         ARRAY TII
      T(14)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
C         ARRAY T1
      T(15)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
C         ARRAY YA
      T(16)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
C         ARRAY TO
      T(17)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
C  add irf for adjust t.s. option
C         ARRAY IRF
      T(36)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
C
C     ******** SET FIRST VARIABLE LOCATION IN T ARRAY *********
C
      LOCT=37
C
C     *********************************************************
C
C         ARRAY XDIV - NEED NDIV BY NUO LOCATIONS IN WORK SPACE
C-------- POINTER STORED IN T(7) ---------------------------------------
      T(7)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NDIV.EQ.0)GO TO 420
      LOCT=LOCT-1
      DO 415 I=1,NDIV
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
  415 CONTINUE
C         ARRAY POOLT - NEED NUMLAD BY NUO LOCATIONS IN WORK SPACE
C-------- POINTER STORED IN T(8) ---------------------------------------
  420 T(8)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NUMLAD.EQ.0)GO TO 430
      LOCT=LOCT-1
      DO 425 I=1,NUMLAD
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
  425 CONTINUE
C         ARRAY ITWT - NEED NUMLAD BY NUO LOCATIONS IN WORK SPACE
C-------- POINTER STORED IN T(9) ---------------------------------------
  430 T(9)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NUMLAD.EQ.0)GO TO 440
      LOCT=LOCT-1
      DO 435 I=1,NUMLAD
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
  435 CONTINUE
C         ARRAY QLJ - NEED JN-1 BY NUO LOCATIONS IN WORK SPACE
C         SET FIRST T ARRAY LOCATION (FOR J=1) TO ZERO
C             IT IS NEVER USED
C-------- POINTER STORED IN T(18) --------------------------------------
  440 T(18)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(JN.EQ.1)GO TO 20
      DO 15 J=2,JN
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
   15 CONTINUE
C         ARRAY QLT - NEED NQL BY NUO LOCATIONS IN WORK SPACE
C-------- POINTER STORED IN T(19) --------------------------------------
   20 T(19)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NQL.EQ.0)GO TO 30
      LOCT=LOCT-1
      DO 25 I=1,NQL
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
   25 CONTINUE
C         ARRAYS QTC AND STC  - NEED NRT1 BY NUT LOCATIONS IN WORK SPACE
C-------- POINTERS STORED IN T(20) AND T(21) RESPECTIVELY --------------
   30 T(20)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NRT1.EQ.0)GO TO 33
      LOCT=LOCT-1
      DO 32 I=1,NRT1
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
      LOCT=LOCT+1
   32 CONTINUE

   33 T(21)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NRT1.EQ.0)GO TO 35
      LOCT=LOCT-1
      DO 34 I=1,NRT1
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUT
      NEEDW=NEEDW+NUT
      LOCT=LOCT+1
   34 CONTINUE

C         ARRAY IRF - NEED NUT LOCATIONS IN WORK SPACE
C-------- POINTERS STORED IN T(36) RESPECTIVELY --------------
cc   35 T(36)=NXT+LOCT-1
cc      T(LOCT)=0
cc      LOCT=LOCT+1
cc      IF(KPL2.LE.1)GO TO 31
cc      LOCT=LOCT-1
cc      T(LOCT)=LOCDUM
cc      LOCDUM=LOCDUM+NUT
cc      NEEDW=NEEDW+NUT
cc      LOCT=LOCT+1
C         ARRAY QLSTR - NEED NDIV BY NUO LOCATIONS IN WORK SPACE
C-------- POINTER STORED IN T(22) --------------------------------------
 35   T(22)=NXT+LOCT-1
      T(LOCT)=0
      LOCT=LOCT+1
      IF(NDIV.EQ.0)GO TO 40
      LOCT=LOCT-1
      DO 39 I=1,NDIV
      T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
   39 CONTINUE
C.......................................................................
C
C         NOW OBTAIN LOCATIONS IN 'FILLED' PORTION OF DARRAY FOR REST
C         OF TIME SERIES --
C         ALSO SET ASIDE WORK SPACE FOR ANY 'DUMMY   ' TIME SERIES IN
C         VARIABLES STT AND QL.
C         IF THE LOCATION OF ID FOR ANY TIME SERIES IS ZERO IT IS NOT
C         USED
C
C         ARRAY STN - ID IN P(P(23)), DATA TYPE IN P(42), DT IS NDHF
C-------- POINTER IN T(23) ---------------------------------------------
   40 T(23)=NXT+LOCT-1
      LID=P(23)
      LTY=P(42)
      IF(LID.GT.0)GO TO 45
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 50
   45 CALL CKINPT(P(LID),P(LTY),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
C         ARRAYS ST1 - IDS START IN P(P(79)), DATA TYPE IN P(67),
C                      DT IS NDHF
C-------- POINTER IN T(24) ---------------------------------------------
   50 T(24)=NXT+LOCT-1
      LID=P(79)
      LTY=P(67)
      IF(LID.GT.0)GO TO 55
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 60
   55 IDADD=0
      ITYADD=0
      DO 57 J=1,JN
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
   57 CONTINUE
C         ARRAYS ITWTS - IDS START IN P(P(92)), DATA TYPES IN P(80),
C                      DT IS NDHF
C-------- POINTER IN T(25) ---------------------------------------------
   60 T(25)=NXT+LOCT-1
      LID=P(92)
      LTY=P(80)
      IF(LID.GT.0)GO TO 65
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 70
   65 IDADD=0
      ITYADD=0
      DO 67 I=1,NUMLAD
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
   67 CONTINUE
C         ARRAYS POOLTS -  IDS START IN P(P(94)), DATA TYPES IN P(81),
C           NDHF
C-------- POINTER IN T(26) ---------------------------------------------
   70 T(26)=NXT+LOCT-1
      LID=P(94)
      LTY=P(81)
      IF(LID.GT.0)GO TO 75
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 80
   75 IDADD=0
      ITYADD=0
      DO 77 I=1,NUMLAD
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
   77 CONTINUE
C         ARRAYS QL - IDS START IN P(P(95)), TYPES IN P(82), NDHF
C         NOTE THAT IF ID IS 'DUMMY   ' WANT WORKING SPACE
C                   IF ID IS ELSE WANT 'FILLED' TIME SERIES
C-------- POINTER IN T(27) ---------------------------------------------
   80 T(27)=NXT+LOCT-1
      LID=P(95)
      LTY=P(82)
      IF(LID.GT.0)GO TO 85
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 90
   85 IDADD=0
      ITYADD=0
      DO 89 I=1,NQL
      IF(P(LID+IDADD).EQ.DUMMY(1).AND.P(LID+IDADD+1).EQ.DUMMY(2))
     1    GO TO 87
C             ID NOT EQUAL TO 'DUMMY   '
C             FIND LOCATION IN D ARRAY
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
      GO TO 89
C             ID EQUAL TO 'DUMMY   '
C             PASS WORKING SPACE
   87 T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
   89 CONTINUE
C         ARRAYS STT - ID IN P(P(96)), TYPE IN P(83), NDHF
C         NOTE THAT IF ID IS 'DUMMY   ' WANT WORKING SPACE
C                   IF ID IS ELSE WANT 'FILLED' TIME SERIES
C-------- POINTER IN T(28) ---------------------------------------------
 90   T(28)=NXT+LOCT-1
      LID=P(96)
      LTY=P(83)
      IF(LID.GT.0.AND.KPL2.NE.0)GO TO 95
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 100
   95 IDADD=0
      ITYADD=0
      DO 99 I=1,NRT1
      IF(P(LID+IDADD).EQ.DUMMY(1).AND.P(LID+IDADD+1).EQ.DUMMY(2))
     1    GO TO 97
C             ID NOT EQUAL TO 'DUMMY   '
C             FIND LOCATION IN D ARRAY
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
      GO TO 99
C             ID EQUAL TO 'DUMMY   '
C             PASS WORKING SPACE
   97 T(LOCT)=LOCDUM
      LOCDUM=LOCDUM+NUO
      NEEDW=NEEDW+NUO
      LOCT=LOCT+1
   99 CONTINUE
C         ARRAY QSTR - ID IN P(P(105)), DATA TYPE IN P(106), NDHFO
C-------- POINTER IN T(29) ---------------------------------------------
  100 T(29)=NXT+LOCT-1
      LID=P(105)
      LTY=P(106)
      IF(LID.GT.0)GO TO 102
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 105
  102 IDADD=0
      ITYADD=0
      DO 104 I=1,NQSTR
      CALL FINDTS(P(LID+IDADD),P(LTY+ITYADD),NDHFO,T(LOCT),LOCTS,DIMS)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
C
C     SET VALUE IN TS ARRAY INDICATING THAT AN OUTPUT TS IS FILLED
C
      IF(LOCTS.GT.0)TS(LOCTS+8)=1.01
  104 CONTINUE
C         ARRAY STE - ID IN P(P(149)), DATA TYPE IN P(150), NDHFO
C-------- POINTER IN T(35) ---------------------------------------------
  105 T(35)=NXT+LOCT-1
      LID=P(149)
      LTY=P(150)
      IF(LID.GT.0)GO TO 106
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 110
  106 IDADD=0
      ITYADD=0
      DO 108 I=1,NRT1
      CALL FINDTS(P(LID+IDADD),P(LTY+ITYADD),NDHFO,T(LOCT),LOCTS,DIMS)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
C
C     SET VALUE IN TS ARRAY INDICATING THAT AN OUTPUT TS IS FILLED
C
      IF(LOCTS.GT.0)TS(LOCTS+8)=1.01
  108 CONTINUE
C         ARRAY DIV - ID IN P(P(111)), DATA TYPE IN P(112), NDHFO
C-------- POINTER IN T(30) ---------------------------------------------
  110 T(30)=NXT+LOCT-1
      LID=P(111)
      LTY=P(112)
      IF(LID.GT.0)GO TO 115
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 120
  115 IDADD=0
      ITYADD=0
      DO 117 I=1,NDIV
      CALL CKINPT(P(LID+IDADD),P(LTY+ITYADD),NDHFO,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
      IDADD=IDADD+3
      ITYADD=ITYADD+3
  117 CONTINUE
C         ARRAY XNOS - ID IN P(P(138)), DATA TYPE IN P(139), DT IS NDHF
C-------- POINTER IN T(33) ---------------------------------------------
  120 T(33)=NXT+LOCT-1
      LID=P(138)
      LTY=P(139)
      IF(LID.GT.0)GO TO 125
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 130
  125 CALL CKINPT(P(LID),P(LTY),NDHF,T(LOCT),TS,MTS,IER)
      LOCT=LOCT+1
C         ARRAY TIDE - ID IN P(P(141)), DATA TYPE IN P(142), DT IS NDHF
C-------- POINTER IN T(34) ---------------------------------------------
  130 T(34)=NXT+LOCT-1
      LID=P(141)
      LTY=P(142)
      IF(LID.GT.0)GO TO 135
      T(LOCT)=0
      LOCT=LOCT+1
      GO TO 200
  135 CALL FINDTS(P(LID),P(LTY),NDHF,T(LOCT),LOCTS,DIMS)
      LOCT=LOCT+1
C
C     SET VALUE IN TS ARRAY INDICATING THAT AN OUTPUT TS IS FILLED
C
      IF(LOCTS.GT.0)TS(LOCTS+8)=1.01
C
C***********************************************************************
C
C     THIS COMPLETES ASSIGNMENT OF LOCATIONS FOR ALL TIME SERIES
C     NOW SET FIRST LOCATION AVAILABLE IN D ARRAY AFTER ALL DWOPER
C         TIME SERIES HAVE BEEN ALLOCATED
C
C***********************************************************************
C
  200 T(31)=LOCDUM
C
      LOCT=LOCT-1
      IDUMPO=P(127)
C
C     CHECK NEEDT VS LOCT TO SEE IF SPACE USED IN T ARRAY
C     MATCHES WITH SPACE COMPUTED AS NEEDED AT BEGINNING OF SUBROUTINE
C
      IF(NEEDT.EQ.LOCT)GO TO 210
C
      WRITE(IPR,600)NEEDT,LOCT
  600 FORMAT(1H0,10X,'**ERROR** IN TAB21 - SPACE COMPUTED AS NEEDED IN '
     1 ,'T ARRAY (',I5,')'/32X,'DIFFERS FROM SPACE ACTUALLY FILLED  (',
     2 I5,')')
      CALL ERROR
      IUSET=0
      LWORK=0
      GO TO 220
C
C     SET VARIABLE FOR AMOUNT OF WORKING SPACE NEEDED FOR EX21
C     THIS INCLUDES WORKING SPACE FOR TIME SERIES (NEEDW) AND
C     WORKING SPACE TO HOLD PARAMETERS DURING DWOPER EXECUTION (IDUMPO)
C
  210 LWORK=NEEDW + IDUMPO
C
C     SET VARIABLE FOR AMOUNT OF SPACE USED IN T ARRAY
C
      IUSET=LOCT
C
C     SET VARIABLE FOR MINIMUM TIME INTERVAL FOR THIS OPERATION
C
  220 IDT=NDHF
C
C     CHECK FOR DEBUG
C
      IF(IBUG.EQ.0)RETURN
C
      WRITE(IODBUG,900)IDT,NWORK,IDUMPO,LWORK,IUSET,(T(I),I=1,LOCT)
  900 FORMAT('0 IN SUBROUTINE TAB21 - DWOPER DEBUG -- ',
     1  'COMPUTATIONAL DT = ',I3/'  NWORK = ',I6,', IDUMPO = ',I6/
     2  '  WORKING SPACE USED = ',I5,', SPACE NEEDED IN T ARRAY = ',I5/
     3  '0 CONTENTS OF THE T ARRAY IS'/(1X,20I6))
C
      RETURN
      END
