C MODULE URGENL
C-----------------------------------------------------------------------
C
       SUBROUTINE URGENL (LPARRY,IPARRY,LPBUF,IPBUF,LPNTRS,IPNTRS,
     *   ISTAT)
C
C   THIS ROUTINE READS THE GENL PARAMETER RECORDS FROM THE NEW FILES.
C   PARAMETER RECORDS FOR DATA GROUPS THAT WERE NOT ORDERED USING THE
C   ALPHABETICAL ORDER PARAMETER ARRAYS WILL HAVE RECORD NUMBER STILL
C   SET TO -9999.  WHEN ONE IS FOUND, THE PARAMETER RECORD IS READ FROM
C   THE OLD FILES AND WRITTEN TO THE NEW FILES.  IF THE DATA GROUP IS
C   A DAILY DATA TYPE, THE PARAMETER RECORD NUMBER IS UPDATED IN THE
C   PREPROCESSOR PARAMETRIC DATA BASE POINTERS.
C
C   ARGUMENT LIST:
C
C     NAME      TYPE    I/O   DIM    DESCRIPTION
C     ------    ----    ---   ---    -----------
C     LPARRY     I*4     I     1     LENGTH OF IPARRY
C     IPARRY     I*4    I/O  LPARRY  WORK ARRAY OLD FILE PARAM
C     LPBUF      I*4     I     1     LENGTH OF IPBUF
C     IPBUF      I*4    I/O  LPBUF   WORK ARRAY NEW FILE PARAM
C     LPNTRS     I*4     I     1     LENGTH OF IPNTRS
C     IPNTRS     I*2    I/O  LPNTRS  WORK ARRAY NEW FILE PNTRS
C     ISTAT      I*4     O     1     STATUS CODE:
C                                     0=NORMAL RETURN
C                                     OTHER=ERROR
C
      CHARACTER*4 PARMTP,DLYTYP,DTYPE
      CHARACTER*8 STAID
      INTEGER*2 IPNTRS(LPNTRS)
C
      DIMENSION IPARRY(LPARRY)
      DIMENSION IPBUF(LPBUF)
      PARAMETER (MCOUNT=4)
      DIMENSION ICOUNT(MCOUNT)
C
      INCLUDE 'uiox'
      INCLUDE 'udatas'
      INCLUDE 'udebug'
      INCLUDE 'urcommon/urppdt'
      INCLUDE 'urcommon/urcdta'
      INCLUDE 'ucommon/uordrx'
C
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/reorder/RCS/urgenl.f,v $
     . $',                                                             '
     .$Id: urgenl.f,v 1.7 2002/02/11 21:11:59 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (IPDTR.GT.0.OR.IPPTR.GT.0) THEN
         WRITE (IOGDB,*) 'ENTER URGENL'
         CALL SULINE (IOGDB,1)
         ENDIF
C
      WRITE (LP,310)
      CALL SULINE (LP,2)
C
      ISTAT=0
      CALL UMEMST (0,ICOUNT,MCOUNT)
      IPTR=0
      IPTRNX=0
      IPTRN2=0
      NUMREC=0
C
10    IPCPN=0
      IPE=0
      ITEMP=0
C
C  READ GENL PARAMETER RECORD FROM NEW FILE
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,320) (JPDTDR(I,1),I=1,6)
         CALL SULINE (IOGDB,1)
         ENDIF
      STAID=' '
      PARMTP='GENL'
      IAMORD=1
      CALL RPPREC (STAID,PARMTP,IPTR,LPARRY,IPARRY,NFILL,IPTRNX,ISTAT)
      IAMORD=0
      IF (ISTAT.NE.0) THEN
         CALL SRPPST (STAID,PARMTP,IPTR,LPARRY,NFILL,IPTRNX,ISTAT)
         GO TO 160
         ENDIF
C
C  GET NUMBER OF DATA TYPES DEFINED FOR STATION
      CALL UMEMOV (IPARRY(18),REAL,1)
      NUMGPS=REAL
      IF (NUMGPS.EQ.0) THEN
         WRITE (LP,330) STAID
         CALL SUWRNS (LP,2,-1)
         GO TO 150
         ENDIF
C
C  SET INDICATORS FOR THOSE TYPES IN THE RECORD
      NPOS=19
      DO 40 I=1,NUMGPS
         CALL UMEMOV (IPARRY(NPOS),DTYPE,1)
         IF (DTYPE.EQ.'PCPN') IPCPN=1
         IF (DTYPE.EQ.'TEMP') ITEMP=1
         IF (DTYPE.EQ.'PE') IPE=1
         NPOS=NPOS+1
40       CONTINUE
C
C  PROCESS EACH DATA GROUP
      NPOS=19
      DO 140 I=1,NUMGPS
         IRCSAV=0
         IPTR2=0
         JPOS=NPOS+NUMGPS
         IF (IPARRY(JPOS).NE.-9999) GO TO 130
C     CHECK IF PARAMETER RECORD FOR THIS TYPE IS ALREADY IN NEW FILE
         CALL UMEMOV (IPARRY(NPOS),PARMTP,1)
         IAMORD=1
         CALL RPPREC (STAID,PARMTP,IPTR2,LPBUF,IPBUF,NUMFIL,IPTRN2,
     *      ISTAT)
         IAMORD=0
         IF (IPTR2.EQ.0) GO TO 50
            IRCSAV=IPTR2
            GO TO 70
C     READ PARAMETER RECORD FOR THIS TYPE FROM OLD FILES
50       CALL RPPREC (STAID,PARMTP,IPTR2,LPBUF,IPBUF,NUMFIL,IPTRN2,
     *      ISTAT)
         IF (IPTR2.NE.0) GO TO 60
            WRITE (LP,340) PARMTP,STAID
            CALL SUERRS (LP,2,-1)
            GO TO 160
60       IF (ISTAT.NE.0) THEN
            CALL SRPPST (STAID,PARMTP,IPTR2,LPARRY,NUMFIL,IPTRN2,ISTAT)
            GO TO 160
            ENDIF
C     CHECK PARAMETER TYPE
70       IF (PARMTP.EQ.'PCPN') THEN
            LTYPE=1
            GO TO 90
            ENDIF
         IF (PARMTP.EQ.'TEMP') THEN
            LTYPE=2
            GO TO 90
            ENDIF
         IF (PARMTP.EQ.'PE') THEN
            LTYPE=3
            GO TO 90
            ENDIF
         IF (PARMTP.EQ.'RRS') THEN
            LTYPE=4
            GO TO 100
            ENDIF
         WRITE (LP,350) PARMTP
         CALL SUERRS (LP,2,-1)
         GO TO 160
C     SET DAILY DATA TYPE
90       IF (PARMTP.EQ.'PCPN') DLYTYP='PP24'
         IF (PARMTP.EQ.'TEMP') DLYTYP='TM24'
         IF (PARMTP.EQ.'PE') DLYTYP='EA24'
C     GET POINTER ARRAY
         CALL URDPTR (DLYTYP,LPNTRS,IPNTRS,LUSED,ISTAT)
         IF (ISTAT.GT.0) GO TO 160
C     CALCULATE POINTER ARRAY LOCATION
         IF (PARMTP.EQ.'PCPN') IPOS=19+(NUMGPS*2)
         IF (PARMTP.EQ.'TEMP') IPOS=19+(NUMGPS*2)+(IPCPN*4)
         IF (PARMTP.EQ.'PE') IPOS=19+(NUMGPS*2)+(IPCPN*4)+(ITEMP*5)
C     POINTERS IN GENL PARAMETER RECORD ARE REAL
         CALL UMEMOV (IPARRY(IPOS),REAL,1)
         IPOS2=REAL
C     CHECK IF PARAMETER RECORD FOR THIS TYPE IS ALREADY IN NEW FILE
100      IF (IRCSAV.EQ.0) GO TO 110
            IRECNW=IRCSAV
            GO TO 120
C     WRITE PARAMETER RECORD TO NEW FILES
110      IRECNW=0
         IAMORD=1
         CALL WPPREC (STAID,PARMTP,NUMFIL,IPBUF,IRECNW,ISTAT)
         NUMREC=NUMREC+1
         ICOUNT(LTYPE)=ICOUNT(LTYPE)+1
         IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
            WRITE (IOGDB,*) 'STAID=',STAID,' PARMTP=',PARMTP,
     *         ' LTYPE=',LTYPE,' ICOUNT(LTYPE)=',ICOUNT(LTYPE)
            CALL SULINE (IOGDB,1)
            ENDIF
         IAMORD=0
         IF (ISTAT.NE.0) GO TO 160
C     CHECK IF RRS PARAMETERS
         IF (PARMTP.NE.'RRS') GO TO 120
C        COPY DATA RECORDS
            CALL URCRRX (LPBUF,IPBUF,STAID,ISTAT)
            IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
               WRITE (IOGDB,*) ' STAID',STAID,' ISTAT=',ISTAT
               CALL SULINE (IOGDB,1)
               ENDIF
C     UPDATE POINTERS IN GENL PARAMETER RECORD
120      CALL URUDGL (STAID,PARMTP,IRECNW,LPBUF,IPBUF,ISTAT)
         IF (ISTAT.NE.0) GO TO 160
         IF (PARMTP.EQ.'RRS') GO TO 130
            IPNTRS(IPOS2)=IRECNW
C        WRITE POINTER ARRAY TO FILE
            CALL URWPTR (DLYTYP,IPNTRS,ISTAT)
            IF (ISTAT.NE.0) GO TO 160
130      NPOS=NPOS+1
140      CONTINUE
C
C  CHECK IF LAST PARAMETER RECORD
150   IF (IPTRNX.EQ.0) GO TO 170
      IPTR=IPTRNX
      GO TO 10
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  SET ERROR FLAG
160   IWURFL=1
      GO TO 290
C
C  GET NUMBER OF PP24 POINTERS
170   IRDATE=0
      DLYTYP='PP24'
      CALL RPDFIL (DLYTYP,IRDATE,LPFIL,LDFIL,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) 'DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *      ' LPFILP=',LPFILP
         CALL SULINE (IOGDB,1)
         ENDIF
C
C  CHECK NUMBER OF POINTERS
      IF (LPFIL.EQ.0) GO TO 210
C
C  GET POINTER ARRAY
      CALL URDPTR (DLYTYP,LPNTRS,IPNTRS,LUSED,ISTAT)
      IF (ISTAT.GT.0) GO TO 160
C
C  CHECK IF ALL PCPN PARAMETER RECORDS NUMBERS UPDATED
      PARMTP='PCPN'
      IUPDTE=0
      DO 200 I=5,LPFIL,5
         IF (IPNTRS(I).GE.0) GO TO 200
            IF (IPNTRS(I).EQ.-1) THEN
               IPNTRS(I)=0
               GO TO 200
               ENDIF
            IPOS1=I-4
            CALL UMEMST (IBLNK,STAID,2)
            IPTR=IPNTRS(IPOS1)
            IAPTR=IABS(IPTR)
            IPTR=-IAPTR
            IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
               WRITE (IOGDB,380) IPNTRS(I),IAPTR,IPTR
               CALL SULINE (IOGDB,1)
               ENDIF
            IAMORD=0
            CALL RPPREC (STAID,PARMTP,IPTR,LPARRY,IPARRY,NFILL,IPTRNX,
     *         ISTAT)
            IF (ISTAT.NE.0) THEN
               CALL SRPPST (STAID,PARMTP,IPTR,LPARRY,NFILL,IPTRNX,ISTAT)
               ENDIF
            WRITE (LP,390) PARMTP,IAPTR,IPOS1,'PP24',STAID
            CALL SUWRNS (LP,2,-1)
            IPOS2=IPOS1+4
            DO 190 N=IPOS1,IPOS2
               IPNTRS(N)=0
190            CONTINUE
            CALL SULINE (LP,1)
            WRITE (LP,400) DLYTYP,IPOS1,IPOS2
            IUPDTE=1
200      CONTINUE
C
C  WRITE POINTER ARRAY TO FILE
      IF (IUPDTE.EQ.1) THEN
         CALL URWPTR (DLYTYP,IPNTRS,ISTAT)
         IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
            WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *         ' IUPDTE=',IUPDTE
            CALL SULINE (IOGDB,1)
            ENDIF
         ENDIF
C
C  GET NUMBER OF PPVR POINTERS
210   DLYTYP='PPVR'
      CALL RPDFIL (DLYTYP,IRDATE,LPFIL,LDFIL,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *      ' LPFIL=',LPFIL
         CALL SULINE (IOGDB,1)
         ENDIF
C
C  CHECK NUMBER OF POINTERS
      IF (LPFIL.EQ.0) GO TO 230
C
C  GET POINTER ARRAY
      CALL URDPTR (DLYTYP,LPNTRS,IPNTRS,LUSED,ISTAT)
      IF (ISTAT.GT.0) GO TO 160
C
C  CHECK IF ALL GENL PARAMETER RECORDS NUMBERS UPDATED
      PARMTP='GENL'
      IUPDTE=0
      DO 220 I=1,LPFIL,4
         IF (IPNTRS(I).GE.0) GO TO 220
            CALL UMEMST (IBLNK,STAID,2)
            IPTR=IPNTRS(I)
            IAPTR=IABS(IPTR)
            IPTR=-IAPTR
            IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
               WRITE (IOGDB,380) IPNTRS(I),IAPTR,IPTR
               CALL SULINE (IOGDB,1)
               ENDIF
            IAMORD=0
            CALL RPPREC (STAID,PARMTP,IPTR,LPARRY,IPARRY,NFILL,IPTRNX,
     *         ISTAT)
            IF (ISTAT.NE.0) THEN
               ISTATA=-ISTAT
               CALL SRPPST (STAID,PARMTP,IPTR,LPARRY,NFILL,IPTRNX,
     *            ISTATA)
               ENDIF
            WRITE (LP,390) PARMTP,IAPTR,I,'PPVR',STAID
            CALL SUWRNS (LP,2,-1)
            IPOS1=I
            IPOS2=I
            IPNTRS(I)=0
            CALL SULINE (LP,1)
            WRITE (LP,400) DLYTYP,IPOS1,IPOS2
            IUPDTE=1
220      CONTINUE
C
C  WRITE POINTER ARRAY TO FILE
      IF (IUPDTE.EQ.1) THEN
         CALL URWPTR (DLYTYP,IPNTRS,ISTAT)
         IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
            WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *         ' IUPDTE=',IUPDTE
            CALL SULINE (IOGDB,1)
            ENDIF
         ENDIF
C
C  GET NUMBER OF TM24 POINTERS
230   DLYTYP='TM24'
      CALL RPDFIL (DLYTYP,IRDATE,LPFIL,LDFIL,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *      ' LPFIL=',LPFIL
         CALL SULINE (IOGDB,1)
         ENDIF
C
C  CHECK NUMBER OF POINTERS
      IF (LPFIL.EQ.0) GO TO 260
C
C  GET POINTER ARRAY
      CALL URDPTR (DLYTYP,LPNTRS,IPNTRS,LUSED,ISTAT)
      IF (ISTAT.GT.0) GO TO 160
C
C  CHECK IF ALL TEMP PARAMETER RECORDS NUMBERS UPDATED
      PARMTP='TEMP'
      IUPDTE=0
      DO 250 I=1,LPFIL,5
         IF (IPNTRS(I).GE.0) GO TO 250
            CALL UMEMST (IBLNK,STAID,2)
            IPTR=IPNTRS(I)
            IAPTR=IABS(IPTR)
            IPTR=-IAPTR
            IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
               WRITE (IOGDB,380) IPNTRS(I),IAPTR,IPTR
               CALL SULINE (IOGDB,1)
               ENDIF
            IAMORD=0
            CALL RPPREC (STAID,PARMTP,IPTR,LPARRY,IPARRY,NFILL,IPTRNX,
     *         ISTAT)
            IF (ISTAT.GT.0) THEN
               ISTATA=-ISTAT
               CALL SRPPST (STAID,PARMTP,IPTR,LPARRY,NFILL,IPTRNX,
     *            ISTATA)
               ENDIF
            WRITE (LP,390) PARMTP,IAPTR,I,'TM24',STAID
            CALL SUWRNS (LP,2,-1)
            IPOS1=I
            IPOS2=I+4
            DO 240 N=IPOS1,IPOS2
               IPNTRS(N)=0
240            CONTINUE
            CALL SULINE (LP,1)
            WRITE (LP,400) DLYTYP,IPOS1,IPOS2
            IUPDTE=1
            CALL SULINE (LP,2)
250      CONTINUE
C
C  WRITE POINTER ARRAY TO FILE
      IF (IUPDTE.EQ.1) CALL URWPTR (DLYTYP,IPNTRS,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *         ' IUPDTE=',IUPDTE
         CALL SULINE (IOGDB,1)
         ENDIF
C
C  GET NUMBER OF EA24 POINTERS
260   DLYTYP='EA24'
      CALL RPDFIL (DLYTYP,IRDATE,LPFIL,LDFIL,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *      ' LPFIL=',LPFIL
         CALL SULINE (IOGDB,1)
         ENDIF
C
C  CHECK NUMBER OF POINTERS
      IF (LPFIL.EQ.0) GO TO 280
C
C  GET POINTER ARRAY
      CALL URDPTR (DLYTYP,LPNTRS,IPNTRS,LUSED,ISTAT)
      IF (ISTAT.GT.0) GO TO 160
C
C  CHECK IF ALL PE PARAMETER RECORDS NUMBERS UPDATED
      PARMTP='PE'
      IUPDTE=0
      DO 270 I=1,LPFIL
         IF (IPNTRS(I).GE.0) GO TO 270
            CALL UMEMST (IBLNK,STAID,2)
            IPTR=IPNTRS(I)
            IAPTR=IABS(IPTR)
            IPTR=-IAPTR
            IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
               WRITE (IOGDB,380) IPNTRS(I),IAPTR,IPTR
               CALL SULINE (IOGDB,1)
               ENDIF
            IAMORD=0
            CALL RPPREC (STAID,PARMTP,IPTR,LPARRY,IPARRY,NFILL,IPTRNX,
     *         ISTAT)
            IF (ISTAT.GT.0) THEN
               ISTATA=-ISTAT
               CALL SRPPST (STAID,PARMTP,IPTR,LPARRY,NFILL,IPTRNX,
     *            ISTATA)
               ENDIF
            WRITE (LP,390) PARMTP,IAPTR,I,'EA24',STAID
            CALL SUWRNS (LP,2,-1)
            IPOS1=I
            IPOS2=I
            IPNTRS(I)=0
            CALL SULINE (LP,1)
            WRITE (LP,400) DLYTYP,IPOS1,IPOS2
            IUPDTE=1
270      CONTINUE
C
C  WRITE POINTER ARRAY TO FILE
      IF (IUPDTE.EQ.1) CALL URWPTR (DLYTYP,IPNTRS,ISTAT)
      IF (IPDDB.GT.0.OR.IPPDB.GT.0) THEN
         WRITE (IOGDB,*) ' DLYTYP=',DLYTYP,' ISTAT=',ISTAT,
     *         ' IUPDTE=',IUPDTE
         CALL SULINE (IOGDB,1)
         ENDIF
C
280   IF (ICOUNT(1).GT.0) THEN
         WRITE (LP,410) ICOUNT(1),'PCPN'
         CALL SULINE (LP,2)
         ENDIF
      IF (ICOUNT(2).GT.0) THEN
         WRITE (LP,410) ICOUNT(2),'TEMP'
         CALL SULINE (LP,2)
         ENDIF
      IF (ICOUNT(3).GT.0) THEN
         WRITE (LP,410) ICOUNT(3),'PE'
         CALL SULINE (LP,2)
         ENDIF
      IF (ICOUNT(4).GT.0) THEN
         WRITE (LP,410) ICOUNT(4),'RRS'
         CALL SULINE (LP,2)
         ENDIF
C
      WRITE (LP,420) NUMREC
      CALL SULINE (LP,2)
C
290   IF (IPDTR.GT.0.OR.IPPTR.GT.0) THEN
         WRITE (IOGDB,*) 'EXIT URGENL - ISTAT=',ISTAT
         CALL SULINE (IOGDB,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
310   FORMAT ('0*** NOTE - BEGIN TO COPY ANY  << PCPN, TEMP, PE ',
     *   'AND RRS >>  RECORDS THAT HAVE NOT BEEN REORDERED.')
320   FORMAT (' JPDTDR(1-6,1)= ',A4,5I4)
330   FORMAT ('0*** WARNING - STATION ',A,' HAS NO DATA TYPES ',
     *   'DEFINED.')
340   FORMAT ('0*** ERROR - IN URGENL - ',A,' PARAMETER RECORD NOT ',
     *   'FOUND FOR STATION ',A,'.')
350   FORMAT ('0*** ERROR - IN URGENL - TYPE ',A,' NOT FOUND IN ',
     *   'GENL PARAMETER RECORD.')
380   FORMAT (' IPNTRS(I)=',I5,3X,'IAPTR=',I5,3X,'IPTR=',I5)
390   FORMAT ('0*** WARNING - IN URGENL - ',A,' PARAMETER RECORD ',
     *   'NUMBER (',I5,') AT POSITION ',I5,' OF ',A,' POINTER ARRAY ',
     *   'NEVER UPDATED. STAID=',A)
400   FORMAT (T16,A,' POINTER POSITIONS ',I5,' THRU ',I5,
     *   ' SET TO DELETED.')
410   FORMAT ('0*** NOTE - ',I4,' ',A,' PARAMETER RECORDS HAVE BEEN',
     *   ' SUCCESSFULLY COPIED.')
420   FORMAT ('0*** NOTE - ',I4,' PCPN, TEMP, PE AND RRS PARAMETER ',
     *   'RECORDS HAVE BEEN COPIED.')
C
      END
