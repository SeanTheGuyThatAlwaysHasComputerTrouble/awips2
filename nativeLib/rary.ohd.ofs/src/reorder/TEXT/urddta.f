C MEMBER URDDTA
C-----------------------------------------------------------------------
C
C                             LAST UPDATE: 12/13/94.13:34:46 BY $WC20SV
C
C @PROCESS LVL(77)
C
      SUBROUTINE URDDTA (LPNTRS,IPNTRS,ISTAT)
C
C          ROUTINE:  URDDTA
C
C             VERSION:  1.0.0
C
C                DATE:  7-9-84
C
C              AUTHOR:  JANINE FRANZOI
C                       DATA SCIENCES INC
C
C***********************************************************************
C
C          DESCRIPTION:
C
C   THIS ROUTINE COPIES THE PPDB DAILY DATA POINTERS AND DATA RECORDS
C   TO THE NEW FILES.
C
C   THIS SIZE OF THE NEW FILES MAY BE EQUAL TO OR LARGER THAN THE
C   OLD SET OF FILES.
C
C   THE NUMBER OF STATIONS MAY BE CHANGED AS LONG AS THE MAXIMUM NUMBER
C   OF STATIONS IS NOT EXCEEDED.
C
C***********************************************************************
C
C          ARGUMENT LIST:
C
C         NAME    TYPE  I/O   DIM   DESCRIPTION
C
C       LPNTRS     I    I    1     LENGTH OF IPNTRS
C       IPNTRS     I   IO  LPNTRS  WORK ARRAY POINTERS FROM OLD FILES
C       ISTAT      I    O    1     STATUS CODE
C                                     0=NORMAL RETURN
C                                     1=RECORD OUT OF RANGE
C                                     OTHER=READ OR WRITE ERROR
C
C***********************************************************************
C
C          COMMON:
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'ucommon/uordrx'
      INCLUDE 'pdbcommon/pdunts'
      INCLUDE 'pdbcommon/pdsifc'
      INCLUDE 'pdbcommon/pddtdr'
      INCLUDE 'pdbcommon/pdrrsc'
      INCLUDE 'pdbcommon/pdddfc'
      INCLUDE 'urcommon/urpddd'
      INCLUDE 'urcommon/urrrsc'
      INCLUDE 'urcommon/urpddt'
      INCLUDE 'urcommon/ursifc'
      INCLUDE 'urcommon/urcdta'
      INCLUDE 'urcommon/urunts'
C
C***********************************************************************
C
C          DIMENSION AND TYPE DECLARATIONS:
C
      CHARACTER*4 XTYPE
C
      INTEGER*2 MSNG
      INTEGER*2 IDBUF(32)
C
      DIMENSION IPNTRS(LPNTRS)
      DIMENSION IDATES(64),JDATES(64)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/reorder/RCS/urddta.f,v $
     . $',                                                             '
     .$Id: urddta.f,v 1.2 1996/07/12 17:27:07 dws Exp $
     . $' /
C    ===================================================================
C
C
C***********************************************************************
C
C
      IF (IPDTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,280)
         ENDIF
C
      ISTAT=0
C
      MSNG=-9999
C
      CALL SULINE (LP,2)
      WRITE (LP,290)
C
C  CHECK THAT ALL DATA TYPES IN OLD FILES ARE IN NEW FILES
      NTYPE=1
10    IF (IDDTDR(4,NTYPE).LE.0) GO TO 30
      CALL UMEMOV (IDDTDR(2,NTYPE),XTYPE,1)
      IAMORD=1
      IDXNEW=IPDCKD(XTYPE)
      IF (IDXNEW.EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,310) XTYPE,'NEW'
         ENDIF
      NTYPE=NTYPE+1
      GO TO 10
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  PROCESS EACH DATA TYPE
30    NTYPE=1
C
C  CHECK IF DATA TYPE IS WRITE TYPE
40    IF (JDDTDR(4,NTYPE).EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,490)
         GO TO 270
         ENDIF
C
C  GET DATA TYPE
      CALL UMEMOV (JDDTDR(2,NTYPE),XTYPE,1)
C
C  GET TYPE INDEX FOR OLD FILES
      IAMORD=0
      IDXOLD=IPDCKD(XTYPE)
C
C  GET TYPE INDEX FOR NEW FILES
      IDXNEW=NTYPE
C
C  CHECK IF TYPE IS IN OLD FILES
      IF (IDXOLD.EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,310) XTYPE,'OLD'
         GO TO 240
         ENDIF
C
C  GET FILE UNIT NUMBER FOR OLD AND NEW FILES
      IDFOLD=IDDTDR(4,IDXOLD)
      IDFNEW=JDDTDR(4,IDXNEW)
C
C  CHECK IF THIS TYPE CAN HAVE ANY STATIONS DEFINED
      IF (JDDTDR(16,IDXNEW).LE.0) GO TO 240
C
      CALL SULINE (LP,2)
      WRITE (LP,300) XTYPE
C
C  IF PPSR, CALCULATE LAST USED DATA WORD AND NUMBER OF STATIONS
      IF (XTYPE.EQ.'PPSR') THEN
         NDAYS=IDDTDR(7,IDXOLD)
         MXWDS=0
         IRECO=IDDTDR(15,IDXOLD)
         DO 60 K=1,NDAYS
            CALL UREADT (KPDDDF(IDFOLD),IRECO,IDBUF,ISTAT)
            IF (ISTAT.NE.0) GO TO 250
            IF (IDBUF(1).LT.0) GO TO 50
               NWDS=IDBUF(1)*3+1
               IF (NWDS.GT.MXWDS) MXWDS=NWDS
50          IRECO=IRECO+IDDTDR(21,IDXOLD)
60          CONTINUE
         IDDTDR(19,IDXOLD)=MXWDS
         IDDTDR(17,IDXOLD)=MXWDS/3
         ENDIF
C
C  COPY VALUES FROM OLD DIRECTORY TO NEW DIRECTORY
      DO 70 K=17,19
         JDDTDR(K,IDXNEW)=IDDTDR(K,IDXOLD)
70       CONTINUE
C
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,320)
     *      IDDTDR(18,IDXOLD),IDDTDR(19,IDXOLD),
     *      JDDTDR(16,IDXNEW),JDDTDR(5,IDXNEW),JDDTDR(21,IDXNEW)
         ENDIF
C
C  CHECK IF NUMBER OF POINTER WORDS USED EXCEEDS THE SPACE AVAILABLE
      NUPNTR=IDDTDR(18,IDXOLD)
      MXPNTR=JDDTDR(16,IDXNEW)*JDDTDR(5,IDXNEW)
      IF (NUPNTR.GT.MXPNTR) THEN
         WRITE (LP,330) 'POINTERS',XTYPE
         CALL SUERRS (LP,2,-1)
         WRITE (LP,340) NUPNTR,MXPNTR
         CALL SULINE (LP,1)
         IWURFL=1
         ENDIF
C
C  CHECK IF NUMBER OF DATA WORDS USED EXCEEDS THE SPACE AVAILABLE
      MXDATA=JDDTDR(21,IDXNEW)*LRLURD*2
      NUDATA=IDDTDR(19,IDXOLD)
      IF (NUDATA.GT.MXDATA) THEN
         WRITE (LP,330) 'DATA',XTYPE
         CALL SUERRS (LP,2,-1)
         WRITE (LP,340) NUDATA,MXDATA
         CALL SULINE (LP,1)
         IWURFL=1
         ENDIF
C
      IF (IWURFL.EQ.1) GO TO 240
C
      IF (XTYPE.EQ.'PPSR'.OR.XTYPE.EQ.'TF24') GO TO 80
C
      GO TO 190

C-   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
C
C  IF PPSR OR TF24, COPY POINTER ARRAY SINCE NOT DONE ELSEWHERE
80    IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,350) IDDTDR(2,IDXOLD),IDDTDR(3,IDXOLD)
         ENDIF
      IFILE=IDDTDR(4,IDXOLD)
      IREC=IDDTDR(14,IDXOLD)
      NSTA=IDDTDR(18,IDXOLD)
      IF (NSTA.LT.1) GO TO 190
      LRCPD2=LRCPDD*2
      NREC=IUNRCD(NSTA,LRCPD2)
      NWORDS=NREC*LRCPD2
      IF (NWORDS.GT.LPNTRS) THEN
         WRITE (LP,360) NWORDS,LPNTRS
         CALL SUERRS (LP,2,-1)
         IWURFL=1
         GO TO 270
         ENDIF
      CALL RVLRCD (KPDDDF(IFILE),IREC,NREC,IPNTRS,LRCPDD,ISTAT)
      IF (ISTAT.NE.0) GO TO 250
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,370) ISTAT,NSTA,(IPNTRS(J),J=1,NSTA)
         ENDIF
      CALL URWPTR (XTYPE,IPNTRS,ISTAT)
C
C  CHECK IF PROCESSING FUTURE TEMP DATA
      IF (XTYPE.NE.'TF24') GO TO 190
C
C  GET DATES ARRAY
      N=IDDTDR(16,IDXOLD)*IDDTDR(5,IDXOLD)
      NREC=IUNRCD(N,LRCPD2)
      IREC=IREC+NREC
      N=IDDTDR(7,IDXOLD)*2+1
      NREC=IUNRCD(N,LRCPDD)
      CALL RVLRCD (KPDDDF(IFILE),IREC,NREC,IDATES,LRCPDD,ISTAT)
      IF (ISTAT.NE.0) GO TO 250
      N=JDDTDR(16,IDXNEW)*JDDTDR(5,IDXNEW)
      LURPD2=LRLURD*2
      IREC=IUNRCD(N,LURPD2)+JDDTDR(14,IDXNEW)
C
C  GET NUMBER DATES IN OLD FILE
      NDATES=IDATES(1)
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'NDATES=',NDATES
         ENDIF
      IF (NDATES.EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,380) XTYPE
         GO TO 240
         ENDIF
      CALL UMEMOV (IDDTDR(8,IDXOLD),IDAY,1)
      CALL UMEMOV (IDDTDR(11,IDXOLD),LDAY,1)
C
C  CHECK IF NUMBER OF DAYS IN OLD FILE IS GREATER THAN MAX DAYS
C  IN NEW FILE
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'JDDTDR(7,IDXNEW)=',JDDTDR(7,IDXNEW)
         ENDIF
      IF (NDATES.LE.JDDTDR(7,IDXNEW)) GO TO 160
C
C  REDUCE NUMBER OF DATES TO MATCH SPACE IN NEW FILE
      NKEEP=JDDTDR(7,IDXNEW)
C
C  FIND LATEST TM24 DATE
      IAMORD=0
      IX24=IPDCKD('TM24')
      CALL UMEMOV (IDDTDR(11,IX24),LAST24,1)
C
C  INITIALIZE VALUES AND WORK ARRAY
      KDATES=0
      NK=NKEEP*2+1
      NKM2=NK-2
      N=NK*2
      IBEG=1
      CALL UMEMS2 (MSNG,JDATES(1),IBEG,N)
C
C  MOVE DATES GREATER THAN OR EQUAL TO LAST24 TO WORK ARRAY AND
C  PUT IN CHRONOLOGICAL ORDER
      DO 140 N=1,NDATES
         IPOS=(N-1)*2+2
         IF (IDATES(IPOS).LT.LAST24) GO TO 140
         IF (KDATES.GT.0) GO TO 100
            JDATES(2)=IDATES(IPOS)
            JDATES(3)=IDATES(IPOS+1)
            GO TO 130
100      DO 120 K=1,KDATES
            KPOS=(K-1)*2+2
            IF (IDATES(IPOS).GT.JDATES(KPOS)) GO TO 120
               DO 110 J=KPOS,NKM2
                  L=NKM2+KPOS-J
                  JDATES(L+2)=JDATES(L)
110               CONTINUE
               JDATES(KPOS)=IDATES(IPOS)
               JDATES(KPOS+1)=IDATES(IPOS+1)
               IF (KDATES.EQ.NKEEP) GO TO 140
               GO TO 130
120         CONTINUE
         IF (KDATES.EQ.NKEEP) GO TO 140
            KPOS=KDATES*2+2
            JDATES(KPOS)=IDATES(IPOS)
            JDATES(KPOS+1)=IDATES(IPOS+1)
130      KDATES=KDATES+1
140      CONTINUE
      IF (KDATES.EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,390) XTYPE
         GO TO 240
         ENDIF
C
      JDATES(1)=KDATES
      DO 150 K=1,NK
         IDATES(K)=JDATES(K)
150      CONTINUE
      NDATES=IDATES(1)
      IDAY=IDATES(2)
      NK=NDATES*2
      LDAY=IDATES(NK)
C
160   N=IDDTDR(19,IDXOLD)
      NRECS=IUNRCD(N,LRCPD2)
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'NRECS=',NRECS
         ENDIF
C
C  COPY DATA TO NEW FILE STARTING WITH FIRST DAY
      IPOS=3
      NEWR1=JDDTDR(15,IDXNEW)
      DO 180 K=1,NDATES
         IREC1=IDATES(IPOS)
         IDATES(IPOS)=NEWR1
         IF (IPDDB.GT.0) THEN
            CALL SULINE (IOGDB,1)
            WRITE (IOGDB,470) NRECS,NEWR1,IREC1
            ENDIF
         DO 170 KK=1,NRECS
            CALL UREADT (KPDDDF(IDFOLD),IREC1,IDBUF,ISTAT)
            IF (ISTAT.NE.0) GO TO 250
            CALL UWRITT (KURDDF(IDFNEW),NEWR1,IDBUF,ISTAT)
            IF (ISTAT.NE.0) GO TO 260
            IREC1=IREC1+1
            NEWR1=NEWR1+1
170         CONTINUE
         IPOS=IPOS+2
         IF (K.EQ.NDATES) GO TO 180
            NEWR1=JDDTDR(15,IDXNEW)+K*JDDTDR(21,IDXNEW)
180      CONTINUE
C
C  WRITE DATES
      CALL UMEMOV (IDAY,JDDTDR(8,IDXNEW),1)
      CALL UMEMOV (LDAY,JDDTDR(11,IDXNEW),1)
      JDDTDR(10,IDXNEW)=JDDTDR(15,IDXNEW)
      N=IDATES(1)*2+1
      NREC=IUNRCD(N,LRLURD)
      CALL WVLRCD (KURDDF(IDFNEW),IREC,NREC,IDATES,LRLURD,ISTAT)
      IF (ISTAT.NE.0) GO TO 260
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,400) IREC,NREC,
     *     (IDATES(J),J=1,NDATES)
         ENDIF
      GO TO 230
C
C-   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -   -
C
C  CHECK IF ANY DATA EXISTS
190   IF (IDDTDR(10,IDXOLD).EQ.0) THEN
         CALL SULINE (LP,2)
         WRITE (LP,380) XTYPE
         GO TO 240
         ENDIF
C
C  CHECK IF NUMBER OF DAYS IS DIFFERENT FROM OLD FILES
      CALL UMEMOV (IDDTDR(8,IDXOLD),IDAY,1)
      CALL UMEMOV (IDDTDR(11,IDXOLD),LDAY,1)
      KDAYS=LDAY-IDAY+1
      NDAYS=KDAYS-JDDTDR(7,IDXNEW)
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,410) NDAYS
         ENDIF
      CALL UMEMOV (IDDTDR(8,IDXOLD),JDDTDR(8,IDXNEW),1)
      CALL UMEMOV (IDDTDR(11,IDXOLD),JDDTDR(11,IDXNEW),1)
      IF (NDAYS.EQ.0) GO TO 200
C
C  NUMBER OF DAYS ARE DIFFERENT - RESET EARLIEST DAY IN FILE
      CALL SULINE (LP,2)
      WRITE (LP,420) KDAYS,JDDTDR(7,IDXNEW),XTYPE
      IF (NDAYS.LT.0) GO TO 200
      CALL UMEMOV (IDDTDR(8,IDXOLD),IEDAY,1)
      IEDAY=IEDAY+NDAYS
      CALL UMEMOV (IEDAY,JDDTDR(8,IDXNEW),1)
C
C  START WITH LAST DAY-LOOP ON NUMBER OF DAYS FOR COPY
200   NDAYS=JDDTDR(7,IDXNEW)
      IF (KDAYS.LT.NDAYS) NDAYS=KDAYS
C
C  CALCULATE WHERE LAST DAY BEGINS IN BOTH FILES
      LSTPT=IDDTDR(13,IDXOLD)
      IF (IPDDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*)
     *      ' XTYPE=',XTYPE,
     *      ' LSTPT=',LSTPT,
     *      ' '
         ENDIF
      NLSTPT=JDDTDR(15,IDXNEW)+(JDDTDR(21,IDXNEW)*NDAYS)-
     *       JDDTDR(21,IDXNEW)
C
C  SET POINTER FOR LATEST DAY OF DATA
      JDDTDR(13,IDXNEW)=NLSTPT
      MRECO=IDDTDR(21,IDXOLD)
      LRCPD2=LRCPDD*2
      N=IDDTDR(19,IDXOLD)
      NRECS=IUNRCD(N,LRCPD2)
      IF (NRECS.EQ.0) NRECS=1
C
      DO 220 K=1,NDAYS
         IRECO=LSTPT
         IRECN=NLSTPT
C     COPY DATA TO NEW FILE STARTING WITH LAST DAY
         DO 210 KK=1,NRECS
            CALL UREADT (KPDDDF(IDFOLD),IRECO,IDBUF,ISTAT)
            IF (ISTAT.NE.0) GO TO 250
            CALL UWRITT (KURDDF(IDFNEW),IRECN,IDBUF,ISTAT)
            IF (ISTAT.NE.0) GO TO 260
            IRECO=IRECO+1
            IRECN=IRECN+1
210         CONTINUE
         IF (IPDDB.GT.0) THEN
            CALL SULINE (IOGDB,1)
            WRITE (IOGDB,470) NRECS,NLSTPT,LSTPT
            ENDIF
C     RESET POINTERS AND MOVE ANOTHER DAY
         LSTPT=LSTPT-MRECO
         IF (LSTPT.LT.IDDTDR(15,IDXOLD))
     *      LSTPT=IDDTDR(15,IDXOLD)+(MRECO*IDDTDR(7,IDXOLD))-MRECO
         NLSTPT=NLSTPT-JDDTDR(21,IDXNEW)
220      CONTINUE
C
C  SET POINTER FOR EARLIEST DAY OF DATA
      JDDTDR(10,IDXNEW)=NLSTPT+JDDTDR(21,IDXNEW)
C
230   CALL SULINE (LP,2)
      WRITE (LP,480) XTYPE
C
240   NTYPE=NTYPE+1
      GO TO 40
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
250   WRITE (LP,500) XTYPE,ISTAT
      CALL SUERRS (LP,2,-1)
      IWURFL=1
      GO TO 270
C
260   WRITE (LP,510) XTYPE,ISTAT
      CALL SUERRS (LP,2,-1)
      IWURFL=1
C
270   IF (IPDTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,520)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
280   FORMAT (' *** ENTER URDDTA')
290   FORMAT ('0*** NOTE - BEGIN TO COPY  << PPDB DAILY DATA >>  ',
     *   'RECORDS.')
300   FORMAT ('0*** BEGIN TO PROCESS DAILY DATA TYPE ',A,'.')
310   FORMAT ('0*** NOTE - DAILY DATA TYPE ',A,' NOT FOUND IN THE ',
     *   A,' PREPROCESSOR DATA BASE.')
320   FORMAT (' LAST USED IN OLD FILE: POINTER=',I5,1X,
     *      'DATA=',I5,3X,
     *   'NEW FILE: MAXSTA=',I5,1X,'POINTERS=',I5,1X,
     *      'DATA RECORDS PER DAY=',I3)
330   FORMAT ('0*** ERROR - IN URDDTA - SPACE USED FOR ',A,
     *   ' IN OLD FILES ',
     *   ' IS GREATER THAN SPACE AVAILABLE IN NEW FILES ',
     *   'FOR TYPE ',A,'.')
340   FORMAT (T26,'NUMBER USED IN OLD FILES = ',I6,5X,
     *   'MAXIMUM IN NEW FILES = ',I6)
350   FORMAT (' COPYING POINTERS FOR: ',2A2)
360   FORMAT ('0*** ERROR - IN URDDTA - ',I6,' WORDS NEEDED FOR ',
     *   'POINTERS. ',I6,' ARE AVAILABLE.')
370   FORMAT (' ISTAT=',I2,' NSTA=',I4,' IPNTRS=',10I5)
380   FORMAT ('0*** NOTE - NO ',A,' DATA FOUND IN ',
     *   'PREPROCESSOR DATA BASE.')
390   FORMAT ('0*** NOTE - NO ',A,' DATA MOVED BECAUSE ',
     *   'IT IS ALL BEFORE THE LATEST OBSERVED DATE .')
400   FORMAT (' FUTURE DATES : IREC=',I5,3X,'NREC=',I5,3X,
     *   'IDATES(1-NDATES)=',10I7)
410   FORMAT (' NUMBER OF DAYS DIFFERENCE IS ',I5)
420   FORMAT ('0*** NOTE - NUMBER OF DAYS OF DATA IN OLD FILE (',I4,
     *   ') DIFFERS FROM MAXIMUM NUMBER OF DAYS OF DATA IN NEW FILE (',
     *   I4,') FOR TYPE ',A,'.')
470   FORMAT (' WROTE ',I4,' RECORDS TO NEW FILE STARTING AT ',I6,
     *  ' FROM OLD FILE STARTING AT ',I6)
480   FORMAT ('0*** NOTE - DATA RECORDS FOR DATA TYPE ',A,
     *   ' SUCCESSFULLY COPIED.')
490   FORMAT ('0*** NOTE - PPDB DAILY DATA POINTERS RECORDS AND ',
     *   'DATA RECORDS HAVE BEEN SUCCESSFULLY COPIED.')
500   FORMAT ('0*** ERROR - IN URDDTA - DAIO ERROR READING DATA TYPE ',
     *   A,'. ISTAT=',I2)
510   FORMAT ('0*** ERROR - IN URDDTA - DAIO ERROR WRITING DATA TYPE ',
     *   A,'. ISTAT=',I2)
520   FORMAT (' *** EXIT URDDTA')
C
      END
