C MODULE URWRTS
C-----------------------------------------------------------------------
C
      SUBROUTINE URWRTS (ITSID,ITYPE,LTSREC,ITSREC,LTSHDR,LIWORK,IWORK,
     *   NUMTS,IFUTHR,ISTAT)
C
C  THIS ROUTINE WRITES A TIME SERIES TO THE NEW SET OF FILES.
C 
C  ARGUMENT LIST:
C
C       NAME     TYPE   I/O   DIM    DESCRIPTION
C       ------   ----   ---   ---    -----------
C       ITSID      A     I     1     TIME SERIES IDENTIFIER
C       ITYPE      A     I     1     TIME SERIES DATA TYPE
C       LTSREC     I     I     1     LENGTH OF ARRAY ITSREC
C       ITSREC     I     I     ?     TIME SERIES RECORD
C       LTSHDR     I     O     1     RECORD LOCATION OF TIME SERIES
C       LIWORK     I     I     1     LENGTH OF ARRAY IWORK
C       IWORK      I    I/O  LIWORK  WORK ARRAY
C       IFUTHR     I     I     1     FIRST FUTURE HOUR TO BE WRITTEN
C       ISTAT      I     O     1     STATUS CODE:
C                                      0=NORMAL RETURN
C                                      2=TIME SERIES TOO BIG, TRUNCATED
C                                      5=SYSTEM ERROR
C
      CHARACTER*4 XDISP,XTYPE
C
      DIMENSION ITSREC(*)
      DIMENSION IWORK(LIWORK)
      DIMENSION ITSIDF(2),ITSID(2),IFARR(3)
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'ucommon/uordrx'
      INCLUDE 'pdbcommon/pdtrrx'
      INCLUDE 'prdcommon/pdftbl'
      INCLUDE 'prdcommon/pdatas'
      INCLUDE 'urcommon/urprd'
      INCLUDE 'urcommon/urunts'
      INCLUDE 'urcommon/urftbl'
      INCLUDE 'urcommon/urcdta'
      INCLUDE 'urcommon/urtscl'
      INCLUDE 'urcommon/urmaxm'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/reorder/RCS/urwrts.f,v $
     . $',                                                             '
     .$Id: urwrts.f,v 1.5 2003/03/14 18:59:43 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (IPRTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,260)
         ENDIF
C
      ISTAT=0
C
C  FIND DATA TYPE IN NEW FILES
      IAMORD=1
      CALL PFDTYP (ITYPE,IDXNEW)
      XDISP='NEW'
      IF (IDXNEW.EQ.0) GO TO 210
C
C  FIND DATA TYPE IN OLD FILES
      IAMORD=0
      CALL PFDTYP (ITYPE,IDXOLD)
      XDISP='OLD'
      IF (IDXOLD.EQ.0) GO TO 210
C
C  SET NUMBER OF DAYS OF DATA
      MXDAYN=IDATFL(4,IDXNEW)
      MXDAYO=DATFIL(4,IDXOLD)
C
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,270) (IDATFL(J,IDXNEW),J=1,9)
         ENDIF
C
C  GET FUTURE ID
      CALL UMEMST (LBLNK,ITSIDF,2)
      IF (ITSREC(15).NE.0) THEN
         CALL PFDFID (ITSREC(15),ITYPE,IFARR,IERR)
         IF (IERR.NE.0) THEN
            WRITE (LP,275) 'PFDFID'
            CALL SUERRS (LP,2,-1)
            ISTAT=5
            GO TO 230
            ENDIF
         CALL UMEMOV (IFARR(1),ITSIDF,2)
         ENDIF
C
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,280) ITSREC(15),LBLNK,ITSIDF
         ENDIF
C
C  CREATE TIME SERIES IN NEW FILE
      INCLUDE 'prdcommon/desctshd'
C  NX=NUMBER OF WORDS IN EXTRA BUFFER
      NX=ITSREC(1)-LENHED
      IAMORD=1
      CALL WPRDH (ITSID,ITYPE,ITSREC(2),ITSREC(11),ITSREC(3),ITSREC(12),
     *   ITSIDF,ITSREC(18),NX,ITSREC(LENHED+1),LIWORK,IWORK,LTSHDR,
     *   IERR)
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,290) LTSHDR,ISTAT,LIWORK
         ENDIF
      IF (IERR.NE.0) THEN
         IF (IERR.EQ.2) GO TO 170
            CALL SWPRST ('WPRDH   ',ITSID,ITYPE,ITSREC(2),ITSREC(11),
     *         ITSIDF,LIWORK,ITSREC(3),IERR)
            ISTAT=1
            GO TO 230
         ENDIF
C
      IRECNO=LTSHDR
C
C  CHECK IF TIME SERIES HAS ANY DATA VALUES
      IF (ITSREC(5).LT.1) GO TO 90
C
      NUM=ITSREC(5)
      IPOS=ITSREC(6)
      JHOUR=ITSREC(14)
C
C  COMPUTE HOUR FUTURE DATA BEGINS
      NWDS=ITSREC(7)-ITSREC(6)
      NHOURS=NWDS/ITSREC(3)*ITSREC(2)
      IFTHR=NHOURS+JHOUR
      IF (NWDS.LT.0) IFTHR=0
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,300) (ITSREC(J),J=1,14),IFTHR
         ENDIF
C
C  CHECK IF TIME SERIES WILL FIT IN NEW FILES
      IF (MXDAYN.GE.MXDAYO) GO TO 80
      MXNUM=MXDAYN*(24/ITSREC(2))
      IF (NUM.LE.MXNUM) GO TO 80
      IF (IFTHR.GT.0) GO TO 10
C
C  ONLY OBSERVED DATA - KEEP MOST RECENT
      IPOS=IPOS+(NUM-MXNUM)*ITSREC(3)
      JHOUR=JHOUR+(NUM-MXNUM)*ITSREC(2)
      NUM=MXNUM
      GO TO 80
C
C  CHECK IF ONLY FUTURE DATA
10    IF (IFTHR.EQ.JHOUR) GO TO 50
C
C  MIX OF OBSERVED AND FUTURE
      NOBSO=(IFTHR-JHOUR)/ITSREC(2)
      NFUTO=NUM-NOBSO
      NMIN=MNDAYS*(24/ITSREC(2))
      NOBSN=NOBSO
      IF (NOBSN.GT.NMIN) NOBSN=NMIN
      NFUTN=NFUTO
      IF ((NOBSN+NFUTN)-MXNUM) 30,40,20
20    NFUTN=MXNUM-NOBSN
      IF (NFUTN.EQ.0) IFTHR=0
      GO TO 40
30    NOBSN=MXNUM-NFUTN
      IF (NOBSN.GT.NOBSO) NOBSN=NOBSO
40    NUM=NOBSN+NFUTN
      IPOS=IPOS+(NOBSO-NOBSN)*ITSREC(3)
      JHOUR=JHOUR+(NOBSO-NOBSN)*ITSREC(2)
      GO TO 80
C
C  ONLY FUTURE DATA
50    IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,310) IFUTHR
         ENDIF
      IF (IFUTHR.EQ.0) GO TO 70
      IF (JHOUR.GE.IFUTHR) GO TO 70
      IF (JHOUR+NUM*ITSREC(2).LT.IFUTHR) GO TO 60
C
C  RETAIN FUTURE DATA THAT FOLLOWS OBSERVED
      IDIF=(IFUTHR-JHOUR)/ITSREC(2)
      IPOS=IPOS+IDIF*ITSREC(3)
      JHOUR=JHOUR+IDIF*ITSREC(2)
      NUM=NUM-IDIF
      IF (NUM.GT.MXNUM) NUM=MXNUM
      IFTHR=JHOUR
      GO TO 80
C
C  FUTURE DATA BEFORE OBSERVED - KEEP MOST RECENT
60    IPOS=IPOS+(NUM-MXNUM)*ITSREC(3)
      JHOUR=JHOUR+(NUM-MXNUM)*ITSREC(2)
      NUM=MXNUM
      IFTHR=JHOUR
      GO TO 80
C
C  NO OBSERVED DATA OR FUTURE STARTS AFTER OBSERVED - KEEP
C  EARLIEST
70    NUM=MXNUM
C
C  COMPUTE NUMBER OF DATA VALUES
80    NVALS=ITSREC(3)*NUM
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,320) ITSID,ITYPE,JHOUR,NUM,NVALS,IPOS,IFTHR
         ENDIF
C
C  WRITE DATA TO NEW FILES
      IAMORD=1
      CALL WPRDD (ITSID,ITYPE,JHOUR,ITSREC(2),NUM,ITSREC(11),NVALS,
     *   LTSREC,ITSREC(IPOS),IFTHR,IDATFL(11,IDXNEW),LIWORK,IWORK,
     *   IRECNO,ISTAT)
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,330) IRECNO,ISTAT,LIWORK
         ENDIF
      IF (ISTAT.EQ.2) THEN
         WRITE (LP,335) ISTAT
         ENDIF
      IF (ISTAT.EQ.5) GO TO 190
      IF (ISTAT.NE.0 .AND. ISTAT.NE.2) THEN
         WRITE (LP,340) ISTAT,ITYPE,ITSID
         CALL SUERRS (LP,2,-1)
         GO TO 230
         ENDIF
C
90    NUMTS=NUMTS+1
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF TIME SERIES DATA TYPE IS A RRS TYPE
      IDEBUG=0
      DO 100 I=1,NTYPE
         IF (IDEBUG.GT.0) THEN
            WRITE (LP,350) NTYPE,I,ITYPE,IRTYPE(I),IUMISS(I)
            CALL ULINE (LP,1)
            ENDIF
         IF (ITYPE.EQ.IRTYPE(I)) GO TO 110
         IF (ITYPE.EQ.IUMISS(I)) GO TO 110
100      CONTINUE
         GO TO 120
110   IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,360) I,ITYPE
         ENDIF
C
C  UPDATE TIME SERIES HEADER RECORD NUMBER IN RRS PARAMETER RECORD
      CALL URTSPM (ITSID,LTSHDR,ITYPE,LIWORK,IWORK,IERR)
      IF (IERR.GT.0) ISTAT=1
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  CHECK IF TIME SERIES DATA TYPE IS MAPG OR MAPI
120   CALL SUBSTR (ITYPE,1,4,XTYPE,1)
      IF (XTYPE.EQ.'MAPI'.OR.XTYPE.EQ.'MAPG') GO TO 130
      GO TO 160
C
C  READ MARO PARAMETER RECORD
130   IAMORD=1
      IPTR=0
      CALL RPPREC (ITSID,'MARO',IPTR,LIWORK,IWORK,NFILL,IPTRNX,IERR)
      IF (IERR.EQ.0) GO TO 150
         IF (IERR.NE.2) GO TO 140
            WRITE (LP,370) 'MARO',ITSID,ITYPE
            CALL SUERRS (LP,2,-1)
            GO TO 160
140      CALL SRPPST (ITSID,'MARO',IPTR,LIWORK,NFILL,IPTRNX,IERR)
         GO TO 160
C
C  UPDATE TIMES SERIES RECORD NUMBER
150   REAL=LTSHDR+.01
      IF (XTYPE.EQ.'MAPG') IPOS=12
      IF (XTYPE.EQ.'MAPI') IPOS=13
      CALL UMEMOV (REAL,IWORK(IPOS),1)
C
C  WRITE MARO PARAMETER RECORD
      CALL WPPREC (ITSID,'MARO',NFILL,IWORK,IPTR,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPPST (ITSID,'MARO',NFILL,IPTR,IERR)
         WRITE (LP,380) 'MARO',ITSID,IERR
         CALL SUERRS (LP,2,-1)
         ENDIF
C
160   GO TO 240
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
170   ISTAT=0
      IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,180) ITSID,ITYPE
         ENDIF
180   FORMAT (' ID ',2A4,' TYPE ',A4,' HAS ALREADY BEEN ',
     *   'COPIED TO FILE ')
      GO TO 250
C
C  SYSTEM ERROR
190   WRITE (LP,200) ISTAT
      CALL SUERRS (LP,2,-1)
200   FORMAT ('0*** ERROR - IN URWRTS - WRITING TIME SERIES RECORD. ',
     *   'ISTAT=',I4)
      GO TO 230
C
210   WRITE (LP,220) ITYPE,XDISP
      CALL SUERRS (LP,2,-1)
220   FORMAT ('0*** ERROR - DATA TYPE ',A4,' NOT FOUND IN ',A4,
     *   ' FILES.')
C
C  SET ERROR FLAG
230   IWURFL=1
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
240   IF (IPRDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,390) (ITSREC(I),I=8,10)
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,400) (ITSREC(I),I=1,LENHDR)
         ENDIF
C
250   IF (IPRTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,410) ISTAT
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
260   FORMAT (' *** ENTER URWRTS')
270   FORMAT (' DATA/TYPE INDEX= ',A4,1X,8I6)
275   FORMAT ('0*** ERROR - IN URWRTS - ERROR ENCOUNTERED IN ',A,'.')
280   FORMAT (' ITSREC(15)=',I2,3X,'LBLNK=',A4,3X,'ITSIDF=',2A4)
290   FORMAT (' WPRDH CALLED - LTSHDR=',I8,' ISTAT=',I3,' LIWORK=',I8)
300   FORMAT (' ITSREC=',7I4,4A2,2F6.1,I8,3X,'IFTHR=',I8)
310   FORMAT (' IFUTHR=',I6)
320   FORMAT (' ITSID=',2A4,3X,'ITYPE=',A4,3X,'JHOUR=',I6,3X,
     *   'NUM=',I3,3X,'NVALS=',I5,3X,'IPOS=',I3,3X,'IFTHR=',I8)
330   FORMAT (' WPRD CALLED - IRECNO=',I8,' ISTAT=',I3,' LIWORK=',I8)
335   FORMAT ('0**WARNING** IN URWRTS - WPRDD STATUS CODE',I2
     *   ' ENCOUNTERED.')
340   FORMAT ('0*** ERROR - IN URWRTS - WPRD STATUS CODE ',I2,
     *   ' ENCOUNTERED WRITING ',A4,' DATA FOR IDENTIFIER ',2A4,'.')
350   FORMAT (' NTYPE=',I2,3X,'I=',I2,3X,'ITYPE=',A4,3X,
     *   'IRTYPE(I)=',A4,3X,'IUMISS(I)=',A4)
360   FORMAT (' I=',I2,' ITYPE=',A4)
370   FORMAT ('0*** ERROR - IN URWRTS - ',A4,' PARAMETER RECORD ',
     *   'FOR IDENTIFIER ',2A4,' NOT FOUND. TIME SERIES DATA TYPE IS ',
     *   A4,'.')
380   FORMAT ('0*** ERROR - IN URWRTS - WRITING ',A4,' PARAMETER ',
     *   'RECORD FOR IDENTIFIER ',2A4,'. WPPREC STATUS CODE=',I3,'.')
390   FORMAT (' ITSREC(8-10)=',3A4)
400   FORMAT (' ITSREC=',7I4,1X,4A4,2F7.2,4I7,1X,5A4)
410   FORMAT (' *** EXIT URWRTS : ISTAT=',I2)
C
      END
