C MODULE URFCCB
C-----------------------------------------------------------------------
C
C  ROUTINE TO COPY SEGMENT CARRYOVER FROM OLD TO NEW FILES.
C
      SUBROUTINE URFCCB (IFILSL,IUSESL,MC,C,KWOCRY,TYPMSG,ISTAT)
C
C  THERE CAN BE FEWER SLOTS ON THE NEW FILES (NSLOT2) THAN
C  ON THE EXISTING FILES (NSLOTS).  ANY INCOMPLETE SLOTS WILL BE
C  DROPPED FIRST, AND IF NECESSARY THE NSLOT2 MOST RECENT DATES
C  OF CARRYOVER WILL BE SELECTED TO BE MOVED.
C
C  THE NEW FILES HAVE SKELETON CARRYOVER WRITTEN INTO EACH SLOT.
C
      CHARACTER*(*) TYPMSG
      CHARACTER*4 XOP
C      
      DIMENSION IUSESL(*),C(MC)
      DIMENSION OLDNAM(2),ITMPDA(20),ITMPHR(20)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/errdat'
      INCLUDE 'common/fcsegc'
      INCLUDE 'common/fccgd'
      INCLUDE 'common/fccgd1'
      INCLUDE 'common/fccgd2'
      INCLUDE 'common/fcsegn'
      INCLUDE 'common/fcunit'
      INCLUDE 'common/fctime'
      INCLUDE 'common/where'
      INCLUDE 'urcommon/urunts'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/reorder/RCS/urfccb.f,v $
     . $',                                                             '
     .$Id: urfccb.f,v 1.6 1999/01/20 14:51:16 page Exp $
     . $' /
C    ===================================================================
C
      DATA IBLNK/4H    /
C
C
      IF (ITRACE.GT.0) WRITE (IODBUG,200)
C
      IBUG=IFBUG('FCCB')
C
      IOLDOP=IOPNUM
      IOPNUM=0
      CALL UMEMOV (OPNAME,OLDNAM,2)
      CALL UMEMOV ('URFCCB  ',OPNAME,2)
C
      ISTAT=0
C
      NUMERR=NERRS
C
      IF (IBUG.GT.0) WRITE (IODBUG,210) IDSEGN,NCOPS
C
C  CHECK IF SEGMENT HAS NO OPERATIONS WITH CARRYOVER
      IF (NCOPS.LT.1) GO TO 190
C
C  KWOCRY IS THE WORD OFFSET FOR THE SEGMENT IN THE OLD FILES
C  IWOCRY IS THE WORD OFFSET FOR THE SEGMENT IN THE NEW FILES
      ITMPWO=IWOCRY
      IWOCRY=KWOCRY
      IF (IBUG.GT.0) WRITE (IODBUG,*) 'IN URFCCB - KWOCRY=',KWOCRY
C
C  AFTER FIRST SEGMENT IN CARRYOVER GROUP HAVE FILLED IUSESL
      IF (IFILSL.EQ.1) GO TO 100
C
C  FILL COMMON BLOCK FCSEGC
      CALL FCDATE (IDSEGN,0)
C
      DO 10 ISLOT=1,NSLOTS
         IUSESL(ISLOT)=1
10       CONTINUE
C
      IF (IBUG.GT.0) WRITE (IODBUG,220) NSLOTS,NSLOT2
C
      IF (NSLOTS.LE.NSLOT2) GO TO 90
C
C  FEWER NEW SLOTS THAN OLD
      IF (IBUG.GT.0) WRITE (IODBUG,230)
      NUSESL=NSLOTS
      DO 40 ISLOT=1,NSLOTS
         IF (ICGID(1).EQ.IBLNK.AND.ICGID(2).EQ.IBLNK) GO TO 20
            IF (MOD(IPC(ISLOT),2).EQ.0) GO TO 30
            GO TO 40
20       IF (INCSEG(ISLOT).EQ.1) GO TO 40
C     INCOMPLETE SLOT - REMOVE
30       IUSESL(ISLOT)=0
         NUSESL=NUSESL-1
         IF (IBUG.GT.0) WRITE (IODBUG,240) ISLOT,NUSESL
         IF (NUSESL.LE.NSLOT2) GO TO 90
40       CONTINUE
C
C  GET DATES OF SLOTS STILL ELIGBLE FOR TRANSFER
      IF (IBUG.GT.0) WRITE (IODBUG,250)
      IX=0
      DO 50 ISLOT=1,NSLOTS
         IF (IUSESL(ISLOT).EQ.0) GO TO 50
            IX=IX+1
            ITMPDA(IX)=ICDAYC(ISLOT)
            ITMPHR(IX)=ICHRC(ISLOT)
50       CONTINUE
C
      IF (IBUG.GT.0) WRITE (IODBUG,260) IX,
     *   (ITMPDA(JJ),ITMPHR(JJ),JJ=1,IX)
C
      IF (IX.EQ.NUSESL) GO TO 60
         WRITE (IPR,270) IX,NUSESL
         CALL SUERRS (IPR,2,-1)
         GO TO 190
C
C  SORT DATES WITH MOST RECENT LAST
60    CALL FCOBBL (ITMPDA,ITMPHR,NUSESL)
C
      IF (IBUG.GT.0) WRITE (IODBUG,280) (ITMPDA(JJ),ITMPHR(JJ),JJ=1,IX)
C
C  DELETE OLDEST DATES UNTIL HAVE ONLY NSLOT2 DATES LEFT TO TRANSFER.
C  CAN SKIP ANY DATES ALREADY MARKED INCOMPLETE.
      NDEL=NUSESL-NSLOT2
      IF (IBUG.GT.0) WRITE (IODBUG,290) NDEL
      DO 80 I=1,NDEL
         DO 70 ISLOT=1,NSLOTS
            IF (IUSESL(ISLOT).EQ.0) GO TO 70
            XOP='EQ'
            CALL FDATCK (ICDAYC(ISLOT),ICHRC(ISLOT),ITMPDA(I),ITMPHR(I),
     *         XOP,ITRUE)
            IF (ITRUE.EQ.0) GO TO 70
C        DATES MATCH - MARK SLOT NOT FOR TRANSFER
            IUSESL(ISLOT)=0
            IF (IBUG.GT.0) WRITE (IODBUG,300) ISLOT
            GO TO 80
70          CONTINUE
         WRITE (IPR,310) ISLOT,ITMPDA(I),ITMPHR(I)
         CALL SUERRS (IPR,2,-1)
         GO TO 190
80       CONTINUE
C
90    IFILSL=1
C
100   IWOCRY=ITMPWO
C
C  PROCESS ALL SLOTS ON OLD FILES TRANSFERRING CARRYOVER TO NEW FILES
      IF (IBUG.GT.0) WRITE (IODBUG,330) IFILSL,(IUSESL(JJ),JJ=1,NSLOTS)
      ICNTSL=0
      DO 160 ISLOT=1,NSLOTS
         IF (IUSESL(ISLOT).EQ.0) GO TO 160
         IXDAY=ICDAYC(ISLOT)
         IXHR=ICHRC(ISLOT)
         ITMPWO=IWOCRY
         IWOCRY=KWOCRY
C     CHECK IN COMMON FCSEGN IF SEGMENT BELONGS TO CGROUP
         IF (ICGID(1).EQ.IBLNK.AND.ICGID(2).EQ.IBLNK) GO TO 110
C     CHECK IPC IN COMMON COMMON FCCGD1
         IF (MOD(IPC(ISLOT),2).EQ.0) GO TO 120
         GO TO 140
C     CHECK IF SEGMENT IS INCOMPLETE
110      IF (INCSEG(ISLOT).EQ.1) GO TO 140
120      IXDAY=0
         IXHR=0
         DO 130 NCX=1,NC
            C(NCX)=0.0
130         CONTINUE
         GO TO 150
C     READ FROM OLD FILES
140      IFW=0
         IF (IBUG.GT.0) WRITE (IODBUG,*)
     *      ' BEFORE CALL TO FGETCO:',
     *      ' IXDAY=',IXDAY,
     *      ' IXHR=',IXHR,
     *      ' '
         CALL FGETCO (IDSEGN,IXDAY,IXHR,C,NC,TYPMSG,IERR)
         IF (IERR.GT.0) THEN
            WRITE (IPR,320) IDSEGN
            CALL SUWRNS (IPR,2,-1)
            ISTAT=1
            ENDIF
C     WRITE TO NEW FILES
150      IWOCRY=ITMPWO
         KFTEMP=KFCRY
         KFCRY=LFCRY
         NRTEMP=NRSLOT
         NRSLOT=NRSLO2
         ICNTSL=ICNTSL+1
         IF (IBUG.GT.0) WRITE (IODBUG,*)
     *      ' BEFORE CALL TO FPUTCO:',
     *      ' IXDAY=',IXDAY,
     *      ' IXHR=',IXHR,
     *      ' '
         CALL FPUTCO (IDSEGN,IXDAY,IXHR,NOW,ICNTSL,IWOCRY,C,NC,0)
         NRSLOT=NRTEMP
         KFCRY=KFTEMP
160      CONTINUE
C
C  WHEN THE NEW FILES HAVE MORE SLOTS THAN THE OLD FILES, THE ADDITIONAL
C  SLOTS ARE ALL SET TO INCOMPLETE
      IF (NSLOT2.LE.NSLOTS) GO TO 190
         ISL2=NSLOTS+1
         KFTEMP=KFCRY
         KFCRY=LFCRY
         INCDA=0
         INCHR=0
         DO 170 NCX=1,NC
            C(NCX)=0.0
170         CONTINUE
         DO 180 ISLOT=ISL2,NSLOT2
            NRTEMP=NRSLOT
            NRSLOT=NRSLO2
            ICNTSL=ICNTSL+1
            CALL FPUTCO (IDSEGN,INCDA,INCHR,NOW,ICNTSL,IWOCRY,C,NC,0)
            NRSLOT=NRTEMP
180         CONTINUE
         KFCRY=KFTEMP
C
190   IOPNUM=IOLDOP
      CALL UMEMOV (OLDNAM,OPNAME,2)
C
C  CHECK IF ANY ERRORS ENCOUNTERED      
      NERR=NERRS-NUMERR
      IF (NERR.GT.0) ISTAT=1
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
200   FORMAT (' *** ENTER URFCCB')
210   FORMAT (' IN URFCCB - IDSEGN=',2A4,', NCOPS=',I4)
220   FORMAT (' IN URFCCB - NSLOTS=',I4,', NSLOT2=',I4)
230   FORMAT (' BEGINNING TO REMOVE INCOMPLETE SLOTS')
240   FORMAT (' REMOVING SLOT ',I4,' NUSESL=',I4)
250   FORMAT (' REMOVING INCOMPLETE SLOTS WAS NOT ENOUGH, ',
     *   'BEGIN TO ORDER REMAINING DATES WITH FCOBBL')
260   FORMAT (1X,I4,' DATES COPIED INTO TEMPORARY ARRAYS:' /
     *   5X,'JULDAY',5X,'HOUR' / (1X,I10,I8))
270   FORMAT ('0*** ERROR - IN URFCCB - IX (',I11,
     *   ') DOES NOT EQUAL NUSESL (',I11,').')
280   FORMAT (' TEMPORARY ARRAYS AFTER SORT BY FCOBBL:' /
     *   5X,'JULDAY',5X,'HOUR' / (1X,I10,I8))
290   FORMAT (' ABOUT TO DELETE OLDEST SLOTS, NDEL=',I4)
300   FORMAT (' MARKING SLOT ',I4,' TO NOT BE TRANSFERED')
310   FORMAT ('0*** ERROR - IN URFCCB - DATE TO BE DELETED ',
     *      'FROM CARRYOVER TRANSFER LIST DOES NOT MATCH A DATE IN ',
     *      'COMMON FCSEGC.' /
     *   13X,'ISLOT=',I4,' ITMPDA=',I11,' ITMPHR=',I3)
320   FORMAT ('0*** WARNING - IN URFCCB - READING CARRYOVER FOR ',
     *   'SEGMENT ',2A4,'.')
330   FORMAT (' IFILSL=',I5,' IUSESL=',20I3)
C
      END
