C MODULE URCPYR
C-----------------------------------------------------------------------
C
       SUBROUTINE URCPYR (PARMTP,LPARRY,IPARRY,LPPP24,IPPP24,
     *    LPPPVR,IPPPVR,LOG24O,IOG24O,LOG24N,IOG24N,ISTAT)
C
C  THIS ROUTINE COPIES THE PARAMETER RECORDS FOR A SPECIFIED
C  PARAMETER TYPE WHEN THE RECORDS WILL NOT BE REORDERED BUT
C  COPIED TO THE NEW FILES IN THE CURRENT ORDER.
C
C  ARGUMENT LIST:
C
C       NAME     TYPE  I/O  SIZE    DESCRIPTION
C       ------   ----  ---  ------  -----------
C       PARMTP    A4    I     1     PARAMETER TYPE
C       LPARRY    I     I     1     LENGTH OF IPARRY
C       IPARRY    I     I   LPARRY  WORK ARRAY OLD FILE PARMS
C       LPPP24    I     I     1     LENGTH OF IPPP24
C       IPPP24    I     I   LPPP24  WORK ARRAY PP24 POINTERS
C       LPPPVR    I     I     1     LENGTH OF IPPPVR
C       IPPPVR    I     I   LPPPVR  WORK ARRAY PPVR POINTERS
C       LOG24O    I     I     1     LENGTH OF IOG24O
C       IOG24O    I     I   LOG24O  OLD OG24 PARAMETER RECORD
C       LOG24N    I     I     1     LENGTH OF IOG24N
C       IOG24N    I     I   LOG24N  NEW OG24 PARAMETER RECORD
C       ISTAT     I     O     1     STATUS CODE:
C                                     0=NORMAL RETURN
C                                     >0=ERROR
C
      INCLUDE 'uio'
      INCLUDE 'udebug'
      INCLUDE 'udatas'
      INCLUDE 'ucommon/uordrx'
      INCLUDE 'urcommon/ursifc'
      INCLUDE 'urcommon/urppdt'
      INCLUDE 'urcommon/urcdta'
      INCLUDE 'urcommon/urunts'
C
      CHARACTER*4 XDTYPE,PARMTP
      CHARACTER*8 PARMID
      INTEGER*2 MSNG
      INTEGER*2 IPPP24(LPPP24)
      INTEGER*2 IPPPVR(LPPPVR)
      INTEGER*2 IOG24O(LOG24O)
      INTEGER*2 IOG24N(LOG24N)
      PARAMETER (LSIBUF=128)
      INTEGER*2 ISIBUF(LSIBUF)
C
      DIMENSION IPARRY(LPARRY)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/reorder/RCS/urcpyr.f,v $
     . $',                                                             '
     .$Id: urcpyr.f,v 1.6 2000/12/18 21:22:52 dws Exp $
     . $' /
C    ===================================================================
C
C
      IF (IPDTR.GT.0.OR.IPPTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'ENTER URCPYR'
         ENDIF
C
      CALL SULINE (LP,2)
      WRITE (LP,350) PARMTP
C
      ISTAT=0
C
      INDERR=0
C
      IF (PARMTP.NE.'GENL') GO TO 100
C
C  GET PP24 POINTERS
      XDTYPE='PP24'
      IRDATE=0
      LDATA=1
      LENDAT=1
      CALL RPDFIL (XDTYPE,IRDATE,LFPP24,LDFIL,ISTAT)
      IF (ISTAT.GT.0) GO TO 10
         IF (LFPP24.LE.LPPP24) GO TO 10
            WRITE (LP,360) XDTYPE,LPPP24,LFPP24
            CALL SUERRS (LP,2,-1)
            INDERR=1
            GO TO 20
10    IRETRN=2
      CALL RPDDLY (XDTYPE,IRDATE,IRETRN,LPPP24,IPPP24,LPFL,LDATA,IDATA,
     *   LDFL,NSTA,MSNG,LENDAT,IDATES,ISTAT)
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,370) LFPP24,LPFL,ISTAT
         ENDIF
      IF (LPFL.EQ.0) GO TO 240
      IF (ISTAT.EQ.0) GO TO 20
      GO TO (200,20,200,20,220,240,20,280),ISTAT
      GO TO 280
C
C  SET UPDATE INDICATOR FOR PARAMETER RECORD NUMBER
20    NPTR=5
      DO 30 I=1,LFPP24,NPTR
         IF (IPPP24(I).NE.0) THEN
            IPPP24(I+4)=-IPPP24(I+4)
            IF (IPPP24(I+4).EQ.0) IPPP24(I+4)=-1
            ENDIF
30       CONTINUE
C
C  GET PPVR POINTERS
      XDTYPE='PPVR'
      CALL RPDFIL (XDTYPE,IRDATE,LFPPVR,LDFIL,ISTAT)
      IF (ISTAT.GT.0) GO TO 40
         IF (LFPPVR.LE.LPPPVR) GO TO 40
            WRITE (LP,360) XDTYPE,LPPPVR,LFPPVR
            CALL SUERRS (LP,2,-1)
            INDERR=1
            GO TO 100
40    CALL RPDDLY (XDTYPE,IRDATE,IRETRN,LPPPVR,IPPPVR,LPFL,LDATA,IDATA,
     *   LDFL,NSTA,MSNG,LENDAT,IDATES,ISTAT)
      IF (IPPDB.GT.0) THEN
         CALL SULINE (LP,1)
         WRITE (IOGDB,380) LFPPVR,LPFL,ISTAT
         ENDIF
      IF (LPFL.EQ.0) GO TO 100
      IF (ISTAT.EQ.0) GO TO 50
      GO TO (200,50,200,50,220,240,50,280),ISTAT
      GO TO 280
C
C  SET UPDATE INDICATOR FOR PARAMETER RECORD NUMBER
50    NPTR=4
      DO 60 I=1,LFPPVR,NPTR
         IPPPVR(I)=-IPPPVR(I)
60       CONTINUE
C
C  GET OG24 PARAMETER RECORD
      PARMID=' '
      IPTR=0
      NOOG24=0
      IAMORD=0
      CALL RPPREC (PARMID,'OG24',IPTR,LOG24O,IOG24O,NOG24O,IPTRNX,ISTAT)
      IF (ISTAT.EQ.2.OR.ISTAT.EQ.4) GO TO 90
      IF (ISTAT.GT.0) THEN
         CALL SRPPST (PARMID,'OG24',IPTR,LOG24O,NOG24O,IPTRNX,ISTAT)
         GO TO 320
         ENDIF
      NPOG24=NOG24O*2
      DO 70 I=1,NPOG24
         IOG24N(I)=IOG24O(I)
70       CONTINUE
      IBOG24=5*2+1
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,390) NPOG24,IBOG24
         ENDIF
      DO 80 I=IBOG24,NPOG24,2
         IOG24N(I)=-1
80       CONTINUE
      GO TO 100
C
C  OG24 PARAMETER RECORD DOES NOT EXIST
90    CALL SULINE (LP,2)
      WRITE (LP,400)
      ISTAT=0
      NOOG24=1
C
100   IF (INDERR.GT.0) GO TO 320
C
      IRECNO=0
      IPTRNX=0
      NPASS=0
      NPTYPE=0
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
C  READ PARAMETER RECORD FROM OLD FILES
110   PARMID=' '
      IAMORD=0
      CALL RPPREC (PARMID,PARMTP,IRECNO,LPARRY,IPARRY,NUMFIL,IPTRNX,
     *   ISTAT)
      IF (ISTAT.EQ.6) GO TO 170
      IF (ISTAT.GT.0) THEN
         CALL SRPPST (PARMID,PARMTP,IRECNO,LPARRY,NUMFIL,IPTRNX,ISTAT)
         GO TO 320
         ENDIF
C
      IF (PARMID.EQ.'CANC2') THEN
         IFOUND=1
         ENDIF
C
C  FIND TYPE IN DIRECTORY
      IDX=IPCKDT(PARMTP)
      IF (IDX.EQ.0) THEN
         WRITE (LP,410) PARMTP
         CALL SUERRS (LP,2,-1)
         GO TO 320
         ENDIF
C
C  CHECK IF THIS IS A GENL RECORD
      IF (PARMTP.NE.'GENL') GO TO 130
C
C  CHECK IF STATION IS INCOMPLETE
      CALL UMEMOV (IPARRY(15),REAL,1)
      ICSTAN=REAL
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'ICSTAN=',ICSTAN
         ENDIF
      IF (ICSTAN.EQ.1) THEN
         CALL SULINE (LP,2)
         WRITE (LP,420) PARMID
         ENDIF
C
C  SET RECORD LOCATIONS TO -9999 FOR PCPN, TEMP, PE AND RRS IF DEFINED
      CALL UMEMOV (IPARRY(18),REAL,1)
      NUMGPS=REAL
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'NUMGPS=',NUMGPS
         ENDIF
      IPOS=19+NUMGPS
      DO 120 I=1,NUMGPS
         CALL UMEMOV (IPARRY(IPOS),REAL,1)
         IF (REAL.GT.0.0) IPARRY(IPOS)=-9999
         IF (IPPDB.GT.0) THEN
            CALL SULINE (IOGDB,1)
            WRITE (IOGDB,*) 'PARMID=',PARMID,' PARMTP=',PARMTP,
     *         ' I=',I,' IPOS=',IPOS,
     *         ' REAL=',REAL,' IPARRY(IPOS)=',IPARRY(IPOS)
            ENDIF
         IPOS=IPOS+1
120      CONTINUE
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,430) (IPARRY(I),I=18,27)
         ENDIF
C
C  WRITE THE PARAMETER RECORDS TO THE NEW FILE
130   IRECNN=0
      IAMORD=1
      CALL WPPREC (PARMID,PARMTP,NUMFIL,IPARRY,IRECNN,ISTAT)
      IF (ISTAT.GT.0) THEN
         CALL SWPPST (PARMID,PARMTP,NUMFIL,IRECNN,ISTAT)
         GO TO 320
         ENDIF
      NPTYPE=NPTYPE+1
C
      IF (PARMTP.NE.'GENL') GO TO 170
C
C  UPDATE RECORD NUMBER IN SIF RECORD
      CALL PDFNDR (PARMID,LSIBUF,IFINDC,ISIREC,ISIBUF,IFREEC,ISTAT)
      IF (ISTAT.GT.0) THEN
         WRITE (LP,440) PARMID,ISIREC
         CALL SUERRS (LP,2,-1)
         GO TO 320
         ENDIF
C
C  CHECK IF STATION FOUND
      IF (IFINDC.EQ.0) THEN
C     CHECK IF STATION IS COMPLETE
         IF (ICSTAN.EQ.0) THEN
            WRITE (LP,450) PARMID
            CALL SUERRS (LP,2,-1)
            ENDIF
         GO TO 170
         ENDIF
C
      ISIBUF(7)=IRECNN
C
C  WRITE SIF RECORD
      NWDS=ISIBUF(1)
      LEN=LRLURI*2
      NREC=IUNRCD(NWDS,LEN)
      CALL WVLRCD (KURSIF,ISIREC,NREC,ISIBUF,LRLURI,ISTAT)
      IF (ISTAT.GT.0) THEN
         WRITE (LP,460) PARMID,ISIREC
         CALL SUERRS (LP,2,-1)
         GO TO 320
         ENDIF
C
C  CHECK IF STATION HAS PP24 DATA
      IF (ISIBUF(8).EQ.0) GO TO 140
C
C  SET PP24 POINTER ARRAY SLOT NUMBER
      IXPP24=(ISIBUF(8)-1)*5+3
C      
C  IF POINTER IS GREATER THAN ZERO STORE POINTER TO PPVR
      IF (IPPP24(IXPP24).GT.0) THEN
         IF (IPPP24(IXPP24).GT.LFPPVR) THEN
            WRITE (LP,461) IPPP24(IXPP24),IXPP24,LFPPVR,PARMID
            CALL SUERRS (LP,2,-1)
            ENDIF
         IPPPVR(IPPP24(IXPP24))=IRECNN
         ENDIF
C      
C  IF POINTER IS LESS THAN ZERO STORE GENL RECORD NUMBER
      IF (IPPP24(IXPP24).LT.0) THEN
         IVALUE=-IRECNN
         CALL PDCKI2 (IVALUE,IERR)
         IF (IERR.GT.0) THEN
            WRITE (LP,462) IXPP24,PARMID
            CALL SUERRS (LP,2,-1)
            ENDIF
         IPPP24(IXPP24)=-IRECNN
         ENDIF
C
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,470) PARMID,ISIREC,IRECNN,IXPP24,IPPP24(IXPP24)
         ENDIF
C
C  CHECK IF OG24 PARAMETERS FOUND
140   IF (NOOG24.EQ.1) GO TO 170
C
C  CHECK IF STATION HAS GRID POINT ADDRESS
      IF (IPARRY(17).LE.0) THEN
         IF (IPPDB.GT.0) THEN
            CALL SULINE (IOGDB,1)
            WRITE (IOGDB,480) PARMID
            ENDIF
         GO TO 170
         ENDIF
C
C  FIND OLD GENL RECORD NUMBER IN OG24 PARAMETER ARRAY
      DO 150 IPOS=IBOG24,NPOG24,2
         IF (IPPDB.GT.0.AND.NPASS.EQ.0) THEN
            CALL SULINE (IOGDB,1)
            WRITE (IOGDB,490) NPOG24,IBOG24,IPOS,IOG24N(IPOS),IRECNO
            ENDIF
         IF (IRECNO.EQ.IOG24O(IPOS)) GO TO 160
150      CONTINUE
         WRITE (LP,500) IRECNO,PARMID,'OG24'
         CALL SUWRNS (LP,2,-1)
         GO TO 170
C
C  UPDATE GENL RECORD NUMBER IN NEW OG24 PARAMETER ARRAY
160   IOG24N(IPOS)=IRECNN
C
      IF (IPPDB.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,510) PARMID,IBOG24,NPOG24,IPOS,IRECNN
         ENDIF
C
170   IF (IPTRNX.GT.0) THEN
         IRECNO=IPTRNX
         NPASS=1
         GO TO 110
         ENDIF
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      IF (PARMTP.NE.'GENL') GO TO 190
C
C  WRITE POINTERS
      XDTYPE='PP24'
      CALL URWPTR (XDTYPE,IPPP24,ISTAT)
      IF (ISTAT.NE.0) GO TO 260
      XDTYPE='PPVR'
      CALL URWPTR (XDTYPE,IPPPVR,ISTAT)
      IF (ISTAT.NE.0) GO TO 260
C
      IF (NOOG24.EQ.1) GO TO 190
C
C  CHECK IF ALL RECORD NUMBERS UPDATED
      DO 180 I=IBOG24,NPOG24,2
         IF (IOG24N(I).NE.-1) GO TO 180
            IPOS=(I-IBOG24)/2+1
            WRITE (LP,520) IPOS,'OG24'
            CALL SUERRS (LP,2,-1)
180      CONTINUE
C
C  WRITE OG24 PARAMETER RECORD TO NEW FILES
      PARMID=' '
      PARMTP='OG24'
      IREC=0
      IAMORD=1
      CALL WPPREC (PARMID,PARMTP,NOG24O,IOG24N,IREC,ISTAT)
      IF (ISTAT.GT.0) THEN
         CALL SWPPST (PARMID,PARMTP,NOG24O,IREC,ISTAT)
         GO TO 320
         ENDIF
C
190   CALL SULINE (LP,2)
      WRITE (LP,525) NPTYPE,PARMTP
      GO TO 330
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
200   WRITE (LP,210) LPFL,XDTYPE
      CALL SUERRS (LP,2,-1)
210   FORMAT ('0*** ERROR - IN URCPYR - POINTERS ARRAY TOO SMALL. ',
     *   'NEED ',I6,' WORDS FOR ',A,'.')
      GO TO 320
C
220   WRITE (LP,230) XDTYPE
      CALL SUERRS (LP,2,-1)
230   FORMAT ('0*** ERROR - IN URCPYR - DATA TYPE ',A,
     *   ' NOT FOUND IN PREPROCESSOR DATA BASE.')
      GO TO 320
C
240   WRITE (LP,250) XDTYPE
      CALL SUERRS (LP,2,-1)
250   FORMAT ('0*** ERROR - IN URCPYR - NO STATIONS DEFINED FOR ',
     *   'FOR DATA TYPE ',A,' IN PREPROCESSOR DATA BASE.')
      GO TO 320
C
260   WRITE (LP,270) XDTYPE
      CALL SUERRS (LP,2,-1)
270   FORMAT ('0*** ERROR - IN URCPYR - WRITING POINTERS FOR DATA ',
     *   'TYPE ',A,'.')
      GO TO 320
C
280   WRITE (LP,290) ISTAT
      CALL SUERRS (LP,2,-1)
290   FORMAT ('0*** ERROR - IN URCPYR - SYSTEM ERROR. STATUS= ',I2)
      GO TO 320
C
C  SET ERROR FLAG
320   IWURFL=1
C
330   IF (IPDTR.GT.0.OR.IPPTR.GT.0) THEN
         CALL SULINE (IOGDB,1)
         WRITE (IOGDB,*) 'EXIT URCPYR'
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
350   FORMAT ('0*** NOTE - BEGIN TO COPY  << ',A,' PARAMETER >>  ',
     *   'RECORDS.')
360   FORMAT ('0*** ERROR - IN URCPYR - ARRAY TO HOLD POINTERS FOR ',
     *   'DATA TYPE ',A,' TOO SMALL. ',I5,' AVAILABLE. ',
     *   I5,' NEEDED.')
370   FORMAT (' LFPP24=',I5,3X,'LPFL=',I5,3X,'ISTAT=',I3)
380   FORMAT (' LFPPVR=',I5,3X,'LPFL=',I5,3X,'ISTAT=',I3)
390   FORMAT (' NPOG24=',I5,3X,'IBOG24=',I2)
400   FORMAT ('0*** NOTE - PARAMETER TYPE OG24 NOT FOUND.')
410   FORMAT ('0*** ERROR - IN URCPYR - TYPE ',A,
     *   ' NOT FOUND IN PARAMETER TYPE DIRECTORY.')
420   FORMAT ('0*** NOTE - STATION ',A,' IS INCOMPLETE.')
430   FORMAT (' GENL PARAMETER RECORD ',F5.2,2A4,7F8.2)
440   FORMAT ('0*** ERROR - IN URCPYR - READING SIF FOR STATION ',A,
     *   '. ISIREC=',I6)
450   FORMAT ('0*** ERROR - IN URCPYR - STATION ',A,
     *   ' NOT FOUND IN NEW PREPROCESSOR DATA BASE.')
460   FORMAT ('0*** ERROR - IN URCPYR - WRITING SIF FOR STATION ',A,
     *   '. ISIREC=',I6)
461   FORMAT ('0*** ERROR - IN URCPYR - PPVR SLOT (',I5,') ',
     *   'FOR PP24 SLOT ',I5,' ',
     *   'EXCEEDS THE NUMBER OF PPVR POINTERS (',I5,') ',
     *   'FOR STATION ',A,'.')
462   FORMAT ('0*** ERROR - IN URGENL - INVALID INTEGER*2 VALUE ',
     *   'ENCOUNTERED FOR FOR PP24 POINTER AT SLOT ',I5,' ',
     *   'FOR STATION ',A,'.')
470   FORMAT (' PARMID=',A,3X,'ISIREC=',I6,3X,'IRECNN=',I6,3X,
     *   'IXPP24=',I6,3X,'IPPP24(IXPP24)=',I6)
480   FORMAT (' STATION ',A,' DOES NOT HAVE A GRID POINT ADDRESS')
490   FORMAT (' NPOG24=',I5,3X,'IBOG24=',I2,3X,'IPOS=',I5,3X,
     *   'IOG24N(IPOS)=',I6,3X,'IRECNO=',I6)
500   FORMAT ('0*** WARNING - IN URCPYR - GENL RECORD NUMBER ',I6,
     *   ' FOR STATION ',A,' NOT FOUND IN OLD ',A,
     *   ' PARAMETER ARRAY.')
510   FORMAT (' PARMID=',A,3X,'IBOG24=',I5,3X,'NPOG24=',I5,3X,
     *  'IPOS=',I5,3X,'IRECNN=',I6)
520   FORMAT ('0*** ERROR - IN URCPYR - GENL RECORD NUMBER AT ',
     *   'POSITION ',I5,' OF ',A,' PARAMETER ARRAY NEVER UPDATED.')
525   FORMAT ('0*** NOTE - ',I4,1X,A,' PARAMETER RECORDS HAVE BEEN ',
     *      'SUCCESSFULLY COPIED.')
C
      END
