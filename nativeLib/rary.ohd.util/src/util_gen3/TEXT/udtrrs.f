C MEMBER UDTRRS
C-----------------------------------------------------------------------
C
C  ROUTINNE TO READ NWSRFS RRS DATA TYPE FILE.
C
      SUBROUTINE UDTRRS (MTYPE,NTYPE,TYPE,ICLASS,ITIME,UMISS,
     *   UNTIN,UNTOUT,DISTRB,LFIELD,NUMDEC,CHKMIN,CHKMAX,ISTAT)
C
C  INPUT ARGUMENTS:
C       MTYPE  - SIZE OF DATA TYPE ARRAY
C
C  OUTPUT ARGUMENTS:
C       NTYPE  - NUMBER OF DATA TYPES FOUND
C       TYPE   - ARRAY OF DATA TYPES
C       ICLASS - ARRAY OF DATA CLASSES
C                 0 = NOT DEFINED
C                 1 = STAGE (STG) DATA
C                 2 = INSTANTANEOUS DISCHARGE (INQ) DATA
C                 3 = MEAN DISCHARGE (MNQ) DATA
C                 4 = RESERVOIR (RES) DATA
C                 5 = INSTANTANEOUS MISCELLANEOUS (INM) DATA
C                 6 = MEAN MISCELLANEOUS (INM) DATA
C       ITIME  - ARRAY OF DATA TIME INDICATORS
C                 0 = NOT DEFINED
C                 2 = INSTANTANEOUS
C                 3 = MEAN
C       UMISS  - ARRAY OF MISSING ALLOWED INDICATORS
C                 'SAME' = MISSING ALLOWED
C                 OTHER = MISSING NOT ALLOWED - CODE FOR OUTPUT DATA
C                         TYPE
C       UNTIN  - ARRAY OF UNITS IN WHICH DATA STORED ON PPDB
C       UNTOUT - ARRAY OF UNITS IN WHICH DATA WRITTEN TO PDB
C       DISTRB - ARRAY OF DISTRIBUTION INDICATORS
C       LFIELD - FIELD LENGTH TO BE USED WHEN PRINTING VALUES
C       NUMDEC - NUMBER OF DECIMAL PLACES TO BE USED WHEN PRINTING VALUE
C       CHKMIN - MINIMUM VALID VALUE ALLOWED WHEN WRITING DATA TO PPDB
C       CHKMAX - MAXIMIM VALID VALUE ALLOWED WHEN WRITING DATA TO PPDB
C       ISTAT  - STATUS INDICATOR
C                 0 = NO ERROR
C                 1 = INVALID CLASS OR TIME INDICATOR FOUND
C                 2 = DATA ARRAY SIZE EXCEEDED
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      CHARACTER*4 XTYPE,XTIME,XCLASS,XUMISS,XUTIN,XUTOUT,XDIST
      CHARACTER*4 TYPE(1),UMISS(1),UNTIN(1),UNTOUT(1),DISTRB(1)
      CHARACTER*8 TMBR,SEQNUM
      CHARACTER*8 DDN/' '/
      CHARACTER*8 BLNK8/' '/
      CHARACTER*8 PDSMBR/'RRSTYPE2'/
      CHARACTER*72 CARD
      CHARACTER*48 DESC
      CHARACTER*80 REC
C
      DIMENSION ICLASS(1),ITIME(1),LFIELD(1),NUMDEC(1)
      DIMENSION CHKMIN(1),CHKMAX(1)
C
      INCLUDE 'uiox'
      INCLUDE 'ucmdbx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/util/src/util_gen3/RCS/udtrrs.f,v $
     . $',                                                             '
     .$Id: udtrrs.f,v 1.1 1995/09/17 19:03:30 dws Exp $
     . $' /
C    ===================================================================
C
C
C
      IF (ICMTRC.GT.0) WRITE (ICMPRU,120)
      IF (ICMDBG.GT.0) WRITE (ICMPRU,130) MTYPE
C
      ISTAT=0
C
      NTYPE=0
      NTYPEA=0
      NUMREC=0
C
C  INITIALZE ARRAYS
      DO 10 I=1,MTYPE
         TYPE(I)='????'
         IF (ICLASS(1).NE.-99) ICLASS(I)=-1
         IF (ITIME(1).NE.-99) ITIME(I)=-1
         IF (UMISS(1).NE.'NONE') UMISS(I)='????'
         IF (UNTIN(1).NE.'NONE') UNTIN(I)='????'
         IF (UNTOUT(1).NE.'NONE') UNTOUT(I)='????'
         IF (DISTRB(1).NE.'NONE') DISTRB(I)='????'
         IF (LFIELD(1).NE.-99) LFIELD(I)=-1
         IF (NUMDEC(1).NE.-99) NUMDEC(I)=-1
         IF (CHKMIN(1).NE.-99.) CHKMIN(I)=-999.
         IF (CHKMAX(1).NE.-99.) CHKMAX(I)=-999.
10       CONTINUE
C
      IF (ICMDBG.GT.0) WRITE (ICMPRU,140) DDN,PDSMBR
      TMBR=PDSMBR
C
C  CHECK IF DATASET IS ALLOCATED
      IPRERR=1
      CALL UDDNST (DDN,LSYS,IPRERR,IERR)
      IF (IERR.GT.0) THEN
         ISTAT=1
         GO TO 110
         ENDIF
C
20    NXTCRD=1
C
C  READ RECORD
30    CALL URDPDS (DDN,TMBR,IPRERR,REC,LRECL,NUMREC,IFLAG,IRCPDS)
      IF (IRCPDS.EQ.0.OR.IRCPDS.EQ.2) GO TO 40
         WRITE (LP,160) IRCPDS
         GO TO 90
C
40    IF (ICMDBG.GT.1) WRITE (ICMPRU,170) LRECL,REC(1:LRECL)
      SEQNUM=REC(73:80)
C
C  CHECK FOR BLANK LINE
      IF (REC(1:72).EQ.' ') THEN
         IF (IRCPDS.EQ.2) GO TO 90
         GO TO 30
         ENDIF
C
C  CHECK FOR COMMENT CARD
      IF (REC(1:1).EQ.'*') THEN
         IF (ICMDBG.GT.0) THEN
            CALL SUBSTR (REC,1,72,CARD,1)
            WRITE (ICMPRU,230) SEQNUM,CARD
            ENDIF
50       IF (IRCPDS.EQ.2) GO TO 90
         GO TO 30
         ENDIF
C
60    GO TO (70,80),NXTCRD
C
C  FIRST RECORD HAS DESCRIPTION
70    NXTCRD=2
      IF (ICMDBG.GT.1) THEN
         CALL SUBSTR (REC,6,48,DESC,1)
         WRITE (ICMPRU,240) SEQNUM,DESC
         ENDIF
      GO TO 30
C
C  SECOND RECORD CONTAINS DESCRIPTORS - MOVE DATA FROM RECORD INTO
C  VARIABLES
80    CALL SUBSTR (REC,1,4,XTYPE,1)
      CALL SUBSTR (REC,6,3,XCLASS,1)
      CALL SUBSTR (REC,10,4,XTIME,1)
      CALL SUBSTR (REC,15,4,XUMISS,1)
      CALL SUBSTR (REC,20,4,XUTIN,1)
      CALL SUBSTR (REC,25,4,XUTOUT,1)
      CALL SUBSTR (REC,30,4,XDIST,1)
      IF (ICMDBG.GT.1) WRITE (ICMPRU,180) XTYPE,XTIME,XUMISS,XCLASS,
     *   XUTIN,XUTOUT,XDIST
C
C  CONVERT CLASS INDICATOR
      NCLASS=0
      IF (XCLASS.EQ.'STG') NCLASS=1
      IF (XCLASS.EQ.'INQ') NCLASS=2
      IF (XCLASS.EQ.'MNQ') NCLASS=3
      IF (XCLASS.EQ.'RES') NCLASS=4
      IF (XCLASS.EQ.'INM') NCLASS=5
      IF (XCLASS.EQ.'MNM') NCLASS=6
      IF (NCLASS.EQ.0) THEN
         WRITE (LP,210) XCLASS
         ISTAT=1
         ENDIF
C
C  CONVERT TIME INDICATOR
      NTIME=0
      IF (XTIME.EQ.'MEAN') NTIME=3
      IF (XTIME.EQ.'INST') NTIME=2
      IF (NTIME.EQ.0) THEN
         WRITE (LP,220) XTIME
         ISTAT=1
         ENDIF
C
C  CONVERT CHARACTER STRING TO INTEGER OR REAL VALUES
      CALL UFA2I (REC,35,1,LFLDX,IPRERR,LP,IERR)
      CALL UFA2I (REC,37,1,NDECX,IPRERR,LP,IERR)
      NDEC=0
      CALL UFA2F (REC,39,4,NDEC,CMINX,IPRERR,LP,IERR)
      CALL UFA2F (REC,45,8,NDEC,CMAXX,IPRERR,LP,IERR)
C
C  CHECK FOR ENOUGH SPACE IN ARRAYS
      NTYPE=NTYPE+1
      IF (ICMDBG.GT.0) WRITE (ICMPRU,250) NTYPE
      IF (NTYPE.GT.MTYPE) THEN
         IF (NTYPEA.EQ.0) WRITE (LP,260) MTYPE
         NTYPEA=NTYPEA+1
         ISTAT=2
         ENDIF
C
C  STORE DATA TYPE AND ATTRIBUTES
      IF (ISTAT.EQ.0) THEN
         TYPE(NTYPE)=XTYPE
         IF (ICLASS(1).NE.-99) ICLASS(NTYPE)=NCLASS
         IF (ITIME(1).NE.-99) ITIME(NTYPE)=NTIME
         IF (UMISS(1).NE.'NONE') UMISS(NTYPE)=XUMISS
         IF (UNTIN(1).NE.'NONE') UNTIN(NTYPE)=XUTIN
         IF (UNTOUT(1).NE.'NONE') UNTOUT(NTYPE)=XUTOUT
         IF (DISTRB(1).NE.'NONE') DISTRB(NTYPE)=XDIST
         IF (LFIELD(1).NE.-99) LFIELD(NTYPE)=LFLDX
         IF (NUMDEC(1).NE.-99) NUMDEC(NTYPE)=NDECX
         IF (CHKMIN(1).NE.-99.) CHKMIN(NTYPE)=CMINX
         IF (CHKMAX(1).NE.-99.) CHKMAX(NTYPE)=CMAXX
         ENDIF
C
      IF (IRCPDS.EQ.2) GO TO 90
      NXTCRD=1
      GO TO 30
C
90    IF (ICMDBG.GT.0) WRITE (ICMPRU,190) NUMREC,PDSMBR
      IF (ISTAT.EQ.1) THEN
         IF (NTYPEA.GT.0) WRITE (LP,270) NTYPEA
         NTYPE=NTYPE-NTYPEA
         ENDIF
C
C  CLOSE DATASET
100   CALL URDPDS (DDN,BLNK8,IPRERR,REC,LRECL,NUMREC,IFLAG,IRCPDS)
C
110   IF (ICMDBG.GT.0) WRITE (ICMPRU,280) NTYPE
      IF (ICMTRC.GT.0) WRITE (ICMPRU,290) ISTAT
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
120   FORMAT (' *** ENTER UDTRRS')
130   FORMAT (' MTYPE=',I3)
140   FORMAT (' DDN=',A,3X,'PDSMBR=',A)
150   FORMAT ('0*** ERROR - IN UDTRRS - SYSTEM DATASET NOT ',
     *   'ALLOCATED TO UNIT ',I2,'.')
160   FORMAT ('0*** ERROR - IN UDTRRS - URRPDS CALLED. STATUS CODE=',
     *   I2,'.')
170   FORMAT (' LRECL=',I2,' REC=',A)
180   FORMAT (' XTYPE=',A,3X,'XTIME=',A,3X,'XUMISS=',A,3X,
     *   'XCLASS=',A,3X,'XUTIN=',A,3X,'XUTOUT=',A,3X,'XDIST=',A)
190   FORMAT (' ',I5,' RECORDS READ FROM MEMBER ',A)
200   FORMAT ('0*** WARNING - IN UDTRRS - INVALID MISSING INDICATOR : ',
     *     A)
210   FORMAT ('0*** WARNING - IN UDTRRS - INVALID ICLASS INDICATOR : ',
     *     A)
220   FORMAT ('0*** WARNING - IN UDTRRS - INVALID ITIME INDICATOR : ',
     *     A)
230   FORMAT (' ',A,1X,A)
240   FORMAT (' SEQNUM=',A,3X,'DESC=',A)
250   FORMAT (' NTYPE=',I3)
260   FORMAT ('0*** ERROR - IN UDTRRS - MAXIMUM NUMBER OF DATA TYPES (',
     *   I3,') EXCEEDED.')
270   FORMAT ('0*** NOTE - IN UDTRRS - ',I2,' DATA TYPES NOT ',
     *   'PROCESSED BECAUSE MAXIMUM TYPES EXECEDED.')
280   FORMAT (' NTYPE=',I3)
290   FORMAT (' *** EXIT UDTRRS : STATUS CODE=',I2)
C
      END
