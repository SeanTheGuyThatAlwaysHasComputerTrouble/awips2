C MODULE SWUGNL
C-----------------------------------------------------------------------
C
C  ROUTINE WRITE USER GENERAL PARAMETERS.
C
      SUBROUTINE SWUGNL (IVUGNL,UNSD,UGNLID,ISEASN,MDRSUB,ULLMTS,
     *   ELLMTS,NBLEND,ICUGNL,DPOWER,DPCNMN,STMNWT,SORTBY,NHPSUB,
     *   LARRAY,ARRAY,DISP,ISTAT)
C
      CHARACTER*4 DISP
      CHARACTER*8 PARMID/' '/
C
      DIMENSION ARRAY(LARRAY)
      DIMENSION UGNLID(2),ISEASN(2),MDRSUB(4),ULLMTS(4),ELLMTS(2)
      DIMENSION NBLEND(2),ICUGNL(2),DPOWER(3),NHPSUB(4)
C
      INCLUDE 'uio'
      INCLUDE 'scommon/sudbgx'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/shared_s/RCS/swugnl.f,v $
     . $',                                                             '
     .$Id: swugnl.f,v 1.3 2000/07/21 20:04:44 page Exp $
     . $' /
C    ===================================================================
C
C
C
      IF (ISTRCE.GT.1) THEN
         WRITE (IOSDBG,160)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
C  SET DEBUG LEVEL
      LDEBUG=ISBUG('UGNL')
C
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,170) IVUGNL,UNSD,LARRAY
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      ISTAT=0
C
C  CHECK FOR SUFFICIENT SPACE IN PARAMETER ARRAY
      MINLEN=41
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'MINLEN=',MINLEN
         CALL SULINE (IOSDBG,1)
         ENDIF
      IF (MINLEN.GT.LARRAY) THEN
         WRITE (LP,210) LARRAY,MINLEN
         CALL SUERRS (LP,2,-1)
         ISTAT=1
         GO TO 150
         ENDIF
C
      IF (DISP.EQ.'NEW') GO TO 20
C
C  READ PARAMETER ARRAY TO GET ALL OLD VALUES
      CALL SUDOPN (1,'PPP ',IERR)
      IPTR=0
      CALL RPPREC (PARMID,'USER',IPTR,LARRAY,ARRAY,NFILL,IPTRNX,
     *   IERR)
      IF (IERR.NE.0) THEN
         ISTAT=IERR
         CALL SRPPST (PARMID,'USER',IPTR,LARRAY,NFILL,IPTRNX,IERR)
         GO TO 150
         ENDIF
C
20    NPOS=0
C
C  STORE PARAMETER ARRAY VERSION NUMBER
      NPOS=NPOS+1
      ARRAY(NPOS)=IVUGNL+.01
C
C  STORE USER NAME
      DO 30 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=UGNLID(I)
30       CONTINUE
C
C  STORE BEGINNING MONTH OF SUMMER AND WINTER SEASONS
      DO 40 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=ISEASN(I)+.01
40       CONTINUE
C
C  STORE MDR GRID SUBSET
      DO 50 I=1,4
         NPOS=NPOS+1
         IF (MDRSUB(I).LT.0) ARRAY(NPOS)=MDRSUB(I)-.01
         IF (MDRSUB(I).GT.0) ARRAY(NPOS)=MDRSUB(I)+.01
50       CONTINUE
C
C  STORE LATITUDE AND LONGITUDE LIMITS
      DO 60 I=1,4
         NPOS=NPOS+1
         ARRAY(NPOS)=ULLMTS(I)
60       CONTINUE
C
C  STORE MAXIMUM AND MINIMUM ELEVATION LIMITS
      DO 70 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=ELLMTS(I)
70       CONTINUE
C
C  STORE MAT AND MAPE BLEND PERIODS
      DO 80 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=NBLEND(I)+.01
80       CONTINUE
C
C  STORE MAP AND MAT COMPLETE INDICATORS
      DO 90 I=1,2
         NPOS=NPOS+1
         ARRAY(NPOS)=ICUGNL(I)+.01
90       CONTINUE
C
C  STORE DEFAULT POWER IN 1/D**POWER FOR MAP, MAT AND MAPE
      DO 100 I=1,3
         NPOS=NPOS+1
         ARRAY(NPOS)=DPOWER(I)
100      CONTINUE
C
C  STORE MINIMUM DAILY PCPN AT <24 HOUR STATIONS (FOR ESTIMATING TIME
C  DISTRIBUTION)
      NPOS=NPOS+1
      ARRAY(NPOS)=DPCNMN
C
C  STORE MINIMUM WEIGHT OF STATIONS TO BE KEPT FOR STATION WEIGHTING
      NPOS=NPOS+1
      ARRAY(NPOS)=STMNWT
C
C  STORE INDICATOR HOW STATION INFORMATION IS TO BE SORTED
      NPOS=NPOS+1
      ARRAY(NPOS)=SORTBY
C
C  NEXT 6 POSITIONS USED FOR OPTIONS SAVED BY SETOPT COMMAND
      DO 110 I=1,6
         NPOS=NPOS+1
         IF (DISP.EQ.'NEW') ARRAY(NPOS)=0.0
110      CONTINUE
C
      IF (IVUGNL.GE.1) THEN
C     STORE HRAP GRID SUBSET
         DO 120 I=1,4
            NPOS=NPOS+1
            IF (NHPSUB(I).LT.0) ARRAY(NPOS)=NHPSUB(I)-.01
            IF (NHPSUB(I).GT.0) ARRAY(NPOS)=NHPSUB(I)+.01
120         CONTINUE
C     SET UNSD POSITIONS
         DO 125 I=1,6
            NPOS=NPOS+1
            ARRAY(NPOS)=UNSD
125         CONTINUE
         ENDIF
C
C  WRITE PARAMTER RECORD TO FILE
      IF (LDEBUG.GT.0) THEN
         WRITE (IOSDBG,*) 'NPOS=',NPOS
         CALL SULINE (IOSDBG,1)
         ENDIF
      CALL SUDOPN (1,'PPP ',IERR)
      IPTR=0
      CALL WPPREC (PARMID,'USER',NPOS,ARRAY,IPTR,IERR)
      IF (IERR.NE.0) THEN
         CALL SWPPST (PARMID,'USER',NPOS,IPTR,IERR)
         WRITE (LP,220) IERR
         CALL SUERRS (LP,2,-1)
         ISTAT=3
         ENDIF
C
150   IF (ISTAT.EQ.0) THEN
         IF (DISP.EQ.'NEW') THEN
            WRITE (LP,230)
            CALL SULINE (LP,2)
            ENDIF
         IF (DISP.EQ.'OLD') THEN
            WRITE (LP,240)
            CALL SULINE (LP,2)
            ENDIF
         CALL SUDWRT (1,'PPP ',IERR)
         IF (LDEBUG.GT.0) THEN
            CALL SUPDMP ('USER','BOTH',0,NPOS,ARRAY,ARRAY)
            ENDIF
         ENDIF
      IF (ISTAT.GT.0) THEN
         IF (DISP.EQ.'NEW') THEN
            WRITE (LP,250)
            CALL SULINE (LP,2)
            ENDIF
         IF (DISP.EQ.'OLD') THEN
            WRITE (LP,260)
            CALL SULINE (LP,2)
            ENDIF
         ENDIF
C
      IF (ISTRCE.GT.1) THEN
         WRITE (IOSDBG,270)
         CALL SULINE (IOSDBG,1)
         ENDIF
C
      RETURN
C
C- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
160   FORMAT (' *** ENTER SWUGNL')
170   FORMAT (' IVUGNL=',I2,3X,'UNSD=',F7.2,3X,'LARRAY=',I5)
210   FORMAT ('0*** ERROR - IN SWUGNL - NOT ENOUGH SPACE IN PARAMETER ',
     *   'ARRAY: NUMBER OF WORDS IN PARAMETER ARRAY=',I5,3X,
     *   'NUMBER OF WORDS NEEDED=',I5)
220   FORMAT ('0*** ERROR - IN SWUGNL - UNSUCCESSFUL CALL TO WPPREC : ',
     *   'STATUS CODE=',I2)
230   FORMAT ('0*** NOTE - UGNL PARAMETERS SUCCESSFULLY WRITTEN.')
240   FORMAT ('0*** NOTE - UGNL PARAMETERS SUCCESSFULLY UPDATED.')
250   FORMAT ('0*** NOTE - UGNL PARAMETERS NOT SUCCESSFULLY ',
     *   'WRITTEN.')
260   FORMAT ('0*** NOTE - UGNL PARAMETERS NOT SUCCESSFULLY ',
     *   'UPDATED.')
270   FORMAT (' *** EXIT SWUGNL')
C
      END
