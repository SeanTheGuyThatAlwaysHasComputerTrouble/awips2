#!/bin/ksh
#  =====================================================================
#
# run_gribit script
#
# This script was previously known as "gribits"
#

# This allows you to call this script from outside of ./precip_proc/bin
RUN_FROM_DIR=`dirname $0`

# set up SOME environment variables for WHFS applications
. $RUN_FROM_DIR/../../set_hydro_env

USAGE="usage:run_gribit [-p pgm] [-b bin_dir] [-f file_set] [-i in_file] 
[-n in_dir] [-o out_file] [-t out_dir] [-c control] [-g geo_dir] 
[-h hrap_coord_file] [-d debug_level] [-l logfile] [-v verbose] 
[-s search_order]"

#  =====================================================================
#   Switch  Description                      Default value
#   ------  ------------------------------   --------------------------
#     -p    Program name.                    gribit
#
#     -f    File set override for st3_rfc,   Sets indicated by st3_rfc,
#           ofs_level, ffg_level tokens.     ofs_level, ffg_level tokens.
#
#     -i    Input file name.                 None.  Program prompt.
#
#     -n    Input directory and path  OR:    Use input directory and path
#            sat - $rfcwide_satpre_dir       indicated by the $grib_in_dir
#                  token                     token.
#            mpe - $rfcwide_xmrg_dir token
#            s3  - $ofs_griddb_dir token 
#            ffg - $ffg_gridff_dir token
#            ro  - $ffg_gridro_dir token
#
#     -o    Output file name.                None.  Program prompt.
#
#     -t    Output directory and path.       Use output directory and path
#                                            indicated by the $grib_out_dir
#                                            token.
#
#     -c    Control:                         g - Encode XMRG into GRIB.
#             g - encode XMRG into GRIB
#             u - unpack GRIB and output to
#                 log file
#             x - decode GRIB to XMRG file
#
#     -g    Geo directory (HRAP coordinates  Use directory indicated by
#           directory)                       the $geo_st3_ascii token.
#
#     -h    HRAP coordinate domain file      coord.dat
#
#     -d    Debug level (d1, d2, or d3).     Debug off (level = 0)
#
#     -l    Log file on.                     Log file off.
#
#     -v    Verbose program prompts.         Suppress program prompts.
#
#     -s    Parameter table search sequence  Parameter table search 
#             - use user-defined table, if      sequence:
#                available                    - use built-in Table 2 NCEP
#             - use built-in Table 128        - use built-in Table 128
#             - use built-in Table 2 (NCEP)   - use user-defined table,
#                                                if available
#
#  Note:  -g and -h commands used only with command -c x.
#
#  =====================================================================

# Initialize command line parameters

 Pgm_cl=""
 Fl_set_cl=""
 Infil_cl=""
 Nindir_cl=""
 Otfil_cl=""
 Toutdir_cl=""
 Control_cl=""
 Geo_cl=""
 Hcoord_cl=""
 Dbug_set_cl=""
 Log_prt="off"
 Vrb_set_cl="no"
 Search_set_cl="0"

# check parameters were entered on the command line
while getopts :p:f:i:n:o:t:c:g:h:d:b:lvs cl_args ; do
   case $cl_args in
      p) Pgm_cl=$OPTARG;;
      f) Fl_set_cl=$OPTARG;;
      i) Infil_cl=$OPTARG;;
      n) Nindir_cl=$OPTARG;;
      o) Otfil_cl=$OPTARG;;
      t) Toutdir_cl=$OPTARG;;
      c) Control_cl=$OPTARG;;
      g) Geo_cl=$OPTARG;;
      h) Hcoord_cl=$OPTARG;;
      d) Dbug_set_cl=$OPTARG;;
      l) Log_prt="on";;
      v) Vrb_set_cl="yes";;
      s) Search_set_cl="1";;
     \?) bad_sw=YES;;
     esac
   done

# set parameters for program execution

if [[ $Pgm_cl = "" ]] ; then
   Pgm="gribit.LX"
   else
      Pgm=$Pgm_cl
   fi

if [[ $Infil_cl != "" ]] ; then
   export grib_in_file=$Infil_cl
   fi

if [[ $Otfil_cl != "" ]] ; then
   export grib_out_file=$Otfil_cl
   fi

if [[ $Fl_set_cl = "" ]] ; then
   Rfcname=$($GAD_DIR/get_apps_defaults.LX st3_rfc)
   Ofs_lev=$($GAD_DIR/get_apps_defaults.LX ofs_level)
   Ffg_lev=$($GAD_DIR/get_apps_defaults.LX ffg_level)
   else
      Rfcname=$Fl_set_cl
      Ofs_lev=$Fl_set_cl
      Ffg_lev=$Fl_set_cl
      export st3_rfc=$Fl_set_cl
      export Rfcw_rfcname=$Fl_set_cl
      export ofs_level=$Ofs_lev
      export ffg_level=$Ffg_lev
   fi

export hrap_domain_id=$Rfcname
    
# set input and output directories - can override output directory using -t
P1=""
if [[ $Nindir_cl = "sat" ]] ; then
   P1=$($GAD_DIR/get_apps_defaults.LX  pproc_dir)
   export grib_in_dir=$P1/"input/rfcwide"/$Rfcname/"satpre"
   export grib_out_dir=$($GAD_DIR/get_apps_defaults.LX grib_dir)/output
   elif [[ $Nindir_cl = "mpe" ]] ; then
      P1=$($GAD_DIR/get_apps_defaults.LX  ofs_files)
      export grib_in_dir=$P1/$Ofs_lev/"griddb/xmrg"
      export grib_out_dir=$($GAD_DIR/get_apps_defaults.LX grib_dir)/output
   elif [[ $Nindir_cl = "s3" ]] ; then
      P1=$($GAD_DIR/get_apps_defaults.LX ofs_files)
      export grib_in_dir=$P1/$Ofs_lev/"griddb"
      export grib_out_dir=$($GAD_DIR/get_apps_defaults.LX grib_dir)/output
   elif [[ $Nindir_cl = "ffg" ]] ; then
      P1=$($GAD_DIR/get_apps_defaults.LX ffg_files)
      P2=$($GAD_DIR/get_apps_defaults.LX ffg_gff_level)
      export grib_in_dir=$P1/$Ffg_lev/$P2
      export grib_out_dir=$($GAD_DIR/get_apps_defaults.LX ffg_out_dir)/grib
   elif [[ $Nindir_cl = "ro" ]] ; then
      P1=$($GAD_DIR/get_apps_defaults.LX ffg_files)
      P2=$($GAD_DIR/get_apps_defaults.LX ffg_gro_level)
      export grib_in_dir=$P1/$Ffg_lev/$P2
      export grib_out_dir=$($GAD_DIR/get_apps_defaults.LX ffg_out_dir)/grib
   fi

if [[ $Control_cl != "" ]] ; then
   export grib_ctl=$Control_cl
   fi

if [[ $Control_cl != "x" ]] ; then
   if [[ $P1 = "" && $Nindir_cl != "" ]] ; then
      export grib_in_dir=$Nindir_cl
      fi
   if [[ $Toutdir_cl != "" ]] ; then
      export grib_out_dir=$Toutdir_cl
      fi
   elif [[ $Control_cl = "x" ]] ; then
      if [[ $P1 = "" && $Nindir_cl != "" ]] ; then
         export grib_out_dir=$Nindir_cl
         fi
      if [[ $Toutdir_cl != "" ]] ; then
        export grib_in_dir=$Toutdir_cl
        fi
      if [[ $Geo_cl = "" ]] ; then
         P3=$($GAD_DIR/get_apps_defaults.LX geo_data)
         export hrap_domain_dir=$P3/$Rfcname/"ascii"
         else
            export hrap_domain_dir=$Geo_cl
         fi
      if [[ $Hcoord_cl = "" ]] ; then
         export hrap_domain_file="coord_"$Rfcname".dat"
         else
            export hrap_domain_file=$Hcoord_cl
         fi
   fi

if [[ $Dbug_set_cl != "" ]] ; then
   export grib_debug_output=$Dbug_set_cl
   fi

if [[ $Log_prt = "on" ]] ; then
   export grib_log_output="on"
   fi

if [[ $Search_set_cl = "1" ]] ; then
   export grib_ptbl_search="1"
   fi

if [[ $Vrb_set_cl = "yes" ]] ; then
   export grib_verbose="yes"
   #echo "Script gribits : Release $Release - $Date"
   echo "Script gribits"
   echo "The GRIB output directory is : $($GAD_DIR/get_apps_defaults.LX grib_out_dir)"
   echo "The XMRG input  directory is : $($GAD_DIR/get_apps_defaults.LX grib_in_dir)"
   echo "The GRIB output file is : $($GAD_DIR/get_apps_defaults.LX grib_out_file)"
   echo "The XMRG input  file is : $($GAD_DIR/get_apps_defaults.LX grib_in_file)"
   if [ "$P1" != "" ] ; then
      echo "  $P1"
      fi
   if [ "$P2" != "" ] ; then
      echo "  $P2"
      fi
   echo "Rfcname is : $Rfcname"
   if [[ $Control_cl = "x" ]] ; then
      echo "The hrap_domain directory is : $($GAD_DIR/get_apps_defaults.LX hrap_domain_dir)"
      echo "The hrap_domain file      is : $($GAD_DIR/get_apps_defaults.LX hrap_domain_file)"
      fi
   fi

#if [[ $Bin_set_cl = "" ]] ; then
#   Ex_dir=$($GAD_DIR/get_apps_defaults.LX grib_dir)/bin/RELEASE
#   #Added by Guoxian Zhou 06/17/2003
#   [ -n "$($GAD_DIR/get_apps_defaults.LX grib_rls)" ] && Ex_dir=$($GAD_DIR/get_apps_defaults.LX  grib_rls)
#   elif [[ $Bin_set_cl = "d" ]] ; then
#      Ex_dir=$($GAD_DIR/get_apps_defaults.LX my_dir)/bin
#      #Added by Guoxian Zhou 06/17/2003
#      [ -n "$($GAD_DIR/get_apps_defaults.LX my_rls)" ] && Ex_dir=$($GAD_DIR/get_apps_defaults.LX  my_rls)
#   elif [[ $Bin_set_cl = "a" ]] ; then
#      Ex_dir=$($GAD_DIR/get_apps_defaults.LX grib_dir)/bin/ARCHIVE
#   elif [[ $Bin_set_cl = "m" ]] ; then
#      Ex_dir=$($GAD_DIR/get_apps_defaults.LX mgr_dir)/bin/RELEASE 
#      #Added by Guoxian Zhou 06/17/2003
#      [ -n "$($GAD_DIR/get_apps_defaults.LX mgr_rls)" ] && Ex_dir=$($GAD_DIR/get_apps_defaults.LX  mgr_rls)
#   elif [[ $Bin_set_cl = "ma" ]] ; then
#      Ex_dir=$($GAD_DIR/get_apps_defaults.LX mgr_dir)/bin/ARCHIVE
#   else
#      Ex_dir=$Bin_set_cl
#   fi

Ex_dir=$($GAD_DIR/get_apps_defaults.LX pproc_bin)

if [ ! -d $Ex_dir ] ; then
   print "ERROR: directory $Ex_dir not found."
   exit 1
   fi
if [ ! -f $Ex_dir/$Pgm ] ; then
   print "ERROR: program $Pgm not found in directory $Ex_dir."
   exit 1
   fi

if [[ $Vrb_set_cl = "yes" ]] ; then
   echo "Executing from : $Ex_dir/$Pgm"
   fi

eval $Ex_dir/$Pgm

#===============================================================

