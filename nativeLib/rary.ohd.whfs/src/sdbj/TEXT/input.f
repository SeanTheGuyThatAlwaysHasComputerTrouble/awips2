c ---------------------------------------------------------------------
      SUBROUTINE INPUT(HDE,BME,VOL,SA,BW,TFM,QO,NS,NCS,CMS,HDM,ISH,
     2SYM,IDFLT,DAMN,RIVN,TOWN,FLD,INA,ICAT,IDIST,DISTTN,IPLT,ICRS,TWN)
      CHARACTER INFL*255,OUTFL*255
      COMMON/ARAY/ F(15,6),X(6)
      COMMON/S1/D(50),E(50),HS(8,50)
      COMMON/S2/BS(8,50),AS(8,50),BSW(8,50),ASW(8,50),CM(8,50),
     *  CMW(8,50),BSS(8,50),BST(8,50),CN(8,50),ASA(8,50),
     *  BSWA(8,50),ASWA(8,50),CMWA(8,50)
	COMMON/S4/XLAT(50),XLON(50)
      COMMON/JPR/JNK
      COMMON/IONUM/IOUT,IBOTH,IBTH
      COMMON/IOANUM/IOUTA
      COMMON/RECNO/IREC
      COMMON/DATFIL/DATFIL2
C
      DIMENSION FLD(50),IDFLT(8)
C
      CHARACTER*1 YES,ANSW,BLANK,SYM(9)
      CHARACTER*4 VAR(4),TYPE
      CHARACTER*5 CODE1,CODE2,CODE3,CODE4,CODE5,CODE6(50),CODE7(8),
     * C1,C2,C3,C4,C5,C7(8)
      CHARACTER*41 DAMN,RIVN
      CHARACTER*26 TOWN,TWN(50)
      INTEGER*4 LOUT,LIN
C
      DATA YES,BLANK/'Y',' '/
      DATA VAR/'HS  ','BS  ','BSS ','CM  '/
      DATA C1,C2,C3,C4,C5/'C1','C2','C3','C4','C5'/
      DATA C7/'C7-1','C7-2','C7-3','C7-4','C7-5','C7-6','C7-7','C7-8'/
C
C           DEFINITION OF VARIABLES
C
C             IN=    BATCH INPUT FILE UNIT NO.
C             INA=   INTERACTIVE INPUT FILE UNIT NO.
C             IOUT=  OUTPUT FILE UNIT NO.
C             IOUTA= INTERACTIVE OUTPUT FILE UNIT NO.
C             IOUTR= MODIFIED INPUT FILE UNIT NO.
C             IBOTH= OUTPUT WILL BE BOTH INTERACTIVE AND STORED IN FILE
C
C             IBC=0  CREATING A FILE INTERACTIVELY
C             IBC=1  RUNNING A BATCH FILE
C             IBC=2  READING IN A BATCH FILE WHICH WILL BE MODIFIED
C             IBC=3  MODIFYING THE BATCH FILE
C             IBC=4  UPDATING DAM CATALOG
C
C             ICAT=0 RUN SMPDBK WITHOUT DAM CATALOG DATA
C             ICAT=1 GENERATE SMPDBK DATA SET USING DAM CATALOG DATA
C             ICAT=2 RUN SMPDBK USING DATA SET GENERATED FROM DAMCAT DATA
C
C             IREPT=0 INPUTING DATA FROM THE TERMINAL
C             IREPT>0 UPDATING DATA READ-IN FROM A FILE
C
C             ISH=0  LONG VERSION
C             ISH=1  SHORT VERSION (REMOVED 8/90)
C
      CODE1=C1
      CODE2=C2
      CODE3=C3
      CODE4=C4
      CODE5=C5
      ICOD6=0


C
      DO 2 I=1,9
         IDFLT(I)=0
         SYM(I)=BLANK
         CODE7(I)=C7(I)
    2 CONTINUE
C

C
      NCARDS=0
      ISEC=1
      LEV=1
C
C      IN=155
C      IOUT=166
      
      CALL GETARG(1,OUTFL)
      CALL GETARG(2,INFL)
      IN=15
      IOUT=16

C     OPEN OUTPUT FILE
      CALL KKEND(OUTFL,LOUT)
      OPEN(FILE=OUTFL(1:LOUT),UNIT=IOUT,IOSTAT=IERR)
      IF(IERR.NE.0) THEN
        WRITE(IOUT,*) 'OUTPUT FILE IS NOT OPENED CODE=', IERR
      ENDIF
C      WRITE(IOUT,*)'DAMIN:',INFL,': DAMOUT:',OUTFL,':'
C     OPEN INPUT FILE
      CALL KKEND(INFL,LIN)
      OPEN(FILE=INFL(1:LIN),UNIT=IN,IOSTAT=IERR)
      IF(IERR.NE.0) THEN
        WRITE(IOUT,*) 'INPUT FILE IS NOT OPENED CODE=', IERR
      ENDIF

      WRITE(IOUT,10,IOSTAT=IOS)
   10 FORMAT(' SIMPLIFIED DAMBREAK MODEL (SMPDBK) VERSION: 9/91'/' BY D.
     *L. FREAD, J.M. LEWIS, & J.N. WETMORE - PHONE: (301) 427-7640'/
     *' NWS HYDROLOGIC RESEARCH LAB W/OH3, 1325 EAST-WEST HIGHWAY,'/
     *' SILVER SPRING, MD 20910'//)
      IF(IOS.NE.0) THEN 
        PRINT *, 'ERROR WRITING HEADER CODE=', IOS
      ENDIF      
C
C
cc      NCARDS=1
      PRINT *, 'BEFORE CALL TO BATCHR'
      CALL BATCHR(IBC,ISH,JNK,IDAM,HDE,BME,SA,BW,TFM,QO,VOL,
     *NS,NCS,CMS,D,FLD,HS,BS,BSS,CM,IN,IOUT,NCARDS,DAMN,RIVN,TOWN,
     *DISTTN,IPLT,TWN)
C
C
C                SET DEFAULT PARAMETERS
C
C         SUBROUTINE DFLT SETS THE DEFAULT PARAMETER VALUES.
C
 1620 CALL DFLT(IDAM,TFM,HDM,HDE,BME,BW,VOL,SA,
     *CM,D,NS,NCS,BS,BSS,IDFLT,SYM,CMS,DISTTN,IDIST,TWN)
C
C         PRINT OUT THE DATA INPUT WITH THE DEFAULT VALUES
C
      DO 1800 L=1,2
      IF(IBTH.EQ.1.AND.L.EQ.1) IOUT=IOUTA
      WRITE(IOUT,1700)
 1700 FORMAT(//' THE DATA FOR THIS DAM IS AS FOLLOWS:'/)
      IF(IDAM.EQ.0) WRITE(IOUT,1702)
 1702 FORMAT(' TYPE OF DAM    (IDAM)            EARTH')
      IF(IDAM.EQ.1) WRITE(IOUT,1704)
 1704 FORMAT(' TYPE OF DAM    (IDAM)            CONCRETE GRAVITY')
      IF(IDAM.EQ.2) WRITE(IOUT,1706)
 1706 FORMAT(' TYPE OF DAM    (IDAM)            CONCRETE ARCH')
C
 1725 WRITE(IOUT,1730) HDE,BME,VOL,SYM(6),SA,SYM(7),BW,SYM(2),TFM,
     *SYM(1),QO,DISTTN,CMS,SYM(8)
 1730 FORMAT(' DAM BREACH ELEVATION  (HDE)',16X,F10.2,' FT'/
     * ' FINAL BREACH ELEVATION  (BME)',14X,F10.2,' FT'/
     * ' VOLUME OF RESERVOIR  (VOL)',17X,F10.0,' ACRE-FT',3X,A1/
     * ' SURFACE AREA OF RESERVOIR  (SA)',12X,F10.2,' ACRES',5X,A1/
     * ' FINAL BREACH WIDTH  (BW)',19X,F10.2,' FT',8X,A1/
     * ' TIME OF DAM FAILURE  (TFM)',17X,F10.2,' MINUTES',3X,A1/
     * ' NON-BREACH FLOW  (QO)',22X,F10.2,' CFS'/
     * ' DISTANCE TO PRIMARY PT OF INTEREST (DISTTN)',F10.2,' MILES'/
     * ' DEAD STORAGE EQUIV. MANN. N (CMS)',10X,F10.2,11X,A1//)
C
      IF(IOUT.EQ.IOUTA.AND.ICRS.EQ.0) GO TO 1760
      DO 1755 I=1,NS
         WRITE(IOUT,1740) I
 1740    FORMAT(//' CROSS SECTION NO.',I3)
         IF(I.NE.1) WRITE(IOUT,1742) D(I)
 1742    FORMAT(' REACH LENGTH  (D)   ',F10.2,' MI')
         WRITE(IOUT,1744) FLD(I)
 1744    FORMAT(' FLOOD DEPTH  (FLD)  ',F10.2,' FT')
         WRITE(IOUT,1745) XLAT(I),XLON(I)
 1745    FORMAT(' LAT/LON  (XLAT/XLON)  ',F10.4,'/',F10.4)
         WRITE(IOUT,1747) SYM(9),TWN(I)
 1747    FORMAT(' RIVER LOCATION (TWN) ',A1,'    ',A/)
         WRITE(IOUT,1746) (HS(K,I),K=1,NCS)
 1746    FORMAT(' ELEV.(FT) (HS)       ',8F8.1)
         WRITE(IOUT,1748) (BS(K,I),K=1,NCS)
 1748    FORMAT(' TWIDTHS(FT) (BS)     ',8F8.1)
         WRITE(IOUT,1749) (BSS(K,I),K=1,NCS)
 1749    FORMAT(' INACTIVE TW(FT) (BSS)',8F8.1)
         WRITE(IOUT,1750) SYM(5),(CM(K,I),K=1,NCS)
 1750    FORMAT(' MANNING N (CM)       ',A1,8F8.3)
 1755 CONTINUE
C
 1760 WRITE(IOUT,1765)
 1765 FORMAT(///' AN ASTERISK (*) BESIDE A PARAMETER IMPLIES THAT A DEFA
     *ULT VALUE WAS COMPUTED'//)
C
      IF(IBTH.EQ.0) GO TO 2000
      IOUT=IBOTH
 1800 CONTINUE
  900 FORMAT(A1)
  902 FORMAT(A4)
  905 FORMAT(A5,5X,A40,5X,A25)
  906 FORMAT(A40)
  907 FORMAT(A25)
  910 FORMAT(A5,5X,5I10)
  915 FORMAT(A5,5X,2I10,2F10.2)
  920 FORMAT(A5,5X,2F10.2)
  925 FORMAT('C6-',I2,5X,2F10.2)
  930 FORMAT(A5,5X,F10.2,F10.3,F10.2)
  940 FORMAT(A5,5X,3F10.2,F10.0,3F10.2)
  945 FORMAT(A5,5X,2F10.2,F10.0,4F10.2)
  950 FORMAT(A5,5X,3F10.2,F10.3)
 2000 RETURN
      END
C  =====================================================================
C  pgm: KKEND .. Get end non-blank char location in string
C
C  use:     CALL KKEND(STRNG,IEND)
C
C   in: STRNG ... input string as character data - CHAR*(*)
C  out: IEND .... location of last non-blank char, else 1 - INT
C  =====================================================================
      SUBROUTINE KKEND(STRNG,IEND)

      INTRINSIC      LEN
      INTEGER        LEN

      CHARACTER*(*)  STRNG
      CHARACTER*1    BLANK
      INTEGER        IEND,MXSTR,NEXT

      PARAMETER( BLANK=' ' )

        MXSTR = 1
        NEXT = LEN(STRNG)
  100   IF (NEXT .LE. MXSTR) GOTO 110
          IF (STRNG(NEXT:NEXT) .NE. BLANK) MXSTR = NEXT
          NEXT = NEXT - 1
           GOTO 100
  110   CONTINUE

        IEND = MXSTR

      RETURN
      END

