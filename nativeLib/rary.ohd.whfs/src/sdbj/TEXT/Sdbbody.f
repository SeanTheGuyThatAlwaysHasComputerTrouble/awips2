c ---------------------------------------------------------------------
      SUBROUTINE SMPDBK(DAMN,RIVN,TOWN,VOL,BW,TFM,PKFLDM,PKDPDM,PKFLTN,
     . PKDPTN,DISTTN,TRAVEL,SLOPE,FLDPTN,TFLDP,BOTM,ICAT)
C
C        THE MAIN BODY OF THE PROGRAM SETS UP ARRAYS, CALLS SUBROUTINES
C        FILES AND INPUT, AND COMPUTES WEIGHTED CROSS SECTION PROPERTIES.
C        IT THEN COMPUTES PEAK FLOWS, DEPTHS, TIMES OF PEAK FLOWS, AND
C        TIMES OF FLOODING AND DEFLOODING BY CALLING SUBROUTINES DAMBRK,
C        DEPTH, COMPM, RPARM, TIMFLD, AND ROUTE. SUBROUTINE PPLOT PLOTS
C        PROFILES OF PEAK FLOW AND WATER SURFACE ELEVATIONS ALONG THE
C        DOWNSTREAM CHANNEL.
C
      CHARACTER*41 DAMN,RIVN
      CHARACTER*26 TOWN,TWN(50)
      CHARACTER*20 DNAM,RNAM
      CHARACTER*1 ANSW,SYM(8)

      COMMON/ARAY/ F(15,6),X(6)
      COMMON/S1/D(50),E(50),HS(8,50)
      COMMON/S2/BS(8,50),AS(8,50),BSW(8,50),ASW(8,50),CM(8,50),
     *  CMW(8,50),BSS(8,50),BST(8,50),CN(8,50),ASA(8,50),
     *  BSWA(8,50),ASWA(8,50),CMWA(8,50)
      COMMON/S3/HDE,QBASE
	COMMON/S4/XLAT(50),XLON(50)
      COMMON/JPR/JNK
      COMMON/IONUM/IOUT,IBOTH,IBTH
      COMMON/IOANUM/IOUTA
C
      DIMENSION FLD(50),IDFLT(8),DYSLP(50)
      DIMENSION HMAX(50),QMAX(50),TFLD(50),TDFLD(50)
      DIMENSION YEE(50), QSS(50), TPP(50), SCRIT(50), SO(50), QMS(50)
      PRINT *, 'IN THE BEGINNING OF SMPDBK'
C
CC	TOWN='              '
      ISH=0
      JNK=0
      IDAM=0
      QO=0
      SA=0

CC      READ 10, HDE,BME

      DO 3 I=1,50
         D(I)=0.
         HMAX(I)=0.
         QMAX(I)=0.
	   TWN(I)='                          '
    3 CONTINUE

      CALL INPUT(HDE,BME,VOL,SA,BW,TFM,QO,NS,NCS,CMS,HDM,ISH,
     2SYM,IDFLT,DAMN,RIVN,TOWN,FLD,INA,ICAT,IDIST,DISTTN,IPLT,ICRS,TWN)
      PRINT *, 'AFTER CALL TO INPUT IN SMPDBK'
C
C         CHANGE HS ELEVATIONS TO DEPTHS, COMPUTE TOTAL CHANNEL WIDTHS
C         (BST) FROM ACTIVE CHANNEL WIDTHS (BS) AND DEAD STORAGE WIDTHS
C         (BSS). STORE INVERT ELEVATIONS (E), COMPUTE ACTIVE AREA (ASA)
C         AND TOTAL AREA (AS), AND COMPUTE COMPOSITE MANNING'S N (CN),
C         NON-ACTIVE AREA MANNING'S N (CM), AND DEAD STORAGE MANNING'S
C         N (CMS).
C
      E53=5./3.
      E23=2./3.
C
      DO 175 I=1,NS
         AS(1,I)=0.
         ASA(1,I)=0.
         E(I)=HS(1,I)
         CN(1,I)=CM(1,I)
         DO 170 K=1,NCS
            HS(K,I)=HS(K,I)-E(I)
            BST(K,I)=BS(K,I)+BSS(K,I)
            L=K-1
            IF(L.EQ.0) GO TO 170
            DPT=HS(K,I)-HS(L,I)
            AS(K,I)=AS(L,I)+0.5*(BST(K,I)+BST(L,I))*DPT
            ASA(K,I)=ASA(L,I)+0.5*(BS(K,I)+BS(L,I))*DPT
C
C               COMPUTE THE ADJUSTED MANNING N VALUES
C
            CN(K,I)=SQRT((BS(K,I)*CM(K,I)**2+BSS(K,I)*CMS**2)/BST(K,I))
  170    CONTINUE
  175 CONTINUE
C
C            COMPUTE WEIGHTED CHANNEL WIDTHS (BSW AND BSWA) AND WEIGHTED
C            MANNING N (CMW AND CMWA).
C
      DO 185 K=1,NCS
         NSS=NS-1
         FFC=0.
         FFCA=0.
         FFM=0.
         FFMA=0.
         DO 180 I=1,NSS
            I1=I+1
            IF(I.EQ.1) X1=D(I1)
            IF(I.GT.1) X1=D(I1)-D(I)
            FFC=FFC+(BST(K,I)+BST(K,I1))*0.5*X1
            BSW(K,I1)=FFC/D(I1)
            FFCA=FFCA+(BS(K,I)+BS(K,I1))*0.5*X1
            BSWA(K,I1)=FFCA/D(I1)
            FFM=FFM+(CN(K,I)+CN(K,I1))*0.5*X1
            CMW(K,I1)=FFM/D(I1)
            FFMA=FFMA+(CM(K,I)+CM(K,I1))*0.5*X1
            CMWA(K,I1)=FFMA/D(I1)
  180    CONTINUE
  185 CONTINUE
C
C              COMPUTE WEIGHTED AREA (ASW AND ASWA)
C
      DO 195 I=2,NS
         ASW(1,I)=0.
         ASWA(1,I)=0.
         DO 190 K=2,NCS
            L=K-1
            DH=HS(K,I)-HS(L,I)
            ASW(K,I)=ASW(L,I)+0.5*(BSW(L,I)+BSW(K,I))*DH
            ASWA(K,I)=ASWA(L,I)+0.5*(BSWA(L,I)+BSWA(K,I))*DH
  190    CONTINUE
  195 CONTINUE
C
C              PRINT THE CROSS SECTION PROPERTIES
C
      IF(JNK.EQ.0) GO TO 198
      DO 194 L=1,2
      IF(L.EQ.1.AND.IBTH.EQ.1) IOUT=IOUTA
      IF(IOUT.EQ.IOUTA.AND.ICRS.EQ.0) GO TO 193
      WRITE(IOUT,2000)
      DO 196 I=1,NS
         WRITE(IOUT,2005) E(I)
         WRITE(IOUT,2010)(HS(K,I),K=1,NCS)
         WRITE(IOUT,2015)(BST(K,I),K=1,NCS)
         WRITE(IOUT,2020)(AS(K,I),K=1,NCS)
         WRITE(IOUT,2025)(CN(K,I),K=1,NCS)
  196 CONTINUE
C
C              PRINT THE WEIGHTED CROSS SECTION PROPERTIES
C
      WRITE(IOUT,2030)
      DO 197 I=2,NS
         WRITE(IOUT,2035) (BSW(K,I),K=1,NCS)
         WRITE(IOUT,2040) (ASW(K,I),K=1,NCS)
         WRITE(IOUT,2045) (CMW(K,I),K=1,NCS)
  197 CONTINUE
  193 IF(IBTH.EQ.0) GO TO 198
      IOUT=IBOTH
  194 CONTINUE
C
  198 TRT=0.
      TPS=0.
      TIM=TFM
      QBASE=QO
C
C            START COMPUTATION FOR Q,Y,TP AT EACH CROSS-SECTION
C
      ICNT=20
      DNAM=DAMN
      RNAM=RIVN
      DO 100 L=1,2
      IF(L.EQ.1.AND.IBTH.EQ.1) IOUT=IOUTA
C            THE FOLLOWING CHANGES MADE ON 6/24/89
CC      WRITE(IOUT,987)
CC  987 FORMAT(///)
      WRITE(IOUT,986) DNAM,RNAM
  986 FORMAT(1X,'NAME OF DAM: ',A20,
     *5X,'NAME OF RIVER: ',A20)
C            END OF CHANGE OF 6/24/89
      WRITE(IOUT,985)
      IF(IBTH.EQ.0) GO TO 110
      IOUT=IBOTH
  100 CONTINUE
C
C          THIS LOOP (250) COMPUTES PEAK DISCHARGE AT EACH CROSS SECTION
C          AS I GOES FROM 1 TO NS (TOTAL NUMBER OF CROSS SECTIONS).
C          THE FIRST CROSS SECTION IS LOCATED AT THE TAILWATER SECTION
C          IMMEDIATELY DOWNSTREAM OF THE DAM.
C
  110 DO 250 I=1,NS
         IF(I.GT.ICNT) ICNT=ICNT+20
         IF(I.EQ.1) S=(E(1)-E(2))/(D(2)*5280.)
         IF(I.GT.1) GO TO 215
C
C            COMPUTE DAMBREAK FLOW
C
C            QS  -- DISCHARGE AT DAM
C            YS  -- TAILWATER DEPTH
C
         BMX=BST(NCS,1)
C
C            SUBROUTINE DAMBRK COMPUTES DISCHARGE AT THE DAM (Q) CORRECTED
C            FOR POSSIBLE SUBMERGENCE.
C
         CALL DAMBRK(NCS,BW,Y,Q,S,HDM,SA,TFM,QO,BME,BMX)
         QDM=Q
C
C             SUBROUTINE DEPTH COMPUTES THE TAILWATER DEPTH (Y) BELOW
C             THE DAM USING THE DISCHARGE AT THE DAM (QDM=Q) AND THE
C             SLOPE (S) OF THE FIRST REACH BELOW THE DAM.
C
CC         CALL DEPTH(2,1,NCS,QDM,S,Y,A,B,KIT)
         QS=Q
         YS=Y
         IF(JNK.GT.0.AND.IBTH.EQ.1) WRITE(IOUTA,981) QS,YS
         IF(JNK.GT.0) WRITE(IOUT,981) QS,YS
         IF(I.EQ.1) GO TO 230
C
C             DETERMINE F1(THETA)
C
C             F1  -- THETA (OLD)
C             F1N -- THETA (NEW)
C             YDM -- TAILWATER DEPTH BASED ON SW
C             Y   -- DEPTH AT POINT OF INTEREST
C             Q   -- ROUTED DISCHARGE AT POINT OF INTEREST
C             S   -- LOCAL SLOPE
C             SW  -- WEIGHTED SLOPE FROM DAM TO POINT OF INTEREST
C             XC  -- CHARACTERISTIC DISTANCE (MI)
C             FR  -- FROUDE NUMBER
C             VS  -- VOLUME RATIO=V*
C             E   -- ELEVATION OF THE BOTTOM OF THE CROSS SECTION IN FT.
C             D   -- DISTANCE TO THE CROSS SECTION FROM THE DAM IN MILES.
C
  215    F1=0.95
         ITT=0
         NIT=0
         DX=(D(I)-D(I-1))*5280.
         S1=(E(I-1)-E(I))/DX
         S=S1
         DXW=D(I)*5280.
         SW1=(E(1)-E(I))/DXW
         SW=SW1
C
C                 COMPUTE THE INITAL DEPTHS FOR EACH SECTION TYPE
C
       IF(QO.GT.0.) THEN
         CALL DEPTH(1,I,NCS,QO,SW,YO1,A1,B1,KIT)
         CALL DEPTH(2,I,NCS,QO,S1,YO2,A2,B2,KIT)
         CALL DEPTH(3,I,NCS,QO,SW,YO3,A3,B3,KIT)
       ELSE
         YO1=0.
         YO2=0.
         YO3=0.
         A1=0.
         A2=0.
         A3=0.
         B1=0.
         B2=0.
         B3=0.
       END IF
C
C              COMPUTE DEPTH (YDM) AT THE TAILWATER CROSS SECTION (FIRST CROSS
C              SECTION) IMMEDIATELY DOWNSTREAM OF THE DAM WITH SUBROUTINE DEPTH.
C
  220    CALL DEPTH(1,I,NCS,QDM,SW1,YDM,A,B,KIT)
	 SW=SLOP(I,SW1,QO,YO1,A1,B1,QDM,YDM,A,B,TIM,NCS,1)
	 CALL DEPTH(1,I,NCS,QDM,SW,YDM,A,B,KIT)
C
C              START ITERATION TO FIND F1 (F1=THETA FACTOR)
C
  221       THY=F1*YDM
            NIT=NIT+1
C
C              SUBROUTINE RPARM COMPUTES THE FROUDE NUMBER (FR), THE VOLUME
C              PARAMETER (VS), AND THE DISTANCE PARAMETER (XC).
C
            CALL RPARM(I,NCS,HDM,THY,VOL,SW,FM,FR,VS,XC)
C
C              SUBROUTINE ROUTE COMPUTES Q.
C
            CALL ROUTE (FR,VS,XC,XC,QDM,Q)
C
C              SUBROUTINE DEPTH COMPUTES THE DEPTH AT THE FIRST CROSS SECTION
C              (Y) FROM THE DISCHARGE AT THE DAM (Q) AND THE SLOPE OF THE
C              FIRST REACH (SW).
C
            CALL DEPTH (1,I,NCS,Q,SW,Y,A,B,KIT)
	    SW=SLOP(I,SW1,QO,YO1,A1,B1,Q,Y,A,B,TIM,NCS,1)
	    CALL DEPTH(1,I,NCS,Q,SW,Y,A,B,KIT)
            F1N=(YDM+Y)/(2.*YDM)
            IF(ABS(F1-F1N)/F1*100.0.LT.1.0) ITT=1
            IF(JNK.GT.0.AND.IBTH.EQ.1) WRITE(IOUTA,982) F1,F1N,YDM,Y,Q,S
     .       ,SW,XC,FR,VS
            IF(JNK.GT.0) WRITE(IOUT,982) F1,F1N,YDM,Y,Q,S,SW,XC,FR,VS
C
C              WHEN THE ITERATION ON F1 HAS CONVERGED (ITT=1),
C              BREAK OUT OF LOOP AND GO TO 225. OTHERWISE UPDATE F1 AND
C              ITERATE AGAIN (GO TO 221).
C
            IF(ITT.EQ.1) GO TO 225
            F1=F1N
            IF(NIT.LE.10) GO TO 221
C
C               ROUTE BREACH FLOW
C
C               XX  -- DISTANCE FROM DAM TO POINT OF INTEREST
C               QS  -- ROUTED DISCHARGE AT POINT OF INTEREST
C               QDM -- DISCHARGE AT DAM
C
  225    XX=D(I)
C               COMPUTE THE ROUTED DISCHARGE (Q) AT SECTION
C               XX MILES DOWNSTREAM USING FR, VS, XC, AND QDM.
C
         CALL ROUTE (FR,VS,XC,XX,QDM,Q)
         IF(QS.LT.Q) Q=0.99*QS
C
C               COMPUTE DEPTH USING Q AND THE SLOPE AT THE Ith REACH (S).
C
         CALL DEPTH(2,I,NCS,Q,S1,Y,A,B,KIT)
	 S=SLOP(I,S1,QO,YO2,A2,B2,Q,Y,A,B,TIM,NCS,2)
	 CALL DEPTH(2,I,NCS,Q,S,Y,A,B,KIT)
         QS=Q
         YS=Y
         IF(JNK.GT.0.AND.IBTH.EQ.1) WRITE(IOUTA,983) XX,XC,FR,VS,S,YS,QS
     .    ,QDM
         IF(JNK.GT.0) WRITE(IOUT,983) XX,XC,FR,VS,S,YS,QS,QDM
C
C               COMPUTE TRAVEL TIME
C
C               QA  -- (0.3+M/10) Q' (Q' IS ROUTED DISCHARGE AT MID-POINT OF
C                                   BETWEEN DAM AND POINT OF INTEREST)
C               Y   -- DEPTH ASSOCIATED WITH QS
C               V   -- VELOCITY AT MIDPOINT
C               CV  -- WAVE SPEED (MI/HR)
C               TRT -- TRAVEL TIME TO POINT OF INTEREST
C               FM  -- M POWER IN THE POWER FUNCTION B=K*Y**M
C
         XM=0.5*D(I)
C
C               ROUTE COMPUTES THE DISCHARGE (Q) AT DISTANCE XM
C               (MIDPOINT BETWEEN THE DAM AND SECTION I) USING
C               FR, VS, XC, AND QPM.
C
         CALL ROUTE (FR,VS,XC,XM,QDM,Q)
C
C               COMPM COMPUTES THE SHAPE FACTOR (FM).
C

         CALL SECT(3,I,NCS,Y,B,A,CMM)
         CALL SECT(1,I,NCS,Y,BTOT,ATOT,CMM)
         RAT=B/BTOT
	 CALL COMPM (3,I,FM,Y,B)
         QA=(0.3+FM/10.)*Q
         IF(RAT.LT.0.65) THEN
           QA=Q
         END IF
C
C               DEPTH COMPUTES THE DEPTH CORRESPONDING TO THE
C               DISCHARGE (QA) AT SECTION I.
C
         CALL DEPTH(3,I,NCS,QA,SW,Y,A,B,KIT)
	 SW=SLOP(I,SW1,QO,YO3,A3,B3,QA,Y,A,B,TIM,NCS,3)
	 CALL DEPTH(3,I,NCS,QA,SW,Y,A,B,KIT)
         CALL SECT(1,I,NCS,Y,BTOT,ATOT,CMM)
      RAT=B/BTOT
         V=QA/A
      IF(RAT.LT.0.65) THEN
           V=QA/ATOT
	   CALL COMPM (3,I,FM,Y,B)
      END IF
         CV=0.682*V*(5./3.-2./3.*FM/(FM+1.))
         TRT=D(I)/CV
         IF(JNK.GT.0.AND.IBTH.EQ.1) WRITE(IOUTA,984) QA,Y,V,CV,TRT,FM
         IF(JNK.GT.0) WRITE(IOUT,984) QA,Y,V,CV,TRT,FM
  230    TP=TFM/60.+TRT
         IF(TP.LT.TPS) TP=1.01*TPS
         TPS=TP
         TIM=TP*60.
C
C               STORE VALUES IN ARRAYS.
C
         YEE(I)=YS
         QSS(I)=QS
         QMS(I)=Q
         TPP(I)=TPS
         DYSLP(I)=S
  250 CONTINUE
C
      NSM1=NS-1
C
C               CALCULATE THE CRITICAL SLOPES (SCRIT).
C
      DO 260 I=1,NSM1
         DAVE=(YEE(I) + YEE(I+1))/2
         CALL SECT(2,I,NCS,DAVE,B,A,CMM)
         SCRIT(I)=14.5*CMM**2/DAVE**(1./3.)
         SO(I)=(E(I)-E(I+1))/((D(I+1)-D(I))*5280.)
  260 CONTINUE
C
C               TURN SWITCH THAT PRINTS FORMAT 993 OFF.
C
      IMSGSW=0
C
C               LOOP 400 DETERMINES WHETHER THE UPSTREAM AND
C               DOWNSTREAM SLOPES ARE SUPERCRITICAL OR
C               SUBCRITICAL AND CALCULATES THE TIMES OF
C               FLOODING AND DEFLOODING, AND THE DEPTHS AT EACH
C               CROSS SECTION.
C
      DO 400 I=1,NS
         QS=QSS(I)
         Q=QMS(I)
         TPS= TPP(I)
         ISW=0
         DX=D(I)*5280.
         TIM=TPS*60.
         IF(I.NE.1) GO TO 402
CC         S=(E(1)-E(2))/(D(2)*5280.)
         S=DYSLP(I)
         YS=YEE(1)
         GO TO 327
 402     IF(I.NE.NS) GO TO 404
CC         S=SO(NSM1)
         S=DYSLP(NSM1)
         YS=YEE(NS)
         GO TO 327
C
C                CHECK THE SLOPES FOR SUPERCRITICAL OR SUBCRITICAL FLOW.
C
CC 404     SU=SO(I-1)
CC         SD=SO(I)
 404     SU=DYSLP(I-1)
         SD=DYSLP(I)
         SCU=SCRIT(I-1)
         SCD=SCRIT(I)
C          PRINT*,'SU         SD        SCU          SCD'
C          PRINT 777, SU,SD,SCU,SCD
 777     FORMAT(4(1X,F10.6))
C
C                UPSTREAM SUPERCRITICAL, DOWNSTREAM SUPERCRITICAL:
C                IFRSW IS THE FROUDE NUMBER SWITCH
C
         IFRSW=1
         IF(SU.GE.SCU.AND.SD.GE.SCD) IFRSW=0
         IF(IFRSW.NE.0) GO TO 222
C           PRINT*,'SU>SC; SD>SC'
            YS=YEE(I)
            S=SU
            GO TO 555
 222     CONTINUE
C
C                UPSTREAM SUBCRITICAL, DOWNSTREAM SUPERCRITICAL:
C
         IF(SU.LT.SCU.AND.SD.GE.SCD) IFRSW=0
         IF(IFRSW.NE.0) GO TO 333
C           PRINT*,'SU<SC; SD>SC'
            YMX=HS(NCS,I)+100.
            YMN=HS(1,I)+0.01
            YOLD=YMX
            IT=0
C
C                USE THE BISECTION METHOD TO SOLVE FOR YS.
C                YS=CRITICAL DEPTH AND S=CRITICAL SLOPE
C
 325           YA=(YMN+YMX)/2.
               CALL SECT(2,I,NCS,YA,B,A,CMM)
               QTS=SQRT(32.2*A*A*A/B)
               ERROR=QS-QTS
               IF(ERROR.LT.0.0) YMX=YA
               IF(ERROR.GE.0.0) YMN=YA
               IF(ABS(YA-YOLD).LT.0.01) GO TO 326
               YOLD=YA
               IT=IT+1
            IF(IT.LT.50) GO TO 325
 326        YS=YA
            S=14.5*CMM**2/YS**(1/3)
            GO TO 555
 333        CONTINUE
C
C                UPSTREAM SUPERCRITICAL, DOWNSTREAM SUBCRITICAL:
C
         IF(SU.GE.SCU.AND.SD.LT.SCD) IFRSW=0
         IF(IFRSW.NE.0) GO TO 444
C           PRINT*,'SU>SC; SD<SC'
CC            ISW=1
CC            IMSGSW=1
C
C                IN THIS CASE A HYDRAULIC JUMP OCCURS NEAR THE CROSS SECTION.
C		 UPSTREAM AND DOWNSTREAM DEPTHS AND TIMES OF FLOODING AND
C                DEFLOODING ARE CALCULATED SEPARATELY.
C
C                YSEQ   -- DOWNSTREAM DEPTH
C                HSEQ   -- DOWNSTREAM WATER SURFACE ELEVATION
C                TFLSEQ -- DOWNSTREAM TIME OF FLOODING
C                TDFLSQ -- DOWNSTREAM TIME OF DEFLOODING
C
            CALL DEPTH(2,I,NCS,QS,SD,Y,A,B,KIT)
	    SD=SLOP(I,SD,QO,YO2,A2,B2,QS,Y,A,B,TIM,NCS,2)
	    CALL DEPTH(2,I,NCS,QS,SD,Y,A,B,KIT)
            YSEQ=Y
            HSEQ=Y+E(I)
            HFL=FLD(I)
            CALL TIMFLD(I,NCS,VOL,TFM,HFL,SD,QO,QS,TPS,TFL,TDFL)
            TFLSEQ=TFL
            TDFLSQ=TDFL
            YS=YEE(I)
            S=SU
         GO TO 555
 444     CONTINUE
C
C              UPSTREAM SUBCRITICAL, DOWNSTREAM SUBCRITICAL:
C
         IF(SU.LT.SCU.AND.SD.LT.SCD) IFRSW=0
         IF(IFRSW.NE.0) GO TO 555
C           PRINT*,'SU<SC; SD<SC'
            S=(SU+SD)/2.
            CALL DEPTH(2,I,NCS,QS,S,Y,A,B,KIT)
	    S=SLOP(I,S,QO,YO2,A2,B2,QS,Y,A,B,TIM,NCS,2)
	    CALL DEPTH(2,I,NCS,QS,S,Y,A,B,KIT)
            YS=Y
 555     CONTINUE
	 IF(YS.GT.(HDE-E(I))) YS=HDE-E(I)

C
C               COMPUTE TIMES OF FLOODING AND DEFLOODING OF DEPTH (FLD(I))
C
  327	 HFL=FLD(I)
C 318    FORMAT(I2,1X,F6.2,1X,F8.6,1X,F10.0,1X,F10.5,1X,F10.5)
         CALL TIMFLD(I,NCS,VOL,TFM,HFL,S,QO,QS,TPS,TFL,TDFL)
         YE=YS+E(I)
C
	 IF(I.GT.1.AND.YE.GT.HMAX(I-1)) THEN
	    YE=HMAX(I-1)
	    YS=YE-E(I)
	 END IF

	 HMAX(I)=YE
	 QMAX(I)=QS
	 TFLD(I)=TFL
	 TDFLD(I)=TDFL
C
C               PRINT THE FOLLOWING FOR SECTION I: MILES TO CROSS SECTION,
C               PEAK DISCHARGE, PEAK WATER SURFACE ELEVATION, PEAK DEPTH,
C               TIME OF PEAK, TIME OF FLOODING, TIME OF DE-FLOODING, AND FLOOD
C               ELEVATION.
C
         IF(IBTH.EQ.1) THEN
         WRITE(IOUTA,990) D(I),QS,YE,YS,TPS,TFL,TDFL,HFL
           IF(ISW.EQ.1) WRITE(IOUTA,992)D(I),HSEQ,YSEQ,TFLSEQ,TDFLSQ
         END IF
         WRITE(IOUT,990) D(I),QS,YE,YS,TPS,TFL,TDFL,HFL
         IF(ISW.EQ.1) WRITE(IOUT,992)D(I),HSEQ,YSEQ,TFLSEQ,TDFLSQ
C
         IF(I.EQ.1) THEN
           PKFLDM=QS
           PKDPDM=YS
           TPFLDM=TPS
         ELSE IF(I.EQ.IDIST) THEN
           PKFLTN=QS
           PKDPTN=YS
           TRAVEL=(TPS-TPFLDM)/D(I)
           SLOPE=(E(1)-E(I))/D(I)
           FLDPTN=HFL
           TFLDP=TFL
           BOTM=E(I)
         END IF
         IF(I.LT.ICNT) GO TO 400
         IF(IOUT.NE.IOUTA) GO TO 400
         WRITE(IOUTA,*)' HIT RETURN KEY TO CONTINUE .'
         READ(INA,900) ANSW
C
  400 CONTINUE
      IF(IBTH.EQ.1) THEN
        IF(IMSGSW.EQ.1) WRITE(IOUTA,993)
        WRITE(IOUTA,995)
      END IF
      IF(IMSGSW.EQ.1) WRITE(IOUT,993)
      WRITE(IOUT,995)
C            THE FOLLOWING CHANGES MADE ON 6/24/89
      IF(IPLT.EQ.0) GO TO 5000
C
C            PLOT PEAK WATER SURFACE ELEVATION AT A CROSS SECTION
C            AGAINST THE DISTANCE FROM THE DAM TO THE CROSS SECTION.
C
	    CALL SECT(2,IDIST,NCS,FLD(IDIST),BFLD,A,CMM)
	    CALL SECT(2,IDIST,NCS,YEE(IDIST),BWSEL,A,CMM)
	    IF(YEE(IDIST).GT.HS(NCS,IDIST)) THEN
	       HS(NCS,IDIST)=YEE(IDIST)
	       BS(NCS,IDIST)=BWSEL
	    END IF
      IDST=IDIST-1
      LDAM=LEN_TRIM(DAMN)
      LRVR=LEN_TRIM(RIVN)
      LTWN=LEN_TRIM(TOWN)
      IF(LTWN.EQ.0) THEN
	TOWN='POINT OF INTEREST'
	LTWN=17
      END IF
      DAMN(LDAM+1:LDAM+1)=CHAR(0)
      RIVN(LRVR+1:LRVR+1)=CHAR(0)
      TOWN(LTWN+1:LTWN+1)=CHAR(0)

cc      CALL PPLOT(D,HMAX,E,QMAX,HDE,BWSEL,BFLD,FLD,BS(1,IDIST),
cc     . HS(1,IDIST),DAMN,TOWN,RIVN,TFLD,TDFLD,TPP,IDST,NS,NCS)
C
  900 FORMAT(A1)
  902 FORMAT(A4)
  905 FORMAT(A5,5X,A40)
  906 FORMAT(A40)
  910 FORMAT(A5,5X,3I10)
  915 FORMAT(A5,5X,2I10,2F10.2)
  920 FORMAT(A5,5X,2F10.2)
  925 FORMAT('C6-',I2,5X,2F10.2)
  930 FORMAT(A5,5X,F10.2,F10.3,F10.2)
  940 FORMAT(A5,5X,3F10.2,F10.0,3F10.2)
  945 FORMAT(A5,5X,2F10.2,F10.0,4F10.2)
  950 FORMAT(A5,5X,3F10.2,F10.3)
  960 FORMAT(8F10.2)
  970 FORMAT(8F10.4)
  981 FORMAT(30X,3HQS=,F10.0,5X,3HYS=,F10.2)
  982 FORMAT(3X,3HF1=,F6.2,2X,4HF1N=,F6.2,2X,4HYDM=,F8.2,2X,2HY=,F8.2,
     * 2X,2HQ=,F8.0,2X,2HS=,F10.4,2X,3HSW=,F10.4,2X,3HXC=,F8.1,2X,
     * 3HFR=,F6.2,2X,3HVS=,F6.1)
  983 FORMAT(10X,3HXX=,F8.1,3X,3HXC=,F8.1,3X,3HFR=,F6.2,3X,3HVS=,F6.2,
     *  3X,2HS=,F10.4,3X,3HYS=,F10.2,3X,3HQS=,F8.0,3X,4HQDM=,F8.0)
  984 FORMAT(30X,3HQA=,F10.0,5X,2HY=,F10.2,5X,2HV=,F6.1,5X,3HCV=,F6.1,
     *  5X,4HTRT=,F6.1,5X,3HFM=,F6.2)
  985 FORMAT(/'  RVR MILE  MAX FLOW  MAX ELEV  MAX DEPTH TIME(HR)  TIME(
     .HR)  TIME(HR)   FLOOD'/
     . '  FROM DAM    (CFS)   (FT-MSL)    (FT)   MAX DEPTH   FLOOD    DE
     .FLOOD  DEPTH(FT)' / '  ********',7('  ********'))

  990 FORMAT(F10.2,F10.0,6F10.2)
  992 FORMAT(F10.2,'D',9X,2F10.2,10X,2F10.2)
  993 FORMAT(/'D INDICATES VALUES ON THE DOWNSTREAM SIDE OF A HYDRAULIC
     2JUMP.'/)
  995 FORMAT(/10X,20HANALYSIS IS COMPLETE/)
 2000 FORMAT(//10X,'CROSS SECTION PROPERTIES')
 2005 FORMAT(/'HS(1,I) ',F10.2)
 2010 FORMAT( 'DEPTH   ',8F10.2)
 2015 FORMAT( 'TOTAL BS',8F10.2)
 2020 FORMAT( 'TOTAL AS',8F10.2)
 2025 FORMAT( 'COMPOS N',8F10.4)
 2030 FORMAT(//10X,'WEIGHTED CROSS SECTION PROPERTIES')
 2035 FORMAT(/'TOTAL BS',8F10.2)
 2040 FORMAT( 'TOTAL AS',8F10.2)
 2045 FORMAT( 'COMPOS N',8F10.4)
 5000 RETURN
      END
c ---------------------------------------------------------------------
C
C          SUBROUTINE DAMBRK COMPUTES THE PEAK DISCHARGE AT THE DAM
C          DUE TO BREACHING AS WELL AS DISCHARGE DUE TO SPILLWAY OR
C          OVERTOPPING FLOW (QO).
C
      SUBROUTINE DAMBRK (NCS,BW,Y,QDM,S,HDM,SA,TFM,QO,BME,BMX)
      COMMON/S1/ D(50),E(50),HS(8,50)
      COMMON/JPR/JNK
      COMMON/IONUM/IOUT,IBOTH,IBTH
      COMMON/IOANUM/IOUTA
      IF(TFM.LT.HDM/1000.) GO TO 30
C
C          COMPUTE PEAK DISCHARGE FOR TIME DEPENDENT FAILURE OF DAM.
C
      IPOS=0
      INEG=0
      YOLD=0.
      ERR=0.5
      SO=S
      DX=D(2)*5280.
      TH=TFM/60.
      BMED=BME-E(1)
      YMAX=0.97*HDM+BMED
      C1=23.4*SA/BW
      HW=(C1/((TFM/60.)+C1/SQRT(HDM)))**2.
      QDM=QO+3.1*BW*HW**1.5
      QQS=QDM-QO
C
C          DEPTH COMPUTES AREA (A), CHANNEL WIDTH (B) , AND DEPTH (Y) AT
C          THE TAILWATER SECTION AT THE BASE OF THE DAM (CROSS SECTION 1).
C
      SUB=1.0
      SUBMAX=1.0

      IF(QO.GT.0) THEN
        CALL DEPTH(2,1,NCS,QO,SO,YO,AO,BO,KIT)
      ELSE
        YO=0.
        AO=0.
        BO=0.
      END IF

    2 QDM=QO+QQS*SUB
  100 CALL DEPTH(2,1,NCS,QDM,SO,Y,A,B,KIT)
CC	IF(Y.GT.HW) Y=1.0*HW
      S=SLOP(1,SO,QO,YO,AO,BO,QDM,Y,A,B,TFM,NCS,2)
      CALL DEPTH(2,1,NCS,QDM,S,Y,A,B,KIT)
C
C        KEEP ADJUSTING SUBMERGENCE UNTIL DEPTH CONVERGES
C
      IF(KIT.GT.25) THEN
        SUB=SUB-0.1
      SUBMAX=SUB
	IF(SUB.GE.0.2) GO TO 2
        WRITE(IOUT,990) QDM,Y
  990   FORMAT(' TOO MUCH FLOW PASS THIS SECTION CAUSING A NONCONVERGENC
     *E OF THE DEPTH EVEN WITH 90% SUBMERGENCE'/' (Q=',F10.1,', Y='F10.2
     *,')   SUGGEST YOU INCREASE SLOPE OR MODIFIY CROSS SECTION')
        GO TO 6
C
C        CONTINUE ADJUSTING SUBMERGENCE UNTIL TW DEPTH (Y) IS LESS
C        THAN THE HEADWATER DEPTH (HW)
C
       ELSE IF(Y.GT.HW) THEN
	 SUB=SUB-0.02
      SUBMAX=SUB
         IF(SUB.GE.0.1) GO TO 2
         WRITE(IOUT,991) QDM,Y,HW
  991    FORMAT(/' CANNOT CONVERGE ON A TAILWATER DEPTH WHICH IS LESS TH
     .AN THE HEADWATER DEPTH EVEN WITH 90% SUBMERGENCE'/' (Q=',F10.1,' H
     .W=',F6.2,' Y=',F6.2,' )   SUGGEST YOU INCREASE SLOPE OR MODIFIY CR
     .OSS SECTION')
      GO TO 6
      END IF
C
C        CONTINUE ADJUSTING SUBMERGENCE TO OBTAIN A GOOD FIRST GUESS
C        FOR THE TRUE TAILWATER DEPTH AND SUBMERGED FLOW
C
      IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,993) SUB,QDM,HW,Y
      IF(JNK.GT.1) WRITE(IOUT,993) SUB,QDM,HW,Y
  993 FORMAT(5X,4HSUB=,F6.3,3X,4HQDM=,F10.0,3X,3HHW=,F6.2,3X,2HY=,F6.2)
      IF(SUB.GE.0.99) GO TO 6
      SUBOO=SUB
      YOO=Y
      SBINC=0.002
    7 QDM=QO+QQS*SUB
      CALL DEPTH(2,1,NCS,QDM,SO,Y,A,B,KIT)
CC	IF(Y.GT.HW) Y=1.0*HW
      S=SLOP(1,SO,QO,YO,AO,BO,QDM,Y,A,B,TFM,NCS,2)
      CALL DEPTH(2,1,NCS,QDM,S,Y,A,B,KIT)
      IF(KIT.GT.25) THEN
	Y=YOLD
	SUB=SUBO
	IF(Y.LT.0.0001) THEN
	  Y=YOO
	  SUB=SUBOO
	END IF
	GO TO 6
      END IF
      IF(IPOS.GT.50.OR.INEG.GT.50) GO TO 6
      IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,993) SUB,QDM,HW,Y
      IF(JNK.GT.1) WRITE(IOUT,993) SUB,QDM,HW,Y
      IF(IPOS.GT.0.AND.INEG.GT.0) GO TO 6
      IF(Y.GT.HW) THEN
         SUB=SUB-SBINC
         SUBMAX=SUB
         INEG=INEG+1
         GO TO 7
      END IF
         HR=(Y-BMED)/HW
         IF(HR.GT.1.0) HR=0.99
         IF(HR.LE.0.67) GO TO 6
         SUB2=1.0-27.8*(HR-0.67)**3.
         PSUB=ABS(SUB2-SUB)/SUB2*100.
         IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,994) SUB,SUB2,PSUB,HW,Y
         IF(JNK.GT.1) WRITE(IOUT,994) SUB,SUB2,PSUB,HW,Y
  994    FORMAT(5X,4HSUB=,F6.3,3X,5HSUB2=,F6.3,3X,5HPSUB=,F6.3,3X,3HHW=,
     *	   F6.2,3X,2HY=,F6.2)
	IF(PSUB.LE.ERR) GO TO 6
	IF(YOLD.LE.0.00001) THEN
	  PSUBO=PSUB
	  YOLD=Y
	ENDIF
	IF(PSUB.GT.PSUBO) THEN
	  PSUB=PSUBO
	  SUB=SUBO
	  Y=YOLD
	  GO TO 6
	ENDIF
	PSUBO=PSUB
	SUBO=SUB
	YOLD=Y
	SBINC=0.002
	IF(PSUB.GT.50.) SBINC=0.02
	IF(SUB.LT.SUB2) THEN
	  NCSUB=0
	  IPOS=IPOS+1
	  SUB=SUB+SBINC
	  IF(SUB.GT.SUBMAX) SUBMAX=SUB
	ELSE
           INEG=INEG+1
           SUB=SUB-SBINC
           IF(SUB.GT.SUBMAX) SUBMAX=SUB
         END IF
	 GO TO 7
    6 SUBOLD=SUB
      YKEP=Y
      IF(YKEP.GT.YMAX) YKEP=0.75*HDM+BMED
      V=QDM/A
      DH=A/B
      FR=V/SQRT(32.2*DH)
      HR=(Y-BMED)/HW
      IF(HR.GT.1.0) HR=1.0
C
C          IF THE FLOW IS SUPERCRITICAL (FR > 1) AT CROSS SECTION 1, THEN
C          THERE IS NO SUBMERGENCE CORRECTION.
C
      IF(FR.GE.1.0) GO TO 50
C
C          IF THE TAILWATER ELEVATION IS BELOW THE BOTTOM OF THE DAM (BME),
C          THEN THERE IS NO SUBMERGENCE CORRECTION.
C
      IF(Y+E(1).LE.BME) GO TO 50
      IF(HR.LT.0.67) GO TO 50
C
C          COMPUTE THE SUBMERGENCE CORRECTION FACTOR IF
C          HR (= TAILWATER HEAD/HEADWATER HEAD) IS GREATER THAN 0.67
C          AND CORRECT DISCHARGE (QDM) FOR SUBMERGENCE EFFECTS. THIS
C          IS AN ITERATIVE PROCEDURE WITH A MAXIMUM OF 15 ITERATIONS ALLOWED.
C
      SUB1=SUB
      QDMS=QQS
      DO 10 K=1,15
      Q=QO+SUB1*3.1*BW*HW**1.5
      QDM=Q
C
C            COMPUTE SUBMERGENCE RATIO.
C
         HR=(Y-BMED)/HW
         IF(HR.GT.1.0) HR=0.99
         SUB2=SUB1
         IF(HR.GT.0.67) SUB2=1.0-27.8*(HR-0.67)**3.
CC	   WRITE(IOUT,997) SUB1,SUB2,SUBMAX
CC  997	   FORMAT(1X,'SUB1,SUB2,SUBMAX=',3F10.4)
         IF(SUB2.GT.SUBMAX) SUB2=SUBMAX
         SUB=(SUB1+SUB2)/2.
C
C            CORRECT DISCHARGE FOR SUBMERGENCE.
C
    5    QS=QO+SUB*3.1*BW*HW**1.5
         QDM=QS
         DQ=ABS(Q-QS)

	CALL DEPTH(2,1,NCS,QDM,SO,Y,A,B,KIT)
CC	IF(Y.GT.HW) Y=1.0*HW
	S=SLOP(1,SO,QO,YO,AO,BO,QDM,Y,A,B,TFM,NCS,2)
	CALL DEPTH(2,1,NCS,QDM,S,Y,A,B,KIT)
        IF(Y.GT.YMAX) Y=YKEP
        IF(KIT.LE.25) GO TO 4
        SUB=SUB*.95
        IF(SUB.LT.SUBOLD/2.) GO TO 4
        GO TO 5

CC    4    HW1=HW+(QS-QDM)*(TFM*60.)/(43560.*2.*SA)
CC         QSS=(Q+QS)/2.
    4    HW=HDM-1800.*TH*QS/(43560.*SA)
         IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,1) K,SUB1,SUB,QS,QDM,HR,
     .    Y,HW,DQ
         IF(JNK.GT.1) WRITE(IOUT,1) K,SUB1,SUB,QS,QDM,HR,Y,HW,DQ
    1    FORMAT(3X,2HK=,I2,3X,5HSUB1=,F6.2,3X,4HSUB=,F6.2,3X,
     *    3HQS=,F10.1,3X,4HQDM=,F10.1,3X,3HHR=,F7.2,3X,
     *    2HY=,F7.2,3X,3HHW=,F7.2,3X,3HDQ=,F10.1)
C
C            CHECK FOR CONVERGENCE OF SUBMERGENCE FACTOR.
C
         DQE=DQ/Q*100.
         IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,992) DQ,DQE,Q,SUB1,
     *     SUB2,SUB
         IF(JNK.GT.1) WRITE(IOUT,992) DQ,DQE,Q,SUB1,SUB2,SUB
  992    FORMAT(13X,2HDQ,7X,3HDQE,9X,1HQ,' SUB1 SUB2  SUB'/
     *    5X,F10.0,F10.1,F10.0,3F5.2)
         IF(DQE.LE.ERR) GO TO 50
CC         QSS=(Q+QS)/2.
           HW=HDM-1800.*TH*QS/(43560.*SA)
CC         HW1=HW+(QS-QDM)*(TFM*60.)/(43560.*2.*SA)
         SUB1=SUB
   10 CONTINUE
      IF(IBTH.EQ.1) WRITE(IOUTA,21) DQ
      WRITE(IOUT,21) DQ
   21 FORMAT(10X,59HITERATIVE SOLUTION FOR SUBMERGENCE EFFECT DID NOT CO
     *NVERGE./10X,29HDISCHARGE MAY VARY BY + OR - ,F10.2,5H  CFS/)
      GO TO 50
C
C         COMPUTE PEAK DISCHARGE FOR INSTANTANEOUS FAILURE (TFM < HDM/100)
C
   30 CALL SECT(2,I,NCS,HDM,B,A,CMM)
      CALL COMPM(2,1,FM,HDM,B)
      FM1=FM+1.0
      BR=BW/BMX
      FI=(1.0-0.5467*BR*FM1+0.2989*(BR*FM1)**2-0.1634*(BR*FM1)**3+
     * 0.0893*(BR*FM1)**4-0.0488*(BR*FM1)**5)**1.5
      FV=(1.0+0.148*(BR*FM1)**2-0.083*(BR*FM1)**3)**1.5
      Q=3.1*BW*HDM**1.5*FI*FV
      QDM=Q
   50 RETURN
      END
c ---------------------------------------------------------------------
C
C         SUBROUTINE DEPTH COMPUTES THE DEPTH AT SECTION I USING THE
C         MANNING EQUATION AND DISCHARGE (Q). THE BISECTION METHOD IS USED
C         TO SOLVE THE NON-LINEAR EQUATION WITHIN A MAXIMUM OF 30 ITERATIONS.
C
      SUBROUTINE DEPTH (IW,I,NCS,Q,S,Y,A,B,LC)
      COMMON/S1/D(50),E(50),HS(8,50)
      COMMON/S3/HDE,QBASE
      COMMON/DERIV/DCM,DB
      COMMON/JPR/JNK
      COMMON/IONUM/IOUT,IBOTH,IBTH
      COMMON/IOANUM/IOUTA
      TOL=0.01
      E23=2./3.
      HDS=HDE-E(1)
      YMAX=HS(NCS,I)
      IF(YMAX.LT.HDS) YMAX=HDS
      IF(I.GT.1) YMAX=YMAX+HDS
      IF(I.EQ.1) YMAX=HDS
      YMIN=HS(1,I)
      LC=0
      DS=0.
   10 Y=0.5*(YMAX+YMIN)
      IF(ABS(Q-QBASE).LE.1.) THEN
        YMAX=HS(NCS,I)
        TOL=1.
        LC=0
        IF(JNK.GT.2.AND.IBTH.EQ.1) WRITE(IOUTA,998)
        IF(JNK.GT.2) WRITE(IOUT,998)
  998   FORMAT(' I  LC  YMAX   YMIN      Y       QN         Q   CMM
     *    B')
        GO TO 50
      END IF
    5 CALL SECT(IW,I,NCS,Y,B,A,CMM)
      QN=1.486/CMM*SQRT(S)*A*(A/B)**E23
      DQN=QN*(0.5*DS/S-DCM/CMM+(5./3.)*B/A-E23*DB/B)
      F=QN-Q
      FP=DQN
      YN=Y-F/FP
      IF(JNK.GT.2.AND.IBTH.EQ.1) WRITE(IOUTA,2) I,LC,YN,Y,QN,Q
      IF(JNK.GT.2) WRITE(IOUT,2) I,LC,YN,Y,QN,Q
    2 FORMAT(3X,'I=',I2,3X,'LC=',I2,3X,'YN,Y=',2F10.2,5X,'Q,QN=',2F12.0)
      IF(ABS(Y-YN).GT.TOL) THEN
        LC=LC+1
        Y=ABS(YN)
	IF(LC.LE.15) GO TO 5
        IF(JNK.GT.1) THEN
          WRITE(IOUT,11) LC
          WRITE(IOUT,25)
   25     FORMAT(3X,' USING NEWTON-SCHEME... BISECTION METHOD NOW BEING'
     *    ' USED.')
          IF(IBTH.EQ.1) THEN
            WRITE(IOUTA,11) LC
            WRITE(IOUTA,25)
          END IF
        END IF
        LC=0
        IF(JNK.GT.2.AND.IBTH.EQ.1) WRITE(IOUTA,998)
        IF(JNK.GT.2) WRITE(IOUT,998)
        GO TO 50
      END IF
      Y=YN
      IF(I.GT.0) GO TO 12
   50 Y=0.5*(YMIN+YMAX)
      CALL SECT(IW,I,NCS,Y,B,A,CMM)
      QN=1.486/CMM*SQRT(S)*A*(A/B)**E23
      IF(JNK.GT.2.AND.IBTH.EQ.1) WRITE(IOUTA,999) I,LC,YMAX,YMIN,Y,QN,Q,
     . CMM,B
      IF(JNK.GT.2) WRITE(IOUT,999) I,LC,YMAX,YMIN,Y,QN,Q,CMM,B
  999 FORMAT(I2,I3,3F7.2,2F10.0,F6.3,F12.1)
      IF(ABS(QN-Q)/Q*100.0.LT.TOL) GO TO 12
      IF(QN.GT.Q) YMAX=Y
      IF(QN.LT.Q) YMIN=Y
      LC=LC+1
      IF(LC.LE.30) GO TO 50
      IF(JNK.GT.1.AND.IBTH.EQ.1) WRITE(IOUTA,11) LC
      IF(JNK.GT.1) WRITE(IOUT,11) LC
   11 FORMAT(10X,25HDEPTH DID NOT CONVERGE IN,I4,11H ITERATIONS)
   12 RETURN
      END
      FUNCTION SLOP(I,SO,QO,YO,AO,BO,Q,Y,A,B,TM,NCS,IW)
      COMMON/JPR/JNK
      COMMON/IONUM/IOUT,IBOTH,IBTH
      COMMON/IOANUM/IOUTA
C
C        THIS FUNCTION COMPUTES THE DYNAMIC SLOPE TERM AND ADDS IT
C        TO THE BOTTOM SLOPE TO GET THE FRICTION SLOPE
C        REF: NWS HYDRO-16, EQNS 4-13
C
      TSEC=TM*60.
      TDAY=TM/1440.
      G=32.2
      VELO=0.

      VEL=Q/A
      DVDH=-Q*B/A**2
      IF(QO.GT.0.0) VELO=QO/AO
      DVEL=VEL-VELO

      YA=(Y+YO)/2.
      CALL SECT(IW,I,NCS,YA,BA,AA,CMA)
      DQ=Q-QO
      DH=Y-YO
      DBDH=0.
      DCEL=0.
      IF(DH.LT.0.000001) DH=0.0
      IF(DH.GT.0.) DBDH=(B-BO)/DH
      XK=5./3.-(2.*A/(3.*B**2))*DBDH
      CEL=XK*VEL
      DHDT=DH/TSEC

      TERM1=1./CEL*DHDT
      IF(TERM1.LT.0.) TERM1=0.
      TERM2=VEL/G*(-VEL*B/A*TERM1+B/A*DHDT)
      IF(TERM2.LT.0.) TERM2=0.
      TERM3=DVEL/(G*TSEC)
      IF(TERM3.LT.0.) TERM3=0.
      SUM=TERM1+TERM2-TERM3
      SLOP=SO+SUM
CC	SLOP2=SO+DHDT*(1./CEL+VEL*B/G/A*(1.-VEL/CEL))-DVEL/(G*TSEC)
CC	PRINT 9900, SLOP,SLOP2
CC 9900 FORMAT(5X,'SLOP=',F10.6,3X,'SLOP2=',F10.6)
CC	SLOP=SLOP2
      IF(SLOP.LT.0.) THEN
        SLOP=SO
      END IF
CCC	 SLOP=SO
      IF(JNK.GT.2.AND.IBTH.EQ.1) WRITE(IOUTA,100) SO,TERM1,TERM2,TERM3,
     *SUM,SLOP,Y
      IF(JNK.GT.2) WRITE(IOUT,100) SO,TERM1,TERM2,TERM3,SUM,SLOP,Y
  100 FORMAT(12X,2HSO,5X,5HTERM1,5X,5HTERM2,5X,5HTERM3,7X,3HSUM,9X,1HS,
     * 9X,1HY/4X,6F10.6,F10.2)

      RETURN
      END
c ---------------------------------------------------------------------
C
C         SECT COMPUTES THE CROSS SECTIONAL PROPERTIES FOR THE Ith
C         SECTION GIVEN THE WATER SURFACE ELEVATION (Y) WITH A
C         LINEAR INTERPOLATION OF A TABLE LOOKUP.
C         COMPUTED PROPERTIES ARE:
C            BST -- TOTAL CHANNEL WIDTH (ACTIVE + STORAGE)
C            AS  -- TOTAL AREA (ACTIVE + STORAGE)
C            CN  -- COMPOSITE MANNING N (ACTIVE + STORAGE)
C            BSW -- DISTANCE WEIGHTED TOTAL CHANNEL WIDTH (BST)
C            ASW -- DISTANCE WEIGHTED AREA (AS)
C            CMW -- DISTANCE WEIGHTED MANNING N (CN)
C            BS  -- ACTIVE CHANNEL WIDTH
C            ASA -- ACTIVE AREA
C            CM  -- ACTIVE MANNING N
C            BSWA-- DISTANCE WEIGHTED ACTIVE CHANNEL WIDTH (BS)
C            ASWA-- DISTANCE WEIGHTED ACTIVE AREA (ASA)
C            CMWA-- DISTANCE WEIGHTED ACTIVE MANNING N (CM)
C
C         OTHER PROPERTIES ARE:
C            NCS -- NUMBER OF CHANNEL WIDTHS AT EACH SECTION
C            HS  -- ELEVATION ASSOCIATED WITH THE COMPUTED PROPERTIES
C            Y   -- ELEVATION AT WHICH A PROPERTY IS TO BE COMPUTED
C            IW  -- WEIGHTING INDEX (0, 1, 2, 3, 4)
C            I   -- SECTION NUMBER
C            A   -- AREA FROM TABLE
C            B   -- CHANNEL WIDTH FROM TABLE
C            CMM -- MANNING N FROM TABLE
C
      SUBROUTINE SECT(IW,I,NCS,Y,B,A,CMM)
      COMMON/S1/D(50),E(50),HS(8,50)
      COMMON/S2/BS(8,50),AS(8,50),BSW(8,50),ASW(8,50),CM(8,50),
     *  CMW(8,50),BSS(8,50),BST(8,50),CN(8,50),ASA(8,50),
     *  BSWA(8,50),ASWA(8,50),CMWA(8,50)
        COMMON/DERIV/DCM,DB
      COMMON/IOANUM/IOUTA
C
C         FIND THE Kth LEVEL IN THE CHANNEL WIDTH TABLE EQUAL TO OR
C         JUST GREATER THAN ELEVATION Y.
C
      DO 10 K=2,NCS
         IF(Y.LE.HS(K,I)) GO TO 15
   10 CONTINUE
      K=NCS
   15 L=K-1
      DH=HS(K,I)-HS(L,I)
      IF(DH.LE.0.000001) WRITE(IOUTA,777)I,L,K
 777  FORMAT(' CHECK THE CROSS SECTION ELEVATIONS IN YOUR INPUT FILE.  T
     2WO ELEVATIONS AT THE'/' SAME CROSS SECTION HAVE THE SAME VALUE OR
     3THE ELEVATIONS ARE DECREASING UPWARD'/' INSTEAD OF INCREASING.  LO
     4OK AT CROSS SECTION ',I2,', HS(',I2,') AND HS(',I2,').')
      DY=Y-HS(L,I)
      IF(IW.EQ.1) GO TO 20
      IF(IW.EQ.2) GO TO 25
      IF(IW.EQ.3) GO TO 27
C
C         IW = 0: TOTAL SECTION (ACTIVE + DEAD STORAGE)
C
      DB=(BST(K,I)-BST(L,I))/DH
      B=BST(L,I)+DB*DY
      A=AS(L,I)+0.5*(BST(L,I)+B)*DY
      DCM=(CN(K,I)-CN(L,I))/DH
      CMM=CN(L,I)+DCM*DY
      IF(Y.GT.HS(NCS,I)) CMM=CN(NCS,I)
      GO TO 30
C
C         IW = 1: DISTANCE WEIGHTED TOTAL SECTION (ACTIVE + STORAGE)
C
   20 DB=(BSW(K,I)-BSW(L,I))/DH
      B=BSW(L,I)+DB*DY
      A=ASW(L,I)+0.5*(BSW(L,I)+B)*DY
      DCM=(CMW(K,I)-CMW(L,I))/DH
      CMM=CMW(L,I)+DCM*DY
      IF(Y.GT.HS(NCS,I)) CMM=CMW(NCS,I)
      GO TO 30
C
C         IW = 2: ACTIVE SECTION ONLY
C
   25 DB=(BS(K,I)-BS(L,I))/DH
      B=BS(L,I)+DB*DY
      A=ASA(L,I)+0.5*(BS(L,I)+B)*DY
      DCM=(CM(K,I)-CM(L,I))/DH
      CMM=CM(L,I)+DCM*DY
      IF(Y.GT.HS(NCS,I)) CMM=CM(NCS,I)
      GO TO 30
C
C         IW = 3: DISTANCE WEIGHTED ACTIVE SECTION
C
   27 DB=(BSWA(K,I)-BSWA(L,I))/DH
      B=BSWA(L,I)+DB*DY
      A=ASWA(L,I)+0.5*(BSWA(L,I)+B)*DY
      DCM=(CMWA(K,I)-CMWA(L,I))/DH
      CMM=CMWA(L,I)+DCM*DY
      IF(Y.GT.HS(NCS,I)) CMM=CMWA(NCS,I)
   30 RETURN
      END
c ---------------------------------------------------------------------
      SUBROUTINE PREDIC(X2,F0,V5,Q,Q8,F7)
C
C        THIS ROUTINE INTERPOLATES WITHIN THE ROUTING CURVES TO
C        FIND THE RATIO OF QP TO QBMAX FOR A SPECIFIC (INTEGER)
C        VALUE OF V* AND AN FC OF 0.25, 0.50, OR 0.75.
C
C        INPUT VARIABLES ARE:
C          F0 = FC POINTER, V5 = V* POINTER, X2 = X*, Q = PEAK FLOW AT DAM
C          RETURN VALUE IS Q8
C
      INTEGER V5,F0
      COMMON/ARAY/ F(15,6),X(6)
      DO 50 I1 = 1,6
         I2=I1
         X3=X(I1)/10.
         IF((X2-X3) .LE. 0.00) GO TO 100
 50   CONTINUE
C
C          BRACKETING X'S FOUND
C
 100  I3=I2-1
      J0=0
      IF(F0 .GT. 1)  J0=J0+5
      IF(F0 .GT. 2)  J0=J0+5
      FV5=V5
      IF(V5.GT.5) V5=5
      J3=J0+V5
      RL1=ALOG(F(J3,I3))
      RL2=ALOG(F(J3,I2))
      RL3=ALOG(X(I3))
      RL4=ALOG(X(I2))
      RL5=ALOG(X2*10.)
      D3=(RL2-RL1)/(RL4-RL3)
      RL6=(RL5-RL3)*D3 + RL1
      IF((X2*10.) .GT. X(6))  RL6 = (RL5-RL4)*D3 + RL2
      IF(RL6 .LT. -3.0)  RL6 = -3.0
      FAC=EXP(RL6)/100.
      IF(F7.LE.0.75) GO TO 120
      FRK=2.*FV5
      FF=FRK*SQRT(F7-0.75)
      IF(FF.GT.FRK) FF=FRK
      FAC=FAC+FF/100.
  120 IF(FV5.LE.5.0) GO TO 122
      FK=25.*F7
      FV=FK*SQRT(FV5-5.0)
      IF(FV.GT.100.*F7) FV=100.*F7
      FAC=FAC+FV/100.
  122 IF(FAC.GT.0.99) FAC=0.99
      Q8=FAC*Q
      RETURN
      END
c ---------------------------------------------------------------------
      SUBROUTINE ROUTE(F7,V7,X1,X5,Q,Q7)
C
C        THIS SUBROUTINE COMPUTES THE PEAK FLOW AT A GIVEN CROSS SECTION.
C
C        INPUT PARMS ARE:
C          F7 = FC, V7 = V*, X5 = DIST TO X-S, X1 = XC,
C
C        RETURNED VALUE IS Q7
C
      INTEGER V8,V9,F8,F9,F0,V5
      COMMON/ARAY/ F(15,6),X(6)
C        SET X* VALUE
      X2=X5/X1
C
C        SET V* POINTER
C
      V8=IFIX(V7)
      V9=IFIX(V7+1)
      IF(V7 .LE. 1)  V8=1
C     IF(V7 .GT. 5)  V8=5
C     IF(V7 .GT. 5)  V9=5
C
C        SET FC POINTERS
      F8=IFIX(4.*F7)
      F9=IFIX((4.*F7)+1.)
      IF(F7 .LT. 0.25)  F8=F9
C        ***NOTE: WHEN FC=1.5 CURVES AVAILABLE, CHANGE FOLLOWING TWO LINES
      IF(F7 .GT. 0.75)  F8=3
      IF(F7 .GT. 0.75)  F9=3
      D0=(F7-FLOAT(F8)/4.)/0.25
      IF(F8 .EQ. F9)  D0=0.
      IF(F8 .EQ. 3)  D0=D0/3.
C
C        CALL ROUTINE FOR DOWNSTREAM PEAK FLOWS
C
      F0=F8
      V5=V8
      CALL PREDIC(X2,F0,V5,Q,Q8,F7)
      Q1=Q8
      F0=F9
      CALL PREDIC(X2,F0,V5,Q,Q8,F7)
      Q2=Q8
C
C        INTERPOL FOR SPEC FC AND LOWER V*
C
      Q4=Q1+(Q2-Q1)*D0
      F0=F8
      V5=V9
      CALL PREDIC(X2,F0,V5,Q,Q8,F7)
      Q1=Q8
      F0=F9
      CALL PREDIC(X2,F0,V5,Q,Q8,F7)
      Q2=Q8
C
C       INTERP FOR SPEC FC AND UPPER V*
C
      Q5=Q1+(Q2-Q1)*D0
C
C       INTERP FOR SPECIFIC V*
C
      Q7=Q4+(Q5-Q4)*(V7-FLOAT(V8))
      IF(V7 .LT. 1.0)  Q7=Q4
      RETURN
      END
c ---------------------------------------------------------------------
C
C         COMPM COMPUTES THE SHAPE FACTOR (FM) AT SECTION I. THE COMPUTATION
C         DEPENDS ON THE EIGHTING FACTOR (IW);  IW = 1 FOR DISTANCE
C         WEIGHTED TOTAL SECTION (ACTIVE + STORAGE), IW = 2 FOR ACTIVE CROSS
C         SECTIONS, IW = 3 FOR DISTANCE WEIGHTED ACTIVE CROSS SECTIONS.
C
      SUBROUTINE COMPM(IW,I,FM,Y,B)
      COMMON/S1/D(50),E(50),HS(8,50)
      COMMON/S2/BS(8,50),AS(8,50),BSW(8,50),ASW(8,50),CM(8,50),
     *  CMW(8,50),BSS(8,50),BST(8,50),CN(8,50),ASA(8,50),
     *  BSWA(8,50),ASWA(8,50),CMWA(8,50)
      KM=2
      IF(Y.LE.HS(2,I)) KM=1
      YM=HS(KM,I)
      ALYM=1000.
      IF(YM.GT.0.001) ALYM=ALOG10(YM)
      YMX=Y
      BM=BS(KM,I)
      IF(IW.EQ.1) BM=BSW(KM,I)
      IF(IW.EQ.3) BM=BSWA(KM,I)
      ALBM=1000.
      IF(BM.GT.1.001) ALBM=ALOG10(BM)
      BMX=B

    5 FM=(ALBM-ALOG10(BMX))/(ALYM-ALOG10(YMX))
      RETURN
      END
c ---------------------------------------------------------------------
C
C         SUBROUTINE RPARM COMPUTES THE ROUTING PARAMETERS THE
C         FROUDE NUMBER (FR), VOLUME PARAMETER (VS), AND THE
C         CHARACTERISTIC DISTANCE PARAMETER (XC).
C
      SUBROUTINE RPARM(I,NCS,HDM,Y,VOL,S,FM,FR,VS,XC)
      E23=2./3.
      HDD=0.6*HDM
C
C         SECT COMPUTES THE AREA (AR) AT THE ELEVATION
C         OF THE DAM (HDM) AT SECTION I.
C
      CALL SECT(1,I,NCS,HDM,B,AR,CMM)
C
C         CALL COMPM TO COMPUTE THE SECTION SHAPE FACTOR (FM).
C
      CALL COMPM(3,I,FM,HDM,B)
      FAC=6./(1.0+4.*0.5**(FM+1.))
      XC=(FAC*VOL*43560./AR)/5280.
CC      PRINT*,I,FM,XC,VOL,AR
C
C         CALL SECT TO COMPUTE THE AREA (A) AND CHANEL WIDTH (B) FOR THE
C         ELEVATION (Y) AT SECTION I.
C
      CALL SECT(1,I,NCS,Y,B,A,CMM)
      DH=A/B
      V=1.49/CMM*SQRT(S)*DH**E23
      FR=V/SQRT(32.2*DH)
      VS=(VOL*43560.)/(XC*5280.*A)
      RETURN
      END
c ---------------------------------------------------------------------
C
C         TIMFLD COMPUTES THE TIMES OF FLOODING (TFL) AND DEFLOODING (TDFL)
C         AT THE FLOOD ELEVATION HFL AT SECTION I.
C
      SUBROUTINE TIMFLD(I,NCS,VOL,TFM,HFL,S,QO,Q,TP,TFL,TDFL)
      E23=2./3.
      TFL=0.
      TDFL=0.
      IF(HFL.LT.0.01) GO TO 50
C
C         CALL SECT TO OBTAIN THE AREA (A) AND THE CHANNEL WIDTH (B)
C         AT SECTION IWIDTH THE WATER SURFACE AT THE FLOOD ELEVATION
C         (HFL).
C
      CALL SECT(2,I,NCS,HFL,B,A,CMM)
      QF=1.49/CMM*SQRT(S)*A*(A/B)**E23
      IF(Q.LT.QF) GO TO 50
      IF(QO.GT.QF) GO TO 50
      TFL=TP-((Q-QF)/(Q-QO))*TFM/60.
      TDFL=TP+(Q-QF)/(Q-QO)*(24.2*VOL/(Q-QO)-TFM/60.)
   50 RETURN
      END
