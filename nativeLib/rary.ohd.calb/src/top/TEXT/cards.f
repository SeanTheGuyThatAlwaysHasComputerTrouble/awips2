c$pragma c icpcrd
C MODULE CARDS
C-----------------------------------------------------------------------
C
C  THIS ROUTINE READS INPUT CARDS FOR PROGRAMS MCP3 AND OPT3.
C
      SUBROUTINE CARDS (TS,MTS,P,MP,C,MC,T,MT,D,MD,NXD)
C
      DIMENSION TS(MTS),P(MP),C(MC),D(MD)
      INTEGER T(MT)
      CHARACTER*8 OPTION
      CHARACTER*8 RTNNAM,OPNOLD
      CHARACTER*44 DRTNNAM
      CHARACTER*80 TITLE
      CHARACTER*4  CMO(12)/
     *   ' JAN',' FEB',' MAR',' APR',' MAY','JUNE',
     *   'JULY',' AUG',' SEP',' OCT',' NOV',' DEC' /
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'common/where'
      INCLUDE 'common/errdat'
      INCLUDE 'common/toterz'
      INCLUDE 'common/killcd'
      INCLUDE 'common/sysbug'
      INCLUDE 'common/fprog'
      INCLUDE 'common/calbrt'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fengmt'
      INCLUDE 'common/fpwarn'
      INCLUDE 'common/fcpuck'
      INCLUDE 'clbcommon/crwctl'
      INCLUDE 'clbcommon/cdbugx'
      COMMON /OUTCTL/ IOUTYP
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/calb/src/top/RCS/cards.f,v $
     . $',                                                             '
     .$Id: cards.f,v 1.10 2002/02/11 13:27:55 michaelo Exp $
     . $' /
C    ===================================================================
C
      DATA IBLANK/4H    /
      DATA ENG/3HENG/
      DATA BOTH,GRPHIC/4HBOTH,4HGRPH/
C
C
      RTNNAM='CARDS'
      IOPNUM=0
      CALL FSTWHR (RTNNAM,IOPNUM,OPNOLD,IOLDOP)
C
      ISEG(1)=IBLANK
      ISEG(2)=IBLANK
C
      IODBUG=IPR
      ITRACE=0
      IDBALL=0
      NDEBUG=0
      NDEBGS=0
      IALL=0
      DO 10 I=1,20
         IDEBGS(I)=IBLANK
         IDEBUG(I)=0
10       CONTINUE
      IOERR=IPR
      NERRS=0
      NWARN=0
      NERRST=0
      NWARNT=0
      KLCODE=0
      NKILLS=0
      KLSTOP=1
      ICPUT=0
      MODWRN=1
      IRWWRN=1
      IDTWRN=1
C
C     SET GENERAL FCTIME COMMON BLOCK VALUES.
      CALL FSETNW
      LOCAL=0
      NLSTZ=100
      NOUTZ=100
      NOUTDS=0
C
C  GET NAME OF DATA SET FROM WHICH PROGRAM IS BEING EXECUTED.
      NUNIT=0
      IPRERR=-1
      CALL UPRDSN ('STEPLIB ',NUNIT,DRTNNAM,IPRERR,IPR,IERR)
C
C   READ GENERAL INFORMATION AND PERIOD OF RECORD
      READ (IN,20,END=280,IOSTAT=IOSTAT) TITLE
20    FORMAT (A)
      IF (IOSTAT.NE.0) GO TO 300
      READ (IN,30,END=280,IOSTAT=IOSTAT) IMO,IYR,LMO,LYR,UNITS,IDAY,
     1LDAY,OUTYPE
30    FORMAT (4I5,2X,A3,5X,I5,5X,I5,1X,A4)
      IF (IOSTAT.NE.0) GO TO 300
C
C  SET UNITS FOR MOST DISPLAYS
      METRIC=1
      IF (UNITS.EQ.ENG) METRIC=0
C
C     DETERMINE FORM OF OUTPUT--TEXT, GRAPHICS, OR BOTH.
      IOUTYP=0
      IF (OUTYPE.EQ.GRPHIC) IOUTYP=2
      IF (OUTYPE.EQ.BOTH) IOUTYP=1
C
C  CHECK DATES AND TIMES
      CALL DDYCDL(IYR,IMO,1)
      CALL DDYCDL(LYR,LMO,1)
      IF (IMO.LT.1) IMO=1
      IF (IMO.GT.12) IMO=12
      IF (LMO.LT.1) LMO=1
      IF (LMO.GT.12) LMO=12
      CALL DDGCDM(IYR,IMO,LAST)
      IF ((IDAY.GT.0).AND.(IDAY.LE.LAST)) GO TO 40
      IDAY=1
40    IHOUR=0
      CALL DDGCDM(LYR,LMO,LAST)
      IF((LDAY.GT.0).AND.(LDAY.LE.LAST)) GO TO 50
      LDAY=LAST
50    LHOUR=24
C
C  CHECK IF STARTING DATE IS LE TO ENDING DATE
      IF (LYR.GT.IYR) GO TO 100
      IF (LYR.EQ.IYR) GO TO 60
      GO TO 80
60    IF (LMO.GT.IMO) GO TO 100
      IF (LMO.EQ.IMO) GO TO 70
      GO TO 80
70    IF (LDAY.GE.IDAY) GO TO 100
80    WRITE (IPR,90) LMO,LDAY,LYR,IMO,IDAY,IYR
90    FORMAT ('0**ERROR** THE ENDING DATE FOR THE RUN (',
     1 I2.2,'/',I2.2,'/',I4,
     2 ') IS BEFORE THE STARTING DATE (',
     2 I2.2,'/',I2.2,'/',I4,').')
      CALL ERROR
      CALL STOP
C
C     SET VALUES FOR RUN  ENTRIES IN THE FCTIME COMMON BLOCK.
100   CALL FCTZC (100,0,TZCODE)
      CALL JULDA (IDARUN,IHRRUN,IMO,IDAY,IYR,IHOUR,100,0,TZCODE)
      IF (IHRRUN.LT.24) GO TO 110
      IDARUN=IDARUN+1
      IHRRUN=0
110   CALL FCTZC (100,0,TZCODE)
      CALL JULDA (LDARUN,LHRRUN,LMO,LDAY,LYR,LHOUR,100,0,TZCODE)
      LDACPD=LDARUN
      LHRCPD=LHRRUN
C
C  PRINT TITLE PAGE
      WRITE (IPR,120)
120   FORMAT (1H ,10X,100('*'))
      WRITE (IPR,120)
      WRITE (IPR,130)
130   FORMAT (1H ,10X,'*****',90X,'*****',/11X,'*****',90X,'*****')
      WRITE (IPR,140) TITLE
140   FORMAT (1H ,10X,'*****',5X,A,5X,'*****')
      WRITE (IPR,130)
      IF ((IDAY.NE.1).OR.(LDAY.NE.LAST)) GO TO 160
C
C  RUN IS FOR COMPLETE MONTHS
      WRITE (IPR,150) CMO(IMO),IYR,CMO(LMO),LYR
150   FORMAT (1H ,10X,'*****',10X,27HPERIOD USED FOR THIS RUN --,1X,
     1 A4,1H/,I4,1X,2HTO,1X,A4,1H/,I4,30X,'*****')
      GO TO 180
C
C  RUN IS FOR PARTIAL MONTHS
160   WRITE (IPR,170) IMO,IDAY,IYR,LMO,LDAY,LYR
170   FORMAT (1H ,10X,'*****',5X,27HPERIOD USED FOR THIS RUN --,1X,I2,
     1 '/',I2.2,'/',I4,' TO ',I2.2,'/',I2.2,'/',I4,33X,'*****')
180   WRITE (IPR,130)
      WRITE (IPR,120)
      WRITE (IPR,120)
C
C  READ OPTION
190   READ (IN,200,END=280,IOSTAT=IOSTAT) OPTION
200   FORMAT (A)
      IF (IOSTAT.NE.0) GO TO 300
      IF (OPTION.EQ.'SETBUG') GO TO 220
      IF (OPTION.EQ.'CLBDEBUG') GO TO 230
      IF (OPTION.EQ.'SRCHFILE') GO TO 240
      IF (OPTION.EQ.'DEF-TS') GO TO 260
      IF (OPTION.NE.'STOP') GO TO 190
C
      WRITE (IPR,210)
210   FORMAT ('0**ERROR** INPUT CARDS ARE NOT IN THE PROPER ORDER. ',
     1  'A ''STOP'' CARD WAS ENCOUNTERED BEFORE FINDING ',
     2  'A ''DEF-TS'' CARD.')
      CALL ERROR
      CALL STOP
C
C  SETBUG COMMAND
220   CALL FSETBG
      IF (IFBUG('CPU ').EQ.0)  CALL URTIMR (LAPSE,ICPUT)
      GO TO 190
C
C  CLBDEBUG COMMAND
230   READ (IN,30,END=280,IOSTAT=IOSTAT) ICRWTR,ICRWDB
      IF (IOSTAT.NE.0) GO TO 300
      IF (ICRWTR.LT.0) ICRWTR=0
      IF (ICRWDB.LT.0) ICRWDB=0
      IF (ICRWTR.GT.3) ICRWTR=3
      IF (ICRWDB.GT.3) ICRWDB=3
      GO TO 190
C
C  SRCHFILE OPTION
240   ISFN=1
      WRITE (IPR,250)
250   FORMAT('0*** NOTE - FILE NAMES WILL BE FOUND BY READING EACH ',
     1 'FILE.')
      GO TO 190
C
C  DEFINE ALL TIME SERIES TO BE USED - SET POSITION IN THE D ARRAY
260   NXD=1
      MTTS=1
      MTSESP=1
      CALL TSDEF (TS,MTS,D,MD,NXD,NFOUND,LWMAX,
     *   TTS,MTTS,TSESP,MTSESP,IESPSG)
C
C  SETUP THE OPERATIONS TABLE
      CALL SETUP (P,MP,C,MC,T,MT,TS,MTS,D,MD,NXD,MINDT,LWMAX,
     *   IENDIN)
      IF (IENDIN.EQ.1) GO TO 280
C
C  PASS BASIC RUN INFORMATION AND P ARRAY TO INTERFACE
C  ROUTINE IF THIS IS THE ICP PROGRAM.
      IF (IOUTYP.GT.0) CALL ICPCRD(IMO,IYR,LMO,LYR,IDARUN,LDARUN,
     1  METRIC,P,MP)
C
      IF (IFBUG('CALI').EQ.1) THEN
         WRITE (IODBUG,270) IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG
270   FORMAT (1H0,6I6,18I4)
         WRITE (IODBUG,270) IMO,IYR,LMO,LYR
         WRITE (IODBUG,270) IDARUN,IHRRUN,LDARUN,LHRRUN,LDACPD,LHRCPD,
     1      NOW,LOCAL,NOUTZ,NOUTDS,NLSTZ
         ENDIF
C
      GO TO 320
C
C  END OF FILE ENCOUNTERED
280   WRITE (IPR,290)
290   FORMAT ('0**ERROR** UNEXPECTED END OF FILE ENCOUNTERED ',
     1 'READING INPUT CARDS.')
      CALL ERROR
      CALL STOP
C
C  I/O ERROR ENCOUNTERED
300   WRITE (IPR,310) IOSTAT
310   FORMAT ('0**ERROR** STATUS CODE ',I3,' ENCOUNTERED ',
     1 'READING INPUT CARDS.')
      CALL ERROR
      CALL STOP
C
320   CALL FSTWHR (OPNOLD,IOLDOP,OPNOLD,IOLDOP)
C
      RETURN
C
      END
