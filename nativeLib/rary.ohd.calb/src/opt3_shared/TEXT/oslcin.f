C     MEMBER OSLCIN        VERSION 1
C
C***********************************************************************
C
C THIS SUBROUTINE FILLS IN THE A AND OA ARRAYS WITH OPT3 INFORMATION
C FOR THE API-SLC OPERATION. A CHECK IS MADE OF ALL CARD INPUT AND THE
C INPUT IS PRINTED FOR USER VERIFICATION. IF THERE ARE ANY PROBLEMS THE
C USER IS NOTIFIED WITH EITHER A WARNING OR ERROR MESSAGE. IF AN ERROR
C IS ENCOUNTERED THE PROGRAM TERMINATES.
C
C***********************************************************************
C
C SUBROUTINE INITIALLY WRITTEN BY
C        DON LAURINE - CBRFC   FEBRUARY 1986
C
C***********************************************************************
C
C PRINCIPAL VARIABLES
C
C FOR DEFINITION OF VARIABLES IN COMMON BLOCKS, SEE SECTION IX.3.3C
C OF THE NWSRFS USER'S MANUAL
C
C     A        ARRAY OF CURRENT VALUES OF EACH PARAMETER
C     N        NUMBER OF OTHER PARAMETERS DEFINED
C     P        PARAMETER ARRAY FOR ALL OPERATIONS
C
C     IN       INPUT UNIT FOR I/O
C     IU       POINTER FOR POSITION IN OA ARRAY
C     MA       DIMENSION FOR A ARRAY
C     MP       DIMENSION FOR P ARRAY
C     OA       OPTIMIZATION CONTROL ARRAY FOR OPTIMIZED PARAMETERS
C
C     IPR      OUTPUT UNIT FOR I/O
C     IRD      ARRAY OF FLAGS FOR DIFFERENCE AND RATIO
C                 (0 - DIFFERENCE, 1 - RATIO)
C     MOA      DIMENSION FOR OA ARRAY
C     SLC      OPERATION NAME 'API-SLC'
C
C     ABSL     ABSOLUTE LOWER BOUND
C     ABSU     ABSOLUTE UPPER BOUND
C     DIFF     ARRAY CONTAINING WORD 'DIFFERENCE'
C     IBUG     DEBUG FLAG
C     IERO     ERROR RETURN VALUE  (1 - ERROR OCCURRED)
C     IUSE     AMOUNT OF SPACE REQUIRED FOR THIS PARAMETER OPTIMIZATION
C     LOCP     P ARRAY LOCATION
C     NOTH     CURRENT NUMBER OF VALID OTHER PARAMETERS
C     NPER     TYPE OF PARAMETER INCREMENT
C                 (0 - FIXED, 1 - PERCENTAGE)
C     OPID     OPERATION ID
C     PARM     PARAMETER NAME
C     WARN     SUBROUTINE KEEPS TRACK OF WARNINGS
C
C     DELTA    INCREMENTAL VALUE FOR PARAMETER DURING OPTIMIZATION
C     ERROR    SUBROUTINE KEEPS TRACK OF ERRORS
C     ILOCC    LOCATION POINTER FOR OA ARRAY
C     IPLUS    VARIABLE FOR ABSOLUTE BOUNDS USED IN CALCULATING LOCATION
C                 POINTER FOR OA ARRAY
C     IPNUM    NUMERICAL NUMBER OF OPT PARAMETER CHOOSEN
C     IULOC    LOCATION POINTER FOR OA ARRAY
C     LOCPP    ARRAY OF LOCATION POINTERS FOR PARAMETERS IN P ARRAY
C     NPARM    NUMBER OF PARAMETERS BEING OPTIMIZED
C     NUMOP    OPERATION NUMBER
C     OPIDD    OPERATION NAME
C     OPNEW    OPERATION NAME
C     PMNAM    PARAMETER NAME
C     RATIO    ARRAY WITH WORDS 'RATIO'
C     RDIFF    PRINT ARRAY WHICH CONTAINS 'DIFFERENCE' OR 'RATIO'
C
C     CHECKL   USER DEFINED LOWER BOUND
C     CHECKU   USER DEFINED UPPER BOUND
C     FOPCDE   SUBROUTINE TO VALIDATE OPERATION ID AND RETURN INTERNAL
C                 NUMBER
C     FSERCH   SUBROUTINE TO VALIDATE OPERATION AND RETURN P ARRAY
C                 LOCATION
C     ICLOSE   FLAG FOR VALID BOUND CHECK
C     LEFTOA   SPACE AVAILABLE IN OA ARRAY
C     NOTHER   NUMBER OF OTHER PARAMETERS
C     NUMOPP   NUMBER OF OPERATION
C     OBADID   SUBROUTINE TO BAD OPERATION WARNING
C     OBNDCK   SUBROUTINE CHECKS UPPER AND LOWER BOUNDS
C     OPNEWW   OTHER OPERATION NAME
C
C
C***********************************************************************
C
C CONTENTS OF THE A ARRAY:
C
C      WORD    ITEM
C    -------   -----------------------------------------------------
C
C       1      EACH WORD CONTAINS THE CURRENT VALUE OF A PARAMETER
C
C***********************************************************************
C
C CONTENTS OF THE OA ARRAY:
C
C      WORD    ITEM
C    -------   -----------------------------------------------------
C
C       1     POINTER TO BEGINNING OF P ARRAY VALUES
C       2     OPERATION NUMBER
C     3 - 4   PARAMETER NAME
C       5     PARAMETER LOCATION IN P ARRAY
C       6     INCREMENT OR DELTA
C       7     LOWER LIMIT OF PARAMETER
C       8     UPPER LIMIT OF PARAMETER
C       9     NUMBER OF OTHER OPERATIONS AFFECTED
C      10     NUMBER OF PARAMETER VALUES TO BE OPTIMIZED
C
C THE FOLLOWING LOCATIONS ARE ALSO NEEDED IF LOCATION 9 IS GREATER THAN
C ZERO
C
C      11     ABSOLUTE LOWER BOUND FOR THIS PARAMETER
C      12     ABSOLUTE UPPER BOUND FOR THIS PARAMETER
C
C REPEAT 13 - 16 FOR EACH OTHER PARAMETER (SAME NUMBER AS IN LOCATION 9)
C
C      13     RATIO OR DIFFERENCE FLAG
C      14     LOCATION OF P ARRAY FOR OTHER PARAMETER
C      15     LOCATION IN P ARRAY OF OTHER PARAMETER
C      16     NUMBER OF VALUES (SAME AS NUMBER LOCATION 10)
C
C***********************************************************************
C
      SUBROUTINE OSLCIN(OPID,NUMOP,OPNEW,PARM,DELTA,CHECKL,CHECKU,
     *NOTHER,OA,MOA,P,MP,A,MA,NPARM,IU,LEFTOA,IERO)
C
      DIMENSION P(MP),A(MA),OA(MOA),PARM(2),OPID(2),OPNEW(2)
      DIMENSION PMNAM(2,13),ABSL(13),ABSU(13),IRD(13),DIFF(3),RATIO(3)
      DIMENSION OPIDD(2),OPNEWW(2),RDIFF(3),SLC(2),LOCPP(13)
C
      INCLUDE 'common/ionum'
      INCLUDE 'common/fdbug'
      INCLUDE 'ocommon/opschm'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/calb/src/opt3_shared/RCS/oslcin.f,v $
     . $',                                                             '
     .$Id: oslcin.f,v 1.2 1996/07/11 20:56:50 dws Exp $
     . $' /
C    ===================================================================
C
C
      DATA PMNAM/4HREC ,4H    ,4HLLMT,4H    ,4HA   ,4H    ,
     *           4HI   ,4H    ,4HWN  ,4H    ,4HWX  ,4H    ,
     *           4HE1  ,4H    ,4HE2  ,4H    ,4HCP  ,4H    ,
     *           4HK   ,4H    ,4HM   ,4H    ,4HPOW ,4H    ,
     *           4HPSIG,4H    /
      DATA ABSL/.01,-.99,.01,.01,1.0,1.0,0.0,0.0,0.0,.01,0.0,0.0,.01/
      DATA ABSU/.99,0.0,10.0,20.0,52.,52.,1.0,1.0,5.,.99,100.,5.,2./
      DATA IRD/1,1,1,1,1,1,1,1,1,1,1,1,1/
      DATA DIFF/4H DIF,4HFERE,4HNCE /
      DATA RATIO/4H   R,4HATIO,4H    /
      DATA IBUG/4HOPT /
      DATA SLC/4HAPI-,4HSLC /
      DATA LOCPP/7,8,26,27,28,29,30,31,32,33,34,35,36/
C
C CHECK TRACE LEVEL - PRINT DEBUG INFO IF TRACE .GE. 1
C
      IF(ITRACE.GE.1) WRITE(IODBUG,900)
C
C INITIALIZE VARIABLES
C
      LOCP = 0
      NOTH = 1
      IPLUS = 0
      IPNUM = 0
C
C CHECK TO SEE IF ENOUGH SPACE IS AVAILABLE IN OA ARRAY
C
      IF(NOTHER.GT.0) IPLUS=2
      IUSE = 10+(NOTHER*4)+IPLUS
      IF(LEFTOA.GE.IUSE) GO TO 100
C
C ERROR - NOT ENOUGH SPACE IN OA ARRAY
C
      WRITE(IPR,902)
      IERO = 1
      CALL ERROR
      GO TO 9999
C
C SPACE IS AVAILABLE IN OA SO RESERVE AREA
C
100   LEFTOA = LEFTOA-IUSE
C
C DETERMINE WHICH PARAMETER IS BEING CONSIDERED FOR OPTIMIZING
C
      DO 110 I=1,13
      IPNUM = I
      IF(PARM(1).EQ.PMNAM(1,I).AND.PARM(2).EQ.PMNAM(2,I)) GO TO 120
110   CONTINUE
C
C PARAMETER IS NOT DEFINED
C
      WRITE(IPR,904) PARM
      NPARM = NPARM-1
      CALL WARN
C
C READ REMAINING OTHER PARAMETERS RELATED TO THIS PARAMETER
C THIS CLEARS CARD INPUT FOR THIS PARAMETER
C
      IF(NOTHER.EQ.0) GO TO 9999
      DO 115 I=1,NOTHER
      READ(IN,906) OPIDD,OPNEWW
115   CONTINUE
      GO TO 9999
C
C CHECK TO SEE IF OPERATION IS DEFINED
C
120   CALL FSERCH(NUMOP,OPNEW,LOCP,P,MP)
      IF(LOCP.NE.0) GO TO 125
C
C OPERATION NOT FOUND
C
      WRITE(IPR,908) OPID,OPNEW
      NPARM = NPARM-1
      CALL WARN
      GO TO 9999
C
C START LOADING OA AND A ARRAYS
C
125   OA(IU+1) = LOCP+0.01
      OA(IU+2) = NUMOP+0.01
      OA(IU+3) = PARM(1)
      OA(IU+4) = PARM(2)
      IPLOC=LOCP+LOCPP(IPNUM)
      OA(IU+5) = IPLOC+0.01
      OA(IU+6) = DELTA
      OA(IU+10) = 1.01
C
      A(NPARM) = P(IPLOC)
C
C CHECK FOR USER ERROR IN ENTERING PARAMETER BOUNDS
C
      IF(CHECKL.LT.CHECKU) GO TO 127
C
C INVALID USER BOUNDS
C
      WRITE(IPR,909) PARM,CHECKL,CHECKU,ABSL(IPNUM),ABSU(IPNUM)
      CALL WARN
C
      OA(IU+7) = ABSL(IPNUM)
      OA(IU+8) = ABSU(IPNUM)
      GO TO 150
C
C CHECK LOWER BOUND
C
127   IF(CHECKL.GE.ABSL(IPNUM)) GO TO 130
C
C REQUESTED LOWER BOUNDS IS BELOW ABSOLUE BOUNDS
C
      WRITE(IPR,910) CHECKL,PARM,ABSL(IPNUM)
      OA(IU+7) = ABSL(IPNUM)
      CALL WARN
      GO TO 140
C
C LOWER BOUND IS VALID
C
130   OA(IU+7) = CHECKL
C
C CHECK UPPER BOUND
C
140   IF(CHECKU.LE.ABSU(IPNUM)) GO TO 145
C
C REQUESTED UPPER BOUNDS IS ABOVE ABSOLUTE BOUNDS
C
      WRITE(IPR,912) CHECKU,PARM,ABSU(IPNUM)
      OA(IU+8) = ABSU(IPNUM)
      CALL WARN
      GO TO 150
C
C UPPER BOUND IS VALID
C
145   OA(IU+8) = CHECKU
C
C CHECK TO SEE THAT INITIAL VALUE IS NOT TOO CLOSE TO BOUNDS
C
150   ICLOSE = 0
      CALL OBNDCK(PARM,OPID,OPNEW,A(NPARM),DELTA,OA(IU+7),OA(IU+8),
     *NPER,ICLOSE)
      IF(ICLOSE.NE.1) GO TO 155
C
C DELTA VALUE TOO CLOSE TO BOUNDS
C
      NPARM = NPARM-1
C
C CLEAR INPUT RECORDS FOR THIS PARAMETER
C
      IF(NOTHER.EQ.0) GO TO 9999
      DO 152 I=1,NOTHER
      READ(IN,906) OPIDD,OPNEWW
152   CONTINUE
      GO TO 9999
C
C PRINT PARAMETER INFORMATION
C
155   WRITE(IPR,914) NPARM,OPID,OPNEW,PARM,A(NPARM),OA(IU+7),OA(IU+8),
     *OA(IU+6)
C
C CHECK TO SEE IF OTHER AREAS ARE AFFECTED
C
      N = NOTHER
      IF(NOTHER.EQ.0) GO TO 300
C
C LOAD OA ARRAY WITH ABSOLUTE BOUNDS
C
      IULOC = IU+10
      OA(IULOC+1) = ABSL(IPNUM)
      OA(IULOC+2) = ABSU(IPNUM)
C
C READ IN OTHER AREA INFORMATION
C
      DO 160 I=1,NOTHER
      READ(IN,906) OPIDD,OPNEWW
C
C CHECK IF VALID OPERATION AND GET INTERNAL NUMBER
C
      CALL FOPCDE(OPIDD,NUMOPP)
      IF(NUMOPP.NE.1.AND.OPIDD(1).EQ.SLC(1).AND.OPIDD(2).EQ.SLC(2))
     * GO TO 170
C
C INVALID OPERATION PRINT WARNING
C
      CALL OBADID(OPIDD)
      N=N-1
      GO TO 160
C
C VALID OPERATION, LOAD OA ARRAY
C
170   LOCP=0
      CALL FSERCH(NUMOPP,OPNEWW,LOCP,P,MP)
      ILOCC = IULOC+3+(NOTH-1)*4
      NOTH = NOTH+1
C
      OA(ILOCC) = IRD(IPNUM)+0.01
      OA(ILOCC+1) = LOCP+0.01
      OA(ILOCC+2) = LOCP+LOCPP(IPNUM)+0.01
      OA(ILOCC+3) = 1.01
C
C LOAD PRINT ARRAY WITH FLAG FOR DIFFERENCE OR RATIO
C
      IF(IRD(IPNUM).EQ.1) GO TO 173
      DO 172 IDR=1,3
172   RDIFF(IDR) = DIFF(IDR)
      GO TO 180
C
173   DO 174 IDR=1,3
174   RDIFF(IDR) = RATIO(IDR)
C
C WRITE OTHER PARAMETER INFORMATION
C
180   IF(I.NE.1) GO TO 185
      WRITE(IPR,916) OPNEWW,RDIFF
      GO TO 160
C
185   WRITE(IPR,918) OPNEWW,RDIFF
160   CONTINUE
C
C FINISH LOADING OA ARRAY AND UPDATE STORAGE POINTER
C
300   OA(IU+9) = N+0.01
      IF(N.EQ.0) IPLUS = 0
      IUSE = 10+(N*4)+IPLUS
C
C CHECK IF DEBUG INFORMATION IS NEEDED
C
      IF(IFBUG(IBUG).NE.1) GO TO 310
      WRITE(IODBUG,920) (OA(KK),KK=IU,IUSE)
C
310   IU = IU+IUSE
C
C END OF ROUTINE
9999  IF(ITRACE.GE.1) WRITE(IODBUG,925)
      RETURN
C
C-----------------------------------------------------------------------
C I/O FORMATS
C
900   FORMAT(1H0,1X,'** OSLCIN ENTERED')
902   FORMAT(1H0,1X,'** ERROR **  THIS PARAMETER REQUIRES MORE SPACE',
     *' THAN IS AVAILABLE IN THE OA ARRAY')
904   FORMAT(1H0,1X,'** WARNING **  (',2A4,') IS NOT A PARAMETER THAT',
     *' CAN BE OPTIMIZED')
906   FORMAT(2A4,2X,2A4)
908   FORMAT(1H0,1X,'** WARNING **  ID(',2A4,') NAME(',2A4,
     *' HAS NOT BEEN DEFINED AS AN OPERATION')
909   FORMAT(1H0,1X,'** WARNING **  PARAMETER (',2A4,') LOWER BOUND (',
     *F8.2,') IS GREATER OR EQUAL TO THE UPPER LIMIT (',F8.2,')',/17X,
     *'THE USER BOUNDS HAVE BEEN REPLACED WITH THE ABSOLUTE LIMITS (',
     *F8.2,',',F8.2,')')
910   FORMAT(1H0,1X,'** WARNING **  THE SPECIFIED LOWER BOUND (',
     *F8.2,') FOR ',2A4,' HAS BEEN REPLACED BY THE ABSOLUTE LOWER ',
     *'CONSTRAINT (',F8.2,')')
912   FORMAT(1H0,1X,'** WARNING **  THE SPECIFIED UPPER BOUND (',
     *F8.2,') FOR ',2A4,' HAS BEEN REPLACED BY THE ABSOLUTE UPPER ',
     *'CONSTRAINT (',F8.2,')')
914   FORMAT(1H0,I2,2H. ,2A4,2X,2A4,3X,2A4,2X,F9.3,1X,F9.3,1X,F9.3,5X,
     *F9.3)
916   FORMAT(1H+,88X,2A4,15X,3A4)
918   FORMAT(1H ,88X,2A4,15X,3A4)
920   FORMAT(1H0,' OPT SLC-API VARIABLES IN OA ARRAY FOR PARAMETER (',
     *//2X,2(I5,F10.3),I5,2X,2A4,5(I5,F10.3),3(/2X,8(I5,F10.3)))
925   FORMAT(1H0,'** EXIT OSLCIN')
      END
