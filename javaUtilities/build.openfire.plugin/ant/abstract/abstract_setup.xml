<!-- 
	Setup will copy the plugin to the openfire source plugins directory.
	Setup will also rearrange the source directories to match the openfire
	plugin source directory layout. And, setup will copy dependent libraries
	to the lib directory of the plugin.
 -->

<project>
	<!-- The following properties are provided externally as arguments. -->
	<property name="baseline.dir"
		value="" />	
	
	<property name="openfire.src.dir"
		value="" />
		
	<property name="plugin.name" 
		value="" />
	<!-- END OF PROPERTIES -->

	<target name="init">
		<!-- copy the plugin to the openfire source plugins directory. -->
		<mkdir dir="${openfire.src.dir}/src/plugins/${plugin.name}" />
		<copy todir="${openfire.src.dir}/src/plugins/${plugin.name}">
			<fileset dir="${baseline.dir}/${plugin.name}" />
		</copy>
	</target>

	<target name="setup" depends="init">
		<!-- re-arrange the source directories -->
		<!-- 
			pluginDir/
			 |- src/
			      |- database
			      |- java
			      |- web
		 -->
		<mkdir dir="${openfire.src.dir}/src/plugins/${plugin.name}/src" />
		<if>
			<available 
				file="${openfire.src.dir}/src/plugins/${plugin.name}/java"
				type="dir" />
			<then>
				<move todir="${openfire.src.dir}/src/plugins/${plugin.name}/src/java">
					<fileset dir="${openfire.src.dir}/src/plugins/${plugin.name}/java" />
				</move>
			</then>
		</if>
		<if>
			<available 
				file="${openfire.src.dir}/src/plugins/${plugin.name}/database"
				type="dir" />
			<then>
				<move todir="${openfire.src.dir}/src/plugins/${plugin.name}/src/database">
					<fileset dir="${openfire.src.dir}/src/plugins/${plugin.name}/database" />
				</move>
			</then>
		</if>
		<if>
			<available 
				file="${openfire.src.dir}/src/plugins/${plugin.name}/web"
				type="dir" />
			<then>
				<move todir="${openfire.src.dir}/src/plugins/${plugin.name}/src/web">
					<fileset dir="${openfire.src.dir}/src/plugins/${plugin.name}/web" />
				</move>
			</then>
		</if>
		
		<!-- create the lib directory -->
		<mkdir dir="${openfire.src.dir}/src/plugins/${plugin.name}/lib" />
		
		<!-- copy the dependencies -->
		<!--
			TODO: will need to adjust this logic if we ever have a
			dependency that is not a FOSS project.
		-->
		<for list="${plugin.dependent.libs}" param="plugin">
			<sequential>
				<!-- Dependencies are found in the base dir or cots -->
				<if>
					<available file="${baseline.dir}/@{plugin}" type="dir"/>
					<then>
						<copy todir="${openfire.src.dir}/src/plugins/${plugin.name}/lib">
							<fileset dir="${baseline.dir}/@{plugin}">
								<include name="**/*.jar" />
							</fileset>
						</copy>
					</then>
					<else>
                        <copy todir="${openfire.src.dir}/src/plugins/${plugin.name}/lib">
                            <fileset dir="${baseline.dir}/../cots/@{plugin}">
                                <include name="**/*.jar" />
                            </fileset>
                        </copy>
					</else>
				</if>
			</sequential>
		</for>
	</target>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml" 
		classpath="${build.dir.location}/ant/lib/ant-contrib-1.0b3.jar" />
</project>