<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">	

	<bean id="ldadprofilerPointData" class="com.raytheon.edex.plugin.ldadprofiler.common.LdadprofilerPointDataTransform"/>
	
    <bean id="ldadprofilerDecoder" class="com.raytheon.uf.edex.python.decoder.PythonDecoder">
		<property name="pluginName" value="ldadprofiler" />
		<property name="pluginFQN" value="com.raytheon.edex.plugin.ldadprofiler" />
		<property name="moduleName" value="LdadprofilerDecoder" />
		<property name="recordClassname"
			value="com.raytheon.edex.plugin.ldadprofiler.common.ProfilerLdadObs" />
	</bean>

	<bean id="ldadprofilerDistRegistry" factory-bean="distributionSrv"
		factory-method="register">
		<constructor-arg value="ldadprofiler" />
		<constructor-arg value="jms-durable:queue:Ingest.ldadprofiler"/>
	</bean>
    
    <camelContext id="ldadprofiler-camel"
        xmlns="http://camel.apache.org/schema/spring"
        errorHandlerRef="errorHandler">
        <!--
        <endpoint id="ldadprofilerFileEndpoint" uri="file:${edex.home}/data/sbn/ldadprofiler?noop=true" />

        <route id="ldadprofilerFileConsumerRoute">
            <from ref="ldadprofilerFileEndpoint" />
            <bean ref="fileToString" />
            <setHeader headerName="pluginName">
                <constant>ldadprofiler</constant>
            </setHeader>
            <to uri="jms-durable:queue:Ingest.ldadprofiler" />
        </route>
 		-->

        <!-- Begin ldadprofiler routes -->
        <route id="ldadprofilerIngestRoute">
            <from uri="jms-durable:queue:Ingest.ldadprofiler"/>
            <doTry>
	            <pipeline>
                    <bean ref="stringToFile" />
                    <bean ref="ldadprofilerDecoder" method="decode"/>
                    <bean ref="ldadprofilerPointData" method="toPointData" />
                    <to uri="direct-vm:persistIndexAlert" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ldadprofiler?level=ERROR"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</beans>