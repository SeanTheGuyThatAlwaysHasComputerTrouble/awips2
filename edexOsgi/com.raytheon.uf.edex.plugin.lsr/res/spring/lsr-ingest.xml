<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="lclstrmrptDecoder" class="com.raytheon.uf.edex.plugin.lsr.LSRDecoder">
        <constructor-arg ref="lclstrmrptPluginName" />
    </bean>

    <bean id="lsrDistRegistry" factory-bean="distributionSrv"
		factory-method="register">
		<constructor-arg ref="lclstrmrptPluginName" />
		<constructor-arg value="jms-durable:queue:Ingest.lsr" />
	</bean>

    <camelContext id="lclstrmrpt-camel"
        xmlns="http://camel.apache.org/schema/spring"
        errorHandlerRef="errorHandler">
        <!--
        <endpoint id="lclstrmrptFileEndpoint" uri="file:${edex.home}/data/sbn/lsr?noop=true&amp;idempotent=false" />

        <route id="lclstrmrptFileConsumerRoute">
            <from ref="lclstrmrptFileEndpoint" />
            <bean ref="fileToString" />
            <setHeader headerName="pluginName">
                <constant>lsr</constant>
            </setHeader>
            <to uri="jms-durable:queue:Ingest.lsr" />
        </route>
        -->

        <!-- Begin lclstrmrpt routes -->
        <route id="lclstrmrptIngestRoute">
            <from uri="jms-durable:queue:Ingest.lsr"/>
            <setHeader headerName="pluginName">
                <constant>lsr</constant>
            </setHeader>
            <pipeline>
                <doTry>
                    <pipeline>
                        <bean ref="stringToFile" />
                        <bean ref="lclstrmrptDecoder" method="decode" />
                        <to uri="direct-vm:persistIndexAlert" />
                    </pipeline>
                    <doCatch>
                        <exception>java.lang.Throwable</exception>
                        <to uri="log:lclstrmrpt?level=ERROR"/>
                    </doCatch>
                </doTry>
            </pipeline>
        </route>
    </camelContext>
</beans>