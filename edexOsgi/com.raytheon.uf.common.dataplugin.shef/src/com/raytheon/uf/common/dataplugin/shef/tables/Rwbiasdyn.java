/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * Rwbiasdyn generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "rwbiasdyn")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Rwbiasdyn extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private RwbiasdynId id;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double numpairs;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Float sumgag;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Float sumrad;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Float bias;

    public Rwbiasdyn() {
    }

    public Rwbiasdyn(RwbiasdynId id) {
        this.id = id;
    }

    public Rwbiasdyn(RwbiasdynId id, Double numpairs, Float sumgag,
            Float sumrad, Float bias) {
        this.id = id;
        this.numpairs = numpairs;
        this.sumgag = sumgag;
        this.sumrad = sumrad;
        this.bias = bias;
    }

    @EmbeddedId
    @AttributeOverrides( {
            @AttributeOverride(name = "radid", column = @Column(name = "radid", nullable = false, length = 3)),
            @AttributeOverride(name = "officeId", column = @Column(name = "office_id", nullable = false, length = 5)),
            @AttributeOverride(name = "obstime", column = @Column(name = "obstime", nullable = false, length = 29)),
            @AttributeOverride(name = "memspanInd", column = @Column(name = "memspan_ind", nullable = false)) })
    public RwbiasdynId getId() {
        return this.id;
    }

    public void setId(RwbiasdynId id) {
        this.id = id;
    }

    @Column(name = "numpairs", precision = 17, scale = 17)
    public Double getNumpairs() {
        return this.numpairs;
    }

    public void setNumpairs(Double numpairs) {
        this.numpairs = numpairs;
    }

    @Column(name = "sumgag", precision = 8, scale = 8)
    public Float getSumgag() {
        return this.sumgag;
    }

    public void setSumgag(Float sumgag) {
        this.sumgag = sumgag;
    }

    @Column(name = "sumrad", precision = 8, scale = 8)
    public Float getSumrad() {
        return this.sumrad;
    }

    public void setSumrad(Float sumrad) {
        this.sumrad = sumrad;
    }

    @Column(name = "bias", precision = 8, scale = 8)
    public Float getBias() {
        return this.bias;
    }

    public void setBias(Float bias) {
        this.bias = bias;
    }

}
