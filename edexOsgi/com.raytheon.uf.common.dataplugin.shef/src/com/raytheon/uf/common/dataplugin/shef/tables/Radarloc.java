/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Radarloc generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "radarloc")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Radarloc extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String radid;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String name;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String radidPrefix;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Short radarNum;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String state;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double lat;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double lon;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double elev;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double towerHt;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String useRadar;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String officeId;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dhrradar> dhrradars = new HashSet<Dhrradar>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dspradar> dspradars = new HashSet<Dspradar>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dhradapt> dhradapts = new HashSet<Dhradapt>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dspadapt> dspadapts = new HashSet<Dspadapt>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dpaadapt> dpaadapts = new HashSet<Dpaadapt>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Dparadar> dparadars = new HashSet<Dparadar>(0);

    public Radarloc() {
    }

    public Radarloc(String radid) {
        this.radid = radid;
    }

    public Radarloc(String radid, String name, String radidPrefix,
            Short radarNum, String state, Double lat, Double lon, Double elev,
            Double towerHt, String useRadar, String officeId,
            Set<Dhrradar> dhrradars, Set<Dspradar> dspradars,
            Set<Dhradapt> dhradapts, Set<Dspadapt> dspadapts,
            Set<Dpaadapt> dpaadapts, Set<Dparadar> dparadars) {
        this.radid = radid;
        this.name = name;
        this.radidPrefix = radidPrefix;
        this.radarNum = radarNum;
        this.state = state;
        this.lat = lat;
        this.lon = lon;
        this.elev = elev;
        this.towerHt = towerHt;
        this.useRadar = useRadar;
        this.officeId = officeId;
        this.dhrradars = dhrradars;
        this.dspradars = dspradars;
        this.dhradapts = dhradapts;
        this.dspadapts = dspadapts;
        this.dpaadapts = dpaadapts;
        this.dparadars = dparadars;
    }

    @Id
    @Column(name = "radid", unique = true, nullable = false, length = 3)
    public String getRadid() {
        return this.radid;
    }

    public void setRadid(String radid) {
        this.radid = radid;
    }

    @Column(name = "name", length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "radid_prefix", length = 1)
    public String getRadidPrefix() {
        return this.radidPrefix;
    }

    public void setRadidPrefix(String radidPrefix) {
        this.radidPrefix = radidPrefix;
    }

    @Column(name = "radar_num")
    public Short getRadarNum() {
        return this.radarNum;
    }

    public void setRadarNum(Short radarNum) {
        this.radarNum = radarNum;
    }

    @Column(name = "state", length = 2)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "lat", precision = 17, scale = 17)
    public Double getLat() {
        return this.lat;
    }

    public void setLat(Double lat) {
        this.lat = lat;
    }

    @Column(name = "lon", precision = 17, scale = 17)
    public Double getLon() {
        return this.lon;
    }

    public void setLon(Double lon) {
        this.lon = lon;
    }

    @Column(name = "elev", precision = 17, scale = 17)
    public Double getElev() {
        return this.elev;
    }

    public void setElev(Double elev) {
        this.elev = elev;
    }

    @Column(name = "tower_ht", precision = 17, scale = 17)
    public Double getTowerHt() {
        return this.towerHt;
    }

    public void setTowerHt(Double towerHt) {
        this.towerHt = towerHt;
    }

    @Column(name = "use_radar", length = 1)
    public String getUseRadar() {
        return this.useRadar;
    }

    public void setUseRadar(String useRadar) {
        this.useRadar = useRadar;
    }

    @Column(name = "office_id", length = 5)
    public String getOfficeId() {
        return this.officeId;
    }

    public void setOfficeId(String officeId) {
        this.officeId = officeId;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dhrradar> getDhrradars() {
        return this.dhrradars;
    }

    public void setDhrradars(Set<Dhrradar> dhrradars) {
        this.dhrradars = dhrradars;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dspradar> getDspradars() {
        return this.dspradars;
    }

    public void setDspradars(Set<Dspradar> dspradars) {
        this.dspradars = dspradars;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dhradapt> getDhradapts() {
        return this.dhradapts;
    }

    public void setDhradapts(Set<Dhradapt> dhradapts) {
        this.dhradapts = dhradapts;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dspadapt> getDspadapts() {
        return this.dspadapts;
    }

    public void setDspadapts(Set<Dspadapt> dspadapts) {
        this.dspadapts = dspadapts;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dpaadapt> getDpaadapts() {
        return this.dpaadapts;
    }

    public void setDpaadapts(Set<Dpaadapt> dpaadapts) {
        this.dpaadapts = dpaadapts;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "radarloc")
    public Set<Dparadar> getDparadars() {
        return this.dparadars;
    }

    public void setDparadars(Set<Dparadar> dparadars) {
        this.dparadars = dparadars;
    }

}
