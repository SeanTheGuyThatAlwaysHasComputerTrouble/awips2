/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Locdatalimits generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "locdatalimits")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Locdatalimits extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private LocdatalimitsId id;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Shefpe shefpe;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Shefdur shefdur;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String monthdayend;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double grossRangeMin;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double grossRangeMax;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double reasonRangeMin;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double reasonRangeMax;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double rocMax;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alertUpperLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alertRocLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alarmUpperLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alarmRocLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alertLowerLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alarmLowerLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alertDiffLimit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double alarmDiffLimit;

    public Locdatalimits() {
    }

    public Locdatalimits(LocdatalimitsId id, Shefpe shefpe, Shefdur shefdur,
            String monthdayend) {
        this.id = id;
        this.shefpe = shefpe;
        this.shefdur = shefdur;
        this.monthdayend = monthdayend;
    }

    public Locdatalimits(LocdatalimitsId id, Shefpe shefpe, Shefdur shefdur,
            String monthdayend, Double grossRangeMin, Double grossRangeMax,
            Double reasonRangeMin, Double reasonRangeMax, Double rocMax,
            Double alertUpperLimit, Double alertRocLimit,
            Double alarmUpperLimit, Double alarmRocLimit,
            Double alertLowerLimit, Double alarmLowerLimit,
            Double alertDiffLimit, Double alarmDiffLimit) {
        this.id = id;
        this.shefpe = shefpe;
        this.shefdur = shefdur;
        this.monthdayend = monthdayend;
        this.grossRangeMin = grossRangeMin;
        this.grossRangeMax = grossRangeMax;
        this.reasonRangeMin = reasonRangeMin;
        this.reasonRangeMax = reasonRangeMax;
        this.rocMax = rocMax;
        this.alertUpperLimit = alertUpperLimit;
        this.alertRocLimit = alertRocLimit;
        this.alarmUpperLimit = alarmUpperLimit;
        this.alarmRocLimit = alarmRocLimit;
        this.alertLowerLimit = alertLowerLimit;
        this.alarmLowerLimit = alarmLowerLimit;
        this.alertDiffLimit = alertDiffLimit;
        this.alarmDiffLimit = alarmDiffLimit;
    }

    @EmbeddedId
    @AttributeOverrides( {
            @AttributeOverride(name = "lid", column = @Column(name = "lid", nullable = false, length = 8)),
            @AttributeOverride(name = "pe", column = @Column(name = "pe", nullable = false, length = 2)),
            @AttributeOverride(name = "dur", column = @Column(name = "dur", nullable = false)),
            @AttributeOverride(name = "monthdaystart", column = @Column(name = "monthdaystart", nullable = false, length = 5)) })
    public LocdatalimitsId getId() {
        return this.id;
    }

    public void setId(LocdatalimitsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "pe", nullable = false, insertable = false, updatable = false)
    public Shefpe getShefpe() {
        return this.shefpe;
    }

    public void setShefpe(Shefpe shefpe) {
        this.shefpe = shefpe;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "dur", nullable = false, insertable = false, updatable = false)
    public Shefdur getShefdur() {
        return this.shefdur;
    }

    public void setShefdur(Shefdur shefdur) {
        this.shefdur = shefdur;
    }

    @Column(name = "monthdayend", nullable = false, length = 5)
    public String getMonthdayend() {
        return this.monthdayend;
    }

    public void setMonthdayend(String monthdayend) {
        this.monthdayend = monthdayend;
    }

    @Column(name = "gross_range_min", precision = 17, scale = 17)
    public Double getGrossRangeMin() {
        return this.grossRangeMin;
    }

    public void setGrossRangeMin(Double grossRangeMin) {
        this.grossRangeMin = grossRangeMin;
    }

    @Column(name = "gross_range_max", precision = 17, scale = 17)
    public Double getGrossRangeMax() {
        return this.grossRangeMax;
    }

    public void setGrossRangeMax(Double grossRangeMax) {
        this.grossRangeMax = grossRangeMax;
    }

    @Column(name = "reason_range_min", precision = 17, scale = 17)
    public Double getReasonRangeMin() {
        return this.reasonRangeMin;
    }

    public void setReasonRangeMin(Double reasonRangeMin) {
        this.reasonRangeMin = reasonRangeMin;
    }

    @Column(name = "reason_range_max", precision = 17, scale = 17)
    public Double getReasonRangeMax() {
        return this.reasonRangeMax;
    }

    public void setReasonRangeMax(Double reasonRangeMax) {
        this.reasonRangeMax = reasonRangeMax;
    }

    @Column(name = "roc_max", precision = 17, scale = 17)
    public Double getRocMax() {
        return this.rocMax;
    }

    public void setRocMax(Double rocMax) {
        this.rocMax = rocMax;
    }

    @Column(name = "alert_upper_limit", precision = 17, scale = 17)
    public Double getAlertUpperLimit() {
        return this.alertUpperLimit;
    }

    public void setAlertUpperLimit(Double alertUpperLimit) {
        this.alertUpperLimit = alertUpperLimit;
    }

    @Column(name = "alert_roc_limit", precision = 17, scale = 17)
    public Double getAlertRocLimit() {
        return this.alertRocLimit;
    }

    public void setAlertRocLimit(Double alertRocLimit) {
        this.alertRocLimit = alertRocLimit;
    }

    @Column(name = "alarm_upper_limit", precision = 17, scale = 17)
    public Double getAlarmUpperLimit() {
        return this.alarmUpperLimit;
    }

    public void setAlarmUpperLimit(Double alarmUpperLimit) {
        this.alarmUpperLimit = alarmUpperLimit;
    }

    @Column(name = "alarm_roc_limit", precision = 17, scale = 17)
    public Double getAlarmRocLimit() {
        return this.alarmRocLimit;
    }

    public void setAlarmRocLimit(Double alarmRocLimit) {
        this.alarmRocLimit = alarmRocLimit;
    }

    @Column(name = "alert_lower_limit", precision = 17, scale = 17)
    public Double getAlertLowerLimit() {
        return this.alertLowerLimit;
    }

    public void setAlertLowerLimit(Double alertLowerLimit) {
        this.alertLowerLimit = alertLowerLimit;
    }

    @Column(name = "alarm_lower_limit", precision = 17, scale = 17)
    public Double getAlarmLowerLimit() {
        return this.alarmLowerLimit;
    }

    public void setAlarmLowerLimit(Double alarmLowerLimit) {
        this.alarmLowerLimit = alarmLowerLimit;
    }

    @Column(name = "alert_diff_limit", precision = 17, scale = 17)
    public Double getAlertDiffLimit() {
        return this.alertDiffLimit;
    }

    public void setAlertDiffLimit(Double alertDiffLimit) {
        this.alertDiffLimit = alertDiffLimit;
    }

    @Column(name = "alarm_diff_limit", precision = 17, scale = 17)
    public Double getAlarmDiffLimit() {
        return this.alarmDiffLimit;
    }

    public void setAlarmDiffLimit(Double alarmDiffLimit) {
        this.alarmDiffLimit = alarmDiffLimit;
    }

}
